var __create = Object.create;
var __getProtoOf = Object.getPrototypeOf;
var __defProp = Object.defineProperty;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};

// node_modules/eventemitter3/index.js
var require_eventemitter3 = __commonJS((exports, module) => {
  function Events() {
  }
  function EE(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
  }
  function addListener(emitter, event, fn, context, once) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt])
      emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn)
      emitter._events[evt].push(listener);
    else
      emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  }
  function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0)
      emitter._events = new Events;
    else
      delete emitter._events[evt];
  }
  function EventEmitter() {
    this._events = new Events;
    this._eventsCount = 0;
  }
  var has = Object.prototype.hasOwnProperty;
  var prefix = "~";
  if (Object.create) {
    Events.prototype = Object.create(null);
    if (!new Events().__proto__)
      prefix = false;
  }
  EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0)
      return names;
    for (name in events = this._events) {
      if (has.call(events, name))
        names.push(prefix ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers)
      return [];
    if (handlers.fn)
      return [handlers.fn];
    for (var i = 0, l = handlers.length, ee = new Array(l);i < l; i++) {
      ee[i] = handlers[i].fn;
    }
    return ee;
  };
  EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners)
      return 0;
    if (listeners.fn)
      return 1;
    return listeners.length;
  };
  EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
      if (listeners.once)
        this.removeListener(event, listeners.fn, undefined, true);
      switch (len) {
        case 1:
          return listeners.fn.call(listeners.context), true;
        case 2:
          return listeners.fn.call(listeners.context, a1), true;
        case 3:
          return listeners.fn.call(listeners.context, a1, a2), true;
        case 4:
          return listeners.fn.call(listeners.context, a1, a2, a3), true;
        case 5:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
        case 6:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
      }
      for (i = 1, args = new Array(len - 1);i < len; i++) {
        args[i - 1] = arguments[i];
      }
      listeners.fn.apply(listeners.context, args);
    } else {
      var length = listeners.length, j;
      for (i = 0;i < length; i++) {
        if (listeners[i].once)
          this.removeListener(event, listeners[i].fn, undefined, true);
        switch (len) {
          case 1:
            listeners[i].fn.call(listeners[i].context);
            break;
          case 2:
            listeners[i].fn.call(listeners[i].context, a1);
            break;
          case 3:
            listeners[i].fn.call(listeners[i].context, a1, a2);
            break;
          case 4:
            listeners[i].fn.call(listeners[i].context, a1, a2, a3);
            break;
          default:
            if (!args)
              for (j = 1, args = new Array(len - 1);j < len; j++) {
                args[j - 1] = arguments[j];
              }
            listeners[i].fn.apply(listeners[i].context, args);
        }
      }
    }
    return true;
  };
  EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
  };
  EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
  };
  EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
      if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i = 0, events = [], length = listeners.length;i < length; i++) {
        if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
          events.push(listeners[i]);
        }
      }
      if (events.length)
        this._events[evt] = events.length === 1 ? events[0] : events;
      else
        clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
      evt = prefix ? prefix + event : event;
      if (this._events[evt])
        clearEvent(this, evt);
    } else {
      this._events = new Events;
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
  EventEmitter.prototype.addListener = EventEmitter.prototype.on;
  EventEmitter.prefixed = prefix;
  EventEmitter.EventEmitter = EventEmitter;
  if (typeof module !== "undefined") {
    module.exports = EventEmitter;
  }
});

// node_modules/fast-decode-uri-component/index.js
var require_fast_decode_uri_component = __commonJS((exports, module) => {
  function decodeURIComponent2(uri) {
    var percentPosition = uri.indexOf("%");
    if (percentPosition === -1)
      return uri;
    var length = uri.length;
    var decoded = "";
    var last = 0;
    var codepoint = 0;
    var startOfOctets = percentPosition;
    var state = UTF8_ACCEPT;
    while (percentPosition > -1 && percentPosition < length) {
      var high = hexCodeToInt(uri[percentPosition + 1], 4);
      var low = hexCodeToInt(uri[percentPosition + 2], 0);
      var byte = high | low;
      var type47 = UTF8_DATA[byte];
      state = UTF8_DATA[256 + state + type47];
      codepoint = codepoint << 6 | byte & UTF8_DATA[364 + type47];
      if (state === UTF8_ACCEPT) {
        decoded += uri.slice(last, startOfOctets);
        decoded += codepoint <= 65535 ? String.fromCharCode(codepoint) : String.fromCharCode(55232 + (codepoint >> 10), 56320 + (codepoint & 1023));
        codepoint = 0;
        last = percentPosition + 3;
        percentPosition = startOfOctets = uri.indexOf("%", last);
      } else if (state === UTF8_REJECT) {
        return null;
      } else {
        percentPosition += 3;
        if (percentPosition < length && uri.charCodeAt(percentPosition) === 37)
          continue;
        return null;
      }
    }
    return decoded + uri.slice(last);
  }
  function hexCodeToInt(c, shift) {
    var i = HEX[c];
    return i === undefined ? 255 : i << shift;
  }
  var UTF8_ACCEPT = 12;
  var UTF8_REJECT = 0;
  var UTF8_DATA = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    6,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    8,
    7,
    7,
    10,
    9,
    9,
    9,
    11,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    12,
    0,
    0,
    0,
    0,
    24,
    36,
    48,
    60,
    72,
    84,
    96,
    0,
    12,
    12,
    12,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    127,
    63,
    63,
    63,
    0,
    31,
    15,
    15,
    15,
    7,
    7,
    7
  ];
  var HEX = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15
  };
  module.exports = decodeURIComponent2;
});

// node_modules/fast-querystring/lib/parse.js
var require_parse = __commonJS((exports, module) => {
  function parse5(input) {
    const result = new Empty;
    if (typeof input !== "string") {
      return result;
    }
    let inputLength = input.length;
    let key = "";
    let value11 = "";
    let startingIndex = -1;
    let equalityIndex = -1;
    let shouldDecodeKey = false;
    let shouldDecodeValue = false;
    let keyHasPlus = false;
    let valueHasPlus = false;
    let hasBothKeyValuePair = false;
    let c = 0;
    for (let i = 0;i < inputLength + 1; i++) {
      c = i !== inputLength ? input.charCodeAt(i) : 38;
      if (c === 38) {
        hasBothKeyValuePair = equalityIndex > startingIndex;
        if (!hasBothKeyValuePair) {
          equalityIndex = i;
        }
        key = input.slice(startingIndex + 1, equalityIndex);
        if (hasBothKeyValuePair || key.length > 0) {
          if (keyHasPlus) {
            key = key.replace(plusRegex, " ");
          }
          if (shouldDecodeKey) {
            key = fastDecode(key) || key;
          }
          if (hasBothKeyValuePair) {
            value11 = input.slice(equalityIndex + 1, i);
            if (valueHasPlus) {
              value11 = value11.replace(plusRegex, " ");
            }
            if (shouldDecodeValue) {
              value11 = fastDecode(value11) || value11;
            }
          }
          const currentValue = result[key];
          if (currentValue === undefined) {
            result[key] = value11;
          } else {
            if (currentValue.pop) {
              currentValue.push(value11);
            } else {
              result[key] = [currentValue, value11];
            }
          }
        }
        value11 = "";
        startingIndex = i;
        equalityIndex = i;
        shouldDecodeKey = false;
        shouldDecodeValue = false;
        keyHasPlus = false;
        valueHasPlus = false;
      } else if (c === 61) {
        if (equalityIndex <= startingIndex) {
          equalityIndex = i;
        } else {
          shouldDecodeValue = true;
        }
      } else if (c === 43) {
        if (equalityIndex > startingIndex) {
          valueHasPlus = true;
        } else {
          keyHasPlus = true;
        }
      } else if (c === 37) {
        if (equalityIndex > startingIndex) {
          shouldDecodeValue = true;
        } else {
          shouldDecodeKey = true;
        }
      }
    }
    return result;
  }
  var fastDecode = require_fast_decode_uri_component();
  var plusRegex = /\+/g;
  var Empty = function() {
  };
  Empty.prototype = Object.create(null);
  module.exports = parse5;
});

// node_modules/fast-querystring/lib/internals/querystring.js
var require_querystring = __commonJS((exports, module) => {
  function encodeString(str) {
    const len = str.length;
    if (len === 0)
      return "";
    let out = "";
    let lastPos = 0;
    let i = 0;
    outer:
      for (;i < len; i++) {
        let c = str.charCodeAt(i);
        while (c < 128) {
          if (noEscape[c] !== 1) {
            if (lastPos < i)
              out += str.slice(lastPos, i);
            lastPos = i + 1;
            out += hexTable[c];
          }
          if (++i === len)
            break outer;
          c = str.charCodeAt(i);
        }
        if (lastPos < i)
          out += str.slice(lastPos, i);
        if (c < 2048) {
          lastPos = i + 1;
          out += hexTable[192 | c >> 6] + hexTable[128 | c & 63];
          continue;
        }
        if (c < 55296 || c >= 57344) {
          lastPos = i + 1;
          out += hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
          continue;
        }
        ++i;
        if (i >= len) {
          throw new Error("URI malformed");
        }
        const c2 = str.charCodeAt(i) & 1023;
        lastPos = i + 1;
        c = 65536 + ((c & 1023) << 10 | c2);
        out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
      }
    if (lastPos === 0)
      return str;
    if (lastPos < len)
      return out + str.slice(lastPos);
    return out;
  }
  var hexTable = Array.from({ length: 256 }, (_, i) => "%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
  var noEscape = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0
  ]);
  module.exports = { encodeString };
});

// node_modules/fast-querystring/lib/stringify.js
var require_stringify = __commonJS((exports, module) => {
  function getAsPrimitive(value11) {
    const type47 = typeof value11;
    if (type47 === "string") {
      return encodeString(value11);
    } else if (type47 === "bigint") {
      return value11.toString();
    } else if (type47 === "boolean") {
      return value11 ? "true" : "false";
    } else if (type47 === "number" && Number.isFinite(value11)) {
      return value11 < 1000000000000000000000 ? "" + value11 : encodeString("" + value11);
    }
    return "";
  }
  function stringify(input) {
    let result = "";
    if (input === null || typeof input !== "object") {
      return result;
    }
    const separator = "&";
    const keys = Object.keys(input);
    const keyLength = keys.length;
    let valueLength = 0;
    for (let i = 0;i < keyLength; i++) {
      const key = keys[i];
      const value11 = input[key];
      const encodedKey = encodeString(key) + "=";
      if (i) {
        result += separator;
      }
      if (Array.isArray(value11)) {
        valueLength = value11.length;
        for (let j = 0;j < valueLength; j++) {
          if (j) {
            result += separator;
          }
          result += encodedKey;
          result += getAsPrimitive(value11[j]);
        }
      } else {
        result += encodedKey;
        result += getAsPrimitive(value11);
      }
    }
    return result;
  }
  var { encodeString } = require_querystring();
  module.exports = stringify;
});

// node_modules/fast-querystring/lib/index.js
var require_lib = __commonJS((exports, module) => {
  var parse5 = require_parse();
  var stringify = require_stringify();
  var fastQuerystring = {
    parse: parse5,
    stringify
  };
  module.exports = fastQuerystring;
  module.exports.default = fastQuerystring;
  module.exports.parse = parse5;
  module.exports.stringify = stringify;
});

// node_modules/@prisma/client/runtime/index-browser.js
var require_index_browser = __commonJS((exports, module) => {
  function Me(...e2) {
    return (n) => n;
  }
  function me(e2, n) {
    Object.defineProperty(e2, "name", { value: n, configurable: true });
  }
  function Pe(e2) {
    return new Proxy(e2, { get(n, i) {
      if (i in n)
        return n[i];
      if (!Qe.has(i))
        throw new TypeError("Invalid enum value: ".concat(String(i)));
    } });
  }
  function be() {
    var e2, n, i;
    return typeof Netlify == "object" ? "netlify" : typeof EdgeRuntime == "string" ? "edge-light" : ((e2 = globalThis.navigator) == null ? undefined : e2.userAgent) === Ye ? "workerd" : globalThis.Deno ? "deno" : globalThis.__lagon__ ? "lagon" : ((i = (n = globalThis.process) == null ? undefined : n.release) == null ? undefined : i.name) === xe ? "node" : globalThis.Bun ? "bun" : globalThis.fastly ? "fastly" : "unknown";
  }
  function Ae() {
    let e2 = be();
    return { id: e2, prettyName: ze[e2] || e2, isEdge: ["workerd", "deno", "netlify", "edge-light"].includes(e2) };
  }
  function O(e2) {
    var n, i, t3, r2 = e2.length - 1, s = "", o = e2[0];
    if (r2 > 0) {
      for (s += o, n = 1;n < r2; n++)
        t3 = e2[n] + "", i = m - t3.length, i && (s += U(i)), s += t3;
      o = e2[n], t3 = o + "", i = m - t3.length, i && (s += U(i));
    } else if (o === 0)
      return "0";
    for (;o % 10 === 0; )
      o /= 10;
    return s + o;
  }
  function R(e2, n, i) {
    if (e2 !== ~~e2 || e2 < n || e2 > i)
      throw Error($ + e2);
  }
  function Q(e2, n, i, t3) {
    var r2, s, o, u;
    for (s = e2[0];s >= 10; s /= 10)
      --n;
    return --n < 0 ? (n += m, r2 = 0) : (r2 = Math.ceil((n + 1) / m), n %= m), s = M(10, m - n), u = e2[r2] % s | 0, t3 == null ? n < 3 ? (n == 0 ? u = u / 100 | 0 : n == 1 && (u = u / 10 | 0), o = i < 4 && u == 99999 || i > 3 && u == 49999 || u == 50000 || u == 0) : o = (i < 4 && u + 1 == s || i > 3 && u + 1 == s / 2) && (e2[r2 + 1] / s / 100 | 0) == M(10, n - 2) - 1 || (u == s / 2 || u == 0) && (e2[r2 + 1] / s / 100 | 0) == 0 : n < 4 ? (n == 0 ? u = u / 1000 | 0 : n == 1 ? u = u / 100 | 0 : n == 2 && (u = u / 10 | 0), o = (t3 || i < 4) && u == 9999 || !t3 && i > 3 && u == 4999) : o = ((t3 || i < 4) && u + 1 == s || !t3 && i > 3 && u + 1 == s / 2) && (e2[r2 + 1] / s / 1000 | 0) == M(10, n - 3) - 1, o;
  }
  function ie(e2, n, i) {
    for (var t3, r2 = [0], s, o = 0, u = e2.length;o < u; ) {
      for (s = r2.length;s--; )
        r2[s] *= n;
      for (r2[0] += we.indexOf(e2.charAt(o++)), t3 = 0;t3 < r2.length; t3++)
        r2[t3] > i - 1 && (r2[t3 + 1] === undefined && (r2[t3 + 1] = 0), r2[t3 + 1] += r2[t3] / i | 0, r2[t3] %= i);
    }
    return r2.reverse();
  }
  function sn(e2, n) {
    var i, t3, r2;
    if (n.isZero())
      return n;
    t3 = n.d.length, t3 < 32 ? (i = Math.ceil(t3 / 3), r2 = (1 / fe(4, i)).toString()) : (i = 16, r2 = "2.3283064365386962890625e-10"), e2.precision += i, n = W(e2, 1, n.times(r2), new e2(1));
    for (var s = i;s--; ) {
      var o = n.times(n);
      n = o.times(o).minus(o).times(8).plus(1);
    }
    return e2.precision -= i, n;
  }
  function p(e2, n, i, t3) {
    var r2, s, o, u, l, f, c, a2, d, g = e2.constructor;
    e:
      if (n != null) {
        if (a2 = e2.d, !a2)
          return e2;
        for (r2 = 1, u = a2[0];u >= 10; u /= 10)
          r2++;
        if (s = n - r2, s < 0)
          s += m, o = n, c = a2[d = 0], l = c / M(10, r2 - o - 1) % 10 | 0;
        else if (d = Math.ceil((s + 1) / m), u = a2.length, d >= u)
          if (t3) {
            for (;u++ <= d; )
              a2.push(0);
            c = l = 0, r2 = 1, s %= m, o = s - m + 1;
          } else
            break e;
        else {
          for (c = u = a2[d], r2 = 1;u >= 10; u /= 10)
            r2++;
          s %= m, o = s - m + r2, l = o < 0 ? 0 : c / M(10, r2 - o - 1) % 10 | 0;
        }
        if (t3 = t3 || n < 0 || a2[d + 1] !== undefined || (o < 0 ? c : c % M(10, r2 - o - 1)), f = i < 4 ? (l || t3) && (i == 0 || i == (e2.s < 0 ? 3 : 2)) : l > 5 || l == 5 && (i == 4 || t3 || i == 6 && (s > 0 ? o > 0 ? c / M(10, r2 - o) : 0 : a2[d - 1]) % 10 & 1 || i == (e2.s < 0 ? 8 : 7)), n < 1 || !a2[0])
          return a2.length = 0, f ? (n -= e2.e + 1, a2[0] = M(10, (m - n % m) % m), e2.e = -n || 0) : a2[0] = e2.e = 0, e2;
        if (s == 0 ? (a2.length = d, u = 1, d--) : (a2.length = d + 1, u = M(10, m - s), a2[d] = o > 0 ? (c / M(10, r2 - o) % M(10, o) | 0) * u : 0), f)
          for (;; )
            if (d == 0) {
              for (s = 1, o = a2[0];o >= 10; o /= 10)
                s++;
              for (o = a2[0] += u, u = 1;o >= 10; o /= 10)
                u++;
              s != u && (e2.e++, a2[0] == D && (a2[0] = 1));
              break;
            } else {
              if (a2[d] += u, a2[d] != D)
                break;
              a2[d--] = 0, u = 1;
            }
        for (s = a2.length;a2[--s] === 0; )
          a2.pop();
      }
    return w && (e2.e > g.maxE ? (e2.d = null, e2.e = NaN) : e2.e < g.minE && (e2.e = 0, e2.d = [0])), e2;
  }
  function F(e2, n, i) {
    if (!e2.isFinite())
      return $e(e2);
    var t3, r2 = e2.e, s = O(e2.d), o = s.length;
    return n ? (i && (t3 = i - o) > 0 ? s = s.charAt(0) + "." + s.slice(1) + U(t3) : o > 1 && (s = s.charAt(0) + "." + s.slice(1)), s = s + (e2.e < 0 ? "e" : "e+") + e2.e) : r2 < 0 ? (s = "0." + U(-r2 - 1) + s, i && (t3 = i - o) > 0 && (s += U(t3))) : r2 >= o ? (s += U(r2 + 1 - o), i && (t3 = i - r2 - 1) > 0 && (s = s + "." + U(t3))) : ((t3 = r2 + 1) < o && (s = s.slice(0, t3) + "." + s.slice(t3)), i && (t3 = i - o) > 0 && (r2 + 1 === o && (s += "."), s += U(t3))), s;
  }
  function ue(e2, n) {
    var i = e2[0];
    for (n *= m;i >= 10; i /= 10)
      n++;
    return n;
  }
  function se(e2, n, i) {
    if (n > rn)
      throw w = true, i && (e2.precision = i), Error(Le);
    return p(new e2(te), n, 1, true);
  }
  function L(e2, n, i) {
    if (n > ve)
      throw Error(Le);
    return p(new e2(re), n, i, true);
  }
  function Ze(e2) {
    var n = e2.length - 1, i = n * m + 1;
    if (n = e2[n], n) {
      for (;n % 10 == 0; n /= 10)
        i--;
      for (n = e2[0];n >= 10; n /= 10)
        i++;
    }
    return i;
  }
  function U(e2) {
    for (var n = "";e2--; )
      n += "0";
    return n;
  }
  function Ue(e2, n, i, t3) {
    var r2, s = new e2(1), o = Math.ceil(t3 / m + 4);
    for (w = false;; ) {
      if (i % 2 && (s = s.times(n), Re(s.d, o) && (r2 = true)), i = A(i / 2), i === 0) {
        i = s.d.length - 1, r2 && s.d[i] === 0 && ++s.d[i];
        break;
      }
      n = n.times(n), Re(n.d, o);
    }
    return w = true, s;
  }
  function _e(e2) {
    return e2.d[e2.d.length - 1] & 1;
  }
  function Be(e2, n, i) {
    for (var t3, r2 = new e2(n[0]), s = 0;++s < n.length; )
      if (t3 = new e2(n[s]), t3.s)
        r2[i](t3) && (r2 = t3);
      else {
        r2 = t3;
        break;
      }
    return r2;
  }
  function Ee(e2, n) {
    var i, t3, r2, s, o, u, l, f = 0, c = 0, a2 = 0, d = e2.constructor, g = d.rounding, v = d.precision;
    if (!e2.d || !e2.d[0] || e2.e > 17)
      return new d(e2.d ? e2.d[0] ? e2.s < 0 ? 0 : 1 / 0 : 1 : e2.s ? e2.s < 0 ? 0 : e2 : NaN);
    for (n == null ? (w = false, l = v) : l = n, u = new d(0.03125);e2.e > -2; )
      e2 = e2.times(u), a2 += 5;
    for (t3 = Math.log(M(2, a2)) / Math.LN10 * 2 + 5 | 0, l += t3, i = s = o = new d(1), d.precision = l;; ) {
      if (s = p(s.times(e2), l, 1), i = i.times(++c), u = o.plus(S(s, i, l, 1)), O(u.d).slice(0, l) === O(o.d).slice(0, l)) {
        for (r2 = a2;r2--; )
          o = p(o.times(o), l, 1);
        if (n == null)
          if (f < 3 && Q(o.d, l - t3, g, f))
            d.precision = l += 10, i = s = u = new d(1), c = 0, f++;
          else
            return p(o, d.precision = v, g, w = true);
        else
          return d.precision = v, o;
      }
      o = u;
    }
  }
  function B(e2, n) {
    var i, t3, r2, s, o, u, l, f, c, a2, d, g = 1, v = 10, N = e2, _ = N.d, C = N.constructor, q = C.rounding, E = C.precision;
    if (N.s < 0 || !_ || !_[0] || !N.e && _[0] == 1 && _.length == 1)
      return new C(_ && !_[0] ? -1 / 0 : N.s != 1 ? NaN : _ ? 0 : N);
    if (n == null ? (w = false, c = E) : c = n, C.precision = c += v, i = O(_), t3 = i.charAt(0), Math.abs(s = N.e) < 1500000000000000) {
      for (;t3 < 7 && t3 != 1 || t3 == 1 && i.charAt(1) > 3; )
        N = N.times(e2), i = O(N.d), t3 = i.charAt(0), g++;
      s = N.e, t3 > 1 ? (N = new C("0." + i), s++) : N = new C(t3 + "." + i.slice(1));
    } else
      return f = se(C, c + 2, E).times(s + ""), N = B(new C(t3 + "." + i.slice(1)), c - v).plus(f), C.precision = E, n == null ? p(N, E, q, w = true) : N;
    for (a2 = N, l = o = N = S(N.minus(1), N.plus(1), c, 1), d = p(N.times(N), c, 1), r2 = 3;; ) {
      if (o = p(o.times(d), c, 1), f = l.plus(S(o, new C(r2), c, 1)), O(f.d).slice(0, c) === O(l.d).slice(0, c))
        if (l = l.times(2), s !== 0 && (l = l.plus(se(C, c + 2, E).times(s + ""))), l = S(l, new C(g), c, 1), n == null)
          if (Q(l.d, c - v, q, u))
            C.precision = c += v, f = o = N = S(a2.minus(1), a2.plus(1), c, 1), d = p(N.times(N), c, 1), r2 = u = 1;
          else
            return p(l, C.precision = E, q, w = true);
        else
          return C.precision = E, l;
      l = f, r2 += 2;
    }
  }
  function $e(e2) {
    return String(e2.s * e2.s / 0);
  }
  function Se(e2, n) {
    var i, t3, r2;
    for ((i = n.indexOf(".")) > -1 && (n = n.replace(".", "")), (t3 = n.search(/e/i)) > 0 ? (i < 0 && (i = t3), i += +n.slice(t3 + 1), n = n.substring(0, t3)) : i < 0 && (i = n.length), t3 = 0;n.charCodeAt(t3) === 48; t3++)
      ;
    for (r2 = n.length;n.charCodeAt(r2 - 1) === 48; --r2)
      ;
    if (n = n.slice(t3, r2), n) {
      if (r2 -= t3, e2.e = i = i - t3 - 1, e2.d = [], t3 = (i + 1) % m, i < 0 && (t3 += m), t3 < r2) {
        for (t3 && e2.d.push(+n.slice(0, t3)), r2 -= m;t3 < r2; )
          e2.d.push(+n.slice(t3, t3 += m));
        n = n.slice(t3), t3 = m - n.length;
      } else
        t3 -= r2;
      for (;t3--; )
        n += "0";
      e2.d.push(+n), w && (e2.e > e2.constructor.maxE ? (e2.d = null, e2.e = NaN) : e2.e < e2.constructor.minE && (e2.e = 0, e2.d = [0]));
    } else
      e2.e = 0, e2.d = [0];
    return e2;
  }
  function on(e2, n) {
    var i, t3, r2, s, o, u, l, f, c;
    if (n.indexOf("_") > -1) {
      if (n = n.replace(/(\d)_(?=\d)/g, "$1"), Ie.test(n))
        return Se(e2, n);
    } else if (n === "Infinity" || n === "NaN")
      return +n || (e2.s = NaN), e2.e = NaN, e2.d = null, e2;
    if (en.test(n))
      i = 16, n = n.toLowerCase();
    else if (ye.test(n))
      i = 2;
    else if (nn.test(n))
      i = 8;
    else
      throw Error($ + n);
    for (s = n.search(/p/i), s > 0 ? (l = +n.slice(s + 1), n = n.substring(2, s)) : n = n.slice(2), s = n.indexOf("."), o = s >= 0, t3 = e2.constructor, o && (n = n.replace(".", ""), u = n.length, s = u - s, r2 = Ue(t3, new t3(i), s, s * 2)), f = ie(n, i, D), c = f.length - 1, s = c;f[s] === 0; --s)
      f.pop();
    return s < 0 ? new t3(e2.s * 0) : (e2.e = ue(f, c), e2.d = f, w = false, o && (e2 = S(e2, r2, u * 4)), l && (e2 = e2.times(Math.abs(l) < 54 ? M(2, l) : Y.pow(2, l))), w = true, e2);
  }
  function un(e2, n) {
    var i, t3 = n.d.length;
    if (t3 < 3)
      return n.isZero() ? n : W(e2, 2, n, n);
    i = 1.4 * Math.sqrt(t3), i = i > 16 ? 16 : i | 0, n = n.times(1 / fe(5, i)), n = W(e2, 2, n, n);
    for (var r2, s = new e2(5), o = new e2(16), u = new e2(20);i--; )
      r2 = n.times(n), n = n.times(s.plus(r2.times(o.times(r2).minus(u))));
    return n;
  }
  function W(e2, n, i, t3, r2) {
    var s, o, u, l, f = 1, c = e2.precision, a2 = Math.ceil(c / m);
    for (w = false, l = i.times(i), u = new e2(t3);; ) {
      if (o = S(u.times(l), new e2(n++ * n++), c, 1), u = r2 ? t3.plus(o) : t3.minus(o), t3 = S(o.times(l), new e2(n++ * n++), c, 1), o = u.plus(t3), o.d[a2] !== undefined) {
        for (s = a2;o.d[s] === u.d[s] && s--; )
          ;
        if (s == -1)
          break;
      }
      s = u, u = t3, t3 = o, o = s, f++;
    }
    return w = true, o.d.length = a2 + 1, o;
  }
  function fe(e2, n) {
    for (var i = e2;--n; )
      i *= e2;
    return i;
  }
  function Ve(e2, n) {
    var i, t3 = n.s < 0, r2 = L(e2, e2.precision, 1), s = r2.times(0.5);
    if (n = n.abs(), n.lte(s))
      return Z = t3 ? 4 : 1, n;
    if (i = n.divToInt(r2), i.isZero())
      Z = t3 ? 3 : 2;
    else {
      if (n = n.minus(i.times(r2)), n.lte(s))
        return Z = _e(i) ? t3 ? 2 : 3 : t3 ? 4 : 1, n;
      Z = _e(i) ? t3 ? 1 : 4 : t3 ? 3 : 2;
    }
    return n.minus(r2).abs();
  }
  function ke(e2, n, i, t3) {
    var r2, s, o, u, l, f, c, a2, d, g = e2.constructor, v = i !== undefined;
    if (v ? (R(i, 1, V), t3 === undefined ? t3 = g.rounding : R(t3, 0, 8)) : (i = g.precision, t3 = g.rounding), !e2.isFinite())
      c = $e(e2);
    else {
      for (c = F(e2), o = c.indexOf("."), v ? (r2 = 2, n == 16 ? i = i * 4 - 3 : n == 8 && (i = i * 3 - 2)) : r2 = n, o >= 0 && (c = c.replace(".", ""), d = new g(1), d.e = c.length - o, d.d = ie(F(d), 10, r2), d.e = d.d.length), a2 = ie(c, 10, r2), s = l = a2.length;a2[--l] == 0; )
        a2.pop();
      if (!a2[0])
        c = v ? "0p+0" : "0";
      else {
        if (o < 0 ? s-- : (e2 = new g(e2), e2.d = a2, e2.e = s, e2 = S(e2, d, i, t3, 0, r2), a2 = e2.d, s = e2.e, f = Te), o = a2[i], u = r2 / 2, f = f || a2[i + 1] !== undefined, f = t3 < 4 ? (o !== undefined || f) && (t3 === 0 || t3 === (e2.s < 0 ? 3 : 2)) : o > u || o === u && (t3 === 4 || f || t3 === 6 && a2[i - 1] & 1 || t3 === (e2.s < 0 ? 8 : 7)), a2.length = i, f)
          for (;++a2[--i] > r2 - 1; )
            a2[i] = 0, i || (++s, a2.unshift(1));
        for (l = a2.length;!a2[l - 1]; --l)
          ;
        for (o = 0, c = "";o < l; o++)
          c += we.charAt(a2[o]);
        if (v) {
          if (l > 1)
            if (n == 16 || n == 8) {
              for (o = n == 16 ? 4 : 3, --l;l % o; l++)
                c += "0";
              for (a2 = ie(c, r2, n), l = a2.length;!a2[l - 1]; --l)
                ;
              for (o = 1, c = "1.";o < l; o++)
                c += we.charAt(a2[o]);
            } else
              c = c.charAt(0) + "." + c.slice(1);
          c = c + (s < 0 ? "p" : "p+") + s;
        } else if (s < 0) {
          for (;++s; )
            c = "0" + c;
          c = "0." + c;
        } else if (++s > l)
          for (s -= l;s--; )
            c += "0";
        else
          s < l && (c = c.slice(0, s) + "." + c.slice(s));
      }
      c = (n == 16 ? "0x" : n == 2 ? "0b" : n == 8 ? "0o" : "") + c;
    }
    return e2.s < 0 ? "-" + c : c;
  }
  function Re(e2, n) {
    if (e2.length > n)
      return e2.length = n, true;
  }
  function fn(e2) {
    return new this(e2).abs();
  }
  function ln(e2) {
    return new this(e2).acos();
  }
  function cn(e2) {
    return new this(e2).acosh();
  }
  function an(e2, n) {
    return new this(e2).plus(n);
  }
  function dn(e2) {
    return new this(e2).asin();
  }
  function hn(e2) {
    return new this(e2).asinh();
  }
  function pn(e2) {
    return new this(e2).atan();
  }
  function gn(e2) {
    return new this(e2).atanh();
  }
  function mn(e2, n) {
    e2 = new this(e2), n = new this(n);
    var i, t3 = this.precision, r2 = this.rounding, s = t3 + 4;
    return !e2.s || !n.s ? i = new this(NaN) : !e2.d && !n.d ? (i = L(this, s, 1).times(n.s > 0 ? 0.25 : 0.75), i.s = e2.s) : !n.d || e2.isZero() ? (i = n.s < 0 ? L(this, t3, r2) : new this(0), i.s = e2.s) : !e2.d || n.isZero() ? (i = L(this, s, 1).times(0.5), i.s = e2.s) : n.s < 0 ? (this.precision = s, this.rounding = 1, i = this.atan(S(e2, n, s, 1)), n = L(this, s, 1), this.precision = t3, this.rounding = r2, i = e2.s < 0 ? i.minus(n) : i.plus(n)) : i = this.atan(S(e2, n, s, 1)), i;
  }
  function wn(e2) {
    return new this(e2).cbrt();
  }
  function Nn(e2) {
    return p(e2 = new this(e2), e2.e + 1, 2);
  }
  function vn(e2, n, i) {
    return new this(e2).clamp(n, i);
  }
  function En(e2) {
    if (!e2 || typeof e2 != "object")
      throw Error(oe + "Object expected");
    var n, i, t3, r2 = e2.defaults === true, s = ["precision", 1, V, "rounding", 0, 8, "toExpNeg", -H, 0, "toExpPos", 0, H, "maxE", 0, H, "minE", -H, 0, "modulo", 0, 9];
    for (n = 0;n < s.length; n += 3)
      if (i = s[n], r2 && (this[i] = Ne[i]), (t3 = e2[i]) !== undefined)
        if (A(t3) === t3 && t3 >= s[n + 1] && t3 <= s[n + 2])
          this[i] = t3;
        else
          throw Error($ + i + ": " + t3);
    if (i = "crypto", r2 && (this[i] = Ne[i]), (t3 = e2[i]) !== undefined)
      if (t3 === true || t3 === false || t3 === 0 || t3 === 1)
        if (t3)
          if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
            this[i] = true;
          else
            throw Error(De);
        else
          this[i] = false;
      else
        throw Error($ + i + ": " + t3);
    return this;
  }
  function Sn(e2) {
    return new this(e2).cos();
  }
  function kn(e2) {
    return new this(e2).cosh();
  }
  function He(e2) {
    var n, i, t3;
    function r2(s) {
      var o, u, l, f = this;
      if (!(f instanceof r2))
        return new r2(s);
      if (f.constructor = r2, qe(s)) {
        f.s = s.s, w ? !s.d || s.e > r2.maxE ? (f.e = NaN, f.d = null) : s.e < r2.minE ? (f.e = 0, f.d = [0]) : (f.e = s.e, f.d = s.d.slice()) : (f.e = s.e, f.d = s.d ? s.d.slice() : s.d);
        return;
      }
      if (l = typeof s, l === "number") {
        if (s === 0) {
          f.s = 1 / s < 0 ? -1 : 1, f.e = 0, f.d = [0];
          return;
        }
        if (s < 0 ? (s = -s, f.s = -1) : f.s = 1, s === ~~s && s < 1e7) {
          for (o = 0, u = s;u >= 10; u /= 10)
            o++;
          w ? o > r2.maxE ? (f.e = NaN, f.d = null) : o < r2.minE ? (f.e = 0, f.d = [0]) : (f.e = o, f.d = [s]) : (f.e = o, f.d = [s]);
          return;
        } else if (s * 0 !== 0) {
          s || (f.s = NaN), f.e = NaN, f.d = null;
          return;
        }
        return Se(f, s.toString());
      } else if (l !== "string")
        throw Error($ + s);
      return (u = s.charCodeAt(0)) === 45 ? (s = s.slice(1), f.s = -1) : (u === 43 && (s = s.slice(1)), f.s = 1), Ie.test(s) ? Se(f, s) : on(f, s);
    }
    if (r2.prototype = h, r2.ROUND_UP = 0, r2.ROUND_DOWN = 1, r2.ROUND_CEIL = 2, r2.ROUND_FLOOR = 3, r2.ROUND_HALF_UP = 4, r2.ROUND_HALF_DOWN = 5, r2.ROUND_HALF_EVEN = 6, r2.ROUND_HALF_CEIL = 7, r2.ROUND_HALF_FLOOR = 8, r2.EUCLID = 9, r2.config = r2.set = En, r2.clone = He, r2.isDecimal = qe, r2.abs = fn, r2.acos = ln, r2.acosh = cn, r2.add = an, r2.asin = dn, r2.asinh = hn, r2.atan = pn, r2.atanh = gn, r2.atan2 = mn, r2.cbrt = wn, r2.ceil = Nn, r2.clamp = vn, r2.cos = Sn, r2.cosh = kn, r2.div = Cn, r2.exp = Mn, r2.floor = On, r2.hypot = Pn, r2.ln = bn, r2.log = An, r2.log10 = Rn, r2.log2 = _n, r2.max = qn, r2.min = Tn, r2.mod = Ln, r2.mul = Dn, r2.pow = Fn, r2.random = In, r2.round = Zn, r2.sign = Un, r2.sin = Bn, r2.sinh = $n, r2.sqrt = Vn, r2.sub = Hn, r2.sum = Wn, r2.tan = Gn, r2.tanh = Jn, r2.trunc = jn, e2 === undefined && (e2 = {}), e2 && e2.defaults !== true)
      for (t3 = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"], n = 0;n < t3.length; )
        e2.hasOwnProperty(i = t3[n++]) || (e2[i] = this[i]);
    return r2.config(e2), r2;
  }
  function Cn(e2, n) {
    return new this(e2).div(n);
  }
  function Mn(e2) {
    return new this(e2).exp();
  }
  function On(e2) {
    return p(e2 = new this(e2), e2.e + 1, 3);
  }
  function Pn() {
    var e2, n, i = new this(0);
    for (w = false, e2 = 0;e2 < arguments.length; )
      if (n = new this(arguments[e2++]), n.d)
        i.d && (i = i.plus(n.times(n)));
      else {
        if (n.s)
          return w = true, new this(1 / 0);
        i = n;
      }
    return w = true, i.sqrt();
  }
  function qe(e2) {
    return e2 instanceof Y || e2 && e2.toStringTag === Fe || false;
  }
  function bn(e2) {
    return new this(e2).ln();
  }
  function An(e2, n) {
    return new this(e2).log(n);
  }
  function _n(e2) {
    return new this(e2).log(2);
  }
  function Rn(e2) {
    return new this(e2).log(10);
  }
  function qn() {
    return Be(this, arguments, "lt");
  }
  function Tn() {
    return Be(this, arguments, "gt");
  }
  function Ln(e2, n) {
    return new this(e2).mod(n);
  }
  function Dn(e2, n) {
    return new this(e2).mul(n);
  }
  function Fn(e2, n) {
    return new this(e2).pow(n);
  }
  function In(e2) {
    var n, i, t3, r2, s = 0, o = new this(1), u = [];
    if (e2 === undefined ? e2 = this.precision : R(e2, 1, V), t3 = Math.ceil(e2 / m), this.crypto)
      if (crypto.getRandomValues)
        for (n = crypto.getRandomValues(new Uint32Array(t3));s < t3; )
          r2 = n[s], r2 >= 4290000000 ? n[s] = crypto.getRandomValues(new Uint32Array(1))[0] : u[s++] = r2 % 1e7;
      else if (crypto.randomBytes) {
        for (n = crypto.randomBytes(t3 *= 4);s < t3; )
          r2 = n[s] + (n[s + 1] << 8) + (n[s + 2] << 16) + ((n[s + 3] & 127) << 24), r2 >= 2140000000 ? crypto.randomBytes(4).copy(n, s) : (u.push(r2 % 1e7), s += 4);
        s = t3 / 4;
      } else
        throw Error(De);
    else
      for (;s < t3; )
        u[s++] = Math.random() * 1e7 | 0;
    for (t3 = u[--s], e2 %= m, t3 && e2 && (r2 = M(10, m - e2), u[s] = (t3 / r2 | 0) * r2);u[s] === 0; s--)
      u.pop();
    if (s < 0)
      i = 0, u = [0];
    else {
      for (i = -1;u[0] === 0; i -= m)
        u.shift();
      for (t3 = 1, r2 = u[0];r2 >= 10; r2 /= 10)
        t3++;
      t3 < m && (i -= m - t3);
    }
    return o.e = i, o.d = u, o;
  }
  function Zn(e2) {
    return p(e2 = new this(e2), e2.e + 1, this.rounding);
  }
  function Un(e2) {
    return e2 = new this(e2), e2.d ? e2.d[0] ? e2.s : 0 * e2.s : e2.s || NaN;
  }
  function Bn(e2) {
    return new this(e2).sin();
  }
  function $n(e2) {
    return new this(e2).sinh();
  }
  function Vn(e2) {
    return new this(e2).sqrt();
  }
  function Hn(e2, n) {
    return new this(e2).sub(n);
  }
  function Wn() {
    var e2 = 0, n = arguments, i = new this(n[e2]);
    for (w = false;i.s && ++e2 < n.length; )
      i = i.plus(n[e2]);
    return w = true, p(i, this.precision, this.rounding);
  }
  function Gn(e2) {
    return new this(e2).tan();
  }
  function Jn(e2) {
    return new this(e2).tanh();
  }
  function jn(e2) {
    return p(e2 = new this(e2), e2.e + 1, 1);
  }
  var de = Object.defineProperty;
  var Ge = Object.getOwnPropertyDescriptor;
  var Je = Object.getOwnPropertyNames;
  var je = Object.prototype.hasOwnProperty;
  var Ce = (e2, n) => {
    for (var i in n)
      de(e2, i, { get: n[i], enumerable: true });
  };
  var Xe = (e2, n, i, t3) => {
    if (n && typeof n == "object" || typeof n == "function")
      for (let r2 of Je(n))
        !je.call(e2, r2) && r2 !== i && de(e2, r2, { get: () => n[r2], enumerable: !(t3 = Ge(n, r2)) || t3.enumerable });
    return e2;
  };
  var Ke = (e2) => Xe(de({}, "__esModule", { value: true }), e2);
  var Xn = {};
  Ce(Xn, { Decimal: () => We, Public: () => he, getRuntime: () => Ae, makeStrictEnum: () => Pe, objectEnumValues: () => Oe });
  module.exports = Ke(Xn);
  var he = {};
  Ce(he, { validator: () => Me });
  var ne = Symbol();
  var pe = new WeakMap;
  var ge = class {
    constructor(n) {
      n === ne ? pe.set(this, "Prisma.".concat(this._getName())) : pe.set(this, "new Prisma.".concat(this._getNamespace(), ".").concat(this._getName(), "()"));
    }
    _getName() {
      return this.constructor.name;
    }
    toString() {
      return pe.get(this);
    }
  };
  var J = class extends ge {
    _getNamespace() {
      return "NullTypes";
    }
  };
  var j = class extends J {
  };
  me(j, "DbNull");
  var X = class extends J {
  };
  me(X, "JsonNull");
  var K = class extends J {
  };
  me(K, "AnyNull");
  var Oe = { classes: { DbNull: j, JsonNull: X, AnyNull: K }, instances: { DbNull: new j(ne), JsonNull: new X(ne), AnyNull: new K(ne) } };
  var Qe = new Set(["toJSON", "$$typeof", "asymmetricMatch", Symbol.iterator, Symbol.toStringTag, Symbol.isConcatSpreadable, Symbol.toPrimitive]);
  var Ye = "Cloudflare-Workers";
  var xe = "node";
  var ze = { node: "Node.js", workerd: "Cloudflare Workers", deno: "Deno and Deno Deploy", netlify: "Netlify Edge Functions", "edge-light": "Vercel Edge Functions or Edge Middleware" };
  var H = 9000000000000000;
  var V = 1e9;
  var we = "0123456789abcdef";
  var te = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
  var re = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
  var Ne = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -H, maxE: H, crypto: false };
  var Te;
  var Z;
  var w = true;
  var oe = "[DecimalError] ";
  var $ = oe + "Invalid argument: ";
  var Le = oe + "Precision limit exceeded";
  var De = oe + "crypto unavailable";
  var Fe = "[object Decimal]";
  var A = Math.floor;
  var M = Math.pow;
  var ye = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
  var en = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
  var nn = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
  var Ie = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
  var D = 1e7;
  var m = 7;
  var tn = 9007199254740991;
  var rn = te.length - 1;
  var ve = re.length - 1;
  var h = { toStringTag: Fe };
  h.absoluteValue = h.abs = function() {
    var e2 = new this.constructor(this);
    return e2.s < 0 && (e2.s = 1), p(e2);
  };
  h.ceil = function() {
    return p(new this.constructor(this), this.e + 1, 2);
  };
  h.clampedTo = h.clamp = function(e2, n) {
    var i, t3 = this, r2 = t3.constructor;
    if (e2 = new r2(e2), n = new r2(n), !e2.s || !n.s)
      return new r2(NaN);
    if (e2.gt(n))
      throw Error($ + n);
    return i = t3.cmp(e2), i < 0 ? e2 : t3.cmp(n) > 0 ? n : new r2(t3);
  };
  h.comparedTo = h.cmp = function(e2) {
    var n, i, t3, r2, s = this, o = s.d, u = (e2 = new s.constructor(e2)).d, l = s.s, f = e2.s;
    if (!o || !u)
      return !l || !f ? NaN : l !== f ? l : o === u ? 0 : !o ^ l < 0 ? 1 : -1;
    if (!o[0] || !u[0])
      return o[0] ? l : u[0] ? -f : 0;
    if (l !== f)
      return l;
    if (s.e !== e2.e)
      return s.e > e2.e ^ l < 0 ? 1 : -1;
    for (t3 = o.length, r2 = u.length, n = 0, i = t3 < r2 ? t3 : r2;n < i; ++n)
      if (o[n] !== u[n])
        return o[n] > u[n] ^ l < 0 ? 1 : -1;
    return t3 === r2 ? 0 : t3 > r2 ^ l < 0 ? 1 : -1;
  };
  h.cosine = h.cos = function() {
    var e2, n, i = this, t3 = i.constructor;
    return i.d ? i.d[0] ? (e2 = t3.precision, n = t3.rounding, t3.precision = e2 + Math.max(i.e, i.sd()) + m, t3.rounding = 1, i = sn(t3, Ve(t3, i)), t3.precision = e2, t3.rounding = n, p(Z == 2 || Z == 3 ? i.neg() : i, e2, n, true)) : new t3(1) : new t3(NaN);
  };
  h.cubeRoot = h.cbrt = function() {
    var e2, n, i, t3, r2, s, o, u, l, f, c = this, a2 = c.constructor;
    if (!c.isFinite() || c.isZero())
      return new a2(c);
    for (w = false, s = c.s * M(c.s * c, 1 / 3), !s || Math.abs(s) == 1 / 0 ? (i = O(c.d), e2 = c.e, (s = (e2 - i.length + 1) % 3) && (i += s == 1 || s == -2 ? "0" : "00"), s = M(i, 1 / 3), e2 = A((e2 + 1) / 3) - (e2 % 3 == (e2 < 0 ? -1 : 2)), s == 1 / 0 ? i = "5e" + e2 : (i = s.toExponential(), i = i.slice(0, i.indexOf("e") + 1) + e2), t3 = new a2(i), t3.s = c.s) : t3 = new a2(s.toString()), o = (e2 = a2.precision) + 3;; )
      if (u = t3, l = u.times(u).times(u), f = l.plus(c), t3 = S(f.plus(c).times(u), f.plus(l), o + 2, 1), O(u.d).slice(0, o) === (i = O(t3.d)).slice(0, o))
        if (i = i.slice(o - 3, o + 1), i == "9999" || !r2 && i == "4999") {
          if (!r2 && (p(u, e2 + 1, 0), u.times(u).times(u).eq(c))) {
            t3 = u;
            break;
          }
          o += 4, r2 = 1;
        } else {
          (!+i || !+i.slice(1) && i.charAt(0) == "5") && (p(t3, e2 + 1, 1), n = !t3.times(t3).times(t3).eq(c));
          break;
        }
    return w = true, p(t3, e2, a2.rounding, n);
  };
  h.decimalPlaces = h.dp = function() {
    var e2, n = this.d, i = NaN;
    if (n) {
      if (e2 = n.length - 1, i = (e2 - A(this.e / m)) * m, e2 = n[e2], e2)
        for (;e2 % 10 == 0; e2 /= 10)
          i--;
      i < 0 && (i = 0);
    }
    return i;
  };
  h.dividedBy = h.div = function(e2) {
    return S(this, new this.constructor(e2));
  };
  h.dividedToIntegerBy = h.divToInt = function(e2) {
    var n = this, i = n.constructor;
    return p(S(n, new i(e2), 0, 1, 1), i.precision, i.rounding);
  };
  h.equals = h.eq = function(e2) {
    return this.cmp(e2) === 0;
  };
  h.floor = function() {
    return p(new this.constructor(this), this.e + 1, 3);
  };
  h.greaterThan = h.gt = function(e2) {
    return this.cmp(e2) > 0;
  };
  h.greaterThanOrEqualTo = h.gte = function(e2) {
    var n = this.cmp(e2);
    return n == 1 || n === 0;
  };
  h.hyperbolicCosine = h.cosh = function() {
    var e2, n, i, t3, r2, s = this, o = s.constructor, u = new o(1);
    if (!s.isFinite())
      return new o(s.s ? 1 / 0 : NaN);
    if (s.isZero())
      return u;
    i = o.precision, t3 = o.rounding, o.precision = i + Math.max(s.e, s.sd()) + 4, o.rounding = 1, r2 = s.d.length, r2 < 32 ? (e2 = Math.ceil(r2 / 3), n = (1 / fe(4, e2)).toString()) : (e2 = 16, n = "2.3283064365386962890625e-10"), s = W(o, 1, s.times(n), new o(1), true);
    for (var l, f = e2, c = new o(8);f--; )
      l = s.times(s), s = u.minus(l.times(c.minus(l.times(c))));
    return p(s, o.precision = i, o.rounding = t3, true);
  };
  h.hyperbolicSine = h.sinh = function() {
    var e2, n, i, t3, r2 = this, s = r2.constructor;
    if (!r2.isFinite() || r2.isZero())
      return new s(r2);
    if (n = s.precision, i = s.rounding, s.precision = n + Math.max(r2.e, r2.sd()) + 4, s.rounding = 1, t3 = r2.d.length, t3 < 3)
      r2 = W(s, 2, r2, r2, true);
    else {
      e2 = 1.4 * Math.sqrt(t3), e2 = e2 > 16 ? 16 : e2 | 0, r2 = r2.times(1 / fe(5, e2)), r2 = W(s, 2, r2, r2, true);
      for (var o, u = new s(5), l = new s(16), f = new s(20);e2--; )
        o = r2.times(r2), r2 = r2.times(u.plus(o.times(l.times(o).plus(f))));
    }
    return s.precision = n, s.rounding = i, p(r2, n, i, true);
  };
  h.hyperbolicTangent = h.tanh = function() {
    var e2, n, i = this, t3 = i.constructor;
    return i.isFinite() ? i.isZero() ? new t3(i) : (e2 = t3.precision, n = t3.rounding, t3.precision = e2 + 7, t3.rounding = 1, S(i.sinh(), i.cosh(), t3.precision = e2, t3.rounding = n)) : new t3(i.s);
  };
  h.inverseCosine = h.acos = function() {
    var e2, n = this, i = n.constructor, t3 = n.abs().cmp(1), r2 = i.precision, s = i.rounding;
    return t3 !== -1 ? t3 === 0 ? n.isNeg() ? L(i, r2, s) : new i(0) : new i(NaN) : n.isZero() ? L(i, r2 + 4, s).times(0.5) : (i.precision = r2 + 6, i.rounding = 1, n = n.asin(), e2 = L(i, r2 + 4, s).times(0.5), i.precision = r2, i.rounding = s, e2.minus(n));
  };
  h.inverseHyperbolicCosine = h.acosh = function() {
    var e2, n, i = this, t3 = i.constructor;
    return i.lte(1) ? new t3(i.eq(1) ? 0 : NaN) : i.isFinite() ? (e2 = t3.precision, n = t3.rounding, t3.precision = e2 + Math.max(Math.abs(i.e), i.sd()) + 4, t3.rounding = 1, w = false, i = i.times(i).minus(1).sqrt().plus(i), w = true, t3.precision = e2, t3.rounding = n, i.ln()) : new t3(i);
  };
  h.inverseHyperbolicSine = h.asinh = function() {
    var e2, n, i = this, t3 = i.constructor;
    return !i.isFinite() || i.isZero() ? new t3(i) : (e2 = t3.precision, n = t3.rounding, t3.precision = e2 + 2 * Math.max(Math.abs(i.e), i.sd()) + 6, t3.rounding = 1, w = false, i = i.times(i).plus(1).sqrt().plus(i), w = true, t3.precision = e2, t3.rounding = n, i.ln());
  };
  h.inverseHyperbolicTangent = h.atanh = function() {
    var e2, n, i, t3, r2 = this, s = r2.constructor;
    return r2.isFinite() ? r2.e >= 0 ? new s(r2.abs().eq(1) ? r2.s / 0 : r2.isZero() ? r2 : NaN) : (e2 = s.precision, n = s.rounding, t3 = r2.sd(), Math.max(t3, e2) < 2 * -r2.e - 1 ? p(new s(r2), e2, n, true) : (s.precision = i = t3 - r2.e, r2 = S(r2.plus(1), new s(1).minus(r2), i + e2, 1), s.precision = e2 + 4, s.rounding = 1, r2 = r2.ln(), s.precision = e2, s.rounding = n, r2.times(0.5))) : new s(NaN);
  };
  h.inverseSine = h.asin = function() {
    var e2, n, i, t3, r2 = this, s = r2.constructor;
    return r2.isZero() ? new s(r2) : (n = r2.abs().cmp(1), i = s.precision, t3 = s.rounding, n !== -1 ? n === 0 ? (e2 = L(s, i + 4, t3).times(0.5), e2.s = r2.s, e2) : new s(NaN) : (s.precision = i + 6, s.rounding = 1, r2 = r2.div(new s(1).minus(r2.times(r2)).sqrt().plus(1)).atan(), s.precision = i, s.rounding = t3, r2.times(2)));
  };
  h.inverseTangent = h.atan = function() {
    var e2, n, i, t3, r2, s, o, u, l, f = this, c = f.constructor, a2 = c.precision, d = c.rounding;
    if (f.isFinite()) {
      if (f.isZero())
        return new c(f);
      if (f.abs().eq(1) && a2 + 4 <= ve)
        return o = L(c, a2 + 4, d).times(0.25), o.s = f.s, o;
    } else {
      if (!f.s)
        return new c(NaN);
      if (a2 + 4 <= ve)
        return o = L(c, a2 + 4, d).times(0.5), o.s = f.s, o;
    }
    for (c.precision = u = a2 + 10, c.rounding = 1, i = Math.min(28, u / m + 2 | 0), e2 = i;e2; --e2)
      f = f.div(f.times(f).plus(1).sqrt().plus(1));
    for (w = false, n = Math.ceil(u / m), t3 = 1, l = f.times(f), o = new c(f), r2 = f;e2 !== -1; )
      if (r2 = r2.times(l), s = o.minus(r2.div(t3 += 2)), r2 = r2.times(l), o = s.plus(r2.div(t3 += 2)), o.d[n] !== undefined)
        for (e2 = n;o.d[e2] === s.d[e2] && e2--; )
          ;
    return i && (o = o.times(2 << i - 1)), w = true, p(o, c.precision = a2, c.rounding = d, true);
  };
  h.isFinite = function() {
    return !!this.d;
  };
  h.isInteger = h.isInt = function() {
    return !!this.d && A(this.e / m) > this.d.length - 2;
  };
  h.isNaN = function() {
    return !this.s;
  };
  h.isNegative = h.isNeg = function() {
    return this.s < 0;
  };
  h.isPositive = h.isPos = function() {
    return this.s > 0;
  };
  h.isZero = function() {
    return !!this.d && this.d[0] === 0;
  };
  h.lessThan = h.lt = function(e2) {
    return this.cmp(e2) < 0;
  };
  h.lessThanOrEqualTo = h.lte = function(e2) {
    return this.cmp(e2) < 1;
  };
  h.logarithm = h.log = function(e2) {
    var n, i, t3, r2, s, o, u, l, f = this, c = f.constructor, a2 = c.precision, d = c.rounding, g = 5;
    if (e2 == null)
      e2 = new c(10), n = true;
    else {
      if (e2 = new c(e2), i = e2.d, e2.s < 0 || !i || !i[0] || e2.eq(1))
        return new c(NaN);
      n = e2.eq(10);
    }
    if (i = f.d, f.s < 0 || !i || !i[0] || f.eq(1))
      return new c(i && !i[0] ? -1 / 0 : f.s != 1 ? NaN : i ? 0 : 1 / 0);
    if (n)
      if (i.length > 1)
        s = true;
      else {
        for (r2 = i[0];r2 % 10 === 0; )
          r2 /= 10;
        s = r2 !== 1;
      }
    if (w = false, u = a2 + g, o = B(f, u), t3 = n ? se(c, u + 10) : B(e2, u), l = S(o, t3, u, 1), Q(l.d, r2 = a2, d))
      do
        if (u += 10, o = B(f, u), t3 = n ? se(c, u + 10) : B(e2, u), l = S(o, t3, u, 1), !s) {
          +O(l.d).slice(r2 + 1, r2 + 15) + 1 == 100000000000000 && (l = p(l, a2 + 1, 0));
          break;
        }
      while (Q(l.d, r2 += 10, d));
    return w = true, p(l, a2, d);
  };
  h.minus = h.sub = function(e2) {
    var n, i, t3, r2, s, o, u, l, f, c, a2, d, g = this, v = g.constructor;
    if (e2 = new v(e2), !g.d || !e2.d)
      return !g.s || !e2.s ? e2 = new v(NaN) : g.d ? e2.s = -e2.s : e2 = new v(e2.d || g.s !== e2.s ? g : NaN), e2;
    if (g.s != e2.s)
      return e2.s = -e2.s, g.plus(e2);
    if (f = g.d, d = e2.d, u = v.precision, l = v.rounding, !f[0] || !d[0]) {
      if (d[0])
        e2.s = -e2.s;
      else if (f[0])
        e2 = new v(g);
      else
        return new v(l === 3 ? -0 : 0);
      return w ? p(e2, u, l) : e2;
    }
    if (i = A(e2.e / m), c = A(g.e / m), f = f.slice(), s = c - i, s) {
      for (a2 = s < 0, a2 ? (n = f, s = -s, o = d.length) : (n = d, i = c, o = f.length), t3 = Math.max(Math.ceil(u / m), o) + 2, s > t3 && (s = t3, n.length = 1), n.reverse(), t3 = s;t3--; )
        n.push(0);
      n.reverse();
    } else {
      for (t3 = f.length, o = d.length, a2 = t3 < o, a2 && (o = t3), t3 = 0;t3 < o; t3++)
        if (f[t3] != d[t3]) {
          a2 = f[t3] < d[t3];
          break;
        }
      s = 0;
    }
    for (a2 && (n = f, f = d, d = n, e2.s = -e2.s), o = f.length, t3 = d.length - o;t3 > 0; --t3)
      f[o++] = 0;
    for (t3 = d.length;t3 > s; ) {
      if (f[--t3] < d[t3]) {
        for (r2 = t3;r2 && f[--r2] === 0; )
          f[r2] = D - 1;
        --f[r2], f[t3] += D;
      }
      f[t3] -= d[t3];
    }
    for (;f[--o] === 0; )
      f.pop();
    for (;f[0] === 0; f.shift())
      --i;
    return f[0] ? (e2.d = f, e2.e = ue(f, i), w ? p(e2, u, l) : e2) : new v(l === 3 ? -0 : 0);
  };
  h.modulo = h.mod = function(e2) {
    var n, i = this, t3 = i.constructor;
    return e2 = new t3(e2), !i.d || !e2.s || e2.d && !e2.d[0] ? new t3(NaN) : !e2.d || i.d && !i.d[0] ? p(new t3(i), t3.precision, t3.rounding) : (w = false, t3.modulo == 9 ? (n = S(i, e2.abs(), 0, 3, 1), n.s *= e2.s) : n = S(i, e2, 0, t3.modulo, 1), n = n.times(e2), w = true, i.minus(n));
  };
  h.naturalExponential = h.exp = function() {
    return Ee(this);
  };
  h.naturalLogarithm = h.ln = function() {
    return B(this);
  };
  h.negated = h.neg = function() {
    var e2 = new this.constructor(this);
    return e2.s = -e2.s, p(e2);
  };
  h.plus = h.add = function(e2) {
    var n, i, t3, r2, s, o, u, l, f, c, a2 = this, d = a2.constructor;
    if (e2 = new d(e2), !a2.d || !e2.d)
      return !a2.s || !e2.s ? e2 = new d(NaN) : a2.d || (e2 = new d(e2.d || a2.s === e2.s ? a2 : NaN)), e2;
    if (a2.s != e2.s)
      return e2.s = -e2.s, a2.minus(e2);
    if (f = a2.d, c = e2.d, u = d.precision, l = d.rounding, !f[0] || !c[0])
      return c[0] || (e2 = new d(a2)), w ? p(e2, u, l) : e2;
    if (s = A(a2.e / m), t3 = A(e2.e / m), f = f.slice(), r2 = s - t3, r2) {
      for (r2 < 0 ? (i = f, r2 = -r2, o = c.length) : (i = c, t3 = s, o = f.length), s = Math.ceil(u / m), o = s > o ? s + 1 : o + 1, r2 > o && (r2 = o, i.length = 1), i.reverse();r2--; )
        i.push(0);
      i.reverse();
    }
    for (o = f.length, r2 = c.length, o - r2 < 0 && (r2 = o, i = c, c = f, f = i), n = 0;r2; )
      n = (f[--r2] = f[r2] + c[r2] + n) / D | 0, f[r2] %= D;
    for (n && (f.unshift(n), ++t3), o = f.length;f[--o] == 0; )
      f.pop();
    return e2.d = f, e2.e = ue(f, t3), w ? p(e2, u, l) : e2;
  };
  h.precision = h.sd = function(e2) {
    var n, i = this;
    if (e2 !== undefined && e2 !== !!e2 && e2 !== 1 && e2 !== 0)
      throw Error($ + e2);
    return i.d ? (n = Ze(i.d), e2 && i.e + 1 > n && (n = i.e + 1)) : n = NaN, n;
  };
  h.round = function() {
    var e2 = this, n = e2.constructor;
    return p(new n(e2), e2.e + 1, n.rounding);
  };
  h.sine = h.sin = function() {
    var e2, n, i = this, t3 = i.constructor;
    return i.isFinite() ? i.isZero() ? new t3(i) : (e2 = t3.precision, n = t3.rounding, t3.precision = e2 + Math.max(i.e, i.sd()) + m, t3.rounding = 1, i = un(t3, Ve(t3, i)), t3.precision = e2, t3.rounding = n, p(Z > 2 ? i.neg() : i, e2, n, true)) : new t3(NaN);
  };
  h.squareRoot = h.sqrt = function() {
    var e2, n, i, t3, r2, s, o = this, u = o.d, l = o.e, f = o.s, c = o.constructor;
    if (f !== 1 || !u || !u[0])
      return new c(!f || f < 0 && (!u || u[0]) ? NaN : u ? o : 1 / 0);
    for (w = false, f = Math.sqrt(+o), f == 0 || f == 1 / 0 ? (n = O(u), (n.length + l) % 2 == 0 && (n += "0"), f = Math.sqrt(n), l = A((l + 1) / 2) - (l < 0 || l % 2), f == 1 / 0 ? n = "5e" + l : (n = f.toExponential(), n = n.slice(0, n.indexOf("e") + 1) + l), t3 = new c(n)) : t3 = new c(f.toString()), i = (l = c.precision) + 3;; )
      if (s = t3, t3 = s.plus(S(o, s, i + 2, 1)).times(0.5), O(s.d).slice(0, i) === (n = O(t3.d)).slice(0, i))
        if (n = n.slice(i - 3, i + 1), n == "9999" || !r2 && n == "4999") {
          if (!r2 && (p(s, l + 1, 0), s.times(s).eq(o))) {
            t3 = s;
            break;
          }
          i += 4, r2 = 1;
        } else {
          (!+n || !+n.slice(1) && n.charAt(0) == "5") && (p(t3, l + 1, 1), e2 = !t3.times(t3).eq(o));
          break;
        }
    return w = true, p(t3, l, c.rounding, e2);
  };
  h.tangent = h.tan = function() {
    var e2, n, i = this, t3 = i.constructor;
    return i.isFinite() ? i.isZero() ? new t3(i) : (e2 = t3.precision, n = t3.rounding, t3.precision = e2 + 10, t3.rounding = 1, i = i.sin(), i.s = 1, i = S(i, new t3(1).minus(i.times(i)).sqrt(), e2 + 10, 0), t3.precision = e2, t3.rounding = n, p(Z == 2 || Z == 4 ? i.neg() : i, e2, n, true)) : new t3(NaN);
  };
  h.times = h.mul = function(e2) {
    var n, i, t3, r2, s, o, u, l, f, c = this, a2 = c.constructor, d = c.d, g = (e2 = new a2(e2)).d;
    if (e2.s *= c.s, !d || !d[0] || !g || !g[0])
      return new a2(!e2.s || d && !d[0] && !g || g && !g[0] && !d ? NaN : !d || !g ? e2.s / 0 : e2.s * 0);
    for (i = A(c.e / m) + A(e2.e / m), l = d.length, f = g.length, l < f && (s = d, d = g, g = s, o = l, l = f, f = o), s = [], o = l + f, t3 = o;t3--; )
      s.push(0);
    for (t3 = f;--t3 >= 0; ) {
      for (n = 0, r2 = l + t3;r2 > t3; )
        u = s[r2] + g[t3] * d[r2 - t3 - 1] + n, s[r2--] = u % D | 0, n = u / D | 0;
      s[r2] = (s[r2] + n) % D | 0;
    }
    for (;!s[--o]; )
      s.pop();
    return n ? ++i : s.shift(), e2.d = s, e2.e = ue(s, i), w ? p(e2, a2.precision, a2.rounding) : e2;
  };
  h.toBinary = function(e2, n) {
    return ke(this, 2, e2, n);
  };
  h.toDecimalPlaces = h.toDP = function(e2, n) {
    var i = this, t3 = i.constructor;
    return i = new t3(i), e2 === undefined ? i : (R(e2, 0, V), n === undefined ? n = t3.rounding : R(n, 0, 8), p(i, e2 + i.e + 1, n));
  };
  h.toExponential = function(e2, n) {
    var i, t3 = this, r2 = t3.constructor;
    return e2 === undefined ? i = F(t3, true) : (R(e2, 0, V), n === undefined ? n = r2.rounding : R(n, 0, 8), t3 = p(new r2(t3), e2 + 1, n), i = F(t3, true, e2 + 1)), t3.isNeg() && !t3.isZero() ? "-" + i : i;
  };
  h.toFixed = function(e2, n) {
    var i, t3, r2 = this, s = r2.constructor;
    return e2 === undefined ? i = F(r2) : (R(e2, 0, V), n === undefined ? n = s.rounding : R(n, 0, 8), t3 = p(new s(r2), e2 + r2.e + 1, n), i = F(t3, false, e2 + t3.e + 1)), r2.isNeg() && !r2.isZero() ? "-" + i : i;
  };
  h.toFraction = function(e2) {
    var n, i, t3, r2, s, o, u, l, f, c, a2, d, g = this, v = g.d, N = g.constructor;
    if (!v)
      return new N(g);
    if (f = i = new N(1), t3 = l = new N(0), n = new N(t3), s = n.e = Ze(v) - g.e - 1, o = s % m, n.d[0] = M(10, o < 0 ? m + o : o), e2 == null)
      e2 = s > 0 ? n : f;
    else {
      if (u = new N(e2), !u.isInt() || u.lt(f))
        throw Error($ + u);
      e2 = u.gt(n) ? s > 0 ? n : f : u;
    }
    for (w = false, u = new N(O(v)), c = N.precision, N.precision = s = v.length * m * 2;a2 = S(u, n, 0, 1, 1), r2 = i.plus(a2.times(t3)), r2.cmp(e2) != 1; )
      i = t3, t3 = r2, r2 = f, f = l.plus(a2.times(r2)), l = r2, r2 = n, n = u.minus(a2.times(r2)), u = r2;
    return r2 = S(e2.minus(i), t3, 0, 1, 1), l = l.plus(r2.times(f)), i = i.plus(r2.times(t3)), l.s = f.s = g.s, d = S(f, t3, s, 1).minus(g).abs().cmp(S(l, i, s, 1).minus(g).abs()) < 1 ? [f, t3] : [l, i], N.precision = c, w = true, d;
  };
  h.toHexadecimal = h.toHex = function(e2, n) {
    return ke(this, 16, e2, n);
  };
  h.toNearest = function(e2, n) {
    var i = this, t3 = i.constructor;
    if (i = new t3(i), e2 == null) {
      if (!i.d)
        return i;
      e2 = new t3(1), n = t3.rounding;
    } else {
      if (e2 = new t3(e2), n === undefined ? n = t3.rounding : R(n, 0, 8), !i.d)
        return e2.s ? i : e2;
      if (!e2.d)
        return e2.s && (e2.s = i.s), e2;
    }
    return e2.d[0] ? (w = false, i = S(i, e2, 0, n, 1).times(e2), w = true, p(i)) : (e2.s = i.s, i = e2), i;
  };
  h.toNumber = function() {
    return +this;
  };
  h.toOctal = function(e2, n) {
    return ke(this, 8, e2, n);
  };
  h.toPower = h.pow = function(e2) {
    var n, i, t3, r2, s, o, u = this, l = u.constructor, f = +(e2 = new l(e2));
    if (!u.d || !e2.d || !u.d[0] || !e2.d[0])
      return new l(M(+u, f));
    if (u = new l(u), u.eq(1))
      return u;
    if (t3 = l.precision, s = l.rounding, e2.eq(1))
      return p(u, t3, s);
    if (n = A(e2.e / m), n >= e2.d.length - 1 && (i = f < 0 ? -f : f) <= tn)
      return r2 = Ue(l, u, i, t3), e2.s < 0 ? new l(1).div(r2) : p(r2, t3, s);
    if (o = u.s, o < 0) {
      if (n < e2.d.length - 1)
        return new l(NaN);
      if (e2.d[n] & 1 || (o = 1), u.e == 0 && u.d[0] == 1 && u.d.length == 1)
        return u.s = o, u;
    }
    return i = M(+u, f), n = i == 0 || !isFinite(i) ? A(f * (Math.log("0." + O(u.d)) / Math.LN10 + u.e + 1)) : new l(i + "").e, n > l.maxE + 1 || n < l.minE - 1 ? new l(n > 0 ? o / 0 : 0) : (w = false, l.rounding = u.s = 1, i = Math.min(12, (n + "").length), r2 = Ee(e2.times(B(u, t3 + i)), t3), r2.d && (r2 = p(r2, t3 + 5, 1), Q(r2.d, t3, s) && (n = t3 + 10, r2 = p(Ee(e2.times(B(u, n + i)), n), n + 5, 1), +O(r2.d).slice(t3 + 1, t3 + 15) + 1 == 100000000000000 && (r2 = p(r2, t3 + 1, 0)))), r2.s = o, w = true, l.rounding = s, p(r2, t3, s));
  };
  h.toPrecision = function(e2, n) {
    var i, t3 = this, r2 = t3.constructor;
    return e2 === undefined ? i = F(t3, t3.e <= r2.toExpNeg || t3.e >= r2.toExpPos) : (R(e2, 1, V), n === undefined ? n = r2.rounding : R(n, 0, 8), t3 = p(new r2(t3), e2, n), i = F(t3, e2 <= t3.e || t3.e <= r2.toExpNeg, e2)), t3.isNeg() && !t3.isZero() ? "-" + i : i;
  };
  h.toSignificantDigits = h.toSD = function(e2, n) {
    var i = this, t3 = i.constructor;
    return e2 === undefined ? (e2 = t3.precision, n = t3.rounding) : (R(e2, 1, V), n === undefined ? n = t3.rounding : R(n, 0, 8)), p(new t3(i), e2, n);
  };
  h.toString = function() {
    var e2 = this, n = e2.constructor, i = F(e2, e2.e <= n.toExpNeg || e2.e >= n.toExpPos);
    return e2.isNeg() && !e2.isZero() ? "-" + i : i;
  };
  h.truncated = h.trunc = function() {
    return p(new this.constructor(this), this.e + 1, 1);
  };
  h.valueOf = h.toJSON = function() {
    var e2 = this, n = e2.constructor, i = F(e2, e2.e <= n.toExpNeg || e2.e >= n.toExpPos);
    return e2.isNeg() ? "-" + i : i;
  };
  var S = function() {
    function e2(t3, r2, s) {
      var o, u = 0, l = t3.length;
      for (t3 = t3.slice();l--; )
        o = t3[l] * r2 + u, t3[l] = o % s | 0, u = o / s | 0;
      return u && t3.unshift(u), t3;
    }
    function n(t3, r2, s, o) {
      var u, l;
      if (s != o)
        l = s > o ? 1 : -1;
      else
        for (u = l = 0;u < s; u++)
          if (t3[u] != r2[u]) {
            l = t3[u] > r2[u] ? 1 : -1;
            break;
          }
      return l;
    }
    function i(t3, r2, s, o) {
      for (var u = 0;s--; )
        t3[s] -= u, u = t3[s] < r2[s] ? 1 : 0, t3[s] = u * o + t3[s] - r2[s];
      for (;!t3[0] && t3.length > 1; )
        t3.shift();
    }
    return function(t3, r2, s, o, u, l) {
      var f, c, a2, d, g, v, N, _, C, q, E, P, x, I, le, z, G, ce, T, y, ee = t3.constructor, ae = t3.s == r2.s ? 1 : -1, b = t3.d, k = r2.d;
      if (!b || !b[0] || !k || !k[0])
        return new ee(!t3.s || !r2.s || (b ? k && b[0] == k[0] : !k) ? NaN : b && b[0] == 0 || !k ? ae * 0 : ae / 0);
      for (l ? (g = 1, c = t3.e - r2.e) : (l = D, g = m, c = A(t3.e / g) - A(r2.e / g)), T = k.length, G = b.length, C = new ee(ae), q = C.d = [], a2 = 0;k[a2] == (b[a2] || 0); a2++)
        ;
      if (k[a2] > (b[a2] || 0) && c--, s == null ? (I = s = ee.precision, o = ee.rounding) : u ? I = s + (t3.e - r2.e) + 1 : I = s, I < 0)
        q.push(1), v = true;
      else {
        if (I = I / g + 2 | 0, a2 = 0, T == 1) {
          for (d = 0, k = k[0], I++;(a2 < G || d) && I--; a2++)
            le = d * l + (b[a2] || 0), q[a2] = le / k | 0, d = le % k | 0;
          v = d || a2 < G;
        } else {
          for (d = l / (k[0] + 1) | 0, d > 1 && (k = e2(k, d, l), b = e2(b, d, l), T = k.length, G = b.length), z = T, E = b.slice(0, T), P = E.length;P < T; )
            E[P++] = 0;
          y = k.slice(), y.unshift(0), ce = k[0], k[1] >= l / 2 && ++ce;
          do
            d = 0, f = n(k, E, T, P), f < 0 ? (x = E[0], T != P && (x = x * l + (E[1] || 0)), d = x / ce | 0, d > 1 ? (d >= l && (d = l - 1), N = e2(k, d, l), _ = N.length, P = E.length, f = n(N, E, _, P), f == 1 && (d--, i(N, T < _ ? y : k, _, l))) : (d == 0 && (f = d = 1), N = k.slice()), _ = N.length, _ < P && N.unshift(0), i(E, N, P, l), f == -1 && (P = E.length, f = n(k, E, T, P), f < 1 && (d++, i(E, T < P ? y : k, P, l))), P = E.length) : f === 0 && (d++, E = [0]), q[a2++] = d, f && E[0] ? E[P++] = b[z] || 0 : (E = [b[z]], P = 1);
          while ((z++ < G || E[0] !== undefined) && I--);
          v = E[0] !== undefined;
        }
        q[0] || q.shift();
      }
      if (g == 1)
        C.e = c, Te = v;
      else {
        for (a2 = 1, d = q[0];d >= 10; d /= 10)
          a2++;
        C.e = a2 + c * g - 1, p(C, u ? s + C.e + 1 : s, o, v);
      }
      return C;
    };
  }();
  h[Symbol.for("nodejs.util.inspect.custom")] = h.toString;
  h[Symbol.toStringTag] = "Decimal";
  var Y = h.constructor = He(Ne);
  te = new Y(te);
  re = new Y(re);
  var We = Y;
  /*! Bundled license information:
  
  decimal.js/decimal.mjs:
    (*!
     *  decimal.js v10.4.3
     *  An arbitrary-precision Decimal type for JavaScript.
     *  https://github.com/MikeMcl/decimal.js
     *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
     *  MIT Licence
     *)
  */
});

// node_modules/.prisma/client/index-browser.js
var require_index_browser2 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  var {
    Decimal: Decimal2,
    objectEnumValues: objectEnumValues2,
    makeStrictEnum: makeStrictEnum2,
    Public: Public2,
    getRuntime: getRuntime2
  } = require_index_browser();
  var Prisma = {};
  exports.Prisma = Prisma;
  exports.$Enums = {};
  Prisma.prismaVersion = {
    client: "5.13.0",
    engine: "b9a39a7ee606c28e3455d0fd60e78c3ba82b1a2b"
  };
  Prisma.PrismaClientKnownRequestError = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.PrismaClientUnknownRequestError = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.PrismaClientRustPanicError = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.PrismaClientInitializationError = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.PrismaClientValidationError = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.NotFoundError = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.Decimal = Decimal2;
  Prisma.sql = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.empty = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.join = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.raw = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.validator = Public2.validator;
  Prisma.getExtensionContext = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.defineExtension = () => {
    const runtimeName = getRuntime2().prettyName;
    throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`);
  };
  Prisma.DbNull = objectEnumValues2.instances.DbNull;
  Prisma.JsonNull = objectEnumValues2.instances.JsonNull;
  Prisma.AnyNull = objectEnumValues2.instances.AnyNull;
  Prisma.NullTypes = {
    DbNull: objectEnumValues2.classes.DbNull,
    JsonNull: objectEnumValues2.classes.JsonNull,
    AnyNull: objectEnumValues2.classes.AnyNull
  };
  exports.Prisma.TransactionIsolationLevel = makeStrictEnum2({
    ReadUncommitted: "ReadUncommitted",
    ReadCommitted: "ReadCommitted",
    RepeatableRead: "RepeatableRead",
    Serializable: "Serializable"
  });
  exports.Prisma.PostScalarFieldEnum = {
    id: "id",
    title: "title",
    content: "content",
    createdAt: "createdAt",
    updatedAt: "updatedAt"
  };
  exports.Prisma.UserScalarFieldEnum = {
    id: "id",
    name: "name",
    email: "email",
    password: "password",
    role: "role",
    master_data_submenu_id: "master_data_submenu_id",
    scm_planner_submenu_id: "scm_planner_submenu_id",
    wms_principle_submenu_id: "wms_principle_submenu_id",
    tms_planner_submenu_id: "tms_planner_submenu_id",
    dc_wms_submenu_id: "dc_wms_submenu_id",
    createdAt: "createdAt",
    updatedAt: "updatedAt"
  };
  exports.Prisma.MenuScalarFieldEnum = {
    id: "id",
    category_id: "category_id",
    category_name: "category_name",
    category_icon: "category_icon",
    submenu_id: "submenu_id",
    submenu_path: "submenu_path",
    submenu_name: "submenu_name",
    submenu_component: "submenu_component",
    layout: "layout",
    status: "status",
    createdAt: "createdAt",
    updatedAt: "updatedAt"
  };
  exports.Prisma.SortOrder = {
    asc: "asc",
    desc: "desc"
  };
  exports.Prisma.NullsOrder = {
    first: "first",
    last: "last"
  };
  exports.Prisma.ModelName = {
    Post: "Post",
    User: "User",
    Menu: "Menu"
  };

  class PrismaClient {
    constructor() {
      return new Proxy(this, {
        get(target, prop) {
          let message2;
          const runtime = getRuntime2();
          if (runtime.isEdge) {
            message2 = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
          } else {
            message2 = "PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `" + runtime.prettyName + "`).";
          }
          message2 += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`;
          throw new Error(message2);
        }
      });
    }
  }
  exports.PrismaClient = PrismaClient;
  Object.assign(exports, Prisma);
});

// node_modules/@prisma/client/index-browser.js
var require_index_browser3 = __commonJS((exports, module) => {
  var prisma = require_index_browser2();
  module.exports = prisma;
});

// node_modules/eventemitter3/index.mjs
var import_ = __toESM(require_eventemitter3(), 1);
var eventemitter3_default = import_.default;

// node_modules/@sinclair/typebox/build/esm/value/guard/guard.mjs
function IsAsyncIterator(value) {
  return IsObject(value) && Symbol.asyncIterator in value;
}
function IsIterator(value) {
  return IsObject(value) && Symbol.iterator in value;
}
function IsStandardObject(value) {
  return IsObject(value) && (Object.getPrototypeOf(value) === Object.prototype || Object.getPrototypeOf(value) === null);
}
function IsPromise(value) {
  return value instanceof Promise;
}
function IsDate(value) {
  return value instanceof Date && Number.isFinite(value.getTime());
}
function IsTypedArray(value) {
  return ArrayBuffer.isView(value);
}
function IsUint8Array(value) {
  return value instanceof globalThis.Uint8Array;
}
function HasPropertyKey(value, key) {
  return key in value;
}
function IsObject(value) {
  return value !== null && typeof value === "object";
}
function IsArray(value) {
  return Array.isArray(value) && !ArrayBuffer.isView(value);
}
function IsUndefined(value) {
  return value === undefined;
}
function IsNull(value) {
  return value === null;
}
function IsBoolean(value) {
  return typeof value === "boolean";
}
function IsNumber(value) {
  return typeof value === "number";
}
function IsInteger(value) {
  return Number.isInteger(value);
}
function IsBigInt(value) {
  return typeof value === "bigint";
}
function IsString(value) {
  return typeof value === "string";
}
function IsFunction(value) {
  return typeof value === "function";
}
function IsSymbol(value) {
  return typeof value === "symbol";
}
function IsValueType(value) {
  return IsBigInt(value) || IsBoolean(value) || IsNull(value) || IsNumber(value) || IsString(value) || IsSymbol(value) || IsUndefined(value);
}
// node_modules/@sinclair/typebox/build/esm/system/policy.mjs
var TypeSystemPolicy;
(function(TypeSystemPolicy2) {
  TypeSystemPolicy2.ExactOptionalPropertyTypes = false;
  TypeSystemPolicy2.AllowArrayObject = false;
  TypeSystemPolicy2.AllowNaN = false;
  TypeSystemPolicy2.AllowNullVoid = false;
  function IsExactOptionalProperty(value, key) {
    return TypeSystemPolicy2.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;
  }
  TypeSystemPolicy2.IsExactOptionalProperty = IsExactOptionalProperty;
  function IsObjectLike(value) {
    const isObject = IsObject(value);
    return TypeSystemPolicy2.AllowArrayObject ? isObject : isObject && !IsArray(value);
  }
  TypeSystemPolicy2.IsObjectLike = IsObjectLike;
  function IsRecordLike(value) {
    return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);
  }
  TypeSystemPolicy2.IsRecordLike = IsRecordLike;
  function IsNumberLike(value) {
    return TypeSystemPolicy2.AllowNaN ? IsNumber(value) : Number.isFinite(value);
  }
  TypeSystemPolicy2.IsNumberLike = IsNumberLike;
  function IsVoidLike(value) {
    const isUndefined = IsUndefined(value);
    return TypeSystemPolicy2.AllowNullVoid ? isUndefined || value === null : isUndefined;
  }
  TypeSystemPolicy2.IsVoidLike = IsVoidLike;
})(TypeSystemPolicy || (TypeSystemPolicy = {}));
// node_modules/@sinclair/typebox/build/esm/type/registry/format.mjs
var exports_format = {};
__export(exports_format, {
  Set: () => Set2,
  Has: () => Has,
  Get: () => Get,
  Entries: () => Entries,
  Delete: () => Delete,
  Clear: () => Clear
});
function Entries() {
  return new Map(map);
}
function Clear() {
  return map.clear();
}
function Delete(format) {
  return map.delete(format);
}
function Has(format) {
  return map.has(format);
}
function Set2(format, func) {
  map.set(format, func);
}
function Get(format) {
  return map.get(format);
}
var map = new Map;
// node_modules/@sinclair/typebox/build/esm/type/registry/type.mjs
var exports_type = {};
__export(exports_type, {
  Set: () => Set3,
  Has: () => Has2,
  Get: () => Get2,
  Entries: () => Entries2,
  Delete: () => Delete2,
  Clear: () => Clear2
});
function Entries2() {
  return new Map(map2);
}
function Clear2() {
  return map2.clear();
}
function Delete2(kind) {
  return map2.delete(kind);
}
function Has2(kind) {
  return map2.has(kind);
}
function Set3(kind, func) {
  map2.set(kind, func);
}
function Get2(kind) {
  return map2.get(kind);
}
var map2 = new Map;
// node_modules/@sinclair/typebox/build/esm/type/symbols/symbols.mjs
var TransformKind = Symbol.for("TypeBox.Transform");
var ReadonlyKind = Symbol.for("TypeBox.Readonly");
var OptionalKind = Symbol.for("TypeBox.Optional");
var Hint = Symbol.for("TypeBox.Hint");
var Kind = Symbol.for("TypeBox.Kind");
// node_modules/@sinclair/typebox/build/esm/type/unsafe/unsafe.mjs
function Unsafe(options = {}) {
  return {
    ...options,
    [Kind]: options[Kind] ?? "Unsafe"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/error/error.mjs
class TypeBoxError extends Error {
  constructor(message) {
    super(message);
  }
}
// node_modules/@sinclair/typebox/build/esm/system/system.mjs
class TypeSystemDuplicateTypeKind extends TypeBoxError {
  constructor(kind) {
    super(`Duplicate type kind '${kind}' detected`);
  }
}

class TypeSystemDuplicateFormat extends TypeBoxError {
  constructor(kind) {
    super(`Duplicate string format '${kind}' detected`);
  }
}
var TypeSystem;
(function(TypeSystem2) {
  function Type(kind, check) {
    if (exports_type.Has(kind))
      throw new TypeSystemDuplicateTypeKind(kind);
    exports_type.Set(kind, check);
    return (options = {}) => Unsafe({ ...options, [Kind]: kind });
  }
  TypeSystem2.Type = Type;
  function Format(format, check) {
    if (exports_format.Has(format))
      throw new TypeSystemDuplicateFormat(format);
    exports_format.Set(format, check);
    return format;
  }
  TypeSystem2.Format = Format;
})(TypeSystem || (TypeSystem = {}));
// node_modules/@sinclair/typebox/build/esm/type/mapped/mapped-result.mjs
function MappedResult(properties) {
  return {
    [Kind]: "MappedResult",
    properties
  };
}
// node_modules/@sinclair/typebox/build/esm/type/guard/value.mjs
var exports_value = {};
__export(exports_value, {
  IsUndefined: () => IsUndefined2,
  IsUint8Array: () => IsUint8Array2,
  IsSymbol: () => IsSymbol2,
  IsString: () => IsString2,
  IsRegExp: () => IsRegExp,
  IsObject: () => IsObject2,
  IsNumber: () => IsNumber2,
  IsNull: () => IsNull2,
  IsIterator: () => IsIterator2,
  IsFunction: () => IsFunction2,
  IsDate: () => IsDate2,
  IsBoolean: () => IsBoolean2,
  IsBigInt: () => IsBigInt2,
  IsAsyncIterator: () => IsAsyncIterator2,
  IsArray: () => IsArray2
});
function IsAsyncIterator2(value) {
  return IsObject2(value) && !IsArray2(value) && !IsUint8Array2(value) && Symbol.asyncIterator in value;
}
function IsArray2(value) {
  return Array.isArray(value);
}
function IsBigInt2(value) {
  return typeof value === "bigint";
}
function IsBoolean2(value) {
  return typeof value === "boolean";
}
function IsDate2(value) {
  return value instanceof globalThis.Date;
}
function IsFunction2(value) {
  return typeof value === "function";
}
function IsIterator2(value) {
  return IsObject2(value) && !IsArray2(value) && !IsUint8Array2(value) && Symbol.iterator in value;
}
function IsNull2(value) {
  return value === null;
}
function IsNumber2(value) {
  return typeof value === "number";
}
function IsObject2(value) {
  return typeof value === "object" && value !== null;
}
function IsRegExp(value) {
  return value instanceof globalThis.RegExp;
}
function IsString2(value) {
  return typeof value === "string";
}
function IsSymbol2(value) {
  return typeof value === "symbol";
}
function IsUint8Array2(value) {
  return value instanceof globalThis.Uint8Array;
}
function IsUndefined2(value) {
  return value === undefined;
}

// node_modules/@sinclair/typebox/build/esm/type/clone/value.mjs
function ArrayType(value) {
  return value.map((value2) => Visit(value2));
}
function DateType(value) {
  return new Date(value.getTime());
}
function Uint8ArrayType(value) {
  return new Uint8Array(value);
}
function RegExpType(value) {
  return new RegExp(value.source, value.flags);
}
function ObjectType(value) {
  const result = {};
  for (const key of Object.getOwnPropertyNames(value)) {
    result[key] = Visit(value[key]);
  }
  for (const key of Object.getOwnPropertySymbols(value)) {
    result[key] = Visit(value[key]);
  }
  return result;
}
function Visit(value) {
  return IsArray2(value) ? ArrayType(value) : IsDate2(value) ? DateType(value) : IsUint8Array2(value) ? Uint8ArrayType(value) : IsRegExp(value) ? RegExpType(value) : IsObject2(value) ? ObjectType(value) : value;
}
function Clone(value) {
  return Visit(value);
}

// node_modules/@sinclair/typebox/build/esm/type/clone/type.mjs
function CloneRest(schemas) {
  return schemas.map((schema) => CloneType(schema));
}
function CloneType(schema, options = {}) {
  return { ...Clone(schema), ...options };
}

// node_modules/@sinclair/typebox/build/esm/type/discard/discard.mjs
function DiscardKey(value2, key) {
  const { [key]: _, ...rest } = value2;
  return rest;
}
function Discard(value2, keys) {
  return keys.reduce((acc, key) => DiscardKey(acc, key), value2);
}
// node_modules/@sinclair/typebox/build/esm/type/array/array.mjs
function Array2(schema, options = {}) {
  return {
    ...options,
    [Kind]: "Array",
    type: "array",
    items: CloneType(schema)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/async-iterator/async-iterator.mjs
function AsyncIterator(items, options = {}) {
  return {
    ...options,
    [Kind]: "AsyncIterator",
    type: "AsyncIterator",
    items: CloneType(items)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/constructor/constructor.mjs
function Constructor(parameters, returns, options) {
  return {
    ...options,
    [Kind]: "Constructor",
    type: "Constructor",
    parameters: CloneRest(parameters),
    returns: CloneType(returns)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/function/function.mjs
function Function2(parameters, returns, options) {
  return {
    ...options,
    [Kind]: "Function",
    type: "Function",
    parameters: CloneRest(parameters),
    returns: CloneType(returns)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/never/never.mjs
function Never(options = {}) {
  return {
    ...options,
    [Kind]: "Never",
    not: {}
  };
}
// node_modules/@sinclair/typebox/build/esm/type/guard/kind.mjs
function IsReadonly(value2) {
  return IsObject2(value2) && value2[ReadonlyKind] === "Readonly";
}
function IsOptional(value2) {
  return IsObject2(value2) && value2[OptionalKind] === "Optional";
}
function IsAny(value2) {
  return IsKindOf(value2, "Any");
}
function IsArray3(value2) {
  return IsKindOf(value2, "Array");
}
function IsAsyncIterator3(value2) {
  return IsKindOf(value2, "AsyncIterator");
}
function IsBigInt3(value2) {
  return IsKindOf(value2, "BigInt");
}
function IsBoolean3(value2) {
  return IsKindOf(value2, "Boolean");
}
function IsConstructor(value2) {
  return IsKindOf(value2, "Constructor");
}
function IsDate3(value2) {
  return IsKindOf(value2, "Date");
}
function IsFunction3(value2) {
  return IsKindOf(value2, "Function");
}
function IsInteger2(value2) {
  return IsKindOf(value2, "Integer");
}
function IsIntersect(value2) {
  return IsKindOf(value2, "Intersect");
}
function IsIterator3(value2) {
  return IsKindOf(value2, "Iterator");
}
function IsKindOf(value2, kind) {
  return IsObject2(value2) && Kind in value2 && value2[Kind] === kind;
}
function IsLiteral(value2) {
  return IsKindOf(value2, "Literal");
}
function IsMappedKey(value2) {
  return IsKindOf(value2, "MappedKey");
}
function IsMappedResult(value2) {
  return IsKindOf(value2, "MappedResult");
}
function IsNever(value2) {
  return IsKindOf(value2, "Never");
}
function IsNot(value2) {
  return IsKindOf(value2, "Not");
}
function IsNull3(value2) {
  return IsKindOf(value2, "Null");
}
function IsNumber3(value2) {
  return IsKindOf(value2, "Number");
}
function IsObject3(value2) {
  return IsKindOf(value2, "Object");
}
function IsPromise2(value2) {
  return IsKindOf(value2, "Promise");
}
function IsRecord(value2) {
  return IsKindOf(value2, "Record");
}
function IsRef(value2) {
  return IsKindOf(value2, "Ref");
}
function IsRegExp2(value2) {
  return IsKindOf(value2, "RegExp");
}
function IsString3(value2) {
  return IsKindOf(value2, "String");
}
function IsSymbol3(value2) {
  return IsKindOf(value2, "Symbol");
}
function IsTemplateLiteral(value2) {
  return IsKindOf(value2, "TemplateLiteral");
}
function IsThis(value2) {
  return IsKindOf(value2, "This");
}
function IsTransform(value2) {
  return IsObject2(value2) && TransformKind in value2;
}
function IsTuple(value2) {
  return IsKindOf(value2, "Tuple");
}
function IsUndefined3(value2) {
  return IsKindOf(value2, "Undefined");
}
function IsUnion(value2) {
  return IsKindOf(value2, "Union");
}
function IsUint8Array3(value2) {
  return IsKindOf(value2, "Uint8Array");
}
function IsUnknown(value2) {
  return IsKindOf(value2, "Unknown");
}
function IsUnsafe(value2) {
  return IsKindOf(value2, "Unsafe");
}
function IsVoid(value2) {
  return IsKindOf(value2, "Void");
}
function IsKind(value2) {
  return IsObject2(value2) && Kind in value2 && IsString2(value2[Kind]);
}
function IsSchema(value2) {
  return IsAny(value2) || IsArray3(value2) || IsBoolean3(value2) || IsBigInt3(value2) || IsAsyncIterator3(value2) || IsConstructor(value2) || IsDate3(value2) || IsFunction3(value2) || IsInteger2(value2) || IsIntersect(value2) || IsIterator3(value2) || IsLiteral(value2) || IsMappedKey(value2) || IsMappedResult(value2) || IsNever(value2) || IsNot(value2) || IsNull3(value2) || IsNumber3(value2) || IsObject3(value2) || IsPromise2(value2) || IsRecord(value2) || IsRef(value2) || IsRegExp2(value2) || IsString3(value2) || IsSymbol3(value2) || IsTemplateLiteral(value2) || IsThis(value2) || IsTuple(value2) || IsUndefined3(value2) || IsUnion(value2) || IsUint8Array3(value2) || IsUnknown(value2) || IsUnsafe(value2) || IsVoid(value2) || IsKind(value2);
}

// node_modules/@sinclair/typebox/build/esm/type/optional/optional.mjs
function RemoveOptional(schema) {
  return Discard(CloneType(schema), [OptionalKind]);
}
function AddOptional(schema) {
  return { ...CloneType(schema), [OptionalKind]: "Optional" };
}
function OptionalWithFlag(schema, F) {
  return F === false ? RemoveOptional(schema) : AddOptional(schema);
}
function Optional(schema, enable) {
  const F = enable ?? true;
  return IsMappedResult(schema) ? OptionalFromMappedResult(schema, F) : OptionalWithFlag(schema, F);
}

// node_modules/@sinclair/typebox/build/esm/type/optional/optional-from-mapped-result.mjs
function FromProperties(P, F) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Optional(P[K2], F);
  return Acc;
}
function FromMappedResult(R, F) {
  return FromProperties(R.properties, F);
}
function OptionalFromMappedResult(R, F) {
  const P = FromMappedResult(R, F);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-create.mjs
function IntersectCreate(T, options) {
  const allObjects = T.every((schema) => IsObject3(schema));
  const clonedUnevaluatedProperties = IsSchema(options.unevaluatedProperties) ? { unevaluatedProperties: CloneType(options.unevaluatedProperties) } : {};
  return options.unevaluatedProperties === false || IsSchema(options.unevaluatedProperties) || allObjects ? { ...options, ...clonedUnevaluatedProperties, [Kind]: "Intersect", type: "object", allOf: CloneRest(T) } : { ...options, ...clonedUnevaluatedProperties, [Kind]: "Intersect", allOf: CloneRest(T) };
}

// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect-evaluated.mjs
function IsIntersectOptional(T) {
  return T.every((L) => IsOptional(L));
}
function RemoveOptionalFromType(T) {
  return Discard(T, [OptionalKind]);
}
function RemoveOptionalFromRest(T) {
  return T.map((L) => IsOptional(L) ? RemoveOptionalFromType(L) : L);
}
function ResolveIntersect(T, options) {
  return IsIntersectOptional(T) ? Optional(IntersectCreate(RemoveOptionalFromRest(T), options)) : IntersectCreate(RemoveOptionalFromRest(T), options);
}
function IntersectEvaluated(T, options = {}) {
  if (T.length === 0)
    return Never(options);
  if (T.length === 1)
    return CloneType(T[0], options);
  if (T.some((schema) => IsTransform(schema)))
    throw new Error("Cannot intersect transform types");
  return ResolveIntersect(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/intersect/intersect.mjs
function Intersect(T, options = {}) {
  if (T.length === 0)
    return Never(options);
  if (T.length === 1)
    return CloneType(T[0], options);
  if (T.some((schema) => IsTransform(schema)))
    throw new Error("Cannot intersect transform types");
  return IntersectCreate(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/union/union-create.mjs
function UnionCreate(T, options) {
  return { ...options, [Kind]: "Union", anyOf: CloneRest(T) };
}

// node_modules/@sinclair/typebox/build/esm/type/union/union-evaluated.mjs
function IsUnionOptional(T) {
  return T.some((L) => IsOptional(L));
}
function RemoveOptionalFromRest2(T) {
  return T.map((L) => IsOptional(L) ? RemoveOptionalFromType2(L) : L);
}
function RemoveOptionalFromType2(T) {
  return Discard(T, [OptionalKind]);
}
function ResolveUnion(T, options) {
  return IsUnionOptional(T) ? Optional(UnionCreate(RemoveOptionalFromRest2(T), options)) : UnionCreate(RemoveOptionalFromRest2(T), options);
}
function UnionEvaluated(T, options = {}) {
  return T.length === 0 ? Never(options) : T.length === 1 ? CloneType(T[0], options) : ResolveUnion(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/union/union.mjs
function Union(T, options = {}) {
  return T.length === 0 ? Never(options) : T.length === 1 ? CloneType(T[0], options) : UnionCreate(T, options);
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/parse.mjs
function Unescape(pattern) {
  return pattern.replace(/\\\$/g, "$").replace(/\\\*/g, "*").replace(/\\\^/g, "^").replace(/\\\|/g, "|").replace(/\\\(/g, "(").replace(/\\\)/g, ")");
}
function IsNonEscaped(pattern, index, char) {
  return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;
}
function IsOpenParen(pattern, index) {
  return IsNonEscaped(pattern, index, "(");
}
function IsCloseParen(pattern, index) {
  return IsNonEscaped(pattern, index, ")");
}
function IsSeparator(pattern, index) {
  return IsNonEscaped(pattern, index, "|");
}
function IsGroup(pattern) {
  if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))
    return false;
  let count = 0;
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (count === 0 && index !== pattern.length - 1)
      return false;
  }
  return true;
}
function InGroup(pattern) {
  return pattern.slice(1, pattern.length - 1);
}
function IsPrecedenceOr(pattern) {
  let count = 0;
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (IsSeparator(pattern, index) && count === 0)
      return true;
  }
  return false;
}
function IsPrecedenceAnd(pattern) {
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      return true;
  }
  return false;
}
function Or(pattern) {
  let [count, start] = [0, 0];
  const expressions = [];
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index))
      count += 1;
    if (IsCloseParen(pattern, index))
      count -= 1;
    if (IsSeparator(pattern, index) && count === 0) {
      const range2 = pattern.slice(start, index);
      if (range2.length > 0)
        expressions.push(TemplateLiteralParse(range2));
      start = index + 1;
    }
  }
  const range = pattern.slice(start);
  if (range.length > 0)
    expressions.push(TemplateLiteralParse(range));
  if (expressions.length === 0)
    return { type: "const", const: "" };
  if (expressions.length === 1)
    return expressions[0];
  return { type: "or", expr: expressions };
}
function And(pattern) {
  function Group(value2, index) {
    if (!IsOpenParen(value2, index))
      throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);
    let count = 0;
    for (let scan = index;scan < value2.length; scan++) {
      if (IsOpenParen(value2, scan))
        count += 1;
      if (IsCloseParen(value2, scan))
        count -= 1;
      if (count === 0)
        return [index, scan];
    }
    throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);
  }
  function Range(pattern2, index) {
    for (let scan = index;scan < pattern2.length; scan++) {
      if (IsOpenParen(pattern2, scan))
        return [index, scan];
    }
    return [index, pattern2.length];
  }
  const expressions = [];
  for (let index = 0;index < pattern.length; index++) {
    if (IsOpenParen(pattern, index)) {
      const [start, end] = Group(pattern, index);
      const range = pattern.slice(start, end + 1);
      expressions.push(TemplateLiteralParse(range));
      index = end;
    } else {
      const [start, end] = Range(pattern, index);
      const range = pattern.slice(start, end);
      if (range.length > 0)
        expressions.push(TemplateLiteralParse(range));
      index = end - 1;
    }
  }
  return expressions.length === 0 ? { type: "const", const: "" } : expressions.length === 1 ? expressions[0] : { type: "and", expr: expressions };
}
function TemplateLiteralParse(pattern) {
  return IsGroup(pattern) ? TemplateLiteralParse(InGroup(pattern)) : IsPrecedenceOr(pattern) ? Or(pattern) : IsPrecedenceAnd(pattern) ? And(pattern) : { type: "const", const: Unescape(pattern) };
}
function TemplateLiteralParseExact(pattern) {
  return TemplateLiteralParse(pattern.slice(1, pattern.length - 1));
}

class TemplateLiteralParserError extends TypeBoxError {
}

// node_modules/@sinclair/typebox/build/esm/type/template-literal/finite.mjs
function IsNumberExpression(expression) {
  return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "0" && expression.expr[1].type === "const" && expression.expr[1].const === "[1-9][0-9]*";
}
function IsBooleanExpression(expression) {
  return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "true" && expression.expr[1].type === "const" && expression.expr[1].const === "false";
}
function IsStringExpression(expression) {
  return expression.type === "const" && expression.const === ".*";
}
function IsTemplateLiteralExpressionFinite(expression) {
  return IsNumberExpression(expression) || IsStringExpression(expression) ? false : IsBooleanExpression(expression) ? true : expression.type === "and" ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) : expression.type === "or" ? expression.expr.every((expr) => IsTemplateLiteralExpressionFinite(expr)) : expression.type === "const" ? true : (() => {
    throw new TemplateLiteralFiniteError(`Unknown expression type`);
  })();
}
function IsTemplateLiteralFinite(schema) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  return IsTemplateLiteralExpressionFinite(expression);
}

class TemplateLiteralFiniteError extends TypeBoxError {
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/generate.mjs
function* GenerateReduce(buffer) {
  if (buffer.length === 1)
    return yield* buffer[0];
  for (const left of buffer[0]) {
    for (const right of GenerateReduce(buffer.slice(1))) {
      yield `${left}${right}`;
    }
  }
}
function* GenerateAnd(expression) {
  return yield* GenerateReduce(expression.expr.map((expr) => [...TemplateLiteralExpressionGenerate(expr)]));
}
function* GenerateOr(expression) {
  for (const expr of expression.expr)
    yield* TemplateLiteralExpressionGenerate(expr);
}
function* GenerateConst(expression) {
  return yield expression.const;
}
function* TemplateLiteralExpressionGenerate(expression) {
  return expression.type === "and" ? yield* GenerateAnd(expression) : expression.type === "or" ? yield* GenerateOr(expression) : expression.type === "const" ? yield* GenerateConst(expression) : (() => {
    throw new TemplateLiteralGenerateError("Unknown expression");
  })();
}
function TemplateLiteralGenerate(schema) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  return IsTemplateLiteralExpressionFinite(expression) ? [...TemplateLiteralExpressionGenerate(expression)] : [];
}

class TemplateLiteralGenerateError extends TypeBoxError {
}
// node_modules/@sinclair/typebox/build/esm/type/literal/literal.mjs
function Literal(value2, options = {}) {
  return {
    ...options,
    [Kind]: "Literal",
    const: value2,
    type: typeof value2
  };
}
// node_modules/@sinclair/typebox/build/esm/type/boolean/boolean.mjs
function Boolean2(options = {}) {
  return {
    ...options,
    [Kind]: "Boolean",
    type: "boolean"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/bigint/bigint.mjs
function BigInt2(options = {}) {
  return {
    ...options,
    [Kind]: "BigInt",
    type: "bigint"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/number/number.mjs
function Number2(options = {}) {
  return {
    ...options,
    [Kind]: "Number",
    type: "number"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/string/string.mjs
function String2(options = {}) {
  return { ...options, [Kind]: "String", type: "string" };
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/syntax.mjs
function* FromUnion(syntax) {
  const trim = syntax.trim().replace(/"|'/g, "");
  return trim === "boolean" ? yield Boolean2() : trim === "number" ? yield Number2() : trim === "bigint" ? yield BigInt2() : trim === "string" ? yield String2() : yield (() => {
    const literals = trim.split("|").map((literal3) => Literal(literal3.trim()));
    return literals.length === 0 ? Never() : literals.length === 1 ? literals[0] : UnionEvaluated(literals);
  })();
}
function* FromTerminal(syntax) {
  if (syntax[1] !== "{") {
    const L = Literal("$");
    const R = FromSyntax(syntax.slice(1));
    return yield* [L, ...R];
  }
  for (let i = 2;i < syntax.length; i++) {
    if (syntax[i] === "}") {
      const L = FromUnion(syntax.slice(2, i));
      const R = FromSyntax(syntax.slice(i + 1));
      return yield* [...L, ...R];
    }
  }
  yield Literal(syntax);
}
function* FromSyntax(syntax) {
  for (let i = 0;i < syntax.length; i++) {
    if (syntax[i] === "$") {
      const L = Literal(syntax.slice(0, i));
      const R = FromTerminal(syntax.slice(i));
      return yield* [L, ...R];
    }
  }
  yield Literal(syntax);
}
function TemplateLiteralSyntax(syntax) {
  return [...FromSyntax(syntax)];
}
// node_modules/@sinclair/typebox/build/esm/type/patterns/patterns.mjs
var PatternBoolean = "(true|false)";
var PatternNumber = "(0|[1-9][0-9]*)";
var PatternString = "(.*)";
var PatternBooleanExact = `^${PatternBoolean}\$`;
var PatternNumberExact = `^${PatternNumber}\$`;
var PatternStringExact = `^${PatternString}\$`;
// node_modules/@sinclair/typebox/build/esm/type/template-literal/pattern.mjs
function Escape(value2) {
  return value2.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function Visit2(schema, acc) {
  return IsTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) : IsUnion(schema) ? `(${schema.anyOf.map((schema2) => Visit2(schema2, acc)).join("|")})` : IsNumber3(schema) ? `${acc}${PatternNumber}` : IsInteger2(schema) ? `${acc}${PatternNumber}` : IsBigInt3(schema) ? `${acc}${PatternNumber}` : IsString3(schema) ? `${acc}${PatternString}` : IsLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` : IsBoolean3(schema) ? `${acc}${PatternBoolean}` : (() => {
    throw new TemplateLiteralPatternError(`Unexpected Kind '${schema[Kind]}'`);
  })();
}
function TemplateLiteralPattern(kinds) {
  return `^${kinds.map((schema) => Visit2(schema, "")).join("")}$`;
}

class TemplateLiteralPatternError extends TypeBoxError {
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/union.mjs
function TemplateLiteralToUnion(schema) {
  const R = TemplateLiteralGenerate(schema);
  const L = R.map((S) => Literal(S));
  return UnionEvaluated(L);
}
// node_modules/@sinclair/typebox/build/esm/type/template-literal/template-literal.mjs
function TemplateLiteral(unresolved, options = {}) {
  const pattern2 = IsString2(unresolved) ? TemplateLiteralPattern(TemplateLiteralSyntax(unresolved)) : TemplateLiteralPattern(unresolved);
  return { ...options, [Kind]: "TemplateLiteral", type: "string", pattern: pattern2 };
}
// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-property-keys.mjs
function FromTemplateLiteral(T) {
  const R = TemplateLiteralGenerate(T);
  return R.map((S) => S.toString());
}
function FromUnion2(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(...IndexPropertyKeys(L));
  return Acc;
}
function FromLiteral(T) {
  return [T.toString()];
}
function IndexPropertyKeys(T) {
  return [...new Set(IsTemplateLiteral(T) ? FromTemplateLiteral(T) : IsUnion(T) ? FromUnion2(T.anyOf) : IsLiteral(T) ? FromLiteral(T.const) : IsNumber3(T) ? ["[number]"] : IsInteger2(T) ? ["[number]"] : [])];
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-result.mjs
function FromProperties2(T, P, options) {
  const Acc = {};
  for (const K2 of Object.getOwnPropertyNames(P)) {
    Acc[K2] = Index(T, IndexPropertyKeys(P[K2]), options);
  }
  return Acc;
}
function FromMappedResult2(T, R, options) {
  return FromProperties2(T, R.properties, options);
}
function IndexFromMappedResult(T, R, options) {
  const P = FromMappedResult2(T, R, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed.mjs
function FromRest(T, K) {
  return T.map((L) => IndexFromPropertyKey(L, K));
}
function FromIntersectRest(T) {
  return T.filter((L) => !IsNever(L));
}
function FromIntersect(T, K) {
  return IntersectEvaluated(FromIntersectRest(FromRest(T, K)));
}
function FromUnionRest(T) {
  return T.some((L) => IsNever(L)) ? [] : T;
}
function FromUnion3(T, K) {
  return UnionEvaluated(FromUnionRest(FromRest(T, K)));
}
function FromTuple(T, K) {
  return K in T ? T[K] : K === "[number]" ? UnionEvaluated(T) : Never();
}
function FromArray(T, K) {
  return K === "[number]" ? T : Never();
}
function FromProperty(T, K) {
  return K in T ? T[K] : Never();
}
function IndexFromPropertyKey(T, K) {
  return IsIntersect(T) ? FromIntersect(T.allOf, K) : IsUnion(T) ? FromUnion3(T.anyOf, K) : IsTuple(T) ? FromTuple(T.items ?? [], K) : IsArray3(T) ? FromArray(T.items, K) : IsObject3(T) ? FromProperty(T.properties, K) : Never();
}
function IndexFromPropertyKeys(T, K) {
  return K.map((L) => IndexFromPropertyKey(T, L));
}
function FromSchema(T, K) {
  return UnionEvaluated(IndexFromPropertyKeys(T, K));
}
function Index(T, K, options = {}) {
  return IsMappedResult(K) ? CloneType(IndexFromMappedResult(T, K, options)) : IsMappedKey(K) ? CloneType(IndexFromMappedKey(T, K, options)) : IsSchema(K) ? CloneType(FromSchema(T, IndexPropertyKeys(K)), options) : CloneType(FromSchema(T, K), options);
}

// node_modules/@sinclair/typebox/build/esm/type/indexed/indexed-from-mapped-key.mjs
function MappedIndexPropertyKey(T, K, options) {
  return { [K]: Index(T, [K], options) };
}
function MappedIndexPropertyKeys(T, K, options) {
  return K.reduce((Acc, L) => {
    return { ...Acc, ...MappedIndexPropertyKey(T, L, options) };
  }, {});
}
function MappedIndexProperties(T, K, options) {
  return MappedIndexPropertyKeys(T, K.keys, options);
}
function IndexFromMappedKey(T, K, options) {
  const P = MappedIndexProperties(T, K, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/iterator/iterator.mjs
function Iterator(items, options = {}) {
  return {
    ...options,
    [Kind]: "Iterator",
    type: "Iterator",
    items: CloneType(items)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/object/object.mjs
function _Object(properties, options = {}) {
  const propertyKeys = globalThis.Object.getOwnPropertyNames(properties);
  const optionalKeys = propertyKeys.filter((key) => IsOptional(properties[key]));
  const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));
  const clonedAdditionalProperties = IsSchema(options.additionalProperties) ? { additionalProperties: CloneType(options.additionalProperties) } : {};
  const clonedProperties = {};
  for (const key of propertyKeys)
    clonedProperties[key] = CloneType(properties[key]);
  return requiredKeys.length > 0 ? { ...options, ...clonedAdditionalProperties, [Kind]: "Object", type: "object", properties: clonedProperties, required: requiredKeys } : { ...options, ...clonedAdditionalProperties, [Kind]: "Object", type: "object", properties: clonedProperties };
}
var Object2 = _Object;
// node_modules/@sinclair/typebox/build/esm/type/promise/promise.mjs
function Promise2(item, options = {}) {
  return {
    ...options,
    [Kind]: "Promise",
    type: "Promise",
    item: CloneType(item)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/readonly/readonly.mjs
function RemoveReadonly(schema) {
  return Discard(CloneType(schema), [ReadonlyKind]);
}
function AddReadonly(schema) {
  return { ...CloneType(schema), [ReadonlyKind]: "Readonly" };
}
function ReadonlyWithFlag(schema, F) {
  return F === false ? RemoveReadonly(schema) : AddReadonly(schema);
}
function Readonly(schema, enable) {
  const F = enable ?? true;
  return IsMappedResult(schema) ? ReadonlyFromMappedResult(schema, F) : ReadonlyWithFlag(schema, F);
}

// node_modules/@sinclair/typebox/build/esm/type/readonly/readonly-from-mapped-result.mjs
function FromProperties3(K, F) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(K))
    Acc[K2] = Readonly(K[K2], F);
  return Acc;
}
function FromMappedResult3(R, F) {
  return FromProperties3(R.properties, F);
}
function ReadonlyFromMappedResult(R, F) {
  const P = FromMappedResult3(R, F);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/tuple/tuple.mjs
function Tuple(items, options = {}) {
  const [additionalItems, minItems, maxItems] = [false, items.length, items.length];
  return items.length > 0 ? { ...options, [Kind]: "Tuple", type: "array", items: CloneRest(items), additionalItems, minItems, maxItems } : { ...options, [Kind]: "Tuple", type: "array", minItems, maxItems };
}
// node_modules/@sinclair/typebox/build/esm/type/sets/set.mjs
function SetIncludes(T, S) {
  return T.includes(S);
}
function SetDistinct(T) {
  return [...new Set(T)];
}
function SetIntersect(T, S) {
  return T.filter((L) => S.includes(L));
}
function SetIntersectManyResolve(T, Init) {
  return T.reduce((Acc, L) => {
    return SetIntersect(Acc, L);
  }, Init);
}
function SetIntersectMany(T) {
  return T.length === 1 ? T[0] : T.length > 1 ? SetIntersectManyResolve(T.slice(1), T[0]) : [];
}
function SetUnionMany(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(...L);
  return Acc;
}
// node_modules/@sinclair/typebox/build/esm/type/mapped/mapped.mjs
function FromMappedResult4(K, P) {
  return K in P ? FromSchemaType(K, P[K]) : MappedResult(P);
}
function MappedKeyToKnownMappedResultProperties(K) {
  return { [K]: Literal(K) };
}
function MappedKeyToUnknownMappedResultProperties(P) {
  const Acc = {};
  for (const L of P)
    Acc[L] = Literal(L);
  return Acc;
}
function MappedKeyToMappedResultProperties(K, P) {
  return SetIncludes(P, K) ? MappedKeyToKnownMappedResultProperties(K) : MappedKeyToUnknownMappedResultProperties(P);
}
function FromMappedKey(K, P) {
  const R = MappedKeyToMappedResultProperties(K, P);
  return FromMappedResult4(K, R);
}
function FromRest2(K, T) {
  return T.map((L) => FromSchemaType(K, L));
}
function FromProperties4(K, T) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(T))
    Acc[K2] = FromSchemaType(K, T[K2]);
  return Acc;
}
function FromSchemaType(K, T) {
  return IsOptional(T) ? Optional(FromSchemaType(K, Discard(T, [OptionalKind]))) : IsReadonly(T) ? Readonly(FromSchemaType(K, Discard(T, [ReadonlyKind]))) : IsMappedResult(T) ? FromMappedResult4(K, T.properties) : IsMappedKey(T) ? FromMappedKey(K, T.keys) : IsConstructor(T) ? Constructor(FromRest2(K, T.parameters), FromSchemaType(K, T.returns)) : IsFunction3(T) ? Function2(FromRest2(K, T.parameters), FromSchemaType(K, T.returns)) : IsAsyncIterator3(T) ? AsyncIterator(FromSchemaType(K, T.items)) : IsIterator3(T) ? Iterator(FromSchemaType(K, T.items)) : IsIntersect(T) ? Intersect(FromRest2(K, T.allOf)) : IsUnion(T) ? Union(FromRest2(K, T.anyOf)) : IsTuple(T) ? Tuple(FromRest2(K, T.items ?? [])) : IsObject3(T) ? Object2(FromProperties4(K, T.properties)) : IsArray3(T) ? Array2(FromSchemaType(K, T.items)) : IsPromise2(T) ? Promise2(FromSchemaType(K, T.item)) : T;
}
function MappedFunctionReturnType(K, T) {
  const Acc = {};
  for (const L of K)
    Acc[L] = FromSchemaType(L, T);
  return Acc;
}
function Mapped(key, map3, options = {}) {
  const K = IsSchema(key) ? IndexPropertyKeys(key) : key;
  const RT = map3({ [Kind]: "MappedKey", keys: K });
  const R = MappedFunctionReturnType(K, RT);
  return CloneType(Object2(R), options);
}
// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-keys.mjs
function FromRest3(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(KeyOfPropertyKeys(L));
  return Acc;
}
function FromIntersect2(T) {
  const C = FromRest3(T);
  const R = SetUnionMany(C);
  return R;
}
function FromUnion4(T) {
  const C = FromRest3(T);
  const R = SetIntersectMany(C);
  return R;
}
function FromTuple2(T) {
  return T.map((_, I) => I.toString());
}
function FromArray2(_) {
  return ["[number]"];
}
function FromProperties5(T) {
  return globalThis.Object.getOwnPropertyNames(T);
}
function FromPatternProperties(patternProperties) {
  if (!includePatternProperties)
    return [];
  const patternPropertyKeys = globalThis.Object.getOwnPropertyNames(patternProperties);
  return patternPropertyKeys.map((key) => {
    return key[0] === "^" && key[key.length - 1] === "$" ? key.slice(1, key.length - 1) : key;
  });
}
function KeyOfPropertyKeys(T) {
  return IsIntersect(T) ? FromIntersect2(T.allOf) : IsUnion(T) ? FromUnion4(T.anyOf) : IsTuple(T) ? FromTuple2(T.items ?? []) : IsArray3(T) ? FromArray2(T.items) : IsObject3(T) ? FromProperties5(T.properties) : IsRecord(T) ? FromPatternProperties(T.patternProperties) : [];
}
function KeyOfPattern(schema) {
  includePatternProperties = true;
  const keys = KeyOfPropertyKeys(schema);
  includePatternProperties = false;
  const pattern3 = keys.map((key) => `(${key})`);
  return `^(${pattern3.join("|")})\$`;
}
var includePatternProperties = false;

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof.mjs
function KeyOfPropertyKeysToRest(T) {
  return T.map((L) => L === "[number]" ? Number2() : Literal(L));
}
function KeyOf(T, options = {}) {
  if (IsMappedResult(T)) {
    return KeyOfFromMappedResult(T, options);
  } else {
    const K = KeyOfPropertyKeys(T);
    const S = KeyOfPropertyKeysToRest(K);
    const U = UnionEvaluated(S);
    return CloneType(U, options);
  }
}

// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-from-mapped-result.mjs
function FromProperties6(K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(K))
    Acc[K2] = KeyOf(K[K2], options);
  return Acc;
}
function FromMappedResult5(R, options) {
  return FromProperties6(R.properties, options);
}
function KeyOfFromMappedResult(R, options) {
  const P = FromMappedResult5(R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/keyof/keyof-property-entries.mjs
function KeyOfPropertyEntries(schema) {
  const keys = KeyOfPropertyKeys(schema);
  const schemas = IndexFromPropertyKeys(schema, keys);
  return keys.map((_, index) => [keys[index], schemas[index]]);
}
// node_modules/@sinclair/typebox/build/esm/type/extends/extends-undefined.mjs
function Intersect2(schema) {
  return schema.allOf.every((schema2) => ExtendsUndefinedCheck(schema2));
}
function Union2(schema) {
  return schema.anyOf.some((schema2) => ExtendsUndefinedCheck(schema2));
}
function Not(schema) {
  return !ExtendsUndefinedCheck(schema.not);
}
function ExtendsUndefinedCheck(schema) {
  return schema[Kind] === "Intersect" ? Intersect2(schema) : schema[Kind] === "Union" ? Union2(schema) : schema[Kind] === "Not" ? Not(schema) : schema[Kind] === "Undefined" ? true : false;
}

// node_modules/@sinclair/typebox/build/esm/errors/function.mjs
function DefaultErrorFunction(error7) {
  switch (error7.errorType) {
    case ValueErrorType.ArrayContains:
      return "Expected array to contain at least one matching value";
    case ValueErrorType.ArrayMaxContains:
      return `Expected array to contain no more than ${error7.schema.maxContains} matching values`;
    case ValueErrorType.ArrayMinContains:
      return `Expected array to contain at least ${error7.schema.minContains} matching values`;
    case ValueErrorType.ArrayMaxItems:
      return `Expected array length to be less or equal to ${error7.schema.maxItems}`;
    case ValueErrorType.ArrayMinItems:
      return `Expected array length to be greater or equal to ${error7.schema.minItems}`;
    case ValueErrorType.ArrayUniqueItems:
      return "Expected array elements to be unique";
    case ValueErrorType.Array:
      return "Expected array";
    case ValueErrorType.AsyncIterator:
      return "Expected AsyncIterator";
    case ValueErrorType.BigIntExclusiveMaximum:
      return `Expected bigint to be less than ${error7.schema.exclusiveMaximum}`;
    case ValueErrorType.BigIntExclusiveMinimum:
      return `Expected bigint to be greater than ${error7.schema.exclusiveMinimum}`;
    case ValueErrorType.BigIntMaximum:
      return `Expected bigint to be less or equal to ${error7.schema.maximum}`;
    case ValueErrorType.BigIntMinimum:
      return `Expected bigint to be greater or equal to ${error7.schema.minimum}`;
    case ValueErrorType.BigIntMultipleOf:
      return `Expected bigint to be a multiple of ${error7.schema.multipleOf}`;
    case ValueErrorType.BigInt:
      return "Expected bigint";
    case ValueErrorType.Boolean:
      return "Expected boolean";
    case ValueErrorType.DateExclusiveMinimumTimestamp:
      return `Expected Date timestamp to be greater than ${error7.schema.exclusiveMinimumTimestamp}`;
    case ValueErrorType.DateExclusiveMaximumTimestamp:
      return `Expected Date timestamp to be less than ${error7.schema.exclusiveMaximumTimestamp}`;
    case ValueErrorType.DateMinimumTimestamp:
      return `Expected Date timestamp to be greater or equal to ${error7.schema.minimumTimestamp}`;
    case ValueErrorType.DateMaximumTimestamp:
      return `Expected Date timestamp to be less or equal to ${error7.schema.maximumTimestamp}`;
    case ValueErrorType.DateMultipleOfTimestamp:
      return `Expected Date timestamp to be a multiple of ${error7.schema.multipleOfTimestamp}`;
    case ValueErrorType.Date:
      return "Expected Date";
    case ValueErrorType.Function:
      return "Expected function";
    case ValueErrorType.IntegerExclusiveMaximum:
      return `Expected integer to be less than ${error7.schema.exclusiveMaximum}`;
    case ValueErrorType.IntegerExclusiveMinimum:
      return `Expected integer to be greater than ${error7.schema.exclusiveMinimum}`;
    case ValueErrorType.IntegerMaximum:
      return `Expected integer to be less or equal to ${error7.schema.maximum}`;
    case ValueErrorType.IntegerMinimum:
      return `Expected integer to be greater or equal to ${error7.schema.minimum}`;
    case ValueErrorType.IntegerMultipleOf:
      return `Expected integer to be a multiple of ${error7.schema.multipleOf}`;
    case ValueErrorType.Integer:
      return "Expected integer";
    case ValueErrorType.IntersectUnevaluatedProperties:
      return "Unexpected property";
    case ValueErrorType.Intersect:
      return "Expected all values to match";
    case ValueErrorType.Iterator:
      return "Expected Iterator";
    case ValueErrorType.Literal:
      return `Expected ${typeof error7.schema.const === "string" ? `'${error7.schema.const}'` : error7.schema.const}`;
    case ValueErrorType.Never:
      return "Never";
    case ValueErrorType.Not:
      return "Value should not match";
    case ValueErrorType.Null:
      return "Expected null";
    case ValueErrorType.NumberExclusiveMaximum:
      return `Expected number to be less than ${error7.schema.exclusiveMaximum}`;
    case ValueErrorType.NumberExclusiveMinimum:
      return `Expected number to be greater than ${error7.schema.exclusiveMinimum}`;
    case ValueErrorType.NumberMaximum:
      return `Expected number to be less or equal to ${error7.schema.maximum}`;
    case ValueErrorType.NumberMinimum:
      return `Expected number to be greater or equal to ${error7.schema.minimum}`;
    case ValueErrorType.NumberMultipleOf:
      return `Expected number to be a multiple of ${error7.schema.multipleOf}`;
    case ValueErrorType.Number:
      return "Expected number";
    case ValueErrorType.Object:
      return "Expected object";
    case ValueErrorType.ObjectAdditionalProperties:
      return "Unexpected property";
    case ValueErrorType.ObjectMaxProperties:
      return `Expected object to have no more than ${error7.schema.maxProperties} properties`;
    case ValueErrorType.ObjectMinProperties:
      return `Expected object to have at least ${error7.schema.minProperties} properties`;
    case ValueErrorType.ObjectRequiredProperty:
      return "Required property";
    case ValueErrorType.Promise:
      return "Expected Promise";
    case ValueErrorType.RegExp:
      return "Expected string to match regular expression";
    case ValueErrorType.StringFormatUnknown:
      return `Unknown format '${error7.schema.format}'`;
    case ValueErrorType.StringFormat:
      return `Expected string to match '${error7.schema.format}' format`;
    case ValueErrorType.StringMaxLength:
      return `Expected string length less or equal to ${error7.schema.maxLength}`;
    case ValueErrorType.StringMinLength:
      return `Expected string length greater or equal to ${error7.schema.minLength}`;
    case ValueErrorType.StringPattern:
      return `Expected string to match '${error7.schema.pattern}'`;
    case ValueErrorType.String:
      return "Expected string";
    case ValueErrorType.Symbol:
      return "Expected symbol";
    case ValueErrorType.TupleLength:
      return `Expected tuple to have ${error7.schema.maxItems || 0} elements`;
    case ValueErrorType.Tuple:
      return "Expected tuple";
    case ValueErrorType.Uint8ArrayMaxByteLength:
      return `Expected byte length less or equal to ${error7.schema.maxByteLength}`;
    case ValueErrorType.Uint8ArrayMinByteLength:
      return `Expected byte length greater or equal to ${error7.schema.minByteLength}`;
    case ValueErrorType.Uint8Array:
      return "Expected Uint8Array";
    case ValueErrorType.Undefined:
      return "Expected undefined";
    case ValueErrorType.Union:
      return "Expected union value";
    case ValueErrorType.Void:
      return "Expected void";
    case ValueErrorType.Kind:
      return `Expected kind '${error7.schema[Kind]}'`;
    default:
      return "Unknown error type";
  }
}
function GetErrorFunction() {
  return errorFunction;
}
var errorFunction = DefaultErrorFunction;

// node_modules/@sinclair/typebox/build/esm/value/deref/deref.mjs
function Resolve(schema, references) {
  const target = references.find((target2) => target2.$id === schema.$ref);
  if (target === undefined)
    throw new TypeDereferenceError(schema);
  return Deref(target, references);
}
function Deref(schema, references) {
  return schema[Kind] === "This" || schema[Kind] === "Ref" ? Resolve(schema, references) : schema;
}

class TypeDereferenceError extends TypeBoxError {
  constructor(schema) {
    super(`Unable to dereference schema with \$id '${schema.$id}'`);
    this.schema = schema;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/hash/hash.mjs
function* NumberToBytes(value3) {
  const byteCount = value3 === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value3) + 1) / 8);
  for (let i = 0;i < byteCount; i++) {
    yield value3 >> 8 * (byteCount - 1 - i) & 255;
  }
}
function ArrayType2(value3) {
  FNV1A64(ByteMarker.Array);
  for (const item of value3) {
    Visit3(item);
  }
}
function BooleanType(value3) {
  FNV1A64(ByteMarker.Boolean);
  FNV1A64(value3 ? 1 : 0);
}
function BigIntType(value3) {
  FNV1A64(ByteMarker.BigInt);
  F64In.setBigInt64(0, value3);
  for (const byte of F64Out) {
    FNV1A64(byte);
  }
}
function DateType2(value3) {
  FNV1A64(ByteMarker.Date);
  Visit3(value3.getTime());
}
function NullType(value3) {
  FNV1A64(ByteMarker.Null);
}
function NumberType(value3) {
  FNV1A64(ByteMarker.Number);
  F64In.setFloat64(0, value3);
  for (const byte of F64Out) {
    FNV1A64(byte);
  }
}
function ObjectType2(value3) {
  FNV1A64(ByteMarker.Object);
  for (const key of globalThis.Object.getOwnPropertyNames(value3).sort()) {
    Visit3(key);
    Visit3(value3[key]);
  }
}
function StringType(value3) {
  FNV1A64(ByteMarker.String);
  for (let i = 0;i < value3.length; i++) {
    for (const byte of NumberToBytes(value3.charCodeAt(i))) {
      FNV1A64(byte);
    }
  }
}
function SymbolType(value3) {
  FNV1A64(ByteMarker.Symbol);
  Visit3(value3.description);
}
function Uint8ArrayType2(value3) {
  FNV1A64(ByteMarker.Uint8Array);
  for (let i = 0;i < value3.length; i++) {
    FNV1A64(value3[i]);
  }
}
function UndefinedType(value3) {
  return FNV1A64(ByteMarker.Undefined);
}
function Visit3(value3) {
  if (IsArray(value3))
    return ArrayType2(value3);
  if (IsBoolean(value3))
    return BooleanType(value3);
  if (IsBigInt(value3))
    return BigIntType(value3);
  if (IsDate(value3))
    return DateType2(value3);
  if (IsNull(value3))
    return NullType(value3);
  if (IsNumber(value3))
    return NumberType(value3);
  if (IsStandardObject(value3))
    return ObjectType2(value3);
  if (IsString(value3))
    return StringType(value3);
  if (IsSymbol(value3))
    return SymbolType(value3);
  if (IsUint8Array(value3))
    return Uint8ArrayType2(value3);
  if (IsUndefined(value3))
    return UndefinedType(value3);
  throw new ValueHashError(value3);
}
function FNV1A64(byte) {
  Accumulator = Accumulator ^ Bytes[byte];
  Accumulator = Accumulator * Prime % Size;
}
function Hash(value3) {
  Accumulator = BigInt("14695981039346656037");
  Visit3(value3);
  return Accumulator;
}

class ValueHashError extends TypeBoxError {
  constructor(value3) {
    super(`Unable to hash value`);
    this.value = value3;
  }
}
var ByteMarker;
(function(ByteMarker2) {
  ByteMarker2[ByteMarker2["Undefined"] = 0] = "Undefined";
  ByteMarker2[ByteMarker2["Null"] = 1] = "Null";
  ByteMarker2[ByteMarker2["Boolean"] = 2] = "Boolean";
  ByteMarker2[ByteMarker2["Number"] = 3] = "Number";
  ByteMarker2[ByteMarker2["String"] = 4] = "String";
  ByteMarker2[ByteMarker2["Object"] = 5] = "Object";
  ByteMarker2[ByteMarker2["Array"] = 6] = "Array";
  ByteMarker2[ByteMarker2["Date"] = 7] = "Date";
  ByteMarker2[ByteMarker2["Uint8Array"] = 8] = "Uint8Array";
  ByteMarker2[ByteMarker2["Symbol"] = 9] = "Symbol";
  ByteMarker2[ByteMarker2["BigInt"] = 10] = "BigInt";
})(ByteMarker || (ByteMarker = {}));
var Accumulator = BigInt("14695981039346656037");
var [Prime, Size] = [BigInt("1099511628211"), BigInt("2") ** BigInt("64")];
var Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));
var F64 = new Float64Array(1);
var F64In = new DataView(F64.buffer);
var F64Out = new Uint8Array(F64.buffer);
// node_modules/@sinclair/typebox/build/esm/errors/errors.mjs
function EscapeKey(key) {
  return key.replace(/~/g, "~0").replace(/\//g, "~1");
}
function IsDefined(value3) {
  return value3 !== undefined;
}
function Create(errorType, schema, path, value3) {
  return { type: errorType, schema, path, value: value3, message: GetErrorFunction()({ errorType, path, schema, value: value3 }) };
}
function* FromAny(schema, references, path, value3) {
}
function* FromArray3(schema, references, path, value3) {
  if (!IsArray(value3)) {
    return yield Create(ValueErrorType.Array, schema, path, value3);
  }
  if (IsDefined(schema.minItems) && !(value3.length >= schema.minItems)) {
    yield Create(ValueErrorType.ArrayMinItems, schema, path, value3);
  }
  if (IsDefined(schema.maxItems) && !(value3.length <= schema.maxItems)) {
    yield Create(ValueErrorType.ArrayMaxItems, schema, path, value3);
  }
  for (let i = 0;i < value3.length; i++) {
    yield* Visit4(schema.items, references, `${path}/${i}`, value3[i]);
  }
  if (schema.uniqueItems === true && !function() {
    const set2 = new Set;
    for (const element of value3) {
      const hashed = Hash(element);
      if (set2.has(hashed)) {
        return false;
      } else {
        set2.add(hashed);
      }
    }
    return true;
  }()) {
    yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value3);
  }
  if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {
    return;
  }
  const containsSchema = IsDefined(schema.contains) ? schema.contains : Never();
  const containsCount = value3.reduce((acc, value4, index) => Visit4(containsSchema, references, `${path}${index}`, value4).next().done === true ? acc + 1 : acc, 0);
  if (containsCount === 0) {
    yield Create(ValueErrorType.ArrayContains, schema, path, value3);
  }
  if (IsNumber(schema.minContains) && containsCount < schema.minContains) {
    yield Create(ValueErrorType.ArrayMinContains, schema, path, value3);
  }
  if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {
    yield Create(ValueErrorType.ArrayMaxContains, schema, path, value3);
  }
}
function* FromAsyncIterator(schema, references, path, value3) {
  if (!IsAsyncIterator(value3))
    yield Create(ValueErrorType.AsyncIterator, schema, path, value3);
}
function* FromBigInt(schema, references, path, value3) {
  if (!IsBigInt(value3))
    return yield Create(ValueErrorType.BigInt, schema, path, value3);
  if (IsDefined(schema.exclusiveMaximum) && !(value3 < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value3);
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value3 > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value3);
  }
  if (IsDefined(schema.maximum) && !(value3 <= schema.maximum)) {
    yield Create(ValueErrorType.BigIntMaximum, schema, path, value3);
  }
  if (IsDefined(schema.minimum) && !(value3 >= schema.minimum)) {
    yield Create(ValueErrorType.BigIntMinimum, schema, path, value3);
  }
  if (IsDefined(schema.multipleOf) && !(value3 % schema.multipleOf === BigInt(0))) {
    yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value3);
  }
}
function* FromBoolean(schema, references, path, value3) {
  if (!IsBoolean(value3))
    yield Create(ValueErrorType.Boolean, schema, path, value3);
}
function* FromConstructor(schema, references, path, value3) {
  yield* Visit4(schema.returns, references, path, value3.prototype);
}
function* FromDate(schema, references, path, value3) {
  if (!IsDate(value3))
    return yield Create(ValueErrorType.Date, schema, path, value3);
  if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value3.getTime() < schema.exclusiveMaximumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value3);
  }
  if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value3.getTime() > schema.exclusiveMinimumTimestamp)) {
    yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value3);
  }
  if (IsDefined(schema.maximumTimestamp) && !(value3.getTime() <= schema.maximumTimestamp)) {
    yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value3);
  }
  if (IsDefined(schema.minimumTimestamp) && !(value3.getTime() >= schema.minimumTimestamp)) {
    yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value3);
  }
  if (IsDefined(schema.multipleOfTimestamp) && !(value3.getTime() % schema.multipleOfTimestamp === 0)) {
    yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value3);
  }
}
function* FromFunction(schema, references, path, value3) {
  if (!IsFunction(value3))
    yield Create(ValueErrorType.Function, schema, path, value3);
}
function* FromInteger(schema, references, path, value3) {
  if (!IsInteger(value3))
    return yield Create(ValueErrorType.Integer, schema, path, value3);
  if (IsDefined(schema.exclusiveMaximum) && !(value3 < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value3);
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value3 > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value3);
  }
  if (IsDefined(schema.maximum) && !(value3 <= schema.maximum)) {
    yield Create(ValueErrorType.IntegerMaximum, schema, path, value3);
  }
  if (IsDefined(schema.minimum) && !(value3 >= schema.minimum)) {
    yield Create(ValueErrorType.IntegerMinimum, schema, path, value3);
  }
  if (IsDefined(schema.multipleOf) && !(value3 % schema.multipleOf === 0)) {
    yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value3);
  }
}
function* FromIntersect3(schema, references, path, value3) {
  for (const inner of schema.allOf) {
    const next = Visit4(inner, references, path, value3).next();
    if (!next.done) {
      yield Create(ValueErrorType.Intersect, schema, path, value3);
      yield next.value;
    }
  }
  if (schema.unevaluatedProperties === false) {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    for (const valueKey of Object.getOwnPropertyNames(value3)) {
      if (!keyCheck.test(valueKey)) {
        yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value3);
      }
    }
  }
  if (typeof schema.unevaluatedProperties === "object") {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    for (const valueKey of Object.getOwnPropertyNames(value3)) {
      if (!keyCheck.test(valueKey)) {
        const next = Visit4(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value3[valueKey]).next();
        if (!next.done)
          yield next.value;
      }
    }
  }
}
function* FromIterator(schema, references, path, value3) {
  if (!IsIterator(value3))
    yield Create(ValueErrorType.Iterator, schema, path, value3);
}
function* FromLiteral2(schema, references, path, value3) {
  if (!(value3 === schema.const))
    yield Create(ValueErrorType.Literal, schema, path, value3);
}
function* FromNever(schema, references, path, value3) {
  yield Create(ValueErrorType.Never, schema, path, value3);
}
function* FromNot(schema, references, path, value3) {
  if (Visit4(schema.not, references, path, value3).next().done === true)
    yield Create(ValueErrorType.Not, schema, path, value3);
}
function* FromNull(schema, references, path, value3) {
  if (!IsNull(value3))
    yield Create(ValueErrorType.Null, schema, path, value3);
}
function* FromNumber(schema, references, path, value3) {
  if (!TypeSystemPolicy.IsNumberLike(value3))
    return yield Create(ValueErrorType.Number, schema, path, value3);
  if (IsDefined(schema.exclusiveMaximum) && !(value3 < schema.exclusiveMaximum)) {
    yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value3);
  }
  if (IsDefined(schema.exclusiveMinimum) && !(value3 > schema.exclusiveMinimum)) {
    yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value3);
  }
  if (IsDefined(schema.maximum) && !(value3 <= schema.maximum)) {
    yield Create(ValueErrorType.NumberMaximum, schema, path, value3);
  }
  if (IsDefined(schema.minimum) && !(value3 >= schema.minimum)) {
    yield Create(ValueErrorType.NumberMinimum, schema, path, value3);
  }
  if (IsDefined(schema.multipleOf) && !(value3 % schema.multipleOf === 0)) {
    yield Create(ValueErrorType.NumberMultipleOf, schema, path, value3);
  }
}
function* FromObject(schema, references, path, value3) {
  if (!TypeSystemPolicy.IsObjectLike(value3))
    return yield Create(ValueErrorType.Object, schema, path, value3);
  if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value3).length >= schema.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, schema, path, value3);
  }
  if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value3).length <= schema.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value3);
  }
  const requiredKeys = Array.isArray(schema.required) ? schema.required : [];
  const knownKeys = Object.getOwnPropertyNames(schema.properties);
  const unknownKeys = Object.getOwnPropertyNames(value3);
  for (const requiredKey of requiredKeys) {
    if (unknownKeys.includes(requiredKey))
      continue;
    yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);
  }
  if (schema.additionalProperties === false) {
    for (const valueKey of unknownKeys) {
      if (!knownKeys.includes(valueKey)) {
        yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value3[valueKey]);
      }
    }
  }
  if (typeof schema.additionalProperties === "object") {
    for (const valueKey of unknownKeys) {
      if (knownKeys.includes(valueKey))
        continue;
      yield* Visit4(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value3[valueKey]);
    }
  }
  for (const knownKey of knownKeys) {
    const property = schema.properties[knownKey];
    if (schema.required && schema.required.includes(knownKey)) {
      yield* Visit4(property, references, `${path}/${EscapeKey(knownKey)}`, value3[knownKey]);
      if (ExtendsUndefinedCheck(schema) && !(knownKey in value3)) {
        yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(value3, knownKey)) {
        yield* Visit4(property, references, `${path}/${EscapeKey(knownKey)}`, value3[knownKey]);
      }
    }
  }
}
function* FromPromise(schema, references, path, value3) {
  if (!IsPromise(value3))
    yield Create(ValueErrorType.Promise, schema, path, value3);
}
function* FromRecord(schema, references, path, value3) {
  if (!TypeSystemPolicy.IsRecordLike(value3))
    return yield Create(ValueErrorType.Object, schema, path, value3);
  if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value3).length >= schema.minProperties)) {
    yield Create(ValueErrorType.ObjectMinProperties, schema, path, value3);
  }
  if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value3).length <= schema.maxProperties)) {
    yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value3);
  }
  const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
  const regex = new RegExp(patternKey);
  for (const [propertyKey, propertyValue] of Object.entries(value3)) {
    if (regex.test(propertyKey))
      yield* Visit4(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
  }
  if (typeof schema.additionalProperties === "object") {
    for (const [propertyKey, propertyValue] of Object.entries(value3)) {
      if (!regex.test(propertyKey))
        yield* Visit4(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
  }
  if (schema.additionalProperties === false) {
    for (const [propertyKey, propertyValue] of Object.entries(value3)) {
      if (regex.test(propertyKey))
        continue;
      return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
  }
}
function* FromRef(schema, references, path, value3) {
  yield* Visit4(Deref(schema, references), references, path, value3);
}
function* FromRegExp(schema, references, path, value3) {
  if (!IsString(value3))
    return yield Create(ValueErrorType.String, schema, path, value3);
  if (IsDefined(schema.minLength) && !(value3.length >= schema.minLength)) {
    yield Create(ValueErrorType.StringMinLength, schema, path, value3);
  }
  if (IsDefined(schema.maxLength) && !(value3.length <= schema.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, schema, path, value3);
  }
  const regex = new RegExp(schema.source, schema.flags);
  if (!regex.test(value3)) {
    return yield Create(ValueErrorType.RegExp, schema, path, value3);
  }
}
function* FromString(schema, references, path, value3) {
  if (!IsString(value3))
    return yield Create(ValueErrorType.String, schema, path, value3);
  if (IsDefined(schema.minLength) && !(value3.length >= schema.minLength)) {
    yield Create(ValueErrorType.StringMinLength, schema, path, value3);
  }
  if (IsDefined(schema.maxLength) && !(value3.length <= schema.maxLength)) {
    yield Create(ValueErrorType.StringMaxLength, schema, path, value3);
  }
  if (IsString(schema.pattern)) {
    const regex = new RegExp(schema.pattern);
    if (!regex.test(value3)) {
      yield Create(ValueErrorType.StringPattern, schema, path, value3);
    }
  }
  if (IsString(schema.format)) {
    if (!exports_format.Has(schema.format)) {
      yield Create(ValueErrorType.StringFormatUnknown, schema, path, value3);
    } else {
      const format = exports_format.Get(schema.format);
      if (!format(value3)) {
        yield Create(ValueErrorType.StringFormat, schema, path, value3);
      }
    }
  }
}
function* FromSymbol(schema, references, path, value3) {
  if (!IsSymbol(value3))
    yield Create(ValueErrorType.Symbol, schema, path, value3);
}
function* FromTemplateLiteral2(schema, references, path, value3) {
  if (!IsString(value3))
    return yield Create(ValueErrorType.String, schema, path, value3);
  const regex = new RegExp(schema.pattern);
  if (!regex.test(value3)) {
    yield Create(ValueErrorType.StringPattern, schema, path, value3);
  }
}
function* FromThis(schema, references, path, value3) {
  yield* Visit4(Deref(schema, references), references, path, value3);
}
function* FromTuple3(schema, references, path, value3) {
  if (!IsArray(value3))
    return yield Create(ValueErrorType.Tuple, schema, path, value3);
  if (schema.items === undefined && !(value3.length === 0)) {
    return yield Create(ValueErrorType.TupleLength, schema, path, value3);
  }
  if (!(value3.length === schema.maxItems)) {
    return yield Create(ValueErrorType.TupleLength, schema, path, value3);
  }
  if (!schema.items) {
    return;
  }
  for (let i = 0;i < schema.items.length; i++) {
    yield* Visit4(schema.items[i], references, `${path}/${i}`, value3[i]);
  }
}
function* FromUndefined(schema, references, path, value3) {
  if (!IsUndefined(value3))
    yield Create(ValueErrorType.Undefined, schema, path, value3);
}
function* FromUnion5(schema, references, path, value3) {
  let count = 0;
  for (const subschema of schema.anyOf) {
    const errors2 = [...Visit4(subschema, references, path, value3)];
    if (errors2.length === 0)
      return;
    count += errors2.length;
  }
  if (count > 0) {
    yield Create(ValueErrorType.Union, schema, path, value3);
  }
}
function* FromUint8Array(schema, references, path, value3) {
  if (!IsUint8Array(value3))
    return yield Create(ValueErrorType.Uint8Array, schema, path, value3);
  if (IsDefined(schema.maxByteLength) && !(value3.length <= schema.maxByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value3);
  }
  if (IsDefined(schema.minByteLength) && !(value3.length >= schema.minByteLength)) {
    yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value3);
  }
}
function* FromUnknown(schema, references, path, value3) {
}
function* FromVoid(schema, references, path, value3) {
  if (!TypeSystemPolicy.IsVoidLike(value3))
    yield Create(ValueErrorType.Void, schema, path, value3);
}
function* FromKind(schema, references, path, value3) {
  const check = exports_type.Get(schema[Kind]);
  if (!check(schema, value3))
    yield Create(ValueErrorType.Kind, schema, path, value3);
}
function* Visit4(schema, references, path, value3) {
  const references_ = IsDefined(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return yield* FromAny(schema_, references_, path, value3);
    case "Array":
      return yield* FromArray3(schema_, references_, path, value3);
    case "AsyncIterator":
      return yield* FromAsyncIterator(schema_, references_, path, value3);
    case "BigInt":
      return yield* FromBigInt(schema_, references_, path, value3);
    case "Boolean":
      return yield* FromBoolean(schema_, references_, path, value3);
    case "Constructor":
      return yield* FromConstructor(schema_, references_, path, value3);
    case "Date":
      return yield* FromDate(schema_, references_, path, value3);
    case "Function":
      return yield* FromFunction(schema_, references_, path, value3);
    case "Integer":
      return yield* FromInteger(schema_, references_, path, value3);
    case "Intersect":
      return yield* FromIntersect3(schema_, references_, path, value3);
    case "Iterator":
      return yield* FromIterator(schema_, references_, path, value3);
    case "Literal":
      return yield* FromLiteral2(schema_, references_, path, value3);
    case "Never":
      return yield* FromNever(schema_, references_, path, value3);
    case "Not":
      return yield* FromNot(schema_, references_, path, value3);
    case "Null":
      return yield* FromNull(schema_, references_, path, value3);
    case "Number":
      return yield* FromNumber(schema_, references_, path, value3);
    case "Object":
      return yield* FromObject(schema_, references_, path, value3);
    case "Promise":
      return yield* FromPromise(schema_, references_, path, value3);
    case "Record":
      return yield* FromRecord(schema_, references_, path, value3);
    case "Ref":
      return yield* FromRef(schema_, references_, path, value3);
    case "RegExp":
      return yield* FromRegExp(schema_, references_, path, value3);
    case "String":
      return yield* FromString(schema_, references_, path, value3);
    case "Symbol":
      return yield* FromSymbol(schema_, references_, path, value3);
    case "TemplateLiteral":
      return yield* FromTemplateLiteral2(schema_, references_, path, value3);
    case "This":
      return yield* FromThis(schema_, references_, path, value3);
    case "Tuple":
      return yield* FromTuple3(schema_, references_, path, value3);
    case "Undefined":
      return yield* FromUndefined(schema_, references_, path, value3);
    case "Union":
      return yield* FromUnion5(schema_, references_, path, value3);
    case "Uint8Array":
      return yield* FromUint8Array(schema_, references_, path, value3);
    case "Unknown":
      return yield* FromUnknown(schema_, references_, path, value3);
    case "Void":
      return yield* FromVoid(schema_, references_, path, value3);
    default:
      if (!exports_type.Has(schema_[Kind]))
        throw new ValueErrorsUnknownTypeError(schema);
      return yield* FromKind(schema_, references_, path, value3);
  }
}
function Errors(...args) {
  const iterator3 = args.length === 3 ? Visit4(args[0], args[1], "", args[2]) : Visit4(args[0], [], "", args[1]);
  return new ValueErrorIterator(iterator3);
}
var ValueErrorType;
(function(ValueErrorType2) {
  ValueErrorType2[ValueErrorType2["ArrayContains"] = 0] = "ArrayContains";
  ValueErrorType2[ValueErrorType2["ArrayMaxContains"] = 1] = "ArrayMaxContains";
  ValueErrorType2[ValueErrorType2["ArrayMaxItems"] = 2] = "ArrayMaxItems";
  ValueErrorType2[ValueErrorType2["ArrayMinContains"] = 3] = "ArrayMinContains";
  ValueErrorType2[ValueErrorType2["ArrayMinItems"] = 4] = "ArrayMinItems";
  ValueErrorType2[ValueErrorType2["ArrayUniqueItems"] = 5] = "ArrayUniqueItems";
  ValueErrorType2[ValueErrorType2["Array"] = 6] = "Array";
  ValueErrorType2[ValueErrorType2["AsyncIterator"] = 7] = "AsyncIterator";
  ValueErrorType2[ValueErrorType2["BigIntExclusiveMaximum"] = 8] = "BigIntExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["BigIntExclusiveMinimum"] = 9] = "BigIntExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["BigIntMaximum"] = 10] = "BigIntMaximum";
  ValueErrorType2[ValueErrorType2["BigIntMinimum"] = 11] = "BigIntMinimum";
  ValueErrorType2[ValueErrorType2["BigIntMultipleOf"] = 12] = "BigIntMultipleOf";
  ValueErrorType2[ValueErrorType2["BigInt"] = 13] = "BigInt";
  ValueErrorType2[ValueErrorType2["Boolean"] = 14] = "Boolean";
  ValueErrorType2[ValueErrorType2["DateExclusiveMaximumTimestamp"] = 15] = "DateExclusiveMaximumTimestamp";
  ValueErrorType2[ValueErrorType2["DateExclusiveMinimumTimestamp"] = 16] = "DateExclusiveMinimumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMaximumTimestamp"] = 17] = "DateMaximumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMinimumTimestamp"] = 18] = "DateMinimumTimestamp";
  ValueErrorType2[ValueErrorType2["DateMultipleOfTimestamp"] = 19] = "DateMultipleOfTimestamp";
  ValueErrorType2[ValueErrorType2["Date"] = 20] = "Date";
  ValueErrorType2[ValueErrorType2["Function"] = 21] = "Function";
  ValueErrorType2[ValueErrorType2["IntegerExclusiveMaximum"] = 22] = "IntegerExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["IntegerExclusiveMinimum"] = 23] = "IntegerExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["IntegerMaximum"] = 24] = "IntegerMaximum";
  ValueErrorType2[ValueErrorType2["IntegerMinimum"] = 25] = "IntegerMinimum";
  ValueErrorType2[ValueErrorType2["IntegerMultipleOf"] = 26] = "IntegerMultipleOf";
  ValueErrorType2[ValueErrorType2["Integer"] = 27] = "Integer";
  ValueErrorType2[ValueErrorType2["IntersectUnevaluatedProperties"] = 28] = "IntersectUnevaluatedProperties";
  ValueErrorType2[ValueErrorType2["Intersect"] = 29] = "Intersect";
  ValueErrorType2[ValueErrorType2["Iterator"] = 30] = "Iterator";
  ValueErrorType2[ValueErrorType2["Kind"] = 31] = "Kind";
  ValueErrorType2[ValueErrorType2["Literal"] = 32] = "Literal";
  ValueErrorType2[ValueErrorType2["Never"] = 33] = "Never";
  ValueErrorType2[ValueErrorType2["Not"] = 34] = "Not";
  ValueErrorType2[ValueErrorType2["Null"] = 35] = "Null";
  ValueErrorType2[ValueErrorType2["NumberExclusiveMaximum"] = 36] = "NumberExclusiveMaximum";
  ValueErrorType2[ValueErrorType2["NumberExclusiveMinimum"] = 37] = "NumberExclusiveMinimum";
  ValueErrorType2[ValueErrorType2["NumberMaximum"] = 38] = "NumberMaximum";
  ValueErrorType2[ValueErrorType2["NumberMinimum"] = 39] = "NumberMinimum";
  ValueErrorType2[ValueErrorType2["NumberMultipleOf"] = 40] = "NumberMultipleOf";
  ValueErrorType2[ValueErrorType2["Number"] = 41] = "Number";
  ValueErrorType2[ValueErrorType2["ObjectAdditionalProperties"] = 42] = "ObjectAdditionalProperties";
  ValueErrorType2[ValueErrorType2["ObjectMaxProperties"] = 43] = "ObjectMaxProperties";
  ValueErrorType2[ValueErrorType2["ObjectMinProperties"] = 44] = "ObjectMinProperties";
  ValueErrorType2[ValueErrorType2["ObjectRequiredProperty"] = 45] = "ObjectRequiredProperty";
  ValueErrorType2[ValueErrorType2["Object"] = 46] = "Object";
  ValueErrorType2[ValueErrorType2["Promise"] = 47] = "Promise";
  ValueErrorType2[ValueErrorType2["RegExp"] = 48] = "RegExp";
  ValueErrorType2[ValueErrorType2["StringFormatUnknown"] = 49] = "StringFormatUnknown";
  ValueErrorType2[ValueErrorType2["StringFormat"] = 50] = "StringFormat";
  ValueErrorType2[ValueErrorType2["StringMaxLength"] = 51] = "StringMaxLength";
  ValueErrorType2[ValueErrorType2["StringMinLength"] = 52] = "StringMinLength";
  ValueErrorType2[ValueErrorType2["StringPattern"] = 53] = "StringPattern";
  ValueErrorType2[ValueErrorType2["String"] = 54] = "String";
  ValueErrorType2[ValueErrorType2["Symbol"] = 55] = "Symbol";
  ValueErrorType2[ValueErrorType2["TupleLength"] = 56] = "TupleLength";
  ValueErrorType2[ValueErrorType2["Tuple"] = 57] = "Tuple";
  ValueErrorType2[ValueErrorType2["Uint8ArrayMaxByteLength"] = 58] = "Uint8ArrayMaxByteLength";
  ValueErrorType2[ValueErrorType2["Uint8ArrayMinByteLength"] = 59] = "Uint8ArrayMinByteLength";
  ValueErrorType2[ValueErrorType2["Uint8Array"] = 60] = "Uint8Array";
  ValueErrorType2[ValueErrorType2["Undefined"] = 61] = "Undefined";
  ValueErrorType2[ValueErrorType2["Union"] = 62] = "Union";
  ValueErrorType2[ValueErrorType2["Void"] = 63] = "Void";
})(ValueErrorType || (ValueErrorType = {}));

class ValueErrorsUnknownTypeError extends TypeBoxError {
  constructor(schema) {
    super("Unknown type");
    this.schema = schema;
  }
}

class ValueErrorIterator {
  constructor(iterator3) {
    this.iterator = iterator3;
  }
  [Symbol.iterator]() {
    return this.iterator;
  }
  First() {
    const next = this.iterator.next();
    return next.done ? undefined : next.value;
  }
}
// node_modules/@sinclair/typebox/build/esm/type/any/any.mjs
function Any(options = {}) {
  return { ...options, [Kind]: "Any" };
}
// node_modules/@sinclair/typebox/build/esm/type/unknown/unknown.mjs
function Unknown(options = {}) {
  return {
    ...options,
    [Kind]: "Unknown"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/guard/type.mjs
var exports_type2 = {};
__export(exports_type2, {
  TypeGuardUnknownTypeError: () => TypeGuardUnknownTypeError,
  IsVoid: () => IsVoid2,
  IsUnsafe: () => IsUnsafe2,
  IsUnknown: () => IsUnknown2,
  IsUnionLiteral: () => IsUnionLiteral,
  IsUnion: () => IsUnion2,
  IsUndefined: () => IsUndefined4,
  IsUint8Array: () => IsUint8Array4,
  IsTuple: () => IsTuple2,
  IsTransform: () => IsTransform2,
  IsThis: () => IsThis2,
  IsTemplateLiteral: () => IsTemplateLiteral2,
  IsSymbol: () => IsSymbol4,
  IsString: () => IsString4,
  IsSchema: () => IsSchema2,
  IsRegExp: () => IsRegExp3,
  IsRef: () => IsRef2,
  IsRecursive: () => IsRecursive,
  IsRecord: () => IsRecord2,
  IsReadonly: () => IsReadonly2,
  IsProperties: () => IsProperties,
  IsPromise: () => IsPromise3,
  IsOptional: () => IsOptional2,
  IsObject: () => IsObject4,
  IsNumber: () => IsNumber4,
  IsNull: () => IsNull4,
  IsNot: () => IsNot2,
  IsNever: () => IsNever2,
  IsMappedResult: () => IsMappedResult2,
  IsMappedKey: () => IsMappedKey2,
  IsLiteralValue: () => IsLiteralValue,
  IsLiteralString: () => IsLiteralString,
  IsLiteralNumber: () => IsLiteralNumber,
  IsLiteralBoolean: () => IsLiteralBoolean,
  IsLiteral: () => IsLiteral2,
  IsKindOf: () => IsKindOf2,
  IsKind: () => IsKind2,
  IsIterator: () => IsIterator4,
  IsIntersect: () => IsIntersect2,
  IsInteger: () => IsInteger3,
  IsFunction: () => IsFunction4,
  IsDate: () => IsDate4,
  IsConstructor: () => IsConstructor2,
  IsBoolean: () => IsBoolean4,
  IsBigInt: () => IsBigInt4,
  IsAsyncIterator: () => IsAsyncIterator4,
  IsArray: () => IsArray4,
  IsAny: () => IsAny2
});
function IsPattern(value3) {
  try {
    new RegExp(value3);
    return true;
  } catch {
    return false;
  }
}
function IsControlCharacterFree(value3) {
  if (!IsString2(value3))
    return false;
  for (let i = 0;i < value3.length; i++) {
    const code = value3.charCodeAt(i);
    if (code >= 7 && code <= 13 || code === 27 || code === 127) {
      return false;
    }
  }
  return true;
}
function IsAdditionalProperties(value3) {
  return IsOptionalBoolean(value3) || IsSchema2(value3);
}
function IsOptionalBigInt(value3) {
  return IsUndefined2(value3) || IsBigInt2(value3);
}
function IsOptionalNumber(value3) {
  return IsUndefined2(value3) || IsNumber2(value3);
}
function IsOptionalBoolean(value3) {
  return IsUndefined2(value3) || IsBoolean2(value3);
}
function IsOptionalString(value3) {
  return IsUndefined2(value3) || IsString2(value3);
}
function IsOptionalPattern(value3) {
  return IsUndefined2(value3) || IsString2(value3) && IsControlCharacterFree(value3) && IsPattern(value3);
}
function IsOptionalFormat(value3) {
  return IsUndefined2(value3) || IsString2(value3) && IsControlCharacterFree(value3);
}
function IsOptionalSchema(value3) {
  return IsUndefined2(value3) || IsSchema2(value3);
}
function IsReadonly2(value3) {
  return IsObject2(value3) && value3[ReadonlyKind] === "Readonly";
}
function IsOptional2(value3) {
  return IsObject2(value3) && value3[OptionalKind] === "Optional";
}
function IsAny2(value3) {
  return IsKindOf2(value3, "Any") && IsOptionalString(value3.$id);
}
function IsArray4(value3) {
  return IsKindOf2(value3, "Array") && value3.type === "array" && IsOptionalString(value3.$id) && IsSchema2(value3.items) && IsOptionalNumber(value3.minItems) && IsOptionalNumber(value3.maxItems) && IsOptionalBoolean(value3.uniqueItems) && IsOptionalSchema(value3.contains) && IsOptionalNumber(value3.minContains) && IsOptionalNumber(value3.maxContains);
}
function IsAsyncIterator4(value3) {
  return IsKindOf2(value3, "AsyncIterator") && value3.type === "AsyncIterator" && IsOptionalString(value3.$id) && IsSchema2(value3.items);
}
function IsBigInt4(value3) {
  return IsKindOf2(value3, "BigInt") && value3.type === "bigint" && IsOptionalString(value3.$id) && IsOptionalBigInt(value3.exclusiveMaximum) && IsOptionalBigInt(value3.exclusiveMinimum) && IsOptionalBigInt(value3.maximum) && IsOptionalBigInt(value3.minimum) && IsOptionalBigInt(value3.multipleOf);
}
function IsBoolean4(value3) {
  return IsKindOf2(value3, "Boolean") && value3.type === "boolean" && IsOptionalString(value3.$id);
}
function IsConstructor2(value3) {
  return IsKindOf2(value3, "Constructor") && value3.type === "Constructor" && IsOptionalString(value3.$id) && IsArray2(value3.parameters) && value3.parameters.every((schema) => IsSchema2(schema)) && IsSchema2(value3.returns);
}
function IsDate4(value3) {
  return IsKindOf2(value3, "Date") && value3.type === "Date" && IsOptionalString(value3.$id) && IsOptionalNumber(value3.exclusiveMaximumTimestamp) && IsOptionalNumber(value3.exclusiveMinimumTimestamp) && IsOptionalNumber(value3.maximumTimestamp) && IsOptionalNumber(value3.minimumTimestamp) && IsOptionalNumber(value3.multipleOfTimestamp);
}
function IsFunction4(value3) {
  return IsKindOf2(value3, "Function") && value3.type === "Function" && IsOptionalString(value3.$id) && IsArray2(value3.parameters) && value3.parameters.every((schema) => IsSchema2(schema)) && IsSchema2(value3.returns);
}
function IsInteger3(value3) {
  return IsKindOf2(value3, "Integer") && value3.type === "integer" && IsOptionalString(value3.$id) && IsOptionalNumber(value3.exclusiveMaximum) && IsOptionalNumber(value3.exclusiveMinimum) && IsOptionalNumber(value3.maximum) && IsOptionalNumber(value3.minimum) && IsOptionalNumber(value3.multipleOf);
}
function IsProperties(value3) {
  return IsObject2(value3) && Object.entries(value3).every(([key, schema]) => IsControlCharacterFree(key) && IsSchema2(schema));
}
function IsIntersect2(value3) {
  return IsKindOf2(value3, "Intersect") && (IsString2(value3.type) && value3.type !== "object" ? false : true) && IsArray2(value3.allOf) && value3.allOf.every((schema) => IsSchema2(schema) && !IsTransform2(schema)) && IsOptionalString(value3.type) && (IsOptionalBoolean(value3.unevaluatedProperties) || IsOptionalSchema(value3.unevaluatedProperties)) && IsOptionalString(value3.$id);
}
function IsIterator4(value3) {
  return IsKindOf2(value3, "Iterator") && value3.type === "Iterator" && IsOptionalString(value3.$id) && IsSchema2(value3.items);
}
function IsKindOf2(value3, kind14) {
  return IsObject2(value3) && Kind in value3 && value3[Kind] === kind14;
}
function IsLiteralString(value3) {
  return IsLiteral2(value3) && IsString2(value3.const);
}
function IsLiteralNumber(value3) {
  return IsLiteral2(value3) && IsNumber2(value3.const);
}
function IsLiteralBoolean(value3) {
  return IsLiteral2(value3) && IsBoolean2(value3.const);
}
function IsLiteral2(value3) {
  return IsKindOf2(value3, "Literal") && IsOptionalString(value3.$id) && IsLiteralValue(value3.const);
}
function IsLiteralValue(value3) {
  return IsBoolean2(value3) || IsNumber2(value3) || IsString2(value3);
}
function IsMappedKey2(value3) {
  return IsKindOf2(value3, "MappedKey") && IsArray2(value3.keys) && value3.keys.every((key) => IsNumber2(key) || IsString2(key));
}
function IsMappedResult2(value3) {
  return IsKindOf2(value3, "MappedResult") && IsProperties(value3.properties);
}
function IsNever2(value3) {
  return IsKindOf2(value3, "Never") && IsObject2(value3.not) && Object.getOwnPropertyNames(value3.not).length === 0;
}
function IsNot2(value3) {
  return IsKindOf2(value3, "Not") && IsSchema2(value3.not);
}
function IsNull4(value3) {
  return IsKindOf2(value3, "Null") && value3.type === "null" && IsOptionalString(value3.$id);
}
function IsNumber4(value3) {
  return IsKindOf2(value3, "Number") && value3.type === "number" && IsOptionalString(value3.$id) && IsOptionalNumber(value3.exclusiveMaximum) && IsOptionalNumber(value3.exclusiveMinimum) && IsOptionalNumber(value3.maximum) && IsOptionalNumber(value3.minimum) && IsOptionalNumber(value3.multipleOf);
}
function IsObject4(value3) {
  return IsKindOf2(value3, "Object") && value3.type === "object" && IsOptionalString(value3.$id) && IsProperties(value3.properties) && IsAdditionalProperties(value3.additionalProperties) && IsOptionalNumber(value3.minProperties) && IsOptionalNumber(value3.maxProperties);
}
function IsPromise3(value3) {
  return IsKindOf2(value3, "Promise") && value3.type === "Promise" && IsOptionalString(value3.$id) && IsSchema2(value3.item);
}
function IsRecord2(value3) {
  return IsKindOf2(value3, "Record") && value3.type === "object" && IsOptionalString(value3.$id) && IsAdditionalProperties(value3.additionalProperties) && IsObject2(value3.patternProperties) && ((schema) => {
    const keys = Object.getOwnPropertyNames(schema.patternProperties);
    return keys.length === 1 && IsPattern(keys[0]) && IsObject2(schema.patternProperties) && IsSchema2(schema.patternProperties[keys[0]]);
  })(value3);
}
function IsRecursive(value3) {
  return IsObject2(value3) && Hint in value3 && value3[Hint] === "Recursive";
}
function IsRef2(value3) {
  return IsKindOf2(value3, "Ref") && IsOptionalString(value3.$id) && IsString2(value3.$ref);
}
function IsRegExp3(value3) {
  return IsKindOf2(value3, "RegExp") && IsOptionalString(value3.$id) && IsString2(value3.source) && IsString2(value3.flags) && IsOptionalNumber(value3.maxLength) && IsOptionalNumber(value3.minLength);
}
function IsString4(value3) {
  return IsKindOf2(value3, "String") && value3.type === "string" && IsOptionalString(value3.$id) && IsOptionalNumber(value3.minLength) && IsOptionalNumber(value3.maxLength) && IsOptionalPattern(value3.pattern) && IsOptionalFormat(value3.format);
}
function IsSymbol4(value3) {
  return IsKindOf2(value3, "Symbol") && value3.type === "symbol" && IsOptionalString(value3.$id);
}
function IsTemplateLiteral2(value3) {
  return IsKindOf2(value3, "TemplateLiteral") && value3.type === "string" && IsString2(value3.pattern) && value3.pattern[0] === "^" && value3.pattern[value3.pattern.length - 1] === "$";
}
function IsThis2(value3) {
  return IsKindOf2(value3, "This") && IsOptionalString(value3.$id) && IsString2(value3.$ref);
}
function IsTransform2(value3) {
  return IsObject2(value3) && TransformKind in value3;
}
function IsTuple2(value3) {
  return IsKindOf2(value3, "Tuple") && value3.type === "array" && IsOptionalString(value3.$id) && IsNumber2(value3.minItems) && IsNumber2(value3.maxItems) && value3.minItems === value3.maxItems && (IsUndefined2(value3.items) && IsUndefined2(value3.additionalItems) && value3.minItems === 0 || IsArray2(value3.items) && value3.items.every((schema) => IsSchema2(schema)));
}
function IsUndefined4(value3) {
  return IsKindOf2(value3, "Undefined") && value3.type === "undefined" && IsOptionalString(value3.$id);
}
function IsUnionLiteral(value3) {
  return IsUnion2(value3) && value3.anyOf.every((schema) => IsLiteralString(schema) || IsLiteralNumber(schema));
}
function IsUnion2(value3) {
  return IsKindOf2(value3, "Union") && IsOptionalString(value3.$id) && IsObject2(value3) && IsArray2(value3.anyOf) && value3.anyOf.every((schema) => IsSchema2(schema));
}
function IsUint8Array4(value3) {
  return IsKindOf2(value3, "Uint8Array") && value3.type === "Uint8Array" && IsOptionalString(value3.$id) && IsOptionalNumber(value3.minByteLength) && IsOptionalNumber(value3.maxByteLength);
}
function IsUnknown2(value3) {
  return IsKindOf2(value3, "Unknown") && IsOptionalString(value3.$id);
}
function IsUnsafe2(value3) {
  return IsKindOf2(value3, "Unsafe");
}
function IsVoid2(value3) {
  return IsKindOf2(value3, "Void") && value3.type === "void" && IsOptionalString(value3.$id);
}
function IsKind2(value3) {
  return IsObject2(value3) && Kind in value3 && IsString2(value3[Kind]) && !KnownTypes.includes(value3[Kind]);
}
function IsSchema2(value3) {
  return IsObject2(value3) && (IsAny2(value3) || IsArray4(value3) || IsBoolean4(value3) || IsBigInt4(value3) || IsAsyncIterator4(value3) || IsConstructor2(value3) || IsDate4(value3) || IsFunction4(value3) || IsInteger3(value3) || IsIntersect2(value3) || IsIterator4(value3) || IsLiteral2(value3) || IsMappedKey2(value3) || IsMappedResult2(value3) || IsNever2(value3) || IsNot2(value3) || IsNull4(value3) || IsNumber4(value3) || IsObject4(value3) || IsPromise3(value3) || IsRecord2(value3) || IsRef2(value3) || IsRegExp3(value3) || IsString4(value3) || IsSymbol4(value3) || IsTemplateLiteral2(value3) || IsThis2(value3) || IsTuple2(value3) || IsUndefined4(value3) || IsUnion2(value3) || IsUint8Array4(value3) || IsUnknown2(value3) || IsUnsafe2(value3) || IsVoid2(value3) || IsKind2(value3));
}

class TypeGuardUnknownTypeError extends TypeBoxError {
}
var KnownTypes = [
  "Any",
  "Array",
  "AsyncIterator",
  "BigInt",
  "Boolean",
  "Constructor",
  "Date",
  "Enum",
  "Function",
  "Integer",
  "Intersect",
  "Iterator",
  "Literal",
  "MappedKey",
  "MappedResult",
  "Not",
  "Null",
  "Number",
  "Object",
  "Promise",
  "Record",
  "Ref",
  "RegExp",
  "String",
  "Symbol",
  "TemplateLiteral",
  "This",
  "Tuple",
  "Undefined",
  "Union",
  "Uint8Array",
  "Unknown",
  "Void"
];
// node_modules/@sinclair/typebox/build/esm/type/extends/extends-check.mjs
function IntoBooleanResult(result) {
  return result === ExtendsResult.False ? result : ExtendsResult.True;
}
function Throw(message) {
  throw new ExtendsResolverError(message);
}
function IsStructuralRight(right) {
  return exports_type2.IsNever(right) || exports_type2.IsIntersect(right) || exports_type2.IsUnion(right) || exports_type2.IsUnknown(right) || exports_type2.IsAny(right);
}
function StructuralRight(left, right) {
  return exports_type2.IsNever(right) ? FromNeverRight(left, right) : exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) ? FromUnionRight(left, right) : exports_type2.IsUnknown(right) ? FromUnknownRight(left, right) : exports_type2.IsAny(right) ? FromAnyRight(left, right) : Throw("StructuralRight");
}
function FromAnyRight(left, right) {
  return ExtendsResult.True;
}
function FromAny2(left, right) {
  return exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) && right.anyOf.some((schema) => exports_type2.IsAny(schema) || exports_type2.IsUnknown(schema)) ? ExtendsResult.True : exports_type2.IsUnion(right) ? ExtendsResult.Union : exports_type2.IsUnknown(right) ? ExtendsResult.True : exports_type2.IsAny(right) ? ExtendsResult.True : ExtendsResult.Union;
}
function FromArrayRight(left, right) {
  return exports_type2.IsUnknown(left) ? ExtendsResult.False : exports_type2.IsAny(left) ? ExtendsResult.Union : exports_type2.IsNever(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromArray4(left, right) {
  return exports_type2.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : !exports_type2.IsArray(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.items, right.items));
}
function FromAsyncIterator2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : !exports_type2.IsAsyncIterator(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.items, right.items));
}
function FromBigInt2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsBigInt(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromBooleanRight(left, right) {
  return exports_type2.IsLiteralBoolean(left) ? ExtendsResult.True : exports_type2.IsBoolean(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromBoolean2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsBoolean(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromConstructor2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : !exports_type2.IsConstructor(right) ? ExtendsResult.False : left.parameters.length > right.parameters.length ? ExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit5(right.parameters[index], schema)) === ExtendsResult.True) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.returns, right.returns));
}
function FromDate2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsDate(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromFunction2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : !exports_type2.IsFunction(right) ? ExtendsResult.False : left.parameters.length > right.parameters.length ? ExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit5(right.parameters[index], schema)) === ExtendsResult.True) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.returns, right.returns));
}
function FromIntegerRight(left, right) {
  return exports_type2.IsLiteral(left) && exports_value.IsNumber(left.const) ? ExtendsResult.True : exports_type2.IsNumber(left) || exports_type2.IsInteger(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromInteger2(left, right) {
  return exports_type2.IsInteger(right) || exports_type2.IsNumber(right) ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : ExtendsResult.False;
}
function FromIntersectRight(left, right) {
  return right.allOf.every((schema) => Visit5(left, schema) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromIntersect4(left, right) {
  return left.allOf.some((schema) => Visit5(schema, right) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromIterator2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : !exports_type2.IsIterator(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.items, right.items));
}
function FromLiteral3(left, right) {
  return exports_type2.IsLiteral(right) && right.const === left.const ? ExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsString(right) ? FromStringRight(left, right) : exports_type2.IsNumber(right) ? FromNumberRight(left, right) : exports_type2.IsInteger(right) ? FromIntegerRight(left, right) : exports_type2.IsBoolean(right) ? FromBooleanRight(left, right) : ExtendsResult.False;
}
function FromNeverRight(left, right) {
  return ExtendsResult.False;
}
function FromNever2(left, right) {
  return ExtendsResult.True;
}
function UnwrapTNot(schema) {
  let [current, depth] = [schema, 0];
  while (true) {
    if (!exports_type2.IsNot(current))
      break;
    current = current.not;
    depth += 1;
  }
  return depth % 2 === 0 ? current : Unknown();
}
function FromNot2(left, right) {
  return exports_type2.IsNot(left) ? Visit5(UnwrapTNot(left), right) : exports_type2.IsNot(right) ? Visit5(left, UnwrapTNot(right)) : Throw("Invalid fallthrough for Not");
}
function FromNull2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsNull(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromNumberRight(left, right) {
  return exports_type2.IsLiteralNumber(left) ? ExtendsResult.True : exports_type2.IsNumber(left) || exports_type2.IsInteger(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromNumber2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsInteger(right) || exports_type2.IsNumber(right) ? ExtendsResult.True : ExtendsResult.False;
}
function IsObjectPropertyCount(schema, count) {
  return Object.getOwnPropertyNames(schema.properties).length === count;
}
function IsObjectStringLike(schema) {
  return IsObjectArrayLike(schema);
}
function IsObjectSymbolLike(schema) {
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "description" in schema.properties && exports_type2.IsUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && (exports_type2.IsString(schema.properties.description.anyOf[0]) && exports_type2.IsUndefined(schema.properties.description.anyOf[1]) || exports_type2.IsString(schema.properties.description.anyOf[1]) && exports_type2.IsUndefined(schema.properties.description.anyOf[0]));
}
function IsObjectNumberLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectBooleanLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectBigIntLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectDateLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectUint8ArrayLike(schema) {
  return IsObjectArrayLike(schema);
}
function IsObjectFunctionLike(schema) {
  const length = Number2();
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "length" in schema.properties && IntoBooleanResult(Visit5(schema.properties["length"], length)) === ExtendsResult.True;
}
function IsObjectConstructorLike(schema) {
  return IsObjectPropertyCount(schema, 0);
}
function IsObjectArrayLike(schema) {
  const length = Number2();
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "length" in schema.properties && IntoBooleanResult(Visit5(schema.properties["length"], length)) === ExtendsResult.True;
}
function IsObjectPromiseLike(schema) {
  const then = Function2([Any()], Any());
  return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && "then" in schema.properties && IntoBooleanResult(Visit5(schema.properties["then"], then)) === ExtendsResult.True;
}
function Property(left, right) {
  return Visit5(left, right) === ExtendsResult.False ? ExtendsResult.False : exports_type2.IsOptional(left) && !exports_type2.IsOptional(right) ? ExtendsResult.False : ExtendsResult.True;
}
function FromObjectRight(left, right) {
  return exports_type2.IsUnknown(left) ? ExtendsResult.False : exports_type2.IsAny(left) ? ExtendsResult.Union : exports_type2.IsNever(left) || exports_type2.IsLiteralString(left) && IsObjectStringLike(right) || exports_type2.IsLiteralNumber(left) && IsObjectNumberLike(right) || exports_type2.IsLiteralBoolean(left) && IsObjectBooleanLike(right) || exports_type2.IsSymbol(left) && IsObjectSymbolLike(right) || exports_type2.IsBigInt(left) && IsObjectBigIntLike(right) || exports_type2.IsString(left) && IsObjectStringLike(right) || exports_type2.IsSymbol(left) && IsObjectSymbolLike(right) || exports_type2.IsNumber(left) && IsObjectNumberLike(right) || exports_type2.IsInteger(left) && IsObjectNumberLike(right) || exports_type2.IsBoolean(left) && IsObjectBooleanLike(right) || exports_type2.IsUint8Array(left) && IsObjectUint8ArrayLike(right) || exports_type2.IsDate(left) && IsObjectDateLike(right) || exports_type2.IsConstructor(left) && IsObjectConstructorLike(right) || exports_type2.IsFunction(left) && IsObjectFunctionLike(right) ? ExtendsResult.True : exports_type2.IsRecord(left) && exports_type2.IsString(RecordKey(left)) ? (() => {
    return right[Hint] === "Record" ? ExtendsResult.True : ExtendsResult.False;
  })() : exports_type2.IsRecord(left) && exports_type2.IsNumber(RecordKey(left)) ? (() => {
    return IsObjectPropertyCount(right, 0) ? ExtendsResult.True : ExtendsResult.False;
  })() : ExtendsResult.False;
}
function FromObject2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : !exports_type2.IsObject(right) ? ExtendsResult.False : (() => {
    for (const key of Object.getOwnPropertyNames(right.properties)) {
      if (!(key in left.properties) && !exports_type2.IsOptional(right.properties[key])) {
        return ExtendsResult.False;
      }
      if (exports_type2.IsOptional(right.properties[key])) {
        return ExtendsResult.True;
      }
      if (Property(left.properties[key], right.properties[key]) === ExtendsResult.False) {
        return ExtendsResult.False;
      }
    }
    return ExtendsResult.True;
  })();
}
function FromPromise2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) && IsObjectPromiseLike(right) ? ExtendsResult.True : !exports_type2.IsPromise(right) ? ExtendsResult.False : IntoBooleanResult(Visit5(left.item, right.item));
}
function RecordKey(schema) {
  return PatternNumberExact in schema.patternProperties ? Number2() : (PatternStringExact in schema.patternProperties) ? String2() : Throw("Unknown record key pattern");
}
function RecordValue(schema) {
  return PatternNumberExact in schema.patternProperties ? schema.patternProperties[PatternNumberExact] : (PatternStringExact in schema.patternProperties) ? schema.patternProperties[PatternStringExact] : Throw("Unable to get record value schema");
}
function FromRecordRight(left, right) {
  const [Key, Value] = [RecordKey(right), RecordValue(right)];
  return exports_type2.IsLiteralString(left) && exports_type2.IsNumber(Key) && IntoBooleanResult(Visit5(left, Value)) === ExtendsResult.True ? ExtendsResult.True : exports_type2.IsUint8Array(left) && exports_type2.IsNumber(Key) ? Visit5(left, Value) : exports_type2.IsString(left) && exports_type2.IsNumber(Key) ? Visit5(left, Value) : exports_type2.IsArray(left) && exports_type2.IsNumber(Key) ? Visit5(left, Value) : exports_type2.IsObject(left) ? (() => {
    for (const key of Object.getOwnPropertyNames(left.properties)) {
      if (Property(Value, left.properties[key]) === ExtendsResult.False) {
        return ExtendsResult.False;
      }
    }
    return ExtendsResult.True;
  })() : ExtendsResult.False;
}
function FromRecord2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : !exports_type2.IsRecord(right) ? ExtendsResult.False : Visit5(RecordValue(left), RecordValue(right));
}
function FromRegExp2(left, right) {
  const L = exports_type2.IsRegExp(left) ? String2() : left;
  const R = exports_type2.IsRegExp(right) ? String2() : right;
  return Visit5(L, R);
}
function FromStringRight(left, right) {
  return exports_type2.IsLiteral(left) && exports_value.IsString(left.const) ? ExtendsResult.True : exports_type2.IsString(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromString2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsString(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromSymbol2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsSymbol(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromTemplateLiteral3(left, right) {
  return exports_type2.IsTemplateLiteral(left) ? Visit5(TemplateLiteralToUnion(left), right) : exports_type2.IsTemplateLiteral(right) ? Visit5(left, TemplateLiteralToUnion(right)) : Throw("Invalid fallthrough for TemplateLiteral");
}
function IsArrayOfTuple(left, right) {
  return exports_type2.IsArray(right) && left.items !== undefined && left.items.every((schema) => Visit5(schema, right.items) === ExtendsResult.True);
}
function FromTupleRight(left, right) {
  return exports_type2.IsNever(left) ? ExtendsResult.True : exports_type2.IsUnknown(left) ? ExtendsResult.False : exports_type2.IsAny(left) ? ExtendsResult.Union : ExtendsResult.False;
}
function FromTuple4(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) && IsObjectArrayLike(right) ? ExtendsResult.True : exports_type2.IsArray(right) && IsArrayOfTuple(left, right) ? ExtendsResult.True : !exports_type2.IsTuple(right) ? ExtendsResult.False : exports_value.IsUndefined(left.items) && !exports_value.IsUndefined(right.items) || !exports_value.IsUndefined(left.items) && exports_value.IsUndefined(right.items) ? ExtendsResult.False : exports_value.IsUndefined(left.items) && !exports_value.IsUndefined(right.items) ? ExtendsResult.True : left.items.every((schema, index) => Visit5(schema, right.items[index]) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUint8Array2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsUint8Array(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUndefined2(left, right) {
  return IsStructuralRight(right) ? StructuralRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsRecord(right) ? FromRecordRight(left, right) : exports_type2.IsVoid(right) ? FromVoidRight(left, right) : exports_type2.IsUndefined(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnionRight(left, right) {
  return right.anyOf.some((schema) => Visit5(left, schema) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnion6(left, right) {
  return left.anyOf.every((schema) => Visit5(schema, right) === ExtendsResult.True) ? ExtendsResult.True : ExtendsResult.False;
}
function FromUnknownRight(left, right) {
  return ExtendsResult.True;
}
function FromUnknown2(left, right) {
  return exports_type2.IsNever(right) ? FromNeverRight(left, right) : exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) ? FromUnionRight(left, right) : exports_type2.IsAny(right) ? FromAnyRight(left, right) : exports_type2.IsString(right) ? FromStringRight(left, right) : exports_type2.IsNumber(right) ? FromNumberRight(left, right) : exports_type2.IsInteger(right) ? FromIntegerRight(left, right) : exports_type2.IsBoolean(right) ? FromBooleanRight(left, right) : exports_type2.IsArray(right) ? FromArrayRight(left, right) : exports_type2.IsTuple(right) ? FromTupleRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsUnknown(right) ? ExtendsResult.True : ExtendsResult.False;
}
function FromVoidRight(left, right) {
  return exports_type2.IsUndefined(left) ? ExtendsResult.True : exports_type2.IsUndefined(left) ? ExtendsResult.True : ExtendsResult.False;
}
function FromVoid2(left, right) {
  return exports_type2.IsIntersect(right) ? FromIntersectRight(left, right) : exports_type2.IsUnion(right) ? FromUnionRight(left, right) : exports_type2.IsUnknown(right) ? FromUnknownRight(left, right) : exports_type2.IsAny(right) ? FromAnyRight(left, right) : exports_type2.IsObject(right) ? FromObjectRight(left, right) : exports_type2.IsVoid(right) ? ExtendsResult.True : ExtendsResult.False;
}
function Visit5(left, right) {
  return exports_type2.IsTemplateLiteral(left) || exports_type2.IsTemplateLiteral(right) ? FromTemplateLiteral3(left, right) : exports_type2.IsRegExp(left) || exports_type2.IsRegExp(right) ? FromRegExp2(left, right) : exports_type2.IsNot(left) || exports_type2.IsNot(right) ? FromNot2(left, right) : exports_type2.IsAny(left) ? FromAny2(left, right) : exports_type2.IsArray(left) ? FromArray4(left, right) : exports_type2.IsBigInt(left) ? FromBigInt2(left, right) : exports_type2.IsBoolean(left) ? FromBoolean2(left, right) : exports_type2.IsAsyncIterator(left) ? FromAsyncIterator2(left, right) : exports_type2.IsConstructor(left) ? FromConstructor2(left, right) : exports_type2.IsDate(left) ? FromDate2(left, right) : exports_type2.IsFunction(left) ? FromFunction2(left, right) : exports_type2.IsInteger(left) ? FromInteger2(left, right) : exports_type2.IsIntersect(left) ? FromIntersect4(left, right) : exports_type2.IsIterator(left) ? FromIterator2(left, right) : exports_type2.IsLiteral(left) ? FromLiteral3(left, right) : exports_type2.IsNever(left) ? FromNever2(left, right) : exports_type2.IsNull(left) ? FromNull2(left, right) : exports_type2.IsNumber(left) ? FromNumber2(left, right) : exports_type2.IsObject(left) ? FromObject2(left, right) : exports_type2.IsRecord(left) ? FromRecord2(left, right) : exports_type2.IsString(left) ? FromString2(left, right) : exports_type2.IsSymbol(left) ? FromSymbol2(left, right) : exports_type2.IsTuple(left) ? FromTuple4(left, right) : exports_type2.IsPromise(left) ? FromPromise2(left, right) : exports_type2.IsUint8Array(left) ? FromUint8Array2(left, right) : exports_type2.IsUndefined(left) ? FromUndefined2(left, right) : exports_type2.IsUnion(left) ? FromUnion6(left, right) : exports_type2.IsUnknown(left) ? FromUnknown2(left, right) : exports_type2.IsVoid(left) ? FromVoid2(left, right) : Throw(`Unknown left type operand '${left[Kind]}'`);
}
function ExtendsCheck(left, right) {
  return Visit5(left, right);
}

class ExtendsResolverError extends TypeBoxError {
}
var ExtendsResult;
(function(ExtendsResult2) {
  ExtendsResult2[ExtendsResult2["Union"] = 0] = "Union";
  ExtendsResult2[ExtendsResult2["True"] = 1] = "True";
  ExtendsResult2[ExtendsResult2["False"] = 2] = "False";
})(ExtendsResult || (ExtendsResult = {}));
// node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-result.mjs
function FromProperties7(P, Right, True, False, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Extends(P[K2], Right, True, False, options);
  return Acc;
}
function FromMappedResult6(Left, Right, True, False, options) {
  return FromProperties7(Left.properties, Right, True, False, options);
}
function ExtendsFromMappedResult(Left, Right, True, False, options) {
  const P = FromMappedResult6(Left, Right, True, False, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends.mjs
function ExtendsResolve(left, right, trueType, falseType) {
  const R = ExtendsCheck(left, right);
  return R === ExtendsResult.Union ? Union([trueType, falseType]) : R === ExtendsResult.True ? trueType : falseType;
}
function Extends(L, R, T, F, options = {}) {
  return IsMappedResult(L) ? ExtendsFromMappedResult(L, R, T, F, options) : IsMappedKey(L) ? CloneType(ExtendsFromMappedKey(L, R, T, F, options)) : CloneType(ExtendsResolve(L, R, T, F), options);
}

// node_modules/@sinclair/typebox/build/esm/type/extends/extends-from-mapped-key.mjs
function FromPropertyKey(K, U, L, R, options) {
  return {
    [K]: Extends(Literal(K), U, L, R, options)
  };
}
function FromPropertyKeys(K, U, L, R, options) {
  return K.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey(LK, U, L, R, options) };
  }, {});
}
function FromMappedKey2(K, U, L, R, options) {
  return FromPropertyKeys(K.keys, U, L, R, options);
}
function ExtendsFromMappedKey(T, U, L, R, options) {
  const P = FromMappedKey2(T, U, L, R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/value/check/check.mjs
function IsAnyOrUnknown(schema) {
  return schema[Kind] === "Any" || schema[Kind] === "Unknown";
}
function IsDefined2(value3) {
  return value3 !== undefined;
}
function FromAny3(schema, references, value3) {
  return true;
}
function FromArray5(schema, references, value3) {
  if (!IsArray(value3))
    return false;
  if (IsDefined2(schema.minItems) && !(value3.length >= schema.minItems)) {
    return false;
  }
  if (IsDefined2(schema.maxItems) && !(value3.length <= schema.maxItems)) {
    return false;
  }
  if (!value3.every((value4) => Visit6(schema.items, references, value4))) {
    return false;
  }
  if (schema.uniqueItems === true && !function() {
    const set2 = new Set;
    for (const element of value3) {
      const hashed = Hash(element);
      if (set2.has(hashed)) {
        return false;
      } else {
        set2.add(hashed);
      }
    }
    return true;
  }()) {
    return false;
  }
  if (!(IsDefined2(schema.contains) || IsNumber(schema.minContains) || IsNumber(schema.maxContains))) {
    return true;
  }
  const containsSchema = IsDefined2(schema.contains) ? schema.contains : Never();
  const containsCount = value3.reduce((acc, value4) => Visit6(containsSchema, references, value4) ? acc + 1 : acc, 0);
  if (containsCount === 0) {
    return false;
  }
  if (IsNumber(schema.minContains) && containsCount < schema.minContains) {
    return false;
  }
  if (IsNumber(schema.maxContains) && containsCount > schema.maxContains) {
    return false;
  }
  return true;
}
function FromAsyncIterator3(schema, references, value3) {
  return IsAsyncIterator(value3);
}
function FromBigInt3(schema, references, value3) {
  if (!IsBigInt(value3))
    return false;
  if (IsDefined2(schema.exclusiveMaximum) && !(value3 < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value3 > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined2(schema.maximum) && !(value3 <= schema.maximum)) {
    return false;
  }
  if (IsDefined2(schema.minimum) && !(value3 >= schema.minimum)) {
    return false;
  }
  if (IsDefined2(schema.multipleOf) && !(value3 % schema.multipleOf === BigInt(0))) {
    return false;
  }
  return true;
}
function FromBoolean3(schema, references, value3) {
  return IsBoolean(value3);
}
function FromConstructor3(schema, references, value3) {
  return Visit6(schema.returns, references, value3.prototype);
}
function FromDate3(schema, references, value3) {
  if (!IsDate(value3))
    return false;
  if (IsDefined2(schema.exclusiveMaximumTimestamp) && !(value3.getTime() < schema.exclusiveMaximumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimumTimestamp) && !(value3.getTime() > schema.exclusiveMinimumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.maximumTimestamp) && !(value3.getTime() <= schema.maximumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.minimumTimestamp) && !(value3.getTime() >= schema.minimumTimestamp)) {
    return false;
  }
  if (IsDefined2(schema.multipleOfTimestamp) && !(value3.getTime() % schema.multipleOfTimestamp === 0)) {
    return false;
  }
  return true;
}
function FromFunction3(schema, references, value3) {
  return IsFunction(value3);
}
function FromInteger3(schema, references, value3) {
  if (!IsInteger(value3)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMaximum) && !(value3 < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value3 > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined2(schema.maximum) && !(value3 <= schema.maximum)) {
    return false;
  }
  if (IsDefined2(schema.minimum) && !(value3 >= schema.minimum)) {
    return false;
  }
  if (IsDefined2(schema.multipleOf) && !(value3 % schema.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromIntersect5(schema, references, value3) {
  const check1 = schema.allOf.every((schema2) => Visit6(schema2, references, value3));
  if (schema.unevaluatedProperties === false) {
    const keyPattern = new RegExp(KeyOfPattern(schema));
    const check2 = Object.getOwnPropertyNames(value3).every((key) => keyPattern.test(key));
    return check1 && check2;
  } else if (IsSchema2(schema.unevaluatedProperties)) {
    const keyCheck = new RegExp(KeyOfPattern(schema));
    const check2 = Object.getOwnPropertyNames(value3).every((key) => keyCheck.test(key) || Visit6(schema.unevaluatedProperties, references, value3[key]));
    return check1 && check2;
  } else {
    return check1;
  }
}
function FromIterator3(schema, references, value3) {
  return IsIterator(value3);
}
function FromLiteral4(schema, references, value3) {
  return value3 === schema.const;
}
function FromNever3(schema, references, value3) {
  return false;
}
function FromNot3(schema, references, value3) {
  return !Visit6(schema.not, references, value3);
}
function FromNull3(schema, references, value3) {
  return IsNull(value3);
}
function FromNumber3(schema, references, value3) {
  if (!TypeSystemPolicy.IsNumberLike(value3))
    return false;
  if (IsDefined2(schema.exclusiveMaximum) && !(value3 < schema.exclusiveMaximum)) {
    return false;
  }
  if (IsDefined2(schema.exclusiveMinimum) && !(value3 > schema.exclusiveMinimum)) {
    return false;
  }
  if (IsDefined2(schema.minimum) && !(value3 >= schema.minimum)) {
    return false;
  }
  if (IsDefined2(schema.maximum) && !(value3 <= schema.maximum)) {
    return false;
  }
  if (IsDefined2(schema.multipleOf) && !(value3 % schema.multipleOf === 0)) {
    return false;
  }
  return true;
}
function FromObject3(schema, references, value3) {
  if (!TypeSystemPolicy.IsObjectLike(value3))
    return false;
  if (IsDefined2(schema.minProperties) && !(Object.getOwnPropertyNames(value3).length >= schema.minProperties)) {
    return false;
  }
  if (IsDefined2(schema.maxProperties) && !(Object.getOwnPropertyNames(value3).length <= schema.maxProperties)) {
    return false;
  }
  const knownKeys = Object.getOwnPropertyNames(schema.properties);
  for (const knownKey of knownKeys) {
    const property = schema.properties[knownKey];
    if (schema.required && schema.required.includes(knownKey)) {
      if (!Visit6(property, references, value3[knownKey])) {
        return false;
      }
      if ((ExtendsUndefinedCheck(property) || IsAnyOrUnknown(property)) && !(knownKey in value3)) {
        return false;
      }
    } else {
      if (TypeSystemPolicy.IsExactOptionalProperty(value3, knownKey) && !Visit6(property, references, value3[knownKey])) {
        return false;
      }
    }
  }
  if (schema.additionalProperties === false) {
    const valueKeys = Object.getOwnPropertyNames(value3);
    if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {
      return true;
    } else {
      return valueKeys.every((valueKey) => knownKeys.includes(valueKey));
    }
  } else if (typeof schema.additionalProperties === "object") {
    const valueKeys = Object.getOwnPropertyNames(value3);
    return valueKeys.every((key) => knownKeys.includes(key) || Visit6(schema.additionalProperties, references, value3[key]));
  } else {
    return true;
  }
}
function FromPromise3(schema, references, value3) {
  return IsPromise(value3);
}
function FromRecord3(schema, references, value3) {
  if (!TypeSystemPolicy.IsRecordLike(value3)) {
    return false;
  }
  if (IsDefined2(schema.minProperties) && !(Object.getOwnPropertyNames(value3).length >= schema.minProperties)) {
    return false;
  }
  if (IsDefined2(schema.maxProperties) && !(Object.getOwnPropertyNames(value3).length <= schema.maxProperties)) {
    return false;
  }
  const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
  const regex = new RegExp(patternKey);
  const check1 = Object.entries(value3).every(([key, value4]) => {
    return regex.test(key) ? Visit6(patternSchema, references, value4) : true;
  });
  const check2 = typeof schema.additionalProperties === "object" ? Object.entries(value3).every(([key, value4]) => {
    return !regex.test(key) ? Visit6(schema.additionalProperties, references, value4) : true;
  }) : true;
  const check3 = schema.additionalProperties === false ? Object.getOwnPropertyNames(value3).every((key) => {
    return regex.test(key);
  }) : true;
  return check1 && check2 && check3;
}
function FromRef2(schema, references, value3) {
  return Visit6(Deref(schema, references), references, value3);
}
function FromRegExp3(schema, references, value3) {
  const regex = new RegExp(schema.source, schema.flags);
  if (IsDefined2(schema.minLength)) {
    if (!(value3.length >= schema.minLength))
      return false;
  }
  if (IsDefined2(schema.maxLength)) {
    if (!(value3.length <= schema.maxLength))
      return false;
  }
  return regex.test(value3);
}
function FromString3(schema, references, value3) {
  if (!IsString(value3)) {
    return false;
  }
  if (IsDefined2(schema.minLength)) {
    if (!(value3.length >= schema.minLength))
      return false;
  }
  if (IsDefined2(schema.maxLength)) {
    if (!(value3.length <= schema.maxLength))
      return false;
  }
  if (IsDefined2(schema.pattern)) {
    const regex = new RegExp(schema.pattern);
    if (!regex.test(value3))
      return false;
  }
  if (IsDefined2(schema.format)) {
    if (!exports_format.Has(schema.format))
      return false;
    const func = exports_format.Get(schema.format);
    return func(value3);
  }
  return true;
}
function FromSymbol3(schema, references, value3) {
  return IsSymbol(value3);
}
function FromTemplateLiteral4(schema, references, value3) {
  return IsString(value3) && new RegExp(schema.pattern).test(value3);
}
function FromThis2(schema, references, value3) {
  return Visit6(Deref(schema, references), references, value3);
}
function FromTuple5(schema, references, value3) {
  if (!IsArray(value3)) {
    return false;
  }
  if (schema.items === undefined && !(value3.length === 0)) {
    return false;
  }
  if (!(value3.length === schema.maxItems)) {
    return false;
  }
  if (!schema.items) {
    return true;
  }
  for (let i = 0;i < schema.items.length; i++) {
    if (!Visit6(schema.items[i], references, value3[i]))
      return false;
  }
  return true;
}
function FromUndefined3(schema, references, value3) {
  return IsUndefined(value3);
}
function FromUnion7(schema, references, value3) {
  return schema.anyOf.some((inner) => Visit6(inner, references, value3));
}
function FromUint8Array3(schema, references, value3) {
  if (!IsUint8Array(value3)) {
    return false;
  }
  if (IsDefined2(schema.maxByteLength) && !(value3.length <= schema.maxByteLength)) {
    return false;
  }
  if (IsDefined2(schema.minByteLength) && !(value3.length >= schema.minByteLength)) {
    return false;
  }
  return true;
}
function FromUnknown3(schema, references, value3) {
  return true;
}
function FromVoid3(schema, references, value3) {
  return TypeSystemPolicy.IsVoidLike(value3);
}
function FromKind2(schema, references, value3) {
  if (!exports_type.Has(schema[Kind]))
    return false;
  const func = exports_type.Get(schema[Kind]);
  return func(schema, value3);
}
function Visit6(schema, references, value3) {
  const references_ = IsDefined2(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return FromAny3(schema_, references_, value3);
    case "Array":
      return FromArray5(schema_, references_, value3);
    case "AsyncIterator":
      return FromAsyncIterator3(schema_, references_, value3);
    case "BigInt":
      return FromBigInt3(schema_, references_, value3);
    case "Boolean":
      return FromBoolean3(schema_, references_, value3);
    case "Constructor":
      return FromConstructor3(schema_, references_, value3);
    case "Date":
      return FromDate3(schema_, references_, value3);
    case "Function":
      return FromFunction3(schema_, references_, value3);
    case "Integer":
      return FromInteger3(schema_, references_, value3);
    case "Intersect":
      return FromIntersect5(schema_, references_, value3);
    case "Iterator":
      return FromIterator3(schema_, references_, value3);
    case "Literal":
      return FromLiteral4(schema_, references_, value3);
    case "Never":
      return FromNever3(schema_, references_, value3);
    case "Not":
      return FromNot3(schema_, references_, value3);
    case "Null":
      return FromNull3(schema_, references_, value3);
    case "Number":
      return FromNumber3(schema_, references_, value3);
    case "Object":
      return FromObject3(schema_, references_, value3);
    case "Promise":
      return FromPromise3(schema_, references_, value3);
    case "Record":
      return FromRecord3(schema_, references_, value3);
    case "Ref":
      return FromRef2(schema_, references_, value3);
    case "RegExp":
      return FromRegExp3(schema_, references_, value3);
    case "String":
      return FromString3(schema_, references_, value3);
    case "Symbol":
      return FromSymbol3(schema_, references_, value3);
    case "TemplateLiteral":
      return FromTemplateLiteral4(schema_, references_, value3);
    case "This":
      return FromThis2(schema_, references_, value3);
    case "Tuple":
      return FromTuple5(schema_, references_, value3);
    case "Undefined":
      return FromUndefined3(schema_, references_, value3);
    case "Union":
      return FromUnion7(schema_, references_, value3);
    case "Uint8Array":
      return FromUint8Array3(schema_, references_, value3);
    case "Unknown":
      return FromUnknown3(schema_, references_, value3);
    case "Void":
      return FromVoid3(schema_, references_, value3);
    default:
      if (!exports_type.Has(schema_[Kind]))
        throw new ValueCheckUnknownTypeError(schema_);
      return FromKind2(schema_, references_, value3);
  }
}
function Check(...args) {
  return args.length === 3 ? Visit6(args[0], args[1], args[2]) : Visit6(args[0], [], args[1]);
}

class ValueCheckUnknownTypeError extends TypeBoxError {
  constructor(schema) {
    super(`Unknown type`);
    this.schema = schema;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/clone/clone.mjs
function ObjectType3(value3) {
  const Acc = {};
  for (const key of Object.getOwnPropertyNames(value3)) {
    Acc[key] = Clone2(value3[key]);
  }
  for (const key of Object.getOwnPropertySymbols(value3)) {
    Acc[key] = Clone2(value3[key]);
  }
  return Acc;
}
function ArrayType3(value3) {
  return value3.map((element) => Clone2(element));
}
function TypedArrayType(value3) {
  return value3.slice();
}
function DateType3(value3) {
  return new Date(value3.toISOString());
}
function ValueType(value3) {
  return value3;
}
function Clone2(value3) {
  if (IsArray(value3))
    return ArrayType3(value3);
  if (IsDate(value3))
    return DateType3(value3);
  if (IsStandardObject(value3))
    return ObjectType3(value3);
  if (IsTypedArray(value3))
    return TypedArrayType(value3);
  if (IsValueType(value3))
    return ValueType(value3);
  throw new Error("ValueClone: Unable to clone value");
}
// node_modules/@sinclair/typebox/build/esm/value/create/create.mjs
function FromDefault(value3) {
  return typeof value3 === "function" ? value3 : Clone2(value3);
}
function FromAny4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromArray6(schema, references) {
  if (schema.uniqueItems === true && !HasPropertyKey(schema, "default")) {
    throw new ValueCreateError(schema, "Array with the uniqueItems constraint requires a default value");
  } else if ("contains" in schema && !HasPropertyKey(schema, "default")) {
    throw new ValueCreateError(schema, "Array with the contains constraint requires a default value");
  } else if ("default" in schema) {
    return FromDefault(schema.default);
  } else if (schema.minItems !== undefined) {
    return Array.from({ length: schema.minItems }).map((item) => {
      return Visit7(schema.items, references);
    });
  } else {
    return [];
  }
}
function FromAsyncIterator4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return async function* () {
    }();
  }
}
function FromBigInt4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return BigInt(0);
  }
}
function FromBoolean4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return false;
  }
}
function FromConstructor4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const value3 = Visit7(schema.returns, references);
    if (typeof value3 === "object" && !Array.isArray(value3)) {
      return class {
        constructor() {
          for (const [key, val] of Object.entries(value3)) {
            const self2 = this;
            self2[key] = val;
          }
        }
      };
    } else {
      return class {
      };
    }
  }
}
function FromDate4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimumTimestamp !== undefined) {
    return new Date(schema.minimumTimestamp);
  } else {
    return new Date;
  }
}
function FromFunction4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return () => Visit7(schema.returns, references);
  }
}
function FromInteger4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimum !== undefined) {
    return schema.minimum;
  } else {
    return 0;
  }
}
function FromIntersect6(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const value3 = schema.allOf.reduce((acc, schema2) => {
      const next = Visit7(schema2, references);
      return typeof next === "object" ? { ...acc, ...next } : next;
    }, {});
    if (!Check(schema, references, value3))
      throw new ValueCreateError(schema, "Intersect produced invalid value. Consider using a default value.");
    return value3;
  }
}
function FromIterator4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return function* () {
    }();
  }
}
function FromLiteral5(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return schema.const;
  }
}
function FromNever4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "Never types cannot be created. Consider using a default value.");
  }
}
function FromNot4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "Not types must have a default value");
  }
}
function FromNull4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return null;
  }
}
function FromNumber4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minimum !== undefined) {
    return schema.minimum;
  } else {
    return 0;
  }
}
function FromObject4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    const required = new Set(schema.required);
    const Acc = {};
    for (const [key, subschema] of Object.entries(schema.properties)) {
      if (!required.has(key))
        continue;
      Acc[key] = Visit7(subschema, references);
    }
    return Acc;
  }
}
function FromPromise4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Promise.resolve(Visit7(schema.item, references));
  }
}
function FromRecord4(schema, references) {
  const [keyPattern, valueSchema] = Object.entries(schema.patternProperties)[0];
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (!(keyPattern === PatternStringExact || keyPattern === PatternNumberExact)) {
    const propertyKeys = keyPattern.slice(1, keyPattern.length - 1).split("|");
    const Acc = {};
    for (const key of propertyKeys)
      Acc[key] = Visit7(valueSchema, references);
    return Acc;
  } else {
    return {};
  }
}
function FromRef3(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Visit7(Deref(schema, references), references);
  }
}
function FromRegExp4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new ValueCreateError(schema, "RegExp types cannot be created. Consider using a default value.");
  }
}
function FromString4(schema, references) {
  if (schema.pattern !== undefined) {
    if (!HasPropertyKey(schema, "default")) {
      throw new ValueCreateError(schema, "String types with patterns must specify a default value");
    } else {
      return FromDefault(schema.default);
    }
  } else if (schema.format !== undefined) {
    if (!HasPropertyKey(schema, "default")) {
      throw new ValueCreateError(schema, "String types with formats must specify a default value");
    } else {
      return FromDefault(schema.default);
    }
  } else {
    if (HasPropertyKey(schema, "default")) {
      return FromDefault(schema.default);
    } else if (schema.minLength !== undefined) {
      return Array.from({ length: schema.minLength }).map(() => " ").join("");
    } else {
      return "";
    }
  }
}
function FromSymbol4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if ("value" in schema) {
    return Symbol.for(schema.value);
  } else {
    return Symbol();
  }
}
function FromTemplateLiteral5(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  }
  if (!IsTemplateLiteralFinite(schema))
    throw new ValueCreateError(schema, "Can only create template literals that produce a finite variants. Consider using a default value.");
  const generated = TemplateLiteralGenerate(schema);
  return generated[0];
}
function FromThis3(schema, references) {
  if (recursiveDepth++ > recursiveMaxDepth)
    throw new ValueCreateError(schema, "Cannot create recursive type as it appears possibly infinite. Consider using a default.");
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return Visit7(Deref(schema, references), references);
  }
}
function FromTuple6(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  }
  if (schema.items === undefined) {
    return [];
  } else {
    return Array.from({ length: schema.minItems }).map((_, index) => Visit7(schema.items[index], references));
  }
}
function FromUndefined4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return;
  }
}
function FromUnion8(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.anyOf.length === 0) {
    throw new Error("ValueCreate.Union: Cannot create Union with zero variants");
  } else {
    return Visit7(schema.anyOf[0], references);
  }
}
function FromUint8Array4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else if (schema.minByteLength !== undefined) {
    return new Uint8Array(schema.minByteLength);
  } else {
    return new Uint8Array(0);
  }
}
function FromUnknown4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return {};
  }
}
function FromVoid4(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    return;
  }
}
function FromKind3(schema, references) {
  if (HasPropertyKey(schema, "default")) {
    return FromDefault(schema.default);
  } else {
    throw new Error("User defined types must specify a default value");
  }
}
function Visit7(schema, references) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Any":
      return FromAny4(schema_, references_);
    case "Array":
      return FromArray6(schema_, references_);
    case "AsyncIterator":
      return FromAsyncIterator4(schema_, references_);
    case "BigInt":
      return FromBigInt4(schema_, references_);
    case "Boolean":
      return FromBoolean4(schema_, references_);
    case "Constructor":
      return FromConstructor4(schema_, references_);
    case "Date":
      return FromDate4(schema_, references_);
    case "Function":
      return FromFunction4(schema_, references_);
    case "Integer":
      return FromInteger4(schema_, references_);
    case "Intersect":
      return FromIntersect6(schema_, references_);
    case "Iterator":
      return FromIterator4(schema_, references_);
    case "Literal":
      return FromLiteral5(schema_, references_);
    case "Never":
      return FromNever4(schema_, references_);
    case "Not":
      return FromNot4(schema_, references_);
    case "Null":
      return FromNull4(schema_, references_);
    case "Number":
      return FromNumber4(schema_, references_);
    case "Object":
      return FromObject4(schema_, references_);
    case "Promise":
      return FromPromise4(schema_, references_);
    case "Record":
      return FromRecord4(schema_, references_);
    case "Ref":
      return FromRef3(schema_, references_);
    case "RegExp":
      return FromRegExp4(schema_, references_);
    case "String":
      return FromString4(schema_, references_);
    case "Symbol":
      return FromSymbol4(schema_, references_);
    case "TemplateLiteral":
      return FromTemplateLiteral5(schema_, references_);
    case "This":
      return FromThis3(schema_, references_);
    case "Tuple":
      return FromTuple6(schema_, references_);
    case "Undefined":
      return FromUndefined4(schema_, references_);
    case "Union":
      return FromUnion8(schema_, references_);
    case "Uint8Array":
      return FromUint8Array4(schema_, references_);
    case "Unknown":
      return FromUnknown4(schema_, references_);
    case "Void":
      return FromVoid4(schema_, references_);
    default:
      if (!exports_type.Has(schema_[Kind]))
        throw new ValueCreateError(schema_, "Unknown type");
      return FromKind3(schema_, references_);
  }
}
function Create2(...args) {
  recursiveDepth = 0;
  return args.length === 2 ? Visit7(args[0], args[1]) : Visit7(args[0], []);
}

class ValueCreateError extends TypeBoxError {
  constructor(schema, message) {
    super(message);
    this.schema = schema;
  }
}
var recursiveMaxDepth = 512;
var recursiveDepth = 0;
// node_modules/@sinclair/typebox/build/esm/value/cast/cast.mjs
function ScoreUnion(schema, references, value3) {
  if (schema[Kind] === "Object" && typeof value3 === "object" && !IsNull(value3)) {
    const object3 = schema;
    const keys = Object.getOwnPropertyNames(value3);
    const entries = Object.entries(object3.properties);
    const [point, max] = [1 / entries.length, entries.length];
    return entries.reduce((acc, [key, schema2]) => {
      const literal7 = schema2[Kind] === "Literal" && schema2.const === value3[key] ? max : 0;
      const checks = Check(schema2, references, value3[key]) ? point : 0;
      const exists = keys.includes(key) ? point : 0;
      return acc + (literal7 + checks + exists);
    }, 0);
  } else {
    return Check(schema, references, value3) ? 1 : 0;
  }
}
function SelectUnion(union9, references, value3) {
  const schemas = union9.anyOf.map((schema) => Deref(schema, references));
  let [select, best] = [schemas[0], 0];
  for (const schema of schemas) {
    const score = ScoreUnion(schema, references, value3);
    if (score > best) {
      select = schema;
      best = score;
    }
  }
  return select;
}
function CastUnion(union9, references, value3) {
  if ("default" in union9) {
    return typeof value3 === "function" ? union9.default : Clone2(union9.default);
  } else {
    const schema = SelectUnion(union9, references, value3);
    return Cast(schema, references, value3);
  }
}
function DefaultClone(schema, references, value3) {
  return Check(schema, references, value3) ? Clone2(value3) : Create2(schema, references);
}
function Default(schema, references, value3) {
  return Check(schema, references, value3) ? value3 : Create2(schema, references);
}
function FromArray7(schema, references, value3) {
  if (Check(schema, references, value3))
    return Clone2(value3);
  const created = IsArray(value3) ? Clone2(value3) : Create2(schema, references);
  const minimum = IsNumber(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;
  const maximum = IsNumber(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;
  const casted = maximum.map((value4) => Visit8(schema.items, references, value4));
  if (schema.uniqueItems !== true)
    return casted;
  const unique = [...new Set(casted)];
  if (!Check(schema, references, unique))
    throw new ValueCastError(schema, "Array cast produced invalid data due to uniqueItems constraint");
  return unique;
}
function FromConstructor5(schema, references, value3) {
  if (Check(schema, references, value3))
    return Create2(schema, references);
  const required = new Set(schema.returns.required || []);
  const result = function() {
  };
  for (const [key, property] of Object.entries(schema.returns.properties)) {
    if (!required.has(key) && value3.prototype[key] === undefined)
      continue;
    result.prototype[key] = Visit8(property, references, value3.prototype[key]);
  }
  return result;
}
function FromIntersect7(schema, references, value3) {
  const created = Create2(schema, references);
  const mapped9 = IsStandardObject(created) && IsStandardObject(value3) ? { ...created, ...value3 } : value3;
  return Check(schema, references, mapped9) ? mapped9 : Create2(schema, references);
}
function FromNever5(schema, references, value3) {
  throw new ValueCastError(schema, "Never types cannot be cast");
}
function FromObject5(schema, references, value3) {
  if (Check(schema, references, value3))
    return value3;
  if (value3 === null || typeof value3 !== "object")
    return Create2(schema, references);
  const required = new Set(schema.required || []);
  const result = {};
  for (const [key, property] of Object.entries(schema.properties)) {
    if (!required.has(key) && value3[key] === undefined)
      continue;
    result[key] = Visit8(property, references, value3[key]);
  }
  if (typeof schema.additionalProperties === "object") {
    const propertyNames = Object.getOwnPropertyNames(schema.properties);
    for (const propertyName of Object.getOwnPropertyNames(value3)) {
      if (propertyNames.includes(propertyName))
        continue;
      result[propertyName] = Visit8(schema.additionalProperties, references, value3[propertyName]);
    }
  }
  return result;
}
function FromRecord5(schema, references, value3) {
  if (Check(schema, references, value3))
    return Clone2(value3);
  if (value3 === null || typeof value3 !== "object" || Array.isArray(value3) || value3 instanceof Date)
    return Create2(schema, references);
  const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const subschema = schema.patternProperties[subschemaPropertyName];
  const result = {};
  for (const [propKey, propValue] of Object.entries(value3)) {
    result[propKey] = Visit8(subschema, references, propValue);
  }
  return result;
}
function FromRef4(schema, references, value3) {
  return Visit8(Deref(schema, references), references, value3);
}
function FromThis4(schema, references, value3) {
  return Visit8(Deref(schema, references), references, value3);
}
function FromTuple7(schema, references, value3) {
  if (Check(schema, references, value3))
    return Clone2(value3);
  if (!IsArray(value3))
    return Create2(schema, references);
  if (schema.items === undefined)
    return [];
  return schema.items.map((schema2, index) => Visit8(schema2, references, value3[index]));
}
function FromUnion9(schema, references, value3) {
  return Check(schema, references, value3) ? Clone2(value3) : CastUnion(schema, references, value3);
}
function Visit8(schema, references, value3) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray7(schema_, references_, value3);
    case "Constructor":
      return FromConstructor5(schema_, references_, value3);
    case "Intersect":
      return FromIntersect7(schema_, references_, value3);
    case "Never":
      return FromNever5(schema_, references_, value3);
    case "Object":
      return FromObject5(schema_, references_, value3);
    case "Record":
      return FromRecord5(schema_, references_, value3);
    case "Ref":
      return FromRef4(schema_, references_, value3);
    case "This":
      return FromThis4(schema_, references_, value3);
    case "Tuple":
      return FromTuple7(schema_, references_, value3);
    case "Union":
      return FromUnion9(schema_, references_, value3);
    case "Date":
    case "Symbol":
    case "Uint8Array":
      return DefaultClone(schema, references, value3);
    default:
      return Default(schema_, references_, value3);
  }
}
function Cast(...args) {
  return args.length === 3 ? Visit8(args[0], args[1], args[2]) : Visit8(args[0], [], args[1]);
}

class ValueCastError extends TypeBoxError {
  constructor(schema, message) {
    super(message);
    this.schema = schema;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/clean/clean.mjs
function IsCheckable(schema) {
  return IsSchema2(schema) && schema[Kind] !== "Unsafe";
}
function FromArray8(schema, references, value3) {
  if (!IsArray(value3))
    return value3;
  return value3.map((value4) => Visit9(schema.items, references, value4));
}
function FromIntersect8(schema, references, value3) {
  const unevaluatedProperties = schema.unevaluatedProperties;
  const intersections = schema.allOf.map((schema2) => Visit9(schema2, references, Clone2(value3)));
  const composite = intersections.reduce((acc, value4) => IsObject(value4) ? { ...acc, ...value4 } : value4, {});
  if (!IsObject(value3) || !IsObject(composite) || !IsSchema2(unevaluatedProperties))
    return composite;
  const knownkeys = KeyOfPropertyKeys(schema);
  for (const key of Object.getOwnPropertyNames(value3)) {
    if (knownkeys.includes(key))
      continue;
    if (Check(unevaluatedProperties, references, value3[key])) {
      composite[key] = Visit9(unevaluatedProperties, references, value3[key]);
    }
  }
  return composite;
}
function FromObject6(schema, references, value3) {
  if (!IsObject(value3) || IsArray(value3))
    return value3;
  const additionalProperties = schema.additionalProperties;
  for (const key of Object.getOwnPropertyNames(value3)) {
    if (key in schema.properties) {
      value3[key] = Visit9(schema.properties[key], references, value3[key]);
      continue;
    }
    if (IsSchema2(additionalProperties) && Check(additionalProperties, references, value3[key])) {
      value3[key] = Visit9(additionalProperties, references, value3[key]);
      continue;
    }
    delete value3[key];
  }
  return value3;
}
function FromRecord6(schema, references, value3) {
  if (!IsObject(value3))
    return value3;
  const additionalProperties = schema.additionalProperties;
  const propertyKeys = Object.getOwnPropertyNames(value3);
  const [propertyKey, propertySchema] = Object.entries(schema.patternProperties)[0];
  const propertyKeyTest = new RegExp(propertyKey);
  for (const key of propertyKeys) {
    if (propertyKeyTest.test(key)) {
      value3[key] = Visit9(propertySchema, references, value3[key]);
      continue;
    }
    if (IsSchema2(additionalProperties) && Check(additionalProperties, references, value3[key])) {
      value3[key] = Visit9(additionalProperties, references, value3[key]);
      continue;
    }
    delete value3[key];
  }
  return value3;
}
function FromRef5(schema, references, value3) {
  return Visit9(Deref(schema, references), references, value3);
}
function FromThis5(schema, references, value3) {
  return Visit9(Deref(schema, references), references, value3);
}
function FromTuple8(schema, references, value3) {
  if (!IsArray(value3))
    return value3;
  if (IsUndefined(schema.items))
    return [];
  const length = Math.min(value3.length, schema.items.length);
  for (let i = 0;i < length; i++) {
    value3[i] = Visit9(schema.items[i], references, value3[i]);
  }
  return value3.length > length ? value3.slice(0, length) : value3;
}
function FromUnion10(schema, references, value3) {
  for (const inner of schema.anyOf) {
    if (IsCheckable(inner) && Check(inner, references, value3)) {
      return Visit9(inner, references, value3);
    }
  }
  return value3;
}
function Visit9(schema, references, value3) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Array":
      return FromArray8(schema_, references_, value3);
    case "Intersect":
      return FromIntersect8(schema_, references_, value3);
    case "Object":
      return FromObject6(schema_, references_, value3);
    case "Record":
      return FromRecord6(schema_, references_, value3);
    case "Ref":
      return FromRef5(schema_, references_, value3);
    case "This":
      return FromThis5(schema_, references_, value3);
    case "Tuple":
      return FromTuple8(schema_, references_, value3);
    case "Union":
      return FromUnion10(schema_, references_, value3);
    default:
      return value3;
  }
}
function Clean(...args) {
  return args.length === 3 ? Visit9(args[0], args[1], args[2]) : Visit9(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/convert/convert.mjs
function IsStringNumeric(value3) {
  return IsString(value3) && !isNaN(value3) && !isNaN(parseFloat(value3));
}
function IsValueToString(value3) {
  return IsBigInt(value3) || IsBoolean(value3) || IsNumber(value3);
}
function IsValueTrue(value3) {
  return value3 === true || IsNumber(value3) && value3 === 1 || IsBigInt(value3) && value3 === BigInt("1") || IsString(value3) && (value3.toLowerCase() === "true" || value3 === "1");
}
function IsValueFalse(value3) {
  return value3 === false || IsNumber(value3) && (value3 === 0 || Object.is(value3, -0)) || IsBigInt(value3) && value3 === BigInt("0") || IsString(value3) && (value3.toLowerCase() === "false" || value3 === "0" || value3 === "-0");
}
function IsTimeStringWithTimeZone(value3) {
  return IsString(value3) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value3);
}
function IsTimeStringWithoutTimeZone(value3) {
  return IsString(value3) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value3);
}
function IsDateTimeStringWithTimeZone(value3) {
  return IsString(value3) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value3);
}
function IsDateTimeStringWithoutTimeZone(value3) {
  return IsString(value3) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value3);
}
function IsDateString(value3) {
  return IsString(value3) && /^\d\d\d\d-[0-1]\d-[0-3]\d$/i.test(value3);
}
function TryConvertLiteralString(value3, target) {
  const conversion = TryConvertString(value3);
  return conversion === target ? conversion : value3;
}
function TryConvertLiteralNumber(value3, target) {
  const conversion = TryConvertNumber(value3);
  return conversion === target ? conversion : value3;
}
function TryConvertLiteralBoolean(value3, target) {
  const conversion = TryConvertBoolean(value3);
  return conversion === target ? conversion : value3;
}
function TryConvertLiteral(schema, value3) {
  return IsString(schema.const) ? TryConvertLiteralString(value3, schema.const) : IsNumber(schema.const) ? TryConvertLiteralNumber(value3, schema.const) : IsBoolean(schema.const) ? TryConvertLiteralBoolean(value3, schema.const) : Clone2(value3);
}
function TryConvertBoolean(value3) {
  return IsValueTrue(value3) ? true : IsValueFalse(value3) ? false : value3;
}
function TryConvertBigInt(value3) {
  return IsStringNumeric(value3) ? BigInt(parseInt(value3)) : IsNumber(value3) ? BigInt(value3 | 0) : IsValueFalse(value3) ? BigInt(0) : IsValueTrue(value3) ? BigInt(1) : value3;
}
function TryConvertString(value3) {
  return IsValueToString(value3) ? value3.toString() : IsSymbol(value3) && value3.description !== undefined ? value3.description.toString() : value3;
}
function TryConvertNumber(value3) {
  return IsStringNumeric(value3) ? parseFloat(value3) : IsValueTrue(value3) ? 1 : IsValueFalse(value3) ? 0 : value3;
}
function TryConvertInteger(value3) {
  return IsStringNumeric(value3) ? parseInt(value3) : IsNumber(value3) ? value3 | 0 : IsValueTrue(value3) ? 1 : IsValueFalse(value3) ? 0 : value3;
}
function TryConvertNull(value3) {
  return IsString(value3) && value3.toLowerCase() === "null" ? null : value3;
}
function TryConvertUndefined(value3) {
  return IsString(value3) && value3 === "undefined" ? undefined : value3;
}
function TryConvertDate(value3) {
  return IsDate(value3) ? value3 : IsNumber(value3) ? new Date(value3) : IsValueTrue(value3) ? new Date(1) : IsValueFalse(value3) ? new Date(0) : IsStringNumeric(value3) ? new Date(parseInt(value3)) : IsTimeStringWithoutTimeZone(value3) ? new Date(`1970-01-01T${value3}.000Z`) : IsTimeStringWithTimeZone(value3) ? new Date(`1970-01-01T${value3}`) : IsDateTimeStringWithoutTimeZone(value3) ? new Date(`${value3}.000Z`) : IsDateTimeStringWithTimeZone(value3) ? new Date(value3) : IsDateString(value3) ? new Date(`${value3}T00:00:00.000Z`) : value3;
}
function Default2(value3) {
  return value3;
}
function FromArray9(schema, references, value3) {
  const elements = IsArray(value3) ? value3 : [value3];
  return elements.map((element) => Visit10(schema.items, references, element));
}
function FromBigInt5(schema, references, value3) {
  return TryConvertBigInt(value3);
}
function FromBoolean5(schema, references, value3) {
  return TryConvertBoolean(value3);
}
function FromDate5(schema, references, value3) {
  return TryConvertDate(value3);
}
function FromInteger5(schema, references, value3) {
  return TryConvertInteger(value3);
}
function FromIntersect9(schema, references, value3) {
  return schema.allOf.reduce((value4, schema2) => Visit10(schema2, references, value4), value3);
}
function FromLiteral6(schema, references, value3) {
  return TryConvertLiteral(schema, value3);
}
function FromNull5(schema, references, value3) {
  return TryConvertNull(value3);
}
function FromNumber5(schema, references, value3) {
  return TryConvertNumber(value3);
}
function FromObject7(schema, references, value3) {
  const isConvertable = IsObject(value3);
  if (!isConvertable)
    return value3;
  const result = {};
  for (const key of Object.keys(value3)) {
    result[key] = HasPropertyKey(schema.properties, key) ? Visit10(schema.properties[key], references, value3[key]) : value3[key];
  }
  return result;
}
function FromRecord7(schema, references, value3) {
  const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const property = schema.patternProperties[propertyKey];
  const result = {};
  for (const [propKey, propValue] of Object.entries(value3)) {
    result[propKey] = Visit10(property, references, propValue);
  }
  return result;
}
function FromRef6(schema, references, value3) {
  return Visit10(Deref(schema, references), references, value3);
}
function FromString5(schema, references, value3) {
  return TryConvertString(value3);
}
function FromSymbol5(schema, references, value3) {
  return IsString(value3) || IsNumber(value3) ? Symbol(value3) : value3;
}
function FromThis6(schema, references, value3) {
  return Visit10(Deref(schema, references), references, value3);
}
function FromTuple9(schema, references, value3) {
  const isConvertable = IsArray(value3) && !IsUndefined(schema.items);
  if (!isConvertable)
    return value3;
  return value3.map((value4, index) => {
    return index < schema.items.length ? Visit10(schema.items[index], references, value4) : value4;
  });
}
function FromUndefined5(schema, references, value3) {
  return TryConvertUndefined(value3);
}
function FromUnion11(schema, references, value3) {
  for (const subschema of schema.anyOf) {
    const converted = Visit10(subschema, references, value3);
    if (!Check(subschema, references, converted))
      continue;
    return converted;
  }
  return value3;
}
function Visit10(schema, references, value3) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray9(schema_, references_, value3);
    case "BigInt":
      return FromBigInt5(schema_, references_, value3);
    case "Boolean":
      return FromBoolean5(schema_, references_, value3);
    case "Date":
      return FromDate5(schema_, references_, value3);
    case "Integer":
      return FromInteger5(schema_, references_, value3);
    case "Intersect":
      return FromIntersect9(schema_, references_, value3);
    case "Literal":
      return FromLiteral6(schema_, references_, value3);
    case "Null":
      return FromNull5(schema_, references_, value3);
    case "Number":
      return FromNumber5(schema_, references_, value3);
    case "Object":
      return FromObject7(schema_, references_, value3);
    case "Record":
      return FromRecord7(schema_, references_, value3);
    case "Ref":
      return FromRef6(schema_, references_, value3);
    case "String":
      return FromString5(schema_, references_, value3);
    case "Symbol":
      return FromSymbol5(schema_, references_, value3);
    case "This":
      return FromThis6(schema_, references_, value3);
    case "Tuple":
      return FromTuple9(schema_, references_, value3);
    case "Undefined":
      return FromUndefined5(schema_, references_, value3);
    case "Union":
      return FromUnion11(schema_, references_, value3);
    default:
      return Default2(value3);
  }
}
function Convert(...args) {
  return args.length === 3 ? Visit10(args[0], args[1], args[2]) : Visit10(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/default/default.mjs
function ValueOrDefault(schema, value3) {
  return value3 === undefined && "default" in schema ? Clone2(schema.default) : value3;
}
function IsCheckable2(schema) {
  return IsSchema2(schema) && schema[Kind] !== "Unsafe";
}
function IsDefaultSchema(value3) {
  return IsSchema2(value3) && "default" in value3;
}
function FromArray10(schema, references, value3) {
  const defaulted = ValueOrDefault(schema, value3);
  if (!IsArray(defaulted))
    return defaulted;
  for (let i = 0;i < defaulted.length; i++) {
    defaulted[i] = Visit11(schema.items, references, defaulted[i]);
  }
  return defaulted;
}
function FromIntersect10(schema, references, value3) {
  const defaulted = ValueOrDefault(schema, value3);
  return schema.allOf.reduce((acc, schema2) => {
    const next = Visit11(schema2, references, defaulted);
    return IsObject(next) ? { ...acc, ...next } : next;
  }, {});
}
function FromObject8(schema, references, value3) {
  const defaulted = ValueOrDefault(schema, value3);
  if (!IsObject(defaulted))
    return defaulted;
  const additionalPropertiesSchema = schema.additionalProperties;
  const knownPropertyKeys = Object.getOwnPropertyNames(schema.properties);
  for (const key of knownPropertyKeys) {
    if (!IsDefaultSchema(schema.properties[key]))
      continue;
    defaulted[key] = Visit11(schema.properties[key], references, defaulted[key]);
  }
  if (!IsDefaultSchema(additionalPropertiesSchema))
    return defaulted;
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (knownPropertyKeys.includes(key))
      continue;
    defaulted[key] = Visit11(additionalPropertiesSchema, references, defaulted[key]);
  }
  return defaulted;
}
function FromRecord8(schema, references, value3) {
  const defaulted = ValueOrDefault(schema, value3);
  if (!IsObject(defaulted))
    return defaulted;
  const additionalPropertiesSchema = schema.additionalProperties;
  const [propertyKeyPattern, propertySchema] = Object.entries(schema.patternProperties)[0];
  const knownPropertyKey = new RegExp(propertyKeyPattern);
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (!(knownPropertyKey.test(key) && IsDefaultSchema(propertySchema)))
      continue;
    defaulted[key] = Visit11(propertySchema, references, defaulted[key]);
  }
  if (!IsDefaultSchema(additionalPropertiesSchema))
    return defaulted;
  for (const key of Object.getOwnPropertyNames(defaulted)) {
    if (knownPropertyKey.test(key))
      continue;
    defaulted[key] = Visit11(additionalPropertiesSchema, references, defaulted[key]);
  }
  return defaulted;
}
function FromRef7(schema, references, value3) {
  return Visit11(Deref(schema, references), references, ValueOrDefault(schema, value3));
}
function FromThis7(schema, references, value3) {
  return Visit11(Deref(schema, references), references, value3);
}
function FromTuple10(schema, references, value3) {
  const defaulted = ValueOrDefault(schema, value3);
  if (!IsArray(defaulted) || IsUndefined(schema.items))
    return defaulted;
  const [items, max] = [schema.items, Math.max(schema.items.length, defaulted.length)];
  for (let i = 0;i < max; i++) {
    if (i < items.length)
      defaulted[i] = Visit11(items[i], references, defaulted[i]);
  }
  return defaulted;
}
function FromUnion12(schema, references, value3) {
  const defaulted = ValueOrDefault(schema, value3);
  for (const inner of schema.anyOf) {
    const result = Visit11(inner, references, defaulted);
    if (IsCheckable2(inner) && Check(inner, result)) {
      return result;
    }
  }
  return defaulted;
}
function Visit11(schema, references, value3) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema_[Kind]) {
    case "Array":
      return FromArray10(schema_, references_, value3);
    case "Intersect":
      return FromIntersect10(schema_, references_, value3);
    case "Object":
      return FromObject8(schema_, references_, value3);
    case "Record":
      return FromRecord8(schema_, references_, value3);
    case "Ref":
      return FromRef7(schema_, references_, value3);
    case "This":
      return FromThis7(schema_, references_, value3);
    case "Tuple":
      return FromTuple10(schema_, references_, value3);
    case "Union":
      return FromUnion12(schema_, references_, value3);
    default:
      return ValueOrDefault(schema_, value3);
  }
}
function Default3(...args) {
  return args.length === 3 ? Visit11(args[0], args[1], args[2]) : Visit11(args[0], [], args[1]);
}
// node_modules/@sinclair/typebox/build/esm/value/pointer/pointer.mjs
var exports_pointer = {};
__export(exports_pointer, {
  ValuePointerRootSetError: () => ValuePointerRootSetError,
  ValuePointerRootDeleteError: () => ValuePointerRootDeleteError,
  Set: () => Set4,
  Has: () => Has3,
  Get: () => Get3,
  Format: () => Format,
  Delete: () => Delete3
});
function Escape2(component) {
  return component.indexOf("~") === -1 ? component : component.replace(/~1/g, "/").replace(/~0/g, "~");
}
function* Format(pointer) {
  if (pointer === "")
    return;
  let [start, end] = [0, 0];
  for (let i = 0;i < pointer.length; i++) {
    const char = pointer.charAt(i);
    if (char === "/") {
      if (i === 0) {
        start = i + 1;
      } else {
        end = i;
        yield Escape2(pointer.slice(start, end));
        start = i + 1;
      }
    } else {
      end = i;
    }
  }
  yield Escape2(pointer.slice(start));
}
function Set4(value3, pointer, update) {
  if (pointer === "")
    throw new ValuePointerRootSetError(value3, pointer, update);
  let [owner, next, key] = [null, value3, ""];
  for (const component of Format(pointer)) {
    if (next[component] === undefined)
      next[component] = {};
    owner = next;
    next = next[component];
    key = component;
  }
  owner[key] = update;
}
function Delete3(value3, pointer) {
  if (pointer === "")
    throw new ValuePointerRootDeleteError(value3, pointer);
  let [owner, next, key] = [null, value3, ""];
  for (const component of Format(pointer)) {
    if (next[component] === undefined || next[component] === null)
      return;
    owner = next;
    next = next[component];
    key = component;
  }
  if (Array.isArray(owner)) {
    const index = parseInt(key);
    owner.splice(index, 1);
  } else {
    delete owner[key];
  }
}
function Has3(value3, pointer) {
  if (pointer === "")
    return true;
  let [owner, next, key] = [null, value3, ""];
  for (const component of Format(pointer)) {
    if (next[component] === undefined)
      return false;
    owner = next;
    next = next[component];
    key = component;
  }
  return Object.getOwnPropertyNames(owner).includes(key);
}
function Get3(value3, pointer) {
  if (pointer === "")
    return value3;
  let current = value3;
  for (const component of Format(pointer)) {
    if (current[component] === undefined)
      return;
    current = current[component];
  }
  return current;
}

class ValuePointerRootSetError extends TypeBoxError {
  constructor(value3, path, update) {
    super("Cannot set root value");
    this.value = value3;
    this.path = path;
    this.update = update;
  }
}

class ValuePointerRootDeleteError extends TypeBoxError {
  constructor(value3, path) {
    super("Cannot delete root value");
    this.value = value3;
    this.path = path;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/delta/delta.mjs
function CreateUpdate(path, value3) {
  return { type: "update", path, value: value3 };
}
function CreateInsert(path, value3) {
  return { type: "insert", path, value: value3 };
}
function CreateDelete(path) {
  return { type: "delete", path };
}
function* ObjectType4(path, current, next) {
  if (!IsStandardObject(next))
    return yield CreateUpdate(path, next);
  const currentKeys = [...globalThis.Object.keys(current), ...globalThis.Object.getOwnPropertySymbols(current)];
  const nextKeys = [...globalThis.Object.keys(next), ...globalThis.Object.getOwnPropertySymbols(next)];
  for (const key of currentKeys) {
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    if (IsUndefined(next[key]) && nextKeys.includes(key))
      yield CreateUpdate(`${path}/${globalThis.String(key)}`, undefined);
  }
  for (const key of nextKeys) {
    if (IsUndefined(current[key]) || IsUndefined(next[key]))
      continue;
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    yield* Visit12(`${path}/${globalThis.String(key)}`, current[key], next[key]);
  }
  for (const key of nextKeys) {
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    if (IsUndefined(current[key]))
      yield CreateInsert(`${path}/${globalThis.String(key)}`, next[key]);
  }
  for (const key of currentKeys.reverse()) {
    if (IsSymbol(key))
      throw new ValueDeltaSymbolError(key);
    if (IsUndefined(next[key]) && !nextKeys.includes(key))
      yield CreateDelete(`${path}/${globalThis.String(key)}`);
  }
}
function* ArrayType4(path, current, next) {
  if (!IsArray(next))
    return yield CreateUpdate(path, next);
  for (let i = 0;i < Math.min(current.length, next.length); i++) {
    yield* Visit12(`${path}/${i}`, current[i], next[i]);
  }
  for (let i = 0;i < next.length; i++) {
    if (i < current.length)
      continue;
    yield CreateInsert(`${path}/${i}`, next[i]);
  }
  for (let i = current.length - 1;i >= 0; i--) {
    if (i < next.length)
      continue;
    yield CreateDelete(`${path}/${i}`);
  }
}
function* TypedArrayType2(path, current, next) {
  if (!IsTypedArray(next) || current.length !== next.length || globalThis.Object.getPrototypeOf(current).constructor.name !== globalThis.Object.getPrototypeOf(next).constructor.name)
    return yield CreateUpdate(path, next);
  for (let i = 0;i < Math.min(current.length, next.length); i++) {
    yield* Visit12(`${path}/${i}`, current[i], next[i]);
  }
}
function* ValueType2(path, current, next) {
  if (current === next)
    return;
  yield CreateUpdate(path, next);
}
function* Visit12(path, current, next) {
  if (IsStandardObject(current))
    return yield* ObjectType4(path, current, next);
  if (IsArray(current))
    return yield* ArrayType4(path, current, next);
  if (IsTypedArray(current))
    return yield* TypedArrayType2(path, current, next);
  if (IsValueType(current))
    return yield* ValueType2(path, current, next);
  throw new ValueDeltaError(current, "Unable to create diff edits for unknown value");
}
function Diff(current, next) {
  return [...Visit12("", current, next)];
}
function IsRootUpdate(edits) {
  return edits.length > 0 && edits[0].path === "" && edits[0].type === "update";
}
function IsIdentity(edits) {
  return edits.length === 0;
}
function Patch(current, edits) {
  if (IsRootUpdate(edits)) {
    return Clone2(edits[0].value);
  }
  if (IsIdentity(edits)) {
    return Clone2(current);
  }
  const clone8 = Clone2(current);
  for (const edit of edits) {
    switch (edit.type) {
      case "insert": {
        exports_pointer.Set(clone8, edit.path, edit.value);
        break;
      }
      case "update": {
        exports_pointer.Set(clone8, edit.path, edit.value);
        break;
      }
      case "delete": {
        exports_pointer.Delete(clone8, edit.path);
        break;
      }
    }
  }
  return clone8;
}
var Insert = Object2({
  type: Literal("insert"),
  path: String2(),
  value: Unknown()
});
var Update = Object2({
  type: Literal("update"),
  path: String2(),
  value: Unknown()
});
var Delete4 = Object2({
  type: Literal("delete"),
  path: String2()
});
var Edit = Union([Insert, Update, Delete4]);

class ValueDeltaError extends TypeBoxError {
  constructor(value3, message) {
    super(message);
    this.value = value3;
  }
}

class ValueDeltaSymbolError extends ValueDeltaError {
  constructor(value3) {
    super(value3, "Cannot diff objects with symbol keys");
    this.value = value3;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/equal/equal.mjs
function ObjectType5(left, right) {
  if (!IsStandardObject(right))
    return false;
  const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];
  const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];
  if (leftKeys.length !== rightKeys.length)
    return false;
  return leftKeys.every((key) => Equal(left[key], right[key]));
}
function DateType4(left, right) {
  return IsDate(right) && left.getTime() === right.getTime();
}
function ArrayType5(left, right) {
  if (!IsArray(right) || left.length !== right.length)
    return false;
  return left.every((value3, index) => Equal(value3, right[index]));
}
function TypedArrayType3(left, right) {
  if (!IsTypedArray(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)
    return false;
  return left.every((value3, index) => Equal(value3, right[index]));
}
function ValueType3(left, right) {
  return left === right;
}
function Equal(left, right) {
  if (IsStandardObject(left))
    return ObjectType5(left, right);
  if (IsDate(left))
    return DateType4(left, right);
  if (IsTypedArray(left))
    return TypedArrayType3(left, right);
  if (IsArray(left))
    return ArrayType5(left, right);
  if (IsValueType(left))
    return ValueType3(left, right);
  throw new Error("ValueEquals: Unable to compare value");
}
// node_modules/@sinclair/typebox/build/esm/value/mutate/mutate.mjs
function ObjectType6(root, path, current, next) {
  if (!IsStandardObject(current)) {
    exports_pointer.Set(root, path, Clone2(next));
  } else {
    const currentKeys = Object.getOwnPropertyNames(current);
    const nextKeys = Object.getOwnPropertyNames(next);
    for (const currentKey of currentKeys) {
      if (!nextKeys.includes(currentKey)) {
        delete current[currentKey];
      }
    }
    for (const nextKey of nextKeys) {
      if (!currentKeys.includes(nextKey)) {
        current[nextKey] = null;
      }
    }
    for (const nextKey of nextKeys) {
      Visit13(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);
    }
  }
}
function ArrayType6(root, path, current, next) {
  if (!IsArray(current)) {
    exports_pointer.Set(root, path, Clone2(next));
  } else {
    for (let index = 0;index < next.length; index++) {
      Visit13(root, `${path}/${index}`, current[index], next[index]);
    }
    current.splice(next.length);
  }
}
function TypedArrayType4(root, path, current, next) {
  if (IsTypedArray(current) && current.length === next.length) {
    for (let i = 0;i < current.length; i++) {
      current[i] = next[i];
    }
  } else {
    exports_pointer.Set(root, path, Clone2(next));
  }
}
function ValueType4(root, path, current, next) {
  if (current === next)
    return;
  exports_pointer.Set(root, path, next);
}
function Visit13(root, path, current, next) {
  if (IsArray(next))
    return ArrayType6(root, path, current, next);
  if (IsTypedArray(next))
    return TypedArrayType4(root, path, current, next);
  if (IsStandardObject(next))
    return ObjectType6(root, path, current, next);
  if (IsValueType(next))
    return ValueType4(root, path, current, next);
}
function IsNonMutableValue(value3) {
  return IsTypedArray(value3) || IsValueType(value3);
}
function IsMismatchedValue(current, next) {
  return IsStandardObject(current) && IsArray(next) || IsArray(current) && IsStandardObject(next);
}
function Mutate(current, next) {
  if (IsNonMutableValue(current) || IsNonMutableValue(next))
    throw new ValueMutateError("Only object and array types can be mutated at the root level");
  if (IsMismatchedValue(current, next))
    throw new ValueMutateError("Cannot assign due type mismatch of assignable values");
  Visit13(current, "", current, next);
}

class ValueMutateError extends TypeBoxError {
  constructor(message) {
    super(message);
  }
}
// node_modules/@sinclair/typebox/build/esm/value/transform/decode.mjs
function Default4(schema, path, value3) {
  try {
    return IsTransform2(schema) ? schema[TransformKind].Decode(value3) : value3;
  } catch (error19) {
    throw new TransformDecodeError(schema, path, value3, error19);
  }
}
function FromArray11(schema, references, path, value3) {
  return IsArray(value3) ? Default4(schema, path, value3.map((value4, index) => Visit14(schema.items, references, `${path}/${index}`, value4))) : Default4(schema, path, value3);
}
function FromIntersect11(schema, references, path, value3) {
  if (!IsStandardObject(value3) || IsValueType(value3))
    return Default4(schema, path, value3);
  const knownEntries = KeyOfPropertyEntries(schema);
  const knownKeys = knownEntries.map((entry) => entry[0]);
  const knownProperties = { ...value3 };
  for (const [knownKey, knownSchema] of knownEntries)
    if (knownKey in knownProperties) {
      knownProperties[knownKey] = Visit14(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);
    }
  if (!IsTransform2(schema.unevaluatedProperties)) {
    return Default4(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const unevaluatedProperties = schema.unevaluatedProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      unknownProperties[key] = Default4(unevaluatedProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default4(schema, path, unknownProperties);
}
function FromNot5(schema, references, path, value3) {
  return Default4(schema, path, Visit14(schema.not, references, path, value3));
}
function FromObject9(schema, references, path, value3) {
  if (!IsStandardObject(value3))
    return Default4(schema, path, value3);
  const knownKeys = KeyOfPropertyKeys(schema);
  const knownProperties = { ...value3 };
  for (const key of knownKeys)
    if (key in knownProperties) {
      knownProperties[key] = Visit14(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return Default4(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      unknownProperties[key] = Default4(additionalProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default4(schema, path, unknownProperties);
}
function FromRecord9(schema, references, path, value3) {
  if (!IsStandardObject(value3))
    return Default4(schema, path, value3);
  const pattern3 = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const knownKeys = new RegExp(pattern3);
  const knownProperties = { ...value3 };
  for (const key of Object.getOwnPropertyNames(value3))
    if (knownKeys.test(key)) {
      knownProperties[key] = Visit14(schema.patternProperties[pattern3], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return Default4(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const unknownProperties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.test(key)) {
      unknownProperties[key] = Default4(additionalProperties, `${path}/${key}`, unknownProperties[key]);
    }
  return Default4(schema, path, unknownProperties);
}
function FromRef8(schema, references, path, value3) {
  const target = Deref(schema, references);
  return Default4(schema, path, Visit14(target, references, path, value3));
}
function FromThis8(schema, references, path, value3) {
  const target = Deref(schema, references);
  return Default4(schema, path, Visit14(target, references, path, value3));
}
function FromTuple11(schema, references, path, value3) {
  return IsArray(value3) && IsArray(schema.items) ? Default4(schema, path, schema.items.map((schema2, index) => Visit14(schema2, references, `${path}/${index}`, value3[index]))) : Default4(schema, path, value3);
}
function FromUnion13(schema, references, path, value3) {
  for (const subschema of schema.anyOf) {
    if (!Check(subschema, references, value3))
      continue;
    const decoded = Visit14(subschema, references, path, value3);
    return Default4(schema, path, decoded);
  }
  return Default4(schema, path, value3);
}
function Visit14(schema, references, path, value3) {
  const references_ = typeof schema.$id === "string" ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray11(schema_, references_, path, value3);
    case "Intersect":
      return FromIntersect11(schema_, references_, path, value3);
    case "Not":
      return FromNot5(schema_, references_, path, value3);
    case "Object":
      return FromObject9(schema_, references_, path, value3);
    case "Record":
      return FromRecord9(schema_, references_, path, value3);
    case "Ref":
      return FromRef8(schema_, references_, path, value3);
    case "Symbol":
      return Default4(schema_, path, value3);
    case "This":
      return FromThis8(schema_, references_, path, value3);
    case "Tuple":
      return FromTuple11(schema_, references_, path, value3);
    case "Union":
      return FromUnion13(schema_, references_, path, value3);
    default:
      return Default4(schema_, path, value3);
  }
}
function TransformDecode(schema, references, value3) {
  return Visit14(schema, references, "", value3);
}

class TransformDecodeCheckError extends TypeBoxError {
  constructor(schema, value3, error19) {
    super(`Unable to decode value as it does not match the expected schema`);
    this.schema = schema;
    this.value = value3;
    this.error = error19;
  }
}

class TransformDecodeError extends TypeBoxError {
  constructor(schema, path, value3, error19) {
    super(error19 instanceof Error ? error19.message : "Unknown error");
    this.schema = schema;
    this.path = path;
    this.value = value3;
    this.error = error19;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/transform/encode.mjs
function Default5(schema, path, value3) {
  try {
    return IsTransform2(schema) ? schema[TransformKind].Encode(value3) : value3;
  } catch (error20) {
    throw new TransformEncodeError(schema, path, value3, error20);
  }
}
function FromArray12(schema, references, path, value3) {
  const defaulted = Default5(schema, path, value3);
  return IsArray(defaulted) ? defaulted.map((value4, index) => Visit15(schema.items, references, `${path}/${index}`, value4)) : defaulted;
}
function FromIntersect12(schema, references, path, value3) {
  const defaulted = Default5(schema, path, value3);
  if (!IsStandardObject(value3) || IsValueType(value3))
    return defaulted;
  const knownEntries = KeyOfPropertyEntries(schema);
  const knownKeys = knownEntries.map((entry) => entry[0]);
  const knownProperties = { ...defaulted };
  for (const [knownKey, knownSchema] of knownEntries)
    if (knownKey in knownProperties) {
      knownProperties[knownKey] = Visit15(knownSchema, references, `${path}/${knownKey}`, knownProperties[knownKey]);
    }
  if (!IsTransform2(schema.unevaluatedProperties)) {
    return Default5(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const unevaluatedProperties = schema.unevaluatedProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      properties[key] = Default5(unevaluatedProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromNot6(schema, references, path, value3) {
  return Default5(schema.not, path, Default5(schema, path, value3));
}
function FromObject10(schema, references, path, value3) {
  const defaulted = Default5(schema, path, value3);
  if (!IsStandardObject(defaulted))
    return defaulted;
  const knownKeys = KeyOfPropertyKeys(schema);
  const knownProperties = { ...defaulted };
  for (const key of knownKeys)
    if (key in knownProperties) {
      knownProperties[key] = Visit15(schema.properties[key], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return knownProperties;
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.includes(key)) {
      properties[key] = Default5(additionalProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromRecord10(schema, references, path, value3) {
  const defaulted = Default5(schema, path, value3);
  if (!IsStandardObject(value3))
    return defaulted;
  const pattern3 = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const knownKeys = new RegExp(pattern3);
  const knownProperties = { ...defaulted };
  for (const key of Object.getOwnPropertyNames(value3))
    if (knownKeys.test(key)) {
      knownProperties[key] = Visit15(schema.patternProperties[pattern3], references, `${path}/${key}`, knownProperties[key]);
    }
  if (!IsSchema2(schema.additionalProperties)) {
    return Default5(schema, path, knownProperties);
  }
  const unknownKeys = Object.getOwnPropertyNames(knownProperties);
  const additionalProperties = schema.additionalProperties;
  const properties = { ...knownProperties };
  for (const key of unknownKeys)
    if (!knownKeys.test(key)) {
      properties[key] = Default5(additionalProperties, `${path}/${key}`, properties[key]);
    }
  return properties;
}
function FromRef9(schema, references, path, value3) {
  const target = Deref(schema, references);
  const resolved = Visit15(target, references, path, value3);
  return Default5(schema, path, resolved);
}
function FromThis9(schema, references, path, value3) {
  const target = Deref(schema, references);
  const resolved = Visit15(target, references, path, value3);
  return Default5(schema, path, resolved);
}
function FromTuple12(schema, references, path, value3) {
  const value1 = Default5(schema, path, value3);
  return IsArray(schema.items) ? schema.items.map((schema2, index) => Visit15(schema2, references, `${path}/${index}`, value1[index])) : [];
}
function FromUnion14(schema, references, path, value3) {
  for (const subschema of schema.anyOf) {
    if (!Check(subschema, references, value3))
      continue;
    const value1 = Visit15(subschema, references, path, value3);
    return Default5(schema, path, value1);
  }
  for (const subschema of schema.anyOf) {
    const value1 = Visit15(subschema, references, path, value3);
    if (!Check(schema, references, value1))
      continue;
    return Default5(schema, path, value1);
  }
  return Default5(schema, path, value3);
}
function Visit15(schema, references, path, value3) {
  const references_ = typeof schema.$id === "string" ? [...references, schema] : references;
  const schema_ = schema;
  switch (schema[Kind]) {
    case "Array":
      return FromArray12(schema_, references_, path, value3);
    case "Intersect":
      return FromIntersect12(schema_, references_, path, value3);
    case "Not":
      return FromNot6(schema_, references_, path, value3);
    case "Object":
      return FromObject10(schema_, references_, path, value3);
    case "Record":
      return FromRecord10(schema_, references_, path, value3);
    case "Ref":
      return FromRef9(schema_, references_, path, value3);
    case "This":
      return FromThis9(schema_, references_, path, value3);
    case "Tuple":
      return FromTuple12(schema_, references_, path, value3);
    case "Union":
      return FromUnion14(schema_, references_, path, value3);
    default:
      return Default5(schema_, path, value3);
  }
}
function TransformEncode(schema, references, value3) {
  return Visit15(schema, references, "", value3);
}

class TransformEncodeCheckError extends TypeBoxError {
  constructor(schema, value3, error20) {
    super(`The encoded value does not match the expected schema`);
    this.schema = schema;
    this.value = value3;
    this.error = error20;
  }
}

class TransformEncodeError extends TypeBoxError {
  constructor(schema, path, value3, error20) {
    super(`${error20 instanceof Error ? error20.message : "Unknown error"}`);
    this.schema = schema;
    this.path = path;
    this.value = value3;
    this.error = error20;
  }
}
// node_modules/@sinclair/typebox/build/esm/value/transform/has.mjs
function FromArray13(schema, references) {
  return IsTransform2(schema) || Visit16(schema.items, references);
}
function FromAsyncIterator5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.items, references);
}
function FromConstructor6(schema, references) {
  return IsTransform2(schema) || Visit16(schema.returns, references) || schema.parameters.some((schema2) => Visit16(schema2, references));
}
function FromFunction5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.returns, references) || schema.parameters.some((schema2) => Visit16(schema2, references));
}
function FromIntersect13(schema, references) {
  return IsTransform2(schema) || IsTransform2(schema.unevaluatedProperties) || schema.allOf.some((schema2) => Visit16(schema2, references));
}
function FromIterator5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.items, references);
}
function FromNot7(schema, references) {
  return IsTransform2(schema) || Visit16(schema.not, references);
}
function FromObject11(schema, references) {
  return IsTransform2(schema) || Object.values(schema.properties).some((schema2) => Visit16(schema2, references)) || IsSchema2(schema.additionalProperties) && Visit16(schema.additionalProperties, references);
}
function FromPromise5(schema, references) {
  return IsTransform2(schema) || Visit16(schema.item, references);
}
function FromRecord11(schema, references) {
  const pattern3 = Object.getOwnPropertyNames(schema.patternProperties)[0];
  const property = schema.patternProperties[pattern3];
  return IsTransform2(schema) || Visit16(property, references) || IsSchema2(schema.additionalProperties) && IsTransform2(schema.additionalProperties);
}
function FromRef10(schema, references) {
  if (IsTransform2(schema))
    return true;
  return Visit16(Deref(schema, references), references);
}
function FromThis10(schema, references) {
  if (IsTransform2(schema))
    return true;
  return Visit16(Deref(schema, references), references);
}
function FromTuple13(schema, references) {
  return IsTransform2(schema) || !IsUndefined(schema.items) && schema.items.some((schema2) => Visit16(schema2, references));
}
function FromUnion15(schema, references) {
  return IsTransform2(schema) || schema.anyOf.some((schema2) => Visit16(schema2, references));
}
function Visit16(schema, references) {
  const references_ = IsString(schema.$id) ? [...references, schema] : references;
  const schema_ = schema;
  if (schema.$id && visited.has(schema.$id))
    return false;
  if (schema.$id)
    visited.add(schema.$id);
  switch (schema[Kind]) {
    case "Array":
      return FromArray13(schema_, references_);
    case "AsyncIterator":
      return FromAsyncIterator5(schema_, references_);
    case "Constructor":
      return FromConstructor6(schema_, references_);
    case "Function":
      return FromFunction5(schema_, references_);
    case "Intersect":
      return FromIntersect13(schema_, references_);
    case "Iterator":
      return FromIterator5(schema_, references_);
    case "Not":
      return FromNot7(schema_, references_);
    case "Object":
      return FromObject11(schema_, references_);
    case "Promise":
      return FromPromise5(schema_, references_);
    case "Record":
      return FromRecord11(schema_, references_);
    case "Ref":
      return FromRef10(schema_, references_);
    case "This":
      return FromThis10(schema_, references_);
    case "Tuple":
      return FromTuple13(schema_, references_);
    case "Union":
      return FromUnion15(schema_, references_);
    default:
      return IsTransform2(schema);
  }
}
function HasTransform(schema, references) {
  visited.clear();
  return Visit16(schema, references);
}
var visited = new Set;
// node_modules/@sinclair/typebox/build/esm/value/value/value.mjs
var exports_value2 = {};
__export(exports_value2, {
  Patch: () => Patch2,
  Mutate: () => Mutate2,
  Hash: () => Hash2,
  Errors: () => Errors2,
  Equal: () => Equal2,
  Encode: () => Encode,
  Diff: () => Diff2,
  Default: () => Default6,
  Decode: () => Decode,
  Create: () => Create3,
  Convert: () => Convert2,
  Clone: () => Clone3,
  Clean: () => Clean2,
  Check: () => Check2,
  Cast: () => Cast2
});
function Cast2(...args) {
  return Cast.apply(Cast, args);
}
function Create3(...args) {
  return Create2.apply(Create2, args);
}
function Check2(...args) {
  return Check.apply(Check, args);
}
function Clean2(...args) {
  return Clean.apply(Clean, args);
}
function Convert2(...args) {
  return Convert.apply(Convert, args);
}
function Clone3(value3) {
  return Clone2(value3);
}
function Decode(...args) {
  const [schema, references, value3] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
  if (!Check2(schema, references, value3))
    throw new TransformDecodeCheckError(schema, value3, Errors2(schema, references, value3).First());
  return HasTransform(schema, references) ? TransformDecode(schema, references, value3) : value3;
}
function Default6(...args) {
  return Default3.apply(Default3, args);
}
function Encode(...args) {
  const [schema, references, value3] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
  const encoded = HasTransform(schema, references) ? TransformEncode(schema, references, value3) : value3;
  if (!Check2(schema, references, encoded))
    throw new TransformEncodeCheckError(schema, encoded, Errors2(schema, references, encoded).First());
  return encoded;
}
function Errors2(...args) {
  return Errors.apply(Errors, args);
}
function Equal2(left, right) {
  return Equal(left, right);
}
function Diff2(current, next) {
  return Diff(current, next);
}
function Hash2(value3) {
  return Hash(value3);
}
function Patch2(current, edits) {
  return Patch(current, edits);
}
function Mutate2(current, next) {
  Mutate(current, next);
}
// node_modules/@sinclair/typebox/build/esm/type/awaited/awaited.mjs
function FromRest4(T) {
  return T.map((L) => AwaitedResolve(L));
}
function FromIntersect14(T) {
  return Intersect(FromRest4(T));
}
function FromUnion16(T) {
  return Union(FromRest4(T));
}
function FromPromise6(T) {
  return AwaitedResolve(T);
}
function AwaitedResolve(T) {
  return IsIntersect(T) ? FromIntersect14(T.allOf) : IsUnion(T) ? FromUnion16(T.anyOf) : IsPromise2(T) ? FromPromise6(T.item) : T;
}
function Awaited(T, options = {}) {
  return CloneType(AwaitedResolve(T), options);
}
// node_modules/@sinclair/typebox/build/esm/type/composite/composite.mjs
function CompositeKeys(T) {
  const Acc = [];
  for (const L of T)
    Acc.push(...KeyOfPropertyKeys(L));
  return SetDistinct(Acc);
}
function FilterNever(T) {
  return T.filter((L) => !IsNever(L));
}
function CompositeProperty(T, K) {
  const Acc = [];
  for (const L of T)
    Acc.push(...IndexFromPropertyKeys(L, [K]));
  return FilterNever(Acc);
}
function CompositeProperties(T, K) {
  const Acc = {};
  for (const L of K) {
    Acc[L] = IntersectEvaluated(CompositeProperty(T, L));
  }
  return Acc;
}
function Composite(T, options = {}) {
  const K = CompositeKeys(T);
  const P = CompositeProperties(T, K);
  const R = Object2(P, options);
  return R;
}
// node_modules/@sinclair/typebox/build/esm/type/date/date.mjs
function Date2(options = {}) {
  return {
    ...options,
    [Kind]: "Date",
    type: "Date"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/null/null.mjs
function Null(options = {}) {
  return {
    ...options,
    [Kind]: "Null",
    type: "null"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/symbol/symbol.mjs
function Symbol2(options) {
  return { ...options, [Kind]: "Symbol", type: "symbol" };
}
// node_modules/@sinclair/typebox/build/esm/type/undefined/undefined.mjs
function Undefined(options = {}) {
  return { ...options, [Kind]: "Undefined", type: "undefined" };
}
// node_modules/@sinclair/typebox/build/esm/type/uint8array/uint8array.mjs
function Uint8Array2(options = {}) {
  return { ...options, [Kind]: "Uint8Array", type: "Uint8Array" };
}
// node_modules/@sinclair/typebox/build/esm/type/const/const.mjs
function FromArray14(T) {
  return T.map((L) => FromValue(L, false));
}
function FromProperties8(value5) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(value5))
    Acc[K] = Readonly(FromValue(value5[K], false));
  return Acc;
}
function ConditionalReadonly(T, root) {
  return root === true ? T : Readonly(T);
}
function FromValue(value5, root) {
  return IsAsyncIterator2(value5) ? ConditionalReadonly(Any(), root) : IsIterator2(value5) ? ConditionalReadonly(Any(), root) : IsArray2(value5) ? Readonly(Tuple(FromArray14(value5))) : IsUint8Array2(value5) ? Uint8Array2() : IsDate2(value5) ? Date2() : IsObject2(value5) ? ConditionalReadonly(Object2(FromProperties8(value5)), root) : IsFunction2(value5) ? ConditionalReadonly(Function2([], Unknown()), root) : IsUndefined2(value5) ? Undefined() : IsNull2(value5) ? Null() : IsSymbol2(value5) ? Symbol2() : IsBigInt2(value5) ? BigInt2() : IsNumber2(value5) ? Literal(value5) : IsBoolean2(value5) ? Literal(value5) : IsString2(value5) ? Literal(value5) : Object2({});
}
function Const(T, options = {}) {
  return CloneType(FromValue(T, true), options);
}
// node_modules/@sinclair/typebox/build/esm/type/constructor-parameters/constructor-parameters.mjs
function ConstructorParameters(schema, options = {}) {
  return Tuple(CloneRest(schema.parameters), { ...options });
}
// node_modules/@sinclair/typebox/build/esm/type/deref/deref.mjs
function FromRest5(schema, references) {
  return schema.map((schema2) => Deref2(schema2, references));
}
function FromProperties9(properties, references) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(properties)) {
    Acc[K] = Deref2(properties[K], references);
  }
  return Acc;
}
function FromConstructor7(schema, references) {
  schema.parameters = FromRest5(schema.parameters, references);
  schema.returns = Deref2(schema.returns, references);
  return schema;
}
function FromFunction6(schema, references) {
  schema.parameters = FromRest5(schema.parameters, references);
  schema.returns = Deref2(schema.returns, references);
  return schema;
}
function FromIntersect15(schema, references) {
  schema.allOf = FromRest5(schema.allOf, references);
  return schema;
}
function FromUnion17(schema, references) {
  schema.anyOf = FromRest5(schema.anyOf, references);
  return schema;
}
function FromTuple14(schema, references) {
  if (IsUndefined2(schema.items))
    return schema;
  schema.items = FromRest5(schema.items, references);
  return schema;
}
function FromArray15(schema, references) {
  schema.items = Deref2(schema.items, references);
  return schema;
}
function FromObject12(schema, references) {
  schema.properties = FromProperties9(schema.properties, references);
  return schema;
}
function FromPromise7(schema, references) {
  schema.item = Deref2(schema.item, references);
  return schema;
}
function FromAsyncIterator6(schema, references) {
  schema.items = Deref2(schema.items, references);
  return schema;
}
function FromIterator6(schema, references) {
  schema.items = Deref2(schema.items, references);
  return schema;
}
function FromRef11(schema, references) {
  const target = references.find((remote) => remote.$id === schema.$ref);
  if (target === undefined)
    throw Error(`Unable to dereference schema with \$id ${schema.$ref}`);
  const discard8 = Discard(target, ["$id"]);
  return Deref2(discard8, references);
}
function DerefResolve(schema, references) {
  return IsConstructor(schema) ? FromConstructor7(schema, references) : IsFunction3(schema) ? FromFunction6(schema, references) : IsIntersect(schema) ? FromIntersect15(schema, references) : IsUnion(schema) ? FromUnion17(schema, references) : IsTuple(schema) ? FromTuple14(schema, references) : IsArray3(schema) ? FromArray15(schema, references) : IsObject3(schema) ? FromObject12(schema, references) : IsPromise2(schema) ? FromPromise7(schema, references) : IsAsyncIterator3(schema) ? FromAsyncIterator6(schema, references) : IsIterator3(schema) ? FromIterator6(schema, references) : IsRef(schema) ? FromRef11(schema, references) : schema;
}
function Deref2(schema, references) {
  return DerefResolve(CloneType(schema), CloneRest(references));
}
// node_modules/@sinclair/typebox/build/esm/type/enum/enum.mjs
function Enum(item, options = {}) {
  if (IsUndefined2(item))
    throw new Error("Enum undefined or empty");
  const values1 = globalThis.Object.getOwnPropertyNames(item).filter((key) => isNaN(key)).map((key) => item[key]);
  const values2 = [...new Set(values1)];
  const anyOf = values2.map((value7) => Literal(value7));
  return Union(anyOf, { ...options, [Hint]: "Enum" });
}
// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-template-literal.mjs
function ExcludeFromTemplateLiteral(L, R) {
  return Exclude(TemplateLiteralToUnion(L), R);
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude.mjs
function ExcludeRest(L, R) {
  const excluded = L.filter((inner) => ExtendsCheck(inner, R) === ExtendsResult.False);
  return excluded.length === 1 ? excluded[0] : Union(excluded);
}
function Exclude(L, R, options = {}) {
  if (IsTemplateLiteral(L))
    return CloneType(ExcludeFromTemplateLiteral(L, R), options);
  if (IsMappedResult(L))
    return CloneType(ExcludeFromMappedResult(L, R), options);
  return CloneType(IsUnion(L) ? ExcludeRest(L.anyOf, R) : ExtendsCheck(L, R) !== ExtendsResult.False ? Never() : L, options);
}

// node_modules/@sinclair/typebox/build/esm/type/exclude/exclude-from-mapped-result.mjs
function FromProperties10(P, U) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Exclude(P[K2], U);
  return Acc;
}
function FromMappedResult7(R, T) {
  return FromProperties10(R.properties, T);
}
function ExcludeFromMappedResult(R, T) {
  const P = FromMappedResult7(R, T);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-template-literal.mjs
function ExtractFromTemplateLiteral(L, R) {
  return Extract(TemplateLiteralToUnion(L), R);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract.mjs
function ExtractRest(L, R) {
  const extracted = L.filter((inner) => ExtendsCheck(inner, R) !== ExtendsResult.False);
  return extracted.length === 1 ? extracted[0] : Union(extracted);
}
function Extract(L, R, options = {}) {
  if (IsTemplateLiteral(L))
    return CloneType(ExtractFromTemplateLiteral(L, R), options);
  if (IsMappedResult(L))
    return CloneType(ExtractFromMappedResult(L, R), options);
  return CloneType(IsUnion(L) ? ExtractRest(L.anyOf, R) : ExtendsCheck(L, R) !== ExtendsResult.False ? L : Never(), options);
}

// node_modules/@sinclair/typebox/build/esm/type/extract/extract-from-mapped-result.mjs
function FromProperties11(P, T) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Extract(P[K2], T);
  return Acc;
}
function FromMappedResult8(R, T) {
  return FromProperties11(R.properties, T);
}
function ExtractFromMappedResult(R, T) {
  const P = FromMappedResult8(R, T);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/instance-type/instance-type.mjs
function InstanceType(schema, options = {}) {
  return CloneType(schema.returns, options);
}
// node_modules/@sinclair/typebox/build/esm/type/integer/integer.mjs
function Integer(options = {}) {
  return {
    ...options,
    [Kind]: "Integer",
    type: "integer"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic-from-mapped-key.mjs
function MappedIntrinsicPropertyKey(K, M, options) {
  return {
    [K]: Intrinsic(Literal(K), M, options)
  };
}
function MappedIntrinsicPropertyKeys(K, M, options) {
  return K.reduce((Acc, L) => {
    return { ...Acc, ...MappedIntrinsicPropertyKey(L, M, options) };
  }, {});
}
function MappedIntrinsicProperties(T, M, options) {
  return MappedIntrinsicPropertyKeys(T["keys"], M, options);
}
function IntrinsicFromMappedKey(T, M, options) {
  const P = MappedIntrinsicProperties(T, M, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/intrinsic.mjs
function ApplyUncapitalize(value7) {
  const [first, rest] = [value7.slice(0, 1), value7.slice(1)];
  return [first.toLowerCase(), rest].join("");
}
function ApplyCapitalize(value7) {
  const [first, rest] = [value7.slice(0, 1), value7.slice(1)];
  return [first.toUpperCase(), rest].join("");
}
function ApplyUppercase(value7) {
  return value7.toUpperCase();
}
function ApplyLowercase(value7) {
  return value7.toLowerCase();
}
function FromTemplateLiteral6(schema, mode, options) {
  const expression = TemplateLiteralParseExact(schema.pattern);
  const finite3 = IsTemplateLiteralExpressionFinite(expression);
  if (!finite3)
    return { ...schema, pattern: FromLiteralValue(schema.pattern, mode) };
  const strings = [...TemplateLiteralExpressionGenerate(expression)];
  const literals = strings.map((value7) => Literal(value7));
  const mapped12 = FromRest6(literals, mode);
  const union15 = Union(mapped12);
  return TemplateLiteral([union15], options);
}
function FromLiteralValue(value7, mode) {
  return typeof value7 === "string" ? mode === "Uncapitalize" ? ApplyUncapitalize(value7) : mode === "Capitalize" ? ApplyCapitalize(value7) : mode === "Uppercase" ? ApplyUppercase(value7) : mode === "Lowercase" ? ApplyLowercase(value7) : value7 : value7.toString();
}
function FromRest6(T, M) {
  return T.map((L) => Intrinsic(L, M));
}
function Intrinsic(schema, mode, options = {}) {
  return IsMappedKey(schema) ? IntrinsicFromMappedKey(schema, mode, options) : IsTemplateLiteral(schema) ? FromTemplateLiteral6(schema, mode, schema) : IsUnion(schema) ? Union(FromRest6(schema.anyOf, mode), options) : IsLiteral(schema) ? Literal(FromLiteralValue(schema.const, mode), options) : schema;
}

// node_modules/@sinclair/typebox/build/esm/type/intrinsic/capitalize.mjs
function Capitalize(T, options = {}) {
  return Intrinsic(T, "Capitalize", options);
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/lowercase.mjs
function Lowercase(T, options = {}) {
  return Intrinsic(T, "Lowercase", options);
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/uncapitalize.mjs
function Uncapitalize(T, options = {}) {
  return Intrinsic(T, "Uncapitalize", options);
}
// node_modules/@sinclair/typebox/build/esm/type/intrinsic/uppercase.mjs
function Uppercase(T, options = {}) {
  return Intrinsic(T, "Uppercase", options);
}
// node_modules/@sinclair/typebox/build/esm/type/not/not.mjs
function Not2(schema, options) {
  return {
    ...options,
    [Kind]: "Not",
    not: CloneType(schema)
  };
}
// node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-result.mjs
function FromProperties12(P, K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Omit(P[K2], K, options);
  return Acc;
}
function FromMappedResult9(R, K, options) {
  return FromProperties12(R.properties, K, options);
}
function OmitFromMappedResult(R, K, options) {
  const P = FromMappedResult9(R, K, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit.mjs
function FromIntersect16(T, K) {
  return T.map((T2) => OmitResolve(T2, K));
}
function FromUnion18(T, K) {
  return T.map((T2) => OmitResolve(T2, K));
}
function FromProperty2(T, K) {
  const { [K]: _, ...R } = T;
  return R;
}
function FromProperties13(T, K) {
  return K.reduce((T2, K2) => FromProperty2(T2, K2), T);
}
function OmitResolve(T, K) {
  return IsIntersect(T) ? Intersect(FromIntersect16(T.allOf, K)) : IsUnion(T) ? Union(FromUnion18(T.anyOf, K)) : IsObject3(T) ? Object2(FromProperties13(T.properties, K)) : Object2({});
}
function Omit(T, K, options = {}) {
  if (IsMappedKey(K))
    return OmitFromMappedKey(T, K, options);
  if (IsMappedResult(T))
    return OmitFromMappedResult(T, K, options);
  const I = IsSchema(K) ? IndexPropertyKeys(K) : K;
  const D = Discard(T, [TransformKind, "$id", "required"]);
  const R = CloneType(OmitResolve(T, I), options);
  return { ...D, ...R };
}

// node_modules/@sinclair/typebox/build/esm/type/omit/omit-from-mapped-key.mjs
function FromPropertyKey2(T, K, options) {
  return {
    [K]: Omit(T, [K], options)
  };
}
function FromPropertyKeys2(T, K, options) {
  return K.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey2(T, LK, options) };
  }, {});
}
function FromMappedKey3(T, K, options) {
  return FromPropertyKeys2(T, K.keys, options);
}
function OmitFromMappedKey(T, K, options) {
  const P = FromMappedKey3(T, K, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/parameters/parameters.mjs
function Parameters(schema, options = {}) {
  return Tuple(CloneRest(schema.parameters), { ...options });
}
// node_modules/@sinclair/typebox/build/esm/type/partial/partial.mjs
function FromRest7(T) {
  return T.map((L) => PartialResolve(L));
}
function FromProperties14(T) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(T))
    Acc[K] = Optional(T[K]);
  return Acc;
}
function PartialResolve(T) {
  return IsIntersect(T) ? Intersect(FromRest7(T.allOf)) : IsUnion(T) ? Union(FromRest7(T.anyOf)) : IsObject3(T) ? Object2(FromProperties14(T.properties)) : Object2({});
}
function Partial(T, options = {}) {
  if (IsMappedResult(T))
    return PartialFromMappedResult(T, options);
  const D = Discard(T, [TransformKind, "$id", "required"]);
  const R = CloneType(PartialResolve(T), options);
  return { ...D, ...R };
}

// node_modules/@sinclair/typebox/build/esm/type/partial/partial-from-mapped-result.mjs
function FromProperties15(K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(K))
    Acc[K2] = Partial(K[K2], options);
  return Acc;
}
function FromMappedResult10(R, options) {
  return FromProperties15(R.properties, options);
}
function PartialFromMappedResult(R, options) {
  const P = FromMappedResult10(R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-result.mjs
function FromProperties16(P, K, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Pick(P[K2], K, options);
  return Acc;
}
function FromMappedResult11(R, K, options) {
  return FromProperties16(R.properties, K, options);
}
function PickFromMappedResult(R, K, options) {
  const P = FromMappedResult11(R, K, options);
  return MappedResult(P);
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick.mjs
function FromIntersect17(T, K) {
  return T.map((T2) => PickResolve(T2, K));
}
function FromUnion19(T, K) {
  return T.map((T2) => PickResolve(T2, K));
}
function FromProperties17(T, K) {
  const Acc = {};
  for (const K2 of K)
    if (K2 in T)
      Acc[K2] = T[K2];
  return Acc;
}
function PickResolve(T, K) {
  return IsIntersect(T) ? Intersect(FromIntersect17(T.allOf, K)) : IsUnion(T) ? Union(FromUnion19(T.anyOf, K)) : IsObject3(T) ? Object2(FromProperties17(T.properties, K)) : Object2({});
}
function Pick(T, K, options = {}) {
  if (IsMappedKey(K))
    return PickFromMappedKey(T, K, options);
  if (IsMappedResult(T))
    return PickFromMappedResult(T, K, options);
  const I = IsSchema(K) ? IndexPropertyKeys(K) : K;
  const D = Discard(T, [TransformKind, "$id", "required"]);
  const R = CloneType(PickResolve(T, I), options);
  return { ...D, ...R };
}

// node_modules/@sinclair/typebox/build/esm/type/pick/pick-from-mapped-key.mjs
function FromPropertyKey3(T, K, options) {
  return {
    [K]: Pick(T, [K], options)
  };
}
function FromPropertyKeys3(T, K, options) {
  return K.reduce((Acc, LK) => {
    return { ...Acc, ...FromPropertyKey3(T, LK, options) };
  }, {});
}
function FromMappedKey4(T, K, options) {
  return FromPropertyKeys3(T, K.keys, options);
}
function PickFromMappedKey(T, K, options) {
  const P = FromMappedKey4(T, K, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/readonly-optional/readonly-optional.mjs
function ReadonlyOptional(schema) {
  return Readonly(Optional(schema));
}
// node_modules/@sinclair/typebox/build/esm/type/record/record.mjs
function RecordCreateFromPattern(pattern3, T, options) {
  return {
    ...options,
    [Kind]: "Record",
    type: "object",
    patternProperties: { [pattern3]: CloneType(T) }
  };
}
function RecordCreateFromKeys(K, T, options) {
  const Acc = {};
  for (const K2 of K)
    Acc[K2] = CloneType(T);
  return Object2(Acc, { ...options, [Hint]: "Record" });
}
function FromTemplateLiteralKey(K, T, options) {
  return IsTemplateLiteralFinite(K) ? RecordCreateFromKeys(IndexPropertyKeys(K), T, options) : RecordCreateFromPattern(K.pattern, T, options);
}
function FromUnionKey(K, T, options) {
  return RecordCreateFromKeys(IndexPropertyKeys(Union(K)), T, options);
}
function FromLiteralKey(K, T, options) {
  return RecordCreateFromKeys([K.toString()], T, options);
}
function FromRegExpKey(K, T, options) {
  return RecordCreateFromPattern(K.source, T, options);
}
function FromStringKey(K, T, options) {
  const pattern3 = IsUndefined2(K.pattern) ? PatternStringExact : K.pattern;
  return RecordCreateFromPattern(pattern3, T, options);
}
function FromIntegerKey(_, T, options) {
  return RecordCreateFromPattern(PatternNumberExact, T, options);
}
function FromNumberKey(_, T, options) {
  return RecordCreateFromPattern(PatternNumberExact, T, options);
}
function Record(K, T, options = {}) {
  return IsUnion(K) ? FromUnionKey(K.anyOf, T, options) : IsTemplateLiteral(K) ? FromTemplateLiteralKey(K, T, options) : IsLiteral(K) ? FromLiteralKey(K.const, T, options) : IsInteger2(K) ? FromIntegerKey(K, T, options) : IsNumber3(K) ? FromNumberKey(K, T, options) : IsRegExp2(K) ? FromRegExpKey(K, T, options) : IsString3(K) ? FromStringKey(K, T, options) : Never(options);
}
// node_modules/@sinclair/typebox/build/esm/type/recursive/recursive.mjs
function Recursive(callback, options = {}) {
  if (IsUndefined2(options.$id))
    options.$id = `T${Ordinal++}`;
  const thisType = callback({ [Kind]: "This", $ref: `${options.$id}` });
  thisType.$id = options.$id;
  return CloneType({ ...options, [Hint]: "Recursive", ...thisType });
}
var Ordinal = 0;
// node_modules/@sinclair/typebox/build/esm/type/ref/ref.mjs
function Ref(unresolved, options = {}) {
  if (IsString2(unresolved))
    return { ...options, [Kind]: "Ref", $ref: unresolved };
  if (IsUndefined2(unresolved.$id))
    throw new Error("Reference target type must specify an $id");
  return {
    ...options,
    [Kind]: "Ref",
    $ref: unresolved.$id
  };
}
// node_modules/@sinclair/typebox/build/esm/type/regexp/regexp.mjs
function RegExp2(unresolved, options = {}) {
  const expr = IsString2(unresolved) ? new globalThis.RegExp(unresolved) : unresolved;
  return { ...options, [Kind]: "RegExp", type: "RegExp", source: expr.source, flags: expr.flags };
}
// node_modules/@sinclair/typebox/build/esm/type/required/required.mjs
function FromRest8(T) {
  return T.map((L) => RequiredResolve(L));
}
function FromProperties18(T) {
  const Acc = {};
  for (const K of globalThis.Object.getOwnPropertyNames(T))
    Acc[K] = Discard(T[K], [OptionalKind]);
  return Acc;
}
function RequiredResolve(T) {
  return IsIntersect(T) ? Intersect(FromRest8(T.allOf)) : IsUnion(T) ? Union(FromRest8(T.anyOf)) : IsObject3(T) ? Object2(FromProperties18(T.properties)) : Object2({});
}
function Required(T, options = {}) {
  if (IsMappedResult(T)) {
    return RequiredFromMappedResult(T, options);
  } else {
    const D = Discard(T, [TransformKind, "$id", "required"]);
    const R = CloneType(RequiredResolve(T), options);
    return { ...D, ...R };
  }
}

// node_modules/@sinclair/typebox/build/esm/type/required/required-from-mapped-result.mjs
function FromProperties19(P, options) {
  const Acc = {};
  for (const K2 of globalThis.Object.getOwnPropertyNames(P))
    Acc[K2] = Required(P[K2], options);
  return Acc;
}
function FromMappedResult12(R, options) {
  return FromProperties19(R.properties, options);
}
function RequiredFromMappedResult(R, options) {
  const P = FromMappedResult12(R, options);
  return MappedResult(P);
}
// node_modules/@sinclair/typebox/build/esm/type/rest/rest.mjs
function RestResolve(T) {
  return IsIntersect(T) ? CloneRest(T.allOf) : IsUnion(T) ? CloneRest(T.anyOf) : IsTuple(T) ? CloneRest(T.items ?? []) : [];
}
function Rest(T) {
  return CloneRest(RestResolve(T));
}
// node_modules/@sinclair/typebox/build/esm/type/return-type/return-type.mjs
function ReturnType(schema, options = {}) {
  return CloneType(schema.returns, options);
}
// node_modules/@sinclair/typebox/build/esm/type/strict/strict.mjs
function Strict(schema2) {
  return JSON.parse(JSON.stringify(schema2));
}
// node_modules/@sinclair/typebox/build/esm/type/transform/transform.mjs
function Transform(schema2) {
  return new TransformDecodeBuilder(schema2);
}

class TransformDecodeBuilder {
  constructor(schema2) {
    this.schema = schema2;
  }
  Decode(decode2) {
    return new TransformEncodeBuilder(this.schema, decode2);
  }
}

class TransformEncodeBuilder {
  constructor(schema2, decode2) {
    this.schema = schema2;
    this.decode = decode2;
  }
  EncodeTransform(encode2, schema2) {
    const Encode2 = (value11) => schema2[TransformKind].Encode(encode2(value11));
    const Decode2 = (value11) => this.decode(schema2[TransformKind].Decode(value11));
    const Codec = { Encode: Encode2, Decode: Decode2 };
    return { ...schema2, [TransformKind]: Codec };
  }
  EncodeSchema(encode2, schema2) {
    const Codec = { Decode: this.decode, Encode: encode2 };
    return { ...schema2, [TransformKind]: Codec };
  }
  Encode(encode2) {
    const schema2 = CloneType(this.schema);
    return IsTransform(schema2) ? this.EncodeTransform(encode2, schema2) : this.EncodeSchema(encode2, schema2);
  }
}
// node_modules/@sinclair/typebox/build/esm/type/void/void.mjs
function Void(options = {}) {
  return {
    ...options,
    [Kind]: "Void",
    type: "void"
  };
}
// node_modules/@sinclair/typebox/build/esm/type/type/type.mjs
var exports_type3 = {};
__export(exports_type3, {
  Void: () => Void,
  Uppercase: () => Uppercase,
  Unsafe: () => Unsafe,
  Unknown: () => Unknown,
  Union: () => Union,
  Undefined: () => Undefined,
  Uncapitalize: () => Uncapitalize,
  Uint8Array: () => Uint8Array2,
  Tuple: () => Tuple,
  Transform: () => Transform,
  TemplateLiteral: () => TemplateLiteral,
  Symbol: () => Symbol2,
  String: () => String2,
  Strict: () => Strict,
  ReturnType: () => ReturnType,
  Rest: () => Rest,
  Required: () => Required,
  RegExp: () => RegExp2,
  Ref: () => Ref,
  Recursive: () => Recursive,
  Record: () => Record,
  ReadonlyOptional: () => ReadonlyOptional,
  Readonly: () => Readonly,
  Promise: () => Promise2,
  Pick: () => Pick,
  Partial: () => Partial,
  Parameters: () => Parameters,
  Optional: () => Optional,
  Omit: () => Omit,
  Object: () => Object2,
  Number: () => Number2,
  Null: () => Null,
  Not: () => Not2,
  Never: () => Never,
  Mapped: () => Mapped,
  Lowercase: () => Lowercase,
  Literal: () => Literal,
  KeyOf: () => KeyOf,
  Iterator: () => Iterator,
  Intersect: () => Intersect,
  Integer: () => Integer,
  InstanceType: () => InstanceType,
  Index: () => Index,
  Function: () => Function2,
  Extract: () => Extract,
  Extends: () => Extends,
  Exclude: () => Exclude,
  Enum: () => Enum,
  Deref: () => Deref2,
  Date: () => Date2,
  ConstructorParameters: () => ConstructorParameters,
  Constructor: () => Constructor,
  Const: () => Const,
  Composite: () => Composite,
  Capitalize: () => Capitalize,
  Boolean: () => Boolean2,
  BigInt: () => BigInt2,
  Awaited: () => Awaited,
  AsyncIterator: () => AsyncIterator,
  Array: () => Array2,
  Any: () => Any
});

// node_modules/@sinclair/typebox/build/esm/type/type/index.mjs
var Type = exports_type3;
// node_modules/@sinclair/typebox/build/esm/compiler/compiler.mjs
class TypeCheck {
  constructor(schema3, references, checkFunc, code) {
    this.schema = schema3;
    this.references = references;
    this.checkFunc = checkFunc;
    this.code = code;
    this.hasTransform = HasTransform(schema3, references);
  }
  Code() {
    return this.code;
  }
  Errors(value11) {
    return Errors(this.schema, this.references, value11);
  }
  Check(value11) {
    return this.checkFunc(value11);
  }
  Decode(value11) {
    if (!this.checkFunc(value11))
      throw new TransformDecodeCheckError(this.schema, value11, this.Errors(value11).First());
    return this.hasTransform ? TransformDecode(this.schema, this.references, value11) : value11;
  }
  Encode(value11) {
    const encoded = this.hasTransform ? TransformEncode(this.schema, this.references, value11) : value11;
    if (!this.checkFunc(encoded))
      throw new TransformEncodeCheckError(this.schema, value11, this.Errors(value11).First());
    return encoded;
  }
}
var Character;
(function(Character2) {
  function DollarSign(code) {
    return code === 36;
  }
  Character2.DollarSign = DollarSign;
  function IsUnderscore(code) {
    return code === 95;
  }
  Character2.IsUnderscore = IsUnderscore;
  function IsAlpha(code) {
    return code >= 65 && code <= 90 || code >= 97 && code <= 122;
  }
  Character2.IsAlpha = IsAlpha;
  function IsNumeric(code) {
    return code >= 48 && code <= 57;
  }
  Character2.IsNumeric = IsNumeric;
})(Character || (Character = {}));
var MemberExpression;
(function(MemberExpression2) {
  function IsFirstCharacterNumeric(value11) {
    if (value11.length === 0)
      return false;
    return Character.IsNumeric(value11.charCodeAt(0));
  }
  function IsAccessor(value11) {
    if (IsFirstCharacterNumeric(value11))
      return false;
    for (let i = 0;i < value11.length; i++) {
      const code = value11.charCodeAt(i);
      const check11 = Character.IsAlpha(code) || Character.IsNumeric(code) || Character.DollarSign(code) || Character.IsUnderscore(code);
      if (!check11)
        return false;
    }
    return true;
  }
  function EscapeHyphen(key) {
    return key.replace(/'/g, "\\'");
  }
  function Encode2(object13, key) {
    return IsAccessor(key) ? `${object13}.${key}` : `${object13}['${EscapeHyphen(key)}']`;
  }
  MemberExpression2.Encode = Encode2;
})(MemberExpression || (MemberExpression = {}));
var Identifier;
(function(Identifier2) {
  function Encode2($id) {
    const buffer = [];
    for (let i = 0;i < $id.length; i++) {
      const code = $id.charCodeAt(i);
      if (Character.IsNumeric(code) || Character.IsAlpha(code)) {
        buffer.push($id.charAt(i));
      } else {
        buffer.push(`_${code}_`);
      }
    }
    return buffer.join("").replace(/__/g, "_");
  }
  Identifier2.Encode = Encode2;
})(Identifier || (Identifier = {}));
var LiteralString;
(function(LiteralString2) {
  function Escape3(content) {
    return content.replace(/'/g, "\\'");
  }
  LiteralString2.Escape = Escape3;
})(LiteralString || (LiteralString = {}));

class TypeCompilerUnknownTypeError extends TypeBoxError {
  constructor(schema3) {
    super("Unknown type");
    this.schema = schema3;
  }
}

class TypeCompilerTypeGuardError extends TypeBoxError {
  constructor(schema3) {
    super("Preflight validation check failed to guard for the given schema");
    this.schema = schema3;
  }
}
var Policy;
(function(Policy2) {
  function IsExactOptionalProperty(value11, key, expression) {
    return TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${key}' in ${value11} ? ${expression} : true)` : `(${MemberExpression.Encode(value11, key)} !== undefined ? ${expression} : true)`;
  }
  Policy2.IsExactOptionalProperty = IsExactOptionalProperty;
  function IsObjectLike(value11) {
    return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value11} === 'object' && ${value11} !== null && !Array.isArray(${value11}))` : `(typeof ${value11} === 'object' && ${value11} !== null)`;
  }
  Policy2.IsObjectLike = IsObjectLike;
  function IsRecordLike(value11) {
    return !TypeSystemPolicy.AllowArrayObject ? `(typeof ${value11} === 'object' && ${value11} !== null && !Array.isArray(${value11}) && !(${value11} instanceof Date) && !(${value11} instanceof Uint8Array))` : `(typeof ${value11} === 'object' && ${value11} !== null && !(${value11} instanceof Date) && !(${value11} instanceof Uint8Array))`;
  }
  Policy2.IsRecordLike = IsRecordLike;
  function IsNumberLike(value11) {
    return TypeSystemPolicy.AllowNaN ? `typeof ${value11} === 'number'` : `Number.isFinite(${value11})`;
  }
  Policy2.IsNumberLike = IsNumberLike;
  function IsVoidLike(value11) {
    return TypeSystemPolicy.AllowNullVoid ? `(${value11} === undefined || ${value11} === null)` : `${value11} === undefined`;
  }
  Policy2.IsVoidLike = IsVoidLike;
})(Policy || (Policy = {}));
var TypeCompiler;
(function(TypeCompiler2) {
  function IsAnyOrUnknown2(schema3) {
    return schema3[Kind] === "Any" || schema3[Kind] === "Unknown";
  }
  function* FromAny5(schema3, references, value11) {
    yield "true";
  }
  function* FromArray16(schema3, references, value11) {
    yield `Array.isArray(${value11})`;
    const [parameter, accumulator] = [CreateParameter("value", "any"), CreateParameter("acc", "number")];
    if (IsNumber(schema3.maxItems))
      yield `${value11}.length <= ${schema3.maxItems}`;
    if (IsNumber(schema3.minItems))
      yield `${value11}.length >= ${schema3.minItems}`;
    const elementExpression = CreateExpression(schema3.items, references, "value");
    yield `${value11}.every((${parameter}) => ${elementExpression})`;
    if (IsSchema2(schema3.contains) || IsNumber(schema3.minContains) || IsNumber(schema3.maxContains)) {
      const containsSchema = IsSchema2(schema3.contains) ? schema3.contains : Never();
      const checkExpression = CreateExpression(containsSchema, references, "value");
      const checkMinContains = IsNumber(schema3.minContains) ? [`(count >= ${schema3.minContains})`] : [];
      const checkMaxContains = IsNumber(schema3.maxContains) ? [`(count <= ${schema3.maxContains})`] : [];
      const checkCount = `const count = value.reduce((${accumulator}, ${parameter}) => ${checkExpression} ? acc + 1 : acc, 0)`;
      const check11 = [`(count > 0)`, ...checkMinContains, ...checkMaxContains].join(" && ");
      yield `((${parameter}) => { ${checkCount}; return ${check11}})(${value11})`;
    }
    if (schema3.uniqueItems === true) {
      const check11 = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;
      const block = `const set = new Set(); for(const element of value) { ${check11} }`;
      yield `((${parameter}) => { ${block} )(${value11})`;
    }
  }
  function* FromAsyncIterator7(schema3, references, value11) {
    yield `(typeof value === 'object' && Symbol.asyncIterator in ${value11})`;
  }
  function* FromBigInt6(schema3, references, value11) {
    yield `(typeof ${value11} === 'bigint')`;
    if (IsBigInt(schema3.exclusiveMaximum))
      yield `${value11} < BigInt(${schema3.exclusiveMaximum})`;
    if (IsBigInt(schema3.exclusiveMinimum))
      yield `${value11} > BigInt(${schema3.exclusiveMinimum})`;
    if (IsBigInt(schema3.maximum))
      yield `${value11} <= BigInt(${schema3.maximum})`;
    if (IsBigInt(schema3.minimum))
      yield `${value11} >= BigInt(${schema3.minimum})`;
    if (IsBigInt(schema3.multipleOf))
      yield `(${value11} % BigInt(${schema3.multipleOf})) === 0`;
  }
  function* FromBoolean6(schema3, references, value11) {
    yield `(typeof ${value11} === 'boolean')`;
  }
  function* FromConstructor8(schema3, references, value11) {
    yield* Visit17(schema3.returns, references, `${value11}.prototype`);
  }
  function* FromDate6(schema3, references, value11) {
    yield `(${value11} instanceof Date) && Number.isFinite(${value11}.getTime())`;
    if (IsNumber(schema3.exclusiveMaximumTimestamp))
      yield `${value11}.getTime() < ${schema3.exclusiveMaximumTimestamp}`;
    if (IsNumber(schema3.exclusiveMinimumTimestamp))
      yield `${value11}.getTime() > ${schema3.exclusiveMinimumTimestamp}`;
    if (IsNumber(schema3.maximumTimestamp))
      yield `${value11}.getTime() <= ${schema3.maximumTimestamp}`;
    if (IsNumber(schema3.minimumTimestamp))
      yield `${value11}.getTime() >= ${schema3.minimumTimestamp}`;
    if (IsNumber(schema3.multipleOfTimestamp))
      yield `(${value11}.getTime() % ${schema3.multipleOfTimestamp}) === 0`;
  }
  function* FromFunction7(schema3, references, value11) {
    yield `(typeof ${value11} === 'function')`;
  }
  function* FromInteger6(schema3, references, value11) {
    yield `Number.isInteger(${value11})`;
    if (IsNumber(schema3.exclusiveMaximum))
      yield `${value11} < ${schema3.exclusiveMaximum}`;
    if (IsNumber(schema3.exclusiveMinimum))
      yield `${value11} > ${schema3.exclusiveMinimum}`;
    if (IsNumber(schema3.maximum))
      yield `${value11} <= ${schema3.maximum}`;
    if (IsNumber(schema3.minimum))
      yield `${value11} >= ${schema3.minimum}`;
    if (IsNumber(schema3.multipleOf))
      yield `(${value11} % ${schema3.multipleOf}) === 0`;
  }
  function* FromIntersect18(schema3, references, value11) {
    const check1 = schema3.allOf.map((schema4) => CreateExpression(schema4, references, value11)).join(" && ");
    if (schema3.unevaluatedProperties === false) {
      const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema3))};`);
      const check22 = `Object.getOwnPropertyNames(${value11}).every(key => ${keyCheck}.test(key))`;
      yield `(${check1} && ${check22})`;
    } else if (IsSchema2(schema3.unevaluatedProperties)) {
      const keyCheck = CreateVariable(`${new RegExp(KeyOfPattern(schema3))};`);
      const check22 = `Object.getOwnPropertyNames(${value11}).every(key => ${keyCheck}.test(key) || ${CreateExpression(schema3.unevaluatedProperties, references, `${value11}[key]`)})`;
      yield `(${check1} && ${check22})`;
    } else {
      yield `(${check1})`;
    }
  }
  function* FromIterator7(schema3, references, value11) {
    yield `(typeof value === 'object' && Symbol.iterator in ${value11})`;
  }
  function* FromLiteral7(schema3, references, value11) {
    if (typeof schema3.const === "number" || typeof schema3.const === "boolean") {
      yield `(${value11} === ${schema3.const})`;
    } else {
      yield `(${value11} === '${LiteralString.Escape(schema3.const)}')`;
    }
  }
  function* FromNever6(schema3, references, value11) {
    yield `false`;
  }
  function* FromNot8(schema3, references, value11) {
    const expression = CreateExpression(schema3.not, references, value11);
    yield `(!${expression})`;
  }
  function* FromNull6(schema3, references, value11) {
    yield `(${value11} === null)`;
  }
  function* FromNumber6(schema3, references, value11) {
    yield Policy.IsNumberLike(value11);
    if (IsNumber(schema3.exclusiveMaximum))
      yield `${value11} < ${schema3.exclusiveMaximum}`;
    if (IsNumber(schema3.exclusiveMinimum))
      yield `${value11} > ${schema3.exclusiveMinimum}`;
    if (IsNumber(schema3.maximum))
      yield `${value11} <= ${schema3.maximum}`;
    if (IsNumber(schema3.minimum))
      yield `${value11} >= ${schema3.minimum}`;
    if (IsNumber(schema3.multipleOf))
      yield `(${value11} % ${schema3.multipleOf}) === 0`;
  }
  function* FromObject13(schema3, references, value11) {
    yield Policy.IsObjectLike(value11);
    if (IsNumber(schema3.minProperties))
      yield `Object.getOwnPropertyNames(${value11}).length >= ${schema3.minProperties}`;
    if (IsNumber(schema3.maxProperties))
      yield `Object.getOwnPropertyNames(${value11}).length <= ${schema3.maxProperties}`;
    const knownKeys = Object.getOwnPropertyNames(schema3.properties);
    for (const knownKey of knownKeys) {
      const memberExpression = MemberExpression.Encode(value11, knownKey);
      const property = schema3.properties[knownKey];
      if (schema3.required && schema3.required.includes(knownKey)) {
        yield* Visit17(property, references, memberExpression);
        if (ExtendsUndefinedCheck(property) || IsAnyOrUnknown2(property))
          yield `('${knownKey}' in ${value11})`;
      } else {
        const expression = CreateExpression(property, references, memberExpression);
        yield Policy.IsExactOptionalProperty(value11, knownKey, expression);
      }
    }
    if (schema3.additionalProperties === false) {
      if (schema3.required && schema3.required.length === knownKeys.length) {
        yield `Object.getOwnPropertyNames(${value11}).length === ${knownKeys.length}`;
      } else {
        const keys = `[${knownKeys.map((key) => `'${key}'`).join(", ")}]`;
        yield `Object.getOwnPropertyNames(${value11}).every(key => ${keys}.includes(key))`;
      }
    }
    if (typeof schema3.additionalProperties === "object") {
      const expression = CreateExpression(schema3.additionalProperties, references, `${value11}[key]`);
      const keys = `[${knownKeys.map((key) => `'${key}'`).join(", ")}]`;
      yield `(Object.getOwnPropertyNames(${value11}).every(key => ${keys}.includes(key) || ${expression}))`;
    }
  }
  function* FromPromise8(schema3, references, value11) {
    yield `(typeof value === 'object' && typeof ${value11}.then === 'function')`;
  }
  function* FromRecord12(schema3, references, value11) {
    yield Policy.IsRecordLike(value11);
    if (IsNumber(schema3.minProperties))
      yield `Object.getOwnPropertyNames(${value11}).length >= ${schema3.minProperties}`;
    if (IsNumber(schema3.maxProperties))
      yield `Object.getOwnPropertyNames(${value11}).length <= ${schema3.maxProperties}`;
    const [patternKey, patternSchema] = Object.entries(schema3.patternProperties)[0];
    const variable = CreateVariable(`${new RegExp(patternKey)}`);
    const check1 = CreateExpression(patternSchema, references, "value");
    const check22 = IsSchema2(schema3.additionalProperties) ? CreateExpression(schema3.additionalProperties, references, value11) : schema3.additionalProperties === false ? "false" : "true";
    const expression = `(${variable}.test(key) ? ${check1} : ${check22})`;
    yield `(Object.entries(${value11}).every(([key, value]) => ${expression}))`;
  }
  function* FromRef12(schema3, references, value11) {
    const target = Deref(schema3, references);
    if (state.functions.has(schema3.$ref))
      return yield `${CreateFunctionName(schema3.$ref)}(${value11})`;
    yield* Visit17(target, references, value11);
  }
  function* FromRegExp5(schema3, references, value11) {
    const variable = CreateVariable(`${new RegExp(schema3.source, schema3.flags)};`);
    yield `(typeof ${value11} === 'string')`;
    if (IsNumber(schema3.maxLength))
      yield `${value11}.length <= ${schema3.maxLength}`;
    if (IsNumber(schema3.minLength))
      yield `${value11}.length >= ${schema3.minLength}`;
    yield `${variable}.test(${value11})`;
  }
  function* FromString6(schema3, references, value11) {
    yield `(typeof ${value11} === 'string')`;
    if (IsNumber(schema3.maxLength))
      yield `${value11}.length <= ${schema3.maxLength}`;
    if (IsNumber(schema3.minLength))
      yield `${value11}.length >= ${schema3.minLength}`;
    if (schema3.pattern !== undefined) {
      const variable = CreateVariable(`${new RegExp(schema3.pattern)};`);
      yield `${variable}.test(${value11})`;
    }
    if (schema3.format !== undefined) {
      yield `format('${schema3.format}', ${value11})`;
    }
  }
  function* FromSymbol6(schema3, references, value11) {
    yield `(typeof ${value11} === 'symbol')`;
  }
  function* FromTemplateLiteral7(schema3, references, value11) {
    yield `(typeof ${value11} === 'string')`;
    const variable = CreateVariable(`${new RegExp(schema3.pattern)};`);
    yield `${variable}.test(${value11})`;
  }
  function* FromThis11(schema3, references, value11) {
    yield `${CreateFunctionName(schema3.$ref)}(${value11})`;
  }
  function* FromTuple15(schema3, references, value11) {
    yield `Array.isArray(${value11})`;
    if (schema3.items === undefined)
      return yield `${value11}.length === 0`;
    yield `(${value11}.length === ${schema3.maxItems})`;
    for (let i = 0;i < schema3.items.length; i++) {
      const expression = CreateExpression(schema3.items[i], references, `${value11}[${i}]`);
      yield `${expression}`;
    }
  }
  function* FromUndefined6(schema3, references, value11) {
    yield `${value11} === undefined`;
  }
  function* FromUnion20(schema3, references, value11) {
    const expressions = schema3.anyOf.map((schema4) => CreateExpression(schema4, references, value11));
    yield `(${expressions.join(" || ")})`;
  }
  function* FromUint8Array5(schema3, references, value11) {
    yield `${value11} instanceof Uint8Array`;
    if (IsNumber(schema3.maxByteLength))
      yield `(${value11}.length <= ${schema3.maxByteLength})`;
    if (IsNumber(schema3.minByteLength))
      yield `(${value11}.length >= ${schema3.minByteLength})`;
  }
  function* FromUnknown5(schema3, references, value11) {
    yield "true";
  }
  function* FromVoid5(schema3, references, value11) {
    yield Policy.IsVoidLike(value11);
  }
  function* FromKind4(schema3, references, value11) {
    const instance = state.instances.size;
    state.instances.set(instance, schema3);
    yield `kind('${schema3[Kind]}', ${instance}, ${value11})`;
  }
  function* Visit17(schema3, references, value11, useHoisting = true) {
    const references_ = IsString(schema3.$id) ? [...references, schema3] : references;
    const schema_ = schema3;
    if (useHoisting && IsString(schema3.$id)) {
      const functionName = CreateFunctionName(schema3.$id);
      if (state.functions.has(functionName)) {
        return yield `${functionName}(${value11})`;
      } else {
        const functionCode = CreateFunction(functionName, schema3, references, "value", false);
        state.functions.set(functionName, functionCode);
        return yield `${functionName}(${value11})`;
      }
    }
    switch (schema_[Kind]) {
      case "Any":
        return yield* FromAny5(schema_, references_, value11);
      case "Array":
        return yield* FromArray16(schema_, references_, value11);
      case "AsyncIterator":
        return yield* FromAsyncIterator7(schema_, references_, value11);
      case "BigInt":
        return yield* FromBigInt6(schema_, references_, value11);
      case "Boolean":
        return yield* FromBoolean6(schema_, references_, value11);
      case "Constructor":
        return yield* FromConstructor8(schema_, references_, value11);
      case "Date":
        return yield* FromDate6(schema_, references_, value11);
      case "Function":
        return yield* FromFunction7(schema_, references_, value11);
      case "Integer":
        return yield* FromInteger6(schema_, references_, value11);
      case "Intersect":
        return yield* FromIntersect18(schema_, references_, value11);
      case "Iterator":
        return yield* FromIterator7(schema_, references_, value11);
      case "Literal":
        return yield* FromLiteral7(schema_, references_, value11);
      case "Never":
        return yield* FromNever6(schema_, references_, value11);
      case "Not":
        return yield* FromNot8(schema_, references_, value11);
      case "Null":
        return yield* FromNull6(schema_, references_, value11);
      case "Number":
        return yield* FromNumber6(schema_, references_, value11);
      case "Object":
        return yield* FromObject13(schema_, references_, value11);
      case "Promise":
        return yield* FromPromise8(schema_, references_, value11);
      case "Record":
        return yield* FromRecord12(schema_, references_, value11);
      case "Ref":
        return yield* FromRef12(schema_, references_, value11);
      case "RegExp":
        return yield* FromRegExp5(schema_, references_, value11);
      case "String":
        return yield* FromString6(schema_, references_, value11);
      case "Symbol":
        return yield* FromSymbol6(schema_, references_, value11);
      case "TemplateLiteral":
        return yield* FromTemplateLiteral7(schema_, references_, value11);
      case "This":
        return yield* FromThis11(schema_, references_, value11);
      case "Tuple":
        return yield* FromTuple15(schema_, references_, value11);
      case "Undefined":
        return yield* FromUndefined6(schema_, references_, value11);
      case "Union":
        return yield* FromUnion20(schema_, references_, value11);
      case "Uint8Array":
        return yield* FromUint8Array5(schema_, references_, value11);
      case "Unknown":
        return yield* FromUnknown5(schema_, references_, value11);
      case "Void":
        return yield* FromVoid5(schema_, references_, value11);
      default:
        if (!exports_type.Has(schema_[Kind]))
          throw new TypeCompilerUnknownTypeError(schema3);
        return yield* FromKind4(schema_, references_, value11);
    }
  }
  const state = {
    language: "javascript",
    functions: new Map,
    variables: new Map,
    instances: new Map
  };
  function CreateExpression(schema3, references, value11, useHoisting = true) {
    return `(${[...Visit17(schema3, references, value11, useHoisting)].join(" && ")})`;
  }
  function CreateFunctionName($id) {
    return `check_${Identifier.Encode($id)}`;
  }
  function CreateVariable(expression) {
    const variableName = `local_${state.variables.size}`;
    state.variables.set(variableName, `const ${variableName} = ${expression}`);
    return variableName;
  }
  function CreateFunction(name, schema3, references, value11, useHoisting = true) {
    const [newline, pad] = ["\n", (length) => "".padStart(length, " ")];
    const parameter = CreateParameter("value", "any");
    const returns = CreateReturns("boolean");
    const expression = [...Visit17(schema3, references, value11, useHoisting)].map((expression2) => `${pad(4)}${expression2}`).join(` &&${newline}`);
    return `function ${name}(${parameter})${returns} {${newline}${pad(2)}return (${newline}${expression}${newline}${pad(2)})\n}`;
  }
  function CreateParameter(name, type47) {
    const annotation = state.language === "typescript" ? `: ${type47}` : "";
    return `${name}${annotation}`;
  }
  function CreateReturns(type47) {
    return state.language === "typescript" ? `: ${type47}` : "";
  }
  function Build(schema3, references, options) {
    const functionCode = CreateFunction("check", schema3, references, "value");
    const parameter = CreateParameter("value", "any");
    const returns = CreateReturns("boolean");
    const functions = [...state.functions.values()];
    const variables = [...state.variables.values()];
    const checkFunction = IsString(schema3.$id) ? `return function check(${parameter})${returns} {\n  return ${CreateFunctionName(schema3.$id)}(value)\n}` : `return ${functionCode}`;
    return [...variables, ...functions, checkFunction].join("\n");
  }
  function Code(...args) {
    const defaults = { language: "javascript" };
    const [schema3, references, options] = args.length === 2 && IsArray(args[1]) ? [args[0], args[1], defaults] : args.length === 2 && !IsArray(args[1]) ? [args[0], [], args[1]] : args.length === 3 ? [args[0], args[1], args[2]] : args.length === 1 ? [args[0], [], defaults] : [null, [], defaults];
    state.language = options.language;
    state.variables.clear();
    state.functions.clear();
    state.instances.clear();
    if (!IsSchema2(schema3))
      throw new TypeCompilerTypeGuardError(schema3);
    for (const schema4 of references)
      if (!IsSchema2(schema4))
        throw new TypeCompilerTypeGuardError(schema4);
    return Build(schema3, references, options);
  }
  TypeCompiler2.Code = Code;
  function Compile(schema3, references = []) {
    const generatedCode = Code(schema3, references, { language: "javascript" });
    const compiledFunction = globalThis.Function("kind", "format", "hash", generatedCode);
    const instances = new Map(state.instances);
    function typeRegistryFunction(kind28, instance, value11) {
      if (!exports_type.Has(kind28) || !instances.has(instance))
        return false;
      const checkFunc = exports_type.Get(kind28);
      const schema4 = instances.get(instance);
      return checkFunc(schema4, value11);
    }
    function formatRegistryFunction(format, value11) {
      if (!exports_format.Has(format))
        return false;
      const checkFunc = exports_format.Get(format);
      return checkFunc(value11);
    }
    function hashFunction(value11) {
      return Hash(value11);
    }
    const checkFunction = compiledFunction(typeRegistryFunction, formatRegistryFunction, hashFunction);
    return new TypeCheck(schema3, references, checkFunction, generatedCode);
  }
  TypeCompiler2.Compile = Compile;
})(TypeCompiler || (TypeCompiler = {}));
// node_modules/cookie/index.js
function parse4(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  var obj = {};
  var opt = options || {};
  var dec = opt.decode || decode2;
  var index = 0;
  while (index < str.length) {
    var eqIdx = str.indexOf("=", index);
    if (eqIdx === -1) {
      break;
    }
    var endIdx = str.indexOf(";", index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(";", eqIdx - 1) + 1;
      continue;
    }
    var key = str.slice(index, eqIdx).trim();
    if (obj[key] === undefined) {
      var val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.charCodeAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode(val, dec);
    }
    index = endIdx + 1;
  }
  return obj;
}
function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode2;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  var value11 = enc(val);
  if (value11 && !fieldContentRegExp.test(value11)) {
    throw new TypeError("argument val is invalid");
  }
  var str = name + "=" + value11;
  if (opt.maxAge != null) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    var expires = opt.expires;
    if (!isDate(expires) || isNaN(expires.valueOf())) {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.partitioned) {
    str += "; Partitioned";
  }
  if (opt.priority) {
    var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
    switch (priority) {
      case "low":
        str += "; Priority=Low";
        break;
      case "medium":
        str += "; Priority=Medium";
        break;
      case "high":
        str += "; Priority=High";
        break;
      default:
        throw new TypeError("option priority is invalid");
    }
  }
  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
}
function decode2(str) {
  return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
}
function encode2(val) {
  return encodeURIComponent(val);
}
function isDate(val) {
  return __toString.call(val) === "[object Date]" || val instanceof Date;
}
function tryDecode(str, decode3) {
  try {
    return decode3(str);
  } catch (e) {
    return str;
  }
}
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
var $parse = parse4;
var $serialize = serialize;
var __toString = Object.prototype.toString;
var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

// node_modules/elysia/dist/index.mjs
var import_fast_decode_uri_component = __toESM(require_fast_decode_uri_component(), 1);
function removeTrailingEquals(digest) {
  let trimmedDigest = digest;
  while (trimmedDigest.endsWith("=")) {
    trimmedDigest = trimmedDigest.slice(0, -1);
  }
  return trimmedDigest;
}
var import_fast_querystring = __toESM(require_lib(), 1);
var import_fast_decode_uri_component2 = __toESM(require_fast_decode_uri_component(), 1);
var import_fast_querystring2 = __toESM(require_lib(), 1);
function isLeapYear(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function date5(str) {
  const matches = DATE.exec(str);
  if (!matches)
    return false;
  const year = +matches[1];
  const month = +matches[2];
  const day = +matches[3];
  return month >= 1 && month <= 12 && day >= 1 && day <= (month === 2 && isLeapYear(year) ? 29 : DAYS[month]);
}
function getTime(strictTimeZone) {
  return function time(str) {
    const matches = TIME.exec(str);
    if (!matches)
      return false;
    const hr = +matches[1];
    const min = +matches[2];
    const sec = +matches[3];
    const tz = matches[4];
    const tzSign = matches[5] === "-" ? -1 : 1;
    const tzH = +(matches[6] || 0);
    const tzM = +(matches[7] || 0);
    if (tzH > 23 || tzM > 59 || strictTimeZone && !tz)
      return false;
    if (hr <= 23 && min <= 59 && sec < 60)
      return true;
    const utcMin = min - tzM * tzSign;
    const utcHr = hr - tzH * tzSign - (utcMin < 0 ? 1 : 0);
    return (utcHr === 23 || utcHr === -1) && (utcMin === 59 || utcMin === -1) && sec < 61;
  };
}
function getDateTime(strictTimeZone) {
  const time = getTime(strictTimeZone);
  return function date_time(str) {
    const dateTime = str.split(DATE_TIME_SEPARATOR);
    return dateTime.length === 2 && date5(dateTime[0]) && time(dateTime[1]);
  };
}
function uri(str) {
  return NOT_URI_FRAGMENT.test(str) && URI.test(str);
}
function byte(str) {
  BYTE.lastIndex = 0;
  return BYTE.test(str);
}
function validateInt32(value15) {
  return Number.isInteger(value15) && value15 <= MAX_INT32 && value15 >= MIN_INT32;
}
function validateInt64(value15) {
  return Number.isInteger(value15);
}
function validateNumber() {
  return true;
}
function regex(str) {
  if (Z_ANCHOR.test(str))
    return false;
  try {
    new RegExp(str);
    return true;
  } catch (e2) {
    return false;
  }
}
var e = (e2, t3) => ({ part: e2, store: null, inert: t3 !== undefined ? new Map(t3.map((e3) => [e3.part.charCodeAt(0), e3])) : null, params: null, wildcardStore: null });
var t = (e2, t3) => ({ ...e2, part: t3 });
var r = (e2) => ({ paramName: e2, store: null, inert: null });
var Memoirist = class _Memoirist {
  root = {};
  history = [];
  static regex = { static: /:.+?(?=\/|$)/, params: /:.+?(?=\/|$)/g };
  add(a2, l, i) {
    let s;
    if (typeof l != "string")
      throw TypeError("Route path must be a string");
    l === "" ? l = "/" : l[0] !== "/" && (l = `/${l}`), this.history.push([a2, l, i]);
    let n = l[l.length - 1] === "*";
    n && (l = l.slice(0, -1));
    let o = l.split(_Memoirist.regex.static), u = l.match(_Memoirist.regex.params) || [];
    o[o.length - 1] === "" && o.pop(), s = this.root[a2] ? this.root[a2] : this.root[a2] = e("/");
    let p = 0;
    for (let a3 = 0;a3 < o.length; ++a3) {
      let i2 = o[a3];
      if (a3 > 0) {
        let t3 = u[p++].slice(1);
        if (s.params === null)
          s.params = r(t3);
        else if (s.params.paramName !== t3)
          throw Error(`Cannot create route "${l}" with parameter "${t3}" because a route already exists with a different parameter name ("${s.params.paramName}") in the same location`);
        let a4 = s.params;
        if (a4.inert === null) {
          s = a4.inert = e(i2);
          continue;
        }
        s = a4.inert;
      }
      for (let r2 = 0;; ) {
        if (r2 === i2.length) {
          if (r2 < s.part.length) {
            let a4 = t(s, s.part.slice(r2));
            Object.assign(s, e(i2, [a4]));
          }
          break;
        }
        if (r2 === s.part.length) {
          if (s.inert === null)
            s.inert = /* @__PURE__ */ new Map;
          else if (s.inert.has(i2.charCodeAt(r2))) {
            s = s.inert.get(i2.charCodeAt(r2)), i2 = i2.slice(r2), r2 = 0;
            continue;
          }
          let t3 = e(i2.slice(r2));
          s.inert.set(i2.charCodeAt(r2), t3), s = t3;
          break;
        }
        if (i2[r2] !== s.part[r2]) {
          let a4 = t(s, s.part.slice(r2)), l2 = e(i2.slice(r2));
          Object.assign(s, e(s.part.slice(0, r2), [a4, l2])), s = l2;
          break;
        }
        ++r2;
      }
    }
    if (p < u.length) {
      let e2 = u[p], t3 = e2.slice(1);
      if (s.params === null)
        s.params = r(t3);
      else if (s.params.paramName !== t3)
        throw Error(`Cannot create route "${l}" with parameter "${t3}" because a route already exists with a different parameter name ("${s.params.paramName}") in the same location`);
      return s.params.store === null && (s.params.store = i), s.params.store;
    }
    return n ? (s.wildcardStore === null && (s.wildcardStore = i), s.wildcardStore) : (s.store === null && (s.store = i), s.store);
  }
  find(e2, t3) {
    let r2 = this.root[e2];
    return r2 ? a(t3, t3.length, r2, 0) : null;
  }
};
var a = (e2, t3, r2, l) => {
  let i = r2?.part, s = l + i.length;
  if (i.length > 1) {
    if (s > t3)
      return null;
    if (i.length < 15) {
      for (let t4 = 1, r3 = l + 1;t4 < i.length; ++t4, ++r3)
        if (i.charCodeAt(t4) !== e2.charCodeAt(r3))
          return null;
    } else if (e2.substring(l, s) !== i)
      return null;
  }
  if (s === t3)
    return r2.store !== null ? { store: r2.store, params: {} } : r2.wildcardStore !== null ? { store: r2.wildcardStore, params: { "*": "" } } : null;
  if (r2.inert !== null) {
    let l2 = r2.inert.get(e2.charCodeAt(s));
    if (l2 !== undefined) {
      let r3 = a(e2, t3, l2, s);
      if (r3 !== null)
        return r3;
    }
  }
  if (r2.params !== null) {
    let l2 = r2.params, i2 = e2.indexOf("/", s);
    if (i2 !== s) {
      if (i2 === -1 || i2 >= t3) {
        if (l2.store !== null) {
          let r3 = {};
          return r3[l2.paramName] = e2.substring(s, t3), { store: l2.store, params: r3 };
        }
      } else if (l2.inert !== null) {
        let r3 = a(e2, t3, l2.inert, i2);
        if (r3 !== null)
          return r3.params[l2.paramName] = e2.substring(s, i2), r3;
      }
    }
  }
  return r2.wildcardStore !== null ? { store: r2.wildcardStore, params: { "*": e2.substring(s, t3) } } : null;
};
var resolver = () => {
  let resolve;
  const promise5 = new Promise((r2) => {
    resolve = r2;
  });
  return [promise5, resolve];
};
var createSignal = () => {
  const [start, resolveStart] = resolver();
  const [end, resolveEnd] = resolver();
  const children = [];
  const resolvers = [];
  return {
    signal: start,
    consume: (trace) => {
      switch (trace.type) {
        case "begin":
          if (trace.unit && children.length === 0)
            for (let i = 0;i < trace.unit; i++) {
              const [start2, resolveStart2] = resolver();
              const [end2, resolveEnd2] = resolver();
              children.push(start2);
              resolvers.push([
                (trace2) => {
                  resolveStart2({
                    children: [],
                    end: end2,
                    name: trace2.name ?? "",
                    skip: false,
                    time: trace2.time
                  });
                },
                (time) => {
                  resolveEnd2(time);
                }
              ]);
            }
          resolveStart({
            children,
            end,
            name: trace.name ?? "",
            skip: false,
            time: trace.time
          });
          break;
        case "end":
          resolveEnd(trace.time);
          break;
      }
    },
    consumeChild(trace) {
      switch (trace.type) {
        case "begin":
          if (!resolvers[0])
            return;
          const [resolveStart2] = resolvers[0];
          resolveStart2({
            children: [],
            end,
            name: trace.name ?? "",
            skip: false,
            time: trace.time
          });
          break;
        case "end":
          const child = resolvers.shift();
          if (!child)
            return;
          child[1](trace.time);
      }
    },
    resolve() {
      resolveStart({
        children: [],
        end: new Promise((resolve) => resolve(0)),
        name: "",
        skip: true,
        time: 0
      });
      for (const [resolveStart2, resolveEnd2] of resolvers) {
        resolveStart2({
          children: [],
          end: new Promise((resolve) => resolve(0)),
          name: "",
          skip: true,
          time: 0
        });
        resolveEnd2(0);
      }
      resolveEnd(0);
    }
  };
};
var createTraceListener = (getReporter, totalListener, handler) => {
  if (typeof handler === "object")
    handler = handler.fn;
  return async function trace(trace) {
    if (trace.event !== "request" || trace.type !== "begin")
      return;
    const id = trace.id;
    const reporter = getReporter();
    const request = createSignal();
    const parse22 = createSignal();
    const transform7 = createSignal();
    const beforeHandle = createSignal();
    const handle = createSignal();
    const afterHandle = createSignal();
    const error22 = createSignal();
    const response = createSignal();
    request.consume(trace);
    const reducer = (event) => {
      if (event.id === id)
        switch (event.event) {
          case "request":
            request.consume(event);
            break;
          case "request.unit":
            request.consumeChild(event);
            break;
          case "parse":
            parse22.consume(event);
            break;
          case "parse.unit":
            parse22.consumeChild(event);
            break;
          case "transform":
            transform7.consume(event);
            break;
          case "transform.unit":
            transform7.consumeChild(event);
            break;
          case "beforeHandle":
            beforeHandle.consume(event);
            break;
          case "beforeHandle.unit":
            beforeHandle.consumeChild(event);
            break;
          case "handle":
            handle.consume(event);
            break;
          case "afterHandle":
            afterHandle.consume(event);
            break;
          case "afterHandle.unit":
            afterHandle.consumeChild(event);
            break;
          case "error":
            error22.consume(event);
            break;
          case "error.unit":
            error22.consumeChild(event);
            break;
          case "response":
            if (event.type === "begin") {
              request.resolve();
              parse22.resolve();
              transform7.resolve();
              beforeHandle.resolve();
              handle.resolve();
              afterHandle.resolve();
              error22.resolve();
            } else
              reporter.off("event", reducer);
            response.consume(event);
            break;
          case "response.unit":
            response.consumeChild(event);
            break;
          case "exit":
            request.resolve();
            parse22.resolve();
            transform7.resolve();
            beforeHandle.resolve();
            handle.resolve();
            afterHandle.resolve();
            error22.resolve();
            break;
        }
    };
    reporter.on("event", reducer);
    await handler({
      id,
      context: trace.ctx,
      set: trace.ctx?.set,
      store: trace.ctx?.store,
      time: trace.time,
      request: request.signal,
      parse: parse22.signal,
      transform: transform7.signal,
      beforeHandle: beforeHandle.signal,
      handle: handle.signal,
      afterHandle: afterHandle.signal,
      error: error22.signal,
      response: response.signal
    });
    reporter.emit(`res${id}.${totalListener}`, undefined);
  };
};
var separateFunction = (code) => {
  if (code.startsWith("async"))
    code = code.slice(6);
  let index = -1;
  if (code.charCodeAt(0) === 40) {
    index = code.indexOf(") => {\n");
    if (index !== -1)
      return [
        code.slice(1, index),
        code.slice(index + 5),
        { isArrowReturn: false }
      ];
    index = code.indexOf(") => ");
    if (index !== -1)
      return [
        code.slice(1, index),
        code.slice(index + 5),
        { isArrowReturn: true }
      ];
  }
  if (code.startsWith("function")) {
    index = code.indexOf("(");
    const end = code.indexOf(")");
    return [
      code.slice(index + 1, end),
      code.slice(end + 2),
      {
        isArrowReturn: false
      }
    ];
  }
  const start = code.indexOf("(");
  if (start !== -1) {
    const sep = code.indexOf("\n", 2);
    const parameter = code.slice(0, sep);
    const end = parameter.lastIndexOf(")") + 1;
    const body = code.slice(sep + 1);
    return [
      parameter.slice(start, end),
      "{" + body,
      {
        isArrowReturn: false
      }
    ];
  }
  const x = code.split("\n", 2);
  return [x[0], x[1], { isArrowReturn: false }];
};
var bracketPairRange = (parameter) => {
  const start = parameter.indexOf("{");
  if (start === -1)
    return [-1, 0];
  let end = start + 1;
  let deep = 1;
  for (;end < parameter.length; end++) {
    const char = parameter.charCodeAt(end);
    if (char === 123)
      deep++;
    else if (char === 125)
      deep--;
    if (deep === 0)
      break;
  }
  if (deep !== 0)
    return [0, parameter.length];
  return [start, end + 1];
};
var bracketPairRangeReverse = (parameter) => {
  const end = parameter.lastIndexOf("}");
  if (end === -1)
    return [-1, 0];
  let start = end - 1;
  let deep = 1;
  for (;start >= 0; start--) {
    const char = parameter.charCodeAt(start);
    if (char === 125)
      deep++;
    else if (char === 123)
      deep--;
    if (deep === 0)
      break;
  }
  if (deep !== 0)
    return [-1, 0];
  return [start, end + 1];
};
var retrieveRootParamters = (parameter) => {
  if (parameter.charCodeAt(0) === 40)
    parameter = parameter.slice(1, -1);
  if (parameter.charCodeAt(0) === 123)
    parameter = parameter.slice(2, -2);
  while (true) {
    const [start, end] = bracketPairRange(parameter);
    if (start === -1)
      break;
    parameter = parameter.slice(0, start - 2) + parameter.slice(end + 1);
  }
  return parameter.replace(/:/g, "").trim();
};
var findParameterReference = (parameter, inference) => {
  const root = retrieveRootParamters(parameter);
  if (!inference.query && root.includes("query"))
    inference.query = true;
  if (!inference.headers && root.includes("headers"))
    inference.headers = true;
  if (!inference.body && root.includes("body"))
    inference.body = true;
  if (!inference.cookie && root.includes("cookie"))
    inference.cookie = true;
  if (!inference.set && root.includes("set"))
    inference.set = true;
  return root;
};
var findTraceParameterReference = (parameter, inference) => {
  const root = retrieveRootParamters(parameter);
  if (!inference.request && root.includes("request"))
    inference.request = true;
  if (!inference.parse && root.includes("parse"))
    inference.parse = true;
  if (!inference.transform && root.includes("transform"))
    inference.transform = true;
  if (!inference.handle && root.includes("handle"))
    inference.handle = true;
  if (!inference.beforeHandle && root.includes("beforeHandle"))
    inference.beforeHandle = true;
  if (!inference.afterHandle && root.includes("afterHandle"))
    inference.afterHandle = true;
  if (!inference.error && root.includes("error"))
    inference.error = true;
  if (!inference.context && root.includes("context"))
    inference.context = true;
  if (!inference.store && root.includes("store"))
    inference.store = true;
  if (!inference.set && root.includes("set"))
    inference.set = true;
  return root;
};
var findEndIndex = (type47, content, index) => {
  const newLineIndex = content.indexOf(type47 + "\n", index);
  const newTabIndex = content.indexOf(type47 + "	", index);
  const commaIndex = content.indexOf(type47 + ",", index);
  const semicolonIndex = content.indexOf(type47 + ";", index);
  const emptyIndex = content.indexOf(type47 + " ", index);
  return [newLineIndex, newTabIndex, commaIndex, semicolonIndex, emptyIndex].filter((i) => i > 0).sort((a2, b) => a2 - b)[0] || -1;
};
var findAlias = (type47, body, depth = 0) => {
  if (depth > 5)
    return [];
  const aliases = [];
  let content = body;
  while (true) {
    let index = findEndIndex(" = " + type47, content);
    if (index === -1) {
      const lastIndex = content.indexOf(" = " + type47);
      if (lastIndex + 3 + type47.length !== content.length)
        break;
      index = lastIndex;
    }
    const part = content.slice(0, index);
    let variable = part.slice(part.lastIndexOf(" ") + 1);
    if (variable === "}") {
      const [start, end] = bracketPairRangeReverse(part);
      aliases.push(content.slice(start, end));
      content = content.slice(index + 3 + type47.length);
      continue;
    }
    while (variable.charCodeAt(0) === 44)
      variable = variable.slice(1);
    while (variable.charCodeAt(0) === 9)
      variable = variable.slice(1);
    aliases.push(variable);
    content = content.slice(index + 3 + type47.length);
  }
  for (const alias of aliases) {
    if (alias.charCodeAt(0) === 123)
      continue;
    const deepAlias = findAlias(alias, body);
    if (deepAlias.length > 0)
      aliases.push(...deepAlias);
  }
  return aliases;
};
var extractMainParameter = (parameter) => {
  if (!parameter)
    return;
  const hasComma = parameter.includes(",");
  if (!hasComma) {
    if (parameter.includes("..."))
      return parameter.slice(parameter.indexOf("...") + 3);
    return parameter;
  }
  const spreadIndex = parameter.indexOf("...");
  if (spreadIndex === -1)
    return;
  return parameter.slice(spreadIndex + 3).trimEnd();
};
var inferBodyReference = (code, aliases, inference) => {
  const access = (type47, alias) => code.includes(alias + "." + type47) || code.includes(alias + '["' + type47 + '"]') || code.includes(alias + "['" + type47 + "']");
  for (let alias of aliases) {
    if (!alias)
      continue;
    if (alias.charCodeAt(0) === 123) {
      alias = retrieveRootParamters(alias);
      if (!inference.query && alias.includes("query"))
        inference.query = true;
      if (!inference.headers && alias.includes("headers"))
        inference.headers = true;
      if (!inference.body && alias.includes("body"))
        inference.body = true;
      if (!inference.cookie && alias.includes("cookie"))
        inference.cookie = true;
      if (!inference.set && alias.includes("set"))
        inference.set = true;
      continue;
    }
    if (code.includes("(" + alias + ")")) {
      inference.query = true;
      inference.headers = true;
      inference.body = true;
      inference.cookie = true;
      inference.set = true;
      inference.queries = [];
      inference.unknownQueries = true;
      break;
    }
    if (!inference.query && access("query", alias))
      inference.query = true;
    if (code.includes("return " + alias) || code.includes("return " + alias + ".query")) {
      inference.query = true;
      inference.unknownQueries = true;
      inference.queries = [];
    }
    if (!inference.unknownQueries && inference.query) {
      let keyword = alias + ".";
      if (code.includes(keyword + "query"))
        keyword = alias + ".query";
      while (true) {
        let start = code.indexOf(keyword);
        if (start === -1 && code.indexOf(alias + "[") !== -1) {
          inference.queries = [];
          inference.unknownQueries = true;
          break;
        }
        if (start !== -1) {
          let end = findEndIndex("", code, start + keyword.length + 1);
          if (end === -1)
            end = undefined;
          const index = start + alias.length + 1;
          code = code.slice(start + alias.length + 1);
          let query = code.slice(0, end ? end - index : end).trimEnd();
          while (start !== -1) {
            start = query.indexOf(".");
            if (start !== -1)
              query = query.slice(start + 1);
          }
          if (query.charCodeAt(query.length - 1) === 59)
            query = query.slice(0, -1);
          if (query.charCodeAt(query.length - 1) === 44)
            query = query.slice(0, -1);
          if (query.charCodeAt(query.length - 1) === 93)
            query = query.slice(0, -1);
          if (query.charCodeAt(query.length - 1) === 41)
            query = query.slice(0, -1);
          if (query && !inference.queries.includes(query)) {
            inference.queries.push(query);
            continue;
          }
        }
        break;
      }
    }
    if (!inference.headers && access("headers", alias))
      inference.headers = true;
    if (!inference.body && access("body", alias))
      inference.body = true;
    if (!inference.cookie && access("cookie", alias))
      inference.cookie = true;
    if (!inference.set && access("set", alias))
      inference.set = true;
    if (inference.query && inference.headers && inference.body && inference.cookie && inference.set)
      break;
  }
  return aliases;
};
var removeDefaultParameter = (parameter) => {
  while (true) {
    const index = parameter.indexOf("=");
    if (index === -1)
      break;
    const commaIndex = parameter.indexOf(",", index);
    const bracketIndex = parameter.indexOf("}", index);
    const end = [commaIndex, bracketIndex].filter((i) => i > 0).sort((a2, b) => a2 - b)[0] || -1;
    if (end === -1) {
      parameter = parameter.slice(0, index);
      break;
    }
    parameter = parameter.slice(0, index) + parameter.slice(end);
  }
  return parameter.split(",").map((i) => i.trim()).join(", ");
};
var validateInferencedQueries = (queries) => {
  for (const query of queries) {
    if (query.charCodeAt(0) === 123)
      return false;
    if (query.indexOf("'") !== -1)
      return false;
    if (query.indexOf('"') !== -1)
      return false;
    if (query.indexOf("\n") !== -1)
      return false;
    if (query.indexOf("	") !== -1)
      return false;
    if (query.indexOf("(") !== -1)
      return false;
  }
  return true;
};
var inferTraceBodyReference = (code, aliases, inference) => {
  const access = (type47, alias) => code.includes(type47 + "." + alias) || code.includes(type47 + '["' + alias + '"]') || code.includes(type47 + "['" + alias + "']");
  for (let alias of aliases) {
    if (alias.charCodeAt(0) === 123) {
      alias = retrieveRootParamters(alias);
      if (!inference.request && alias.includes("request"))
        inference.request = true;
      if (!inference.parse && alias.includes("parse"))
        inference.parse = true;
      if (!inference.transform && alias.includes("transform"))
        inference.transform = true;
      if (!inference.handle && alias.includes("handle"))
        inference.handle = true;
      if (!inference.beforeHandle && alias.includes("beforeHandle"))
        inference.beforeHandle = true;
      if (!inference.afterHandle && alias.includes("afterHandle"))
        inference.afterHandle = true;
      if (!inference.error && alias.includes("error"))
        inference.error = true;
      if (!inference.context && alias.includes("context"))
        inference.context = true;
      if (!inference.store && alias.includes("store"))
        inference.store = true;
      if (!inference.set && alias.includes("set"))
        inference.set = true;
      continue;
    }
    if (code.includes("(" + alias + ")")) {
      inference.request = true;
      inference.parse = true;
      inference.transform = true;
      inference.handle = true;
      inference.beforeHandle = true;
      inference.afterHandle = true;
      inference.error = true;
      inference.context = true;
      inference.store = true;
      inference.set = true;
      break;
    }
    if (!inference.request && access("request", alias))
      inference.request = true;
    if (!inference.parse && access("parse", alias))
      inference.parse = true;
    if (!inference.transform && access("transform", alias))
      inference.transform = true;
    if (!inference.handle && access("handle", alias))
      inference.handle = true;
    if (!inference.beforeHandle && access("beforeHandle", alias))
      inference.beforeHandle = true;
    if (!inference.afterHandle && access("afterHandle", alias))
      inference.afterHandle = true;
    if (!inference.error && access("error", alias))
      inference.error = true;
    if (!inference.context && access("context", alias))
      inference.context = true;
    if (!inference.store && access("store", alias))
      inference.store = true;
    if (!inference.set && access("set", alias))
      inference.set = true;
    if (inference.request && inference.parse && inference.transform && inference.handle && inference.beforeHandle && inference.afterHandle && inference.error && inference.context && inference.store && inference.set)
      break;
  }
  return aliases;
};
var sucrose = (lifeCycle, inference = {
  queries: [],
  query: false,
  headers: false,
  body: false,
  cookie: false,
  set: false,
  unknownQueries: false
}) => {
  const events = [];
  if (lifeCycle.handler && typeof lifeCycle.handler === "function")
    events.push(lifeCycle.handler);
  if (lifeCycle.beforeHandle?.length)
    events.push(...lifeCycle.beforeHandle);
  if (lifeCycle.parse?.length)
    events.push(...lifeCycle.parse);
  if (lifeCycle.error?.length)
    events.push(...lifeCycle.error);
  if (lifeCycle.transform?.length)
    events.push(...lifeCycle.transform);
  if (lifeCycle.afterHandle?.length)
    events.push(...lifeCycle.afterHandle);
  if (lifeCycle.mapResponse?.length)
    events.push(...lifeCycle.mapResponse);
  if (lifeCycle.request?.length)
    events.push(...lifeCycle.request);
  if (lifeCycle.onResponse?.length)
    events.push(...lifeCycle.onResponse);
  for (const e2 of events) {
    if (!e2)
      continue;
    const event = "fn" in e2 ? e2.fn : e2;
    const [parameter, body, { isArrowReturn }] = separateFunction(event.toString());
    const rootParameters = findParameterReference(parameter, inference);
    const mainParameter = extractMainParameter(rootParameters);
    if (isArrowReturn && (body === "query" || rootParameters && body.startsWith(rootParameters + ".query"))) {
      inference.query = true;
      inference.unknownQueries = true;
      inference.queries = [];
    }
    if (mainParameter) {
      const aliases = findAlias(mainParameter, body);
      aliases.splice(0, -1, mainParameter);
      inferBodyReference(body, aliases, inference);
    }
    const context = rootParameters || mainParameter;
    if (context && body.includes("return " + context + ".query")) {
      inference.query = true;
      inference.unknownQueries = true;
      inference.queries = [];
    }
    if (inference.query) {
      inferBodyReference(body, ["query"], inference);
      const queryIndex = parameter.indexOf("query: {");
      if (queryIndex !== -1) {
        const part = parameter.slice(queryIndex + 7);
        const [start, end] = bracketPairRange(part);
        const queryBracket = removeDefaultParameter(part.slice(start, end));
        for (let query of queryBracket.slice(1, -1).split(",")) {
          const index = query.indexOf(":");
          if (index !== -1)
            query = query.slice(0, index);
          query = query.trim();
          if (query && !inference.queries.includes(query))
            inference.queries.push(query.trim());
        }
      }
    }
    if (inference.query && inference.headers && inference.body && inference.cookie && inference.set)
      break;
  }
  if (!validateInferencedQueries(inference.queries)) {
    inference.unknownQueries = true;
    inference.queries = [];
  }
  return inference;
};
var sucroseTrace = (traces, inference = {
  request: false,
  parse: false,
  transform: false,
  handle: false,
  beforeHandle: false,
  afterHandle: false,
  error: false,
  context: false,
  store: false,
  set: false
}) => {
  for (const handler of traces) {
    const [parameter, body] = separateFunction(handler.toString());
    const rootParameters = findTraceParameterReference(parameter, inference);
    const mainParameter = extractMainParameter(rootParameters);
    if (mainParameter) {
      const aliases = findAlias(mainParameter, body);
      aliases.splice(0, -1, mainParameter);
      inferTraceBodyReference(body, aliases, inference);
      continue;
    }
    if (inference.request && inference.parse && inference.transform && inference.handle && inference.beforeHandle && inference.afterHandle && inference.error && inference.context && inference.store && inference.set)
      break;
  }
  return inference;
};
var Cookie = class {
  constructor(name, jar, initial = {}) {
    this.name = name;
    this.jar = jar;
    this.initial = initial;
  }
  get cookie() {
    if (!(this.name in this.jar))
      return this.initial;
    return this.jar[this.name];
  }
  set cookie(jar) {
    if (!(this.name in this.jar))
      this.jar[this.name] = this.initial;
    this.jar[this.name] = jar;
  }
  get value() {
    return this.cookie.value;
  }
  set value(value15) {
    if (!(this.name in this.jar))
      this.jar[this.name] = this.initial;
    this.jar[this.name].value = value15;
  }
  get expires() {
    return this.cookie.expires;
  }
  set expires(expires) {
    this.cookie.expires = expires;
  }
  get maxAge() {
    return this.cookie.maxAge;
  }
  set maxAge(maxAge) {
    this.cookie.maxAge = maxAge;
  }
  get domain() {
    return this.cookie.domain;
  }
  set domain(domain) {
    this.cookie.domain = domain;
  }
  get path() {
    return this.cookie.path;
  }
  set path(path) {
    this.cookie.path = path;
  }
  get secure() {
    return this.cookie.secure;
  }
  set secure(secure) {
    this.cookie.secure = secure;
  }
  get httpOnly() {
    return this.cookie.httpOnly;
  }
  set httpOnly(httpOnly) {
    this.cookie.httpOnly = httpOnly;
  }
  get sameSite() {
    return this.cookie.sameSite;
  }
  set sameSite(sameSite) {
    this.cookie.sameSite = sameSite;
  }
  get priority() {
    return this.cookie.priority;
  }
  set priority(priority) {
    this.cookie.priority = priority;
  }
  get partitioned() {
    return this.cookie.partitioned;
  }
  set partitioned(partitioned) {
    this.cookie.partitioned = partitioned;
  }
  get secrets() {
    return this.cookie.secrets;
  }
  set secrets(secrets) {
    this.cookie.secrets = secrets;
  }
  update(config) {
    this.cookie = Object.assign(this.cookie, typeof config === "function" ? config(this.cookie) : config);
    return this;
  }
  set(config) {
    this.cookie = Object.assign({
      ...this.initial,
      value: this.value
    }, typeof config === "function" ? config(this.cookie) : config);
    return this;
  }
  remove() {
    if (this.value === undefined)
      return;
    this.set({
      expires: /* @__PURE__ */ new Date(0),
      maxAge: 0,
      value: ""
    });
    return this;
  }
  toString() {
    return typeof this.value === "object" ? JSON.stringify(this.value) : this.value?.toString() ?? "";
  }
};
var createCookieJar = (set2, store, initial) => {
  if (!set2.cookie)
    set2.cookie = {};
  return new Proxy(store, {
    get(_, key) {
      if (key in store)
        return new Cookie(key, set2.cookie, Object.assign({}, initial ?? {}, store[key]));
      return new Cookie(key, set2.cookie, Object.assign({}, initial));
    }
  });
};
var parseCookie = async (set2, cookieString, {
  secrets,
  sign,
  ...initial
} = {}) => {
  if (!cookieString)
    return createCookieJar(set2, {}, initial);
  const isStringKey = typeof secrets === "string";
  if (sign && sign !== true && !Array.isArray(sign))
    sign = [sign];
  const jar = {};
  const cookies = $parse(cookieString);
  for (const [name, v] of Object.entries(cookies)) {
    let value15 = import_fast_decode_uri_component.default(v);
    if (sign === true || sign?.includes(name)) {
      if (!secrets)
        throw new Error("No secret is provided to cookie plugin");
      if (isStringKey) {
        const temp = await unsignCookie(value15, secrets);
        if (temp === false)
          throw new InvalidCookieSignature(name);
        value15 = temp;
      } else {
        let decoded = true;
        for (let i = 0;i < secrets.length; i++) {
          const temp = await unsignCookie(value15, secrets[i]);
          if (temp !== false) {
            decoded = true;
            value15 = temp;
            break;
          }
        }
        if (!decoded)
          throw new InvalidCookieSignature(name);
      }
    }
    if (value15 == null) {
      jar[name] = {
        value: v
      };
      continue;
    }
    const start = value15.charCodeAt(0);
    if (start === 123 || start === 91)
      try {
        jar[name] = {
          value: JSON.parse(value15)
        };
        continue;
      } catch {
      }
    if (isNumericString(value15)) {
      jar[name] = {
        value: parseInt(value15)
      };
      continue;
    }
    if (value15 === "true") {
      jar[name] = {
        value: true
      };
      continue;
    }
    if (value15 === "false") {
      jar[name] = {
        value: false
      };
      continue;
    }
    jar[name] = {
      value: value15
    };
  }
  return createCookieJar(set2, jar, initial);
};
var hasHeaderShorthand = "toJSON" in new Headers;
var isNotEmpty = (obj) => {
  if (!obj)
    return false;
  for (const x in obj)
    return true;
  return false;
};
var handleFile = (response, set2) => {
  const size = response.size;
  if (!set2 && size || size && set2 && set2.status !== 206 && set2.status !== 304 && set2.status !== 412 && set2.status !== 416) {
    if (set2) {
      if (set2.headers instanceof Headers) {
        if (hasHeaderShorthand)
          set2.headers = set2.headers.toJSON();
        else
          for (const [key, value15] of set2.headers.entries())
            if (key in set2.headers)
              set2.headers[key] = value15;
      }
      return new Response(response, {
        status: set2.status,
        headers: Object.assign({
          "accept-ranges": "bytes",
          "content-range": `bytes 0-${size - 1}/${size}`
        }, set2.headers)
      });
    }
    return new Response(response, {
      headers: {
        "accept-ranges": "bytes",
        "content-range": `bytes 0-${size - 1}/${size}`
      }
    });
  }
  return new Response(response);
};
var parseSetCookies = (headers, setCookie) => {
  if (!headers)
    return headers;
  headers.delete("Set-Cookie");
  for (let i = 0;i < setCookie.length; i++) {
    const index = setCookie[i].indexOf("=");
    headers.append("Set-Cookie", `${setCookie[i].slice(0, index)}=${setCookie[i].slice(index + 1) || ""}`);
  }
  return headers;
};
var serializeCookie = (cookies) => {
  if (!cookies || !isNotEmpty(cookies))
    return;
  const set2 = [];
  for (const [key, property] of Object.entries(cookies)) {
    if (!key || !property)
      continue;
    const value15 = property.value;
    if (value15 === undefined || value15 === null)
      continue;
    set2.push($serialize(key, typeof value15 === "object" ? JSON.stringify(value15) : value15 + "", property));
  }
  if (set2.length === 0)
    return;
  if (set2.length === 1)
    return set2[0];
  return set2;
};
var mapResponse = (response, set2, request) => {
  if (response?.$passthrough)
    response = response?.[response.$passthrough];
  if (response?.[ELYSIA_RESPONSE]) {
    set2.status = response[ELYSIA_RESPONSE];
    response = response.response;
  }
  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.redirect || set2.cookie) {
    if (typeof set2.status === "string")
      set2.status = StatusMap[set2.status];
    if (set2.redirect) {
      set2.headers.Location = set2.redirect;
      if (!set2.status || set2.status < 300 || set2.status >= 400)
        set2.status = 302;
    }
    if (set2.cookie && isNotEmpty(set2.cookie))
      set2.headers["Set-Cookie"] = serializeCookie(set2.cookie);
    if (set2.headers["Set-Cookie"] && Array.isArray(set2.headers["Set-Cookie"])) {
      set2.headers = parseSetCookies(new Headers(set2.headers), set2.headers["Set-Cookie"]);
    }
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response, set2);
      case "Blob":
        return handleFile(response, set2);
      case "Array":
        return Response.json(response, set2);
      case "Object":
        for (const value15 in Object.values(response)) {
          switch (value15?.constructor?.name) {
            case "Blob":
            case "File":
            case "ArrayBuffer":
            case "FileRef":
              return new Response(form(response));
            default:
              break;
          }
        }
        return Response.json(response, set2);
      case "ReadableStream":
        if (!set2.headers["content-type"]?.startsWith("text/event-stream"))
          set2.headers["content-type"] = "text/event-stream; charset=utf-8";
        request?.signal.addEventListener("abort", {
          handleEvent() {
            if (!request?.signal.aborted)
              response.cancel(request);
          }
        }, {
          once: true
        });
        return new Response(response, set2);
      case undefined:
        if (!response)
          return new Response("", set2);
        return Response.json(response, set2);
      case "Response":
        let isCookieSet = false;
        if (set2.headers instanceof Headers)
          for (const key of set2.headers.keys()) {
            if (key === "set-cookie") {
              if (isCookieSet)
                continue;
              isCookieSet = true;
              for (const cookie of set2.headers.getSetCookie()) {
                response.headers.append("set-cookie", cookie);
              }
            } else
              response.headers.append(key, set2.headers?.get(key) ?? "");
          }
        else
          for (const key in set2.headers)
            response.headers.append(key, set2.headers[key]);
        if (response.status !== set2.status)
          set2.status = response.status;
        return response;
      case "Error":
        return errorToResponse(response, set2);
      case "Promise":
        return response.then((x) => mapResponse(x, set2));
      case "Function":
        return mapResponse(response(), set2);
      case "Number":
      case "Boolean":
        return new Response(response.toString(), set2);
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      case "FormData":
        return new Response(response, set2);
      default:
        if (response instanceof Response) {
          let isCookieSet2 = false;
          if (set2.headers instanceof Headers)
            for (const key of set2.headers.keys()) {
              if (key === "set-cookie") {
                if (isCookieSet2)
                  continue;
                isCookieSet2 = true;
                for (const cookie of set2.headers.getSetCookie()) {
                  response.headers.append("set-cookie", cookie);
                }
              } else
                response.headers.append(key, set2.headers?.get(key) ?? "");
            }
          else
            for (const key in set2.headers)
              response.headers.append(key, set2.headers[key]);
          if (hasHeaderShorthand)
            set2.headers = response.headers.toJSON();
          else
            for (const [key, value15] of response.headers.entries())
              if (key in set2.headers)
                set2.headers[key] = value15;
          return response;
        }
        if (response instanceof Promise)
          return response.then((x) => mapResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        if ("toResponse" in response)
          return mapResponse(response.toResponse(), set2);
        if ("charCodeAt" in response) {
          const code = response.charCodeAt(0);
          if (code === 123 || code === 91) {
            if (!set2.headers["Content-Type"])
              set2.headers["Content-Type"] = "application/json";
            return new Response(JSON.stringify(response), set2);
          }
        }
        return new Response(response, set2);
    }
  } else
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response);
      case "Blob":
        return handleFile(response, set2);
      case "Array":
        return Response.json(response);
      case "Object":
        for (const value15 in Object.values(response)) {
          switch (value15?.constructor?.name) {
            case "Blob":
            case "File":
            case "ArrayBuffer":
            case "FileRef":
              return new Response(form(response), set2);
            default:
              break;
          }
        }
        return Response.json(response, set2);
      case "ReadableStream":
        request?.signal.addEventListener("abort", {
          handleEvent() {
            if (!request?.signal.aborted)
              response.cancel(request);
          }
        }, {
          once: true
        });
        return new Response(response, {
          headers: {
            "Content-Type": "text/event-stream; charset=utf-8"
          }
        });
      case undefined:
        if (!response)
          return new Response("");
        return new Response(JSON.stringify(response), {
          headers: {
            "content-type": "application/json"
          }
        });
      case "Response":
        return response;
      case "Error":
        return errorToResponse(response, set2);
      case "Promise":
        return response.then((x) => {
          const r2 = mapCompactResponse(x);
          if (r2 !== undefined)
            return r2;
          return new Response("");
        });
      case "Function":
        return mapCompactResponse(response());
      case "Number":
      case "Boolean":
        return new Response(response.toString());
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      case "FormData":
        return new Response(response, set2);
      default:
        if (response instanceof Response)
          return new Response(response.body, {
            headers: {
              "Content-Type": "application/json"
            }
          });
        if (response instanceof Promise)
          return response.then((x) => mapResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        if ("toResponse" in response)
          return mapResponse(response.toResponse(), set2);
        if ("charCodeAt" in response) {
          const code = response.charCodeAt(0);
          if (code === 123 || code === 91) {
            if (!set2.headers["Content-Type"])
              set2.headers["Content-Type"] = "application/json";
            return new Response(JSON.stringify(response), set2);
          }
        }
        return new Response(response);
    }
};
var mapEarlyResponse = (response, set2, request) => {
  if (response === undefined || response === null)
    return;
  if (response?.$passthrough)
    response = response?.[response.$passthrough];
  if (response?.[ELYSIA_RESPONSE]) {
    set2.status = response[ELYSIA_RESPONSE];
    response = response.response;
  }
  if (isNotEmpty(set2.headers) || set2.status !== 200 || set2.redirect || set2.cookie) {
    if (typeof set2.status === "string")
      set2.status = StatusMap[set2.status];
    if (set2.redirect) {
      set2.headers.Location = set2.redirect;
      if (!set2.status || set2.status < 300 || set2.status >= 400)
        set2.status = 302;
    }
    if (set2.cookie && isNotEmpty(set2.cookie))
      set2.headers["Set-Cookie"] = serializeCookie(set2.cookie);
    if (set2.headers["Set-Cookie"] && Array.isArray(set2.headers["Set-Cookie"]))
      set2.headers = parseSetCookies(new Headers(set2.headers), set2.headers["Set-Cookie"]);
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response, set2);
      case "Blob":
        return handleFile(response, set2);
      case "Array":
        return Response.json(response, set2);
      case "Object":
        for (const value15 in Object.values(response)) {
          switch (value15?.constructor?.name) {
            case "Blob":
            case "File":
            case "ArrayBuffer":
            case "FileRef":
              return new Response(form(response), set2);
            default:
              break;
          }
        }
        return Response.json(response, set2);
      case "ReadableStream":
        if (!set2.headers["content-type"]?.startsWith("text/event-stream"))
          set2.headers["content-type"] = "text/event-stream; charset=utf-8";
        request?.signal.addEventListener("abort", {
          handleEvent() {
            if (!request?.signal.aborted)
              response.cancel(request);
          }
        }, {
          once: true
        });
        return new Response(response, set2);
      case undefined:
        if (!response)
          return;
        return Response.json(response, set2);
      case "Response":
        let isCookieSet = false;
        if (set2.headers instanceof Headers)
          for (const key of set2.headers.keys()) {
            if (key === "set-cookie") {
              if (isCookieSet)
                continue;
              isCookieSet = true;
              for (const cookie of set2.headers.getSetCookie()) {
                response.headers.append("set-cookie", cookie);
              }
            } else
              response.headers.append(key, set2.headers?.get(key) ?? "");
          }
        else
          for (const key in set2.headers)
            response.headers.append(key, set2.headers[key]);
        if (response.status !== set2.status)
          set2.status = response.status;
        return response;
      case "Promise":
        return response.then((x) => {
          const r2 = mapEarlyResponse(x, set2);
          if (r2 !== undefined)
            return r2;
        });
      case "Error":
        return errorToResponse(response, set2);
      case "Function":
        return mapEarlyResponse(response(), set2);
      case "Number":
      case "Boolean":
        return new Response(response.toString(), set2);
      case "FormData":
        return new Response(response);
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      default:
        if (response instanceof Response) {
          let isCookieSet2 = false;
          if (set2.headers instanceof Headers)
            for (const key of set2.headers.keys()) {
              if (key === "set-cookie") {
                if (isCookieSet2)
                  continue;
                isCookieSet2 = true;
                for (const cookie of set2.headers.getSetCookie()) {
                  response.headers.append("set-cookie", cookie);
                }
              } else
                response.headers.append(key, set2.headers?.get(key) ?? "");
            }
          else
            for (const key in set2.headers)
              response.headers.append(key, set2.headers[key]);
          if (response.status !== set2.status)
            set2.status = response.status;
          return response;
        }
        if (response instanceof Promise)
          return response.then((x) => mapEarlyResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        if ("toResponse" in response)
          return mapEarlyResponse(response.toResponse(), set2);
        if ("charCodeAt" in response) {
          const code = response.charCodeAt(0);
          if (code === 123 || code === 91) {
            if (!set2.headers["Content-Type"])
              set2.headers["Content-Type"] = "application/json";
            return new Response(JSON.stringify(response), set2);
          }
        }
        return new Response(response, set2);
    }
  } else
    switch (response?.constructor?.name) {
      case "String":
        return new Response(response);
      case "Blob":
        return handleFile(response, set2);
      case "Array":
        return Response.json(response);
      case "Object":
        for (const value15 in Object.values(response)) {
          switch (value15?.constructor?.name) {
            case "Blob":
            case "File":
            case "ArrayBuffer":
            case "FileRef":
              return new Response(form(response), set2);
            default:
              break;
          }
        }
        return Response.json(response, set2);
      case "ReadableStream":
        request?.signal.addEventListener("abort", {
          handleEvent() {
            if (!request?.signal.aborted)
              response.cancel(request);
          }
        }, {
          once: true
        });
        return new Response(response, {
          headers: {
            "Content-Type": "text/event-stream; charset=utf-8"
          }
        });
      case undefined:
        if (!response)
          return new Response("");
        return new Response(JSON.stringify(response), {
          headers: {
            "content-type": "application/json"
          }
        });
      case "Response":
        return response;
      case "Promise":
        return response.then((x) => {
          const r2 = mapEarlyResponse(x, set2);
          if (r2 !== undefined)
            return r2;
        });
      case "Error":
        return errorToResponse(response, set2);
      case "Function":
        return mapCompactResponse(response());
      case "Number":
      case "Boolean":
        return new Response(response.toString());
      case "Cookie":
        if (response instanceof Cookie)
          return new Response(response.value, set2);
        return new Response(response?.toString(), set2);
      case "FormData":
        return new Response(response);
      default:
        if (response instanceof Response)
          return new Response(response.body, {
            headers: {
              "Content-Type": "application/json"
            }
          });
        if (response instanceof Promise)
          return response.then((x) => mapEarlyResponse(x, set2));
        if (response instanceof Error)
          return errorToResponse(response, set2);
        if ("toResponse" in response)
          return mapEarlyResponse(response.toResponse(), set2);
        if ("charCodeAt" in response) {
          const code = response.charCodeAt(0);
          if (code === 123 || code === 91) {
            if (!set2.headers["Content-Type"])
              set2.headers["Content-Type"] = "application/json";
            return new Response(JSON.stringify(response), set2);
          }
        }
        return new Response(response);
    }
};
var mapCompactResponse = (response, request) => {
  if (response?.$passthrough)
    response = response?.[response.$passthrough];
  if (response?.[ELYSIA_RESPONSE])
    return mapResponse(response.response, {
      status: response[ELYSIA_RESPONSE],
      headers: {}
    });
  switch (response?.constructor?.name) {
    case "String":
      return new Response(response);
    case "Blob":
      return handleFile(response);
    case "Array":
      return Response.json(response);
    case "Object":
      form:
        for (const value15 of Object.values(response))
          switch (value15?.constructor?.name) {
            case "Blob":
            case "File":
            case "ArrayBuffer":
            case "FileRef":
              return new Response(form(response));
            case "Object":
              break form;
            default:
              break;
          }
      return Response.json(response);
    case "ReadableStream":
      request?.signal.addEventListener("abort", {
        handleEvent() {
          if (!request?.signal.aborted)
            response.cancel(request);
        }
      }, {
        once: true
      });
      return new Response(response, {
        headers: {
          "Content-Type": "text/event-stream; charset=utf-8"
        }
      });
    case undefined:
      if (!response)
        return new Response("");
      return new Response(JSON.stringify(response), {
        headers: {
          "content-type": "application/json"
        }
      });
    case "Response":
      return response;
    case "Error":
      return errorToResponse(response);
    case "Promise":
      return response.then(mapCompactResponse);
    case "Function":
      return mapCompactResponse(response());
    case "Number":
    case "Boolean":
      return new Response(response.toString());
    case "FormData":
      return new Response(response);
    default:
      if (response instanceof Response)
        return new Response(response.body, {
          headers: {
            "Content-Type": "application/json"
          }
        });
      if (response instanceof Promise)
        return response.then(mapCompactResponse);
      if (response instanceof Error)
        return errorToResponse(response);
      if ("toResponse" in response)
        return mapCompactResponse(response.toResponse());
      if ("charCodeAt" in response) {
        const code = response.charCodeAt(0);
        if (code === 123 || code === 91) {
          return new Response(JSON.stringify(response), {
            headers: {
              "Content-Type": "application/json"
            }
          });
        }
      }
      return new Response(response);
  }
};
var errorToResponse = (error22, set2) => new Response(JSON.stringify({
  name: error22?.name,
  message: error22?.message,
  cause: error22?.cause
}), {
  status: set2?.status !== 200 ? set2?.status ?? 500 : 500,
  headers: set2?.headers
});
var replaceUrlPath = (url, pathname) => {
  const urlObject = new URL(url);
  urlObject.pathname = pathname;
  return urlObject.toString();
};
var isClass = (v) => typeof v === "function" && /^\s*class\s+/.test(v.toString()) || v.toString().startsWith("[object ") || isNotEmpty(Object.getPrototypeOf(v));
var isObject = (item) => item && typeof item === "object" && !Array.isArray(item);
var mergeDeep = (target, source, {
  skipKeys
} = {}) => {
  if (isObject(target) && isObject(source))
    for (const [key, value15] of Object.entries(source)) {
      if (skipKeys?.includes(key))
        continue;
      if (!isObject(value15) || !(key in target) || isClass(value15)) {
        target[key] = value15;
        continue;
      }
      target[key] = mergeDeep(target[key], value15);
    }
  return target;
};
var mergeCookie = (a2, b) => {
  const { properties: _, ...target } = a2 ?? {};
  const { properties: __, ...source } = b ?? {};
  return mergeDeep(target, source);
};
var mergeObjectArray = (a2 = [], b = []) => {
  if (!a2)
    return [];
  if (!b)
    return a2;
  const array5 = [];
  const checksums = [];
  if (!Array.isArray(a2))
    a2 = [a2];
  if (!Array.isArray(b))
    b = [b];
  for (const item of a2) {
    array5.push(item);
    if (item.checksum)
      checksums.push(item.checksum);
  }
  for (const item of b)
    if (!checksums.includes(item.checksum))
      array5.push(item);
  return array5;
};
var primitiveHooks = [
  "start",
  "request",
  "parse",
  "transform",
  "resolve",
  "beforeHandle",
  "afterHandle",
  "onResponse",
  "mapResponse",
  "trace",
  "error",
  "stop",
  "body",
  "headers",
  "params",
  "query",
  "response",
  "type",
  "detail"
];
var primitiveHookMap = primitiveHooks.reduce((acc, x) => (acc[x] = true, acc), {});
var mergeResponse = (a2, b) => {
  const isRecordNumber = (x) => typeof x === "object" && Object.keys(x).every(isNumericString);
  if (isRecordNumber(a2) && isRecordNumber(b))
    return { ...a2, ...b };
  return b ?? a2;
};
var mergeHook = (a2, b, { allowMacro = true } = {}) => {
  const rest4 = allowMacro ? {
    ...a2,
    ...b
  } : undefined;
  return {
    ...rest4,
    body: b?.body ?? a2?.body,
    headers: b?.headers ?? a2?.headers,
    params: b?.params ?? a2?.params,
    query: b?.query ?? a2?.query,
    response: mergeResponse(a2?.response, b?.response),
    type: a2?.type || b?.type,
    detail: mergeDeep(b?.detail ?? {}, a2?.detail ?? {}),
    parse: mergeObjectArray(a2?.parse, b?.parse),
    transform: mergeObjectArray(a2?.transform, b?.transform),
    beforeHandle: mergeObjectArray(a2?.beforeHandle, b?.beforeHandle),
    afterHandle: mergeObjectArray(a2?.afterHandle, b?.afterHandle),
    onResponse: mergeObjectArray(a2?.onResponse, b?.onResponse),
    mapResponse: mergeObjectArray(a2?.mapResponse, b?.mapResponse),
    trace: mergeObjectArray(a2?.trace, b?.trace),
    error: mergeObjectArray(a2?.error, b?.error)
  };
};
var getSchemaValidator = (s, {
  models = {},
  dynamic = false,
  normalize = false,
  additionalProperties = false
} = {}) => {
  if (!s)
    return;
  if (typeof s === "string" && !(s in models))
    return;
  const schema3 = typeof s === "string" ? models[s] : s;
  if (schema3.type === "object" && "additionalProperties" in schema3 === false)
    schema3.additionalProperties = additionalProperties;
  const cleaner = (value15) => exports_value2.Clean(schema3, value15);
  if (dynamic) {
    const validator = {
      schema: schema3,
      references: "",
      checkFunc: () => {
      },
      code: "",
      Check: (value15) => exports_value2.Check(schema3, value15),
      Errors: (value15) => exports_value2.Errors(schema3, value15),
      Code: () => ""
    };
    if (normalize && schema3.additionalProperties === false)
      validator.Clean = cleaner;
    if (schema3.config) {
      validator.config = schema3.config;
      if (validator?.schema?.config)
        delete validator.schema.config;
    }
    return validator;
  }
  const compiled = TypeCompiler.Compile(schema3, Object.values(models));
  compiled.Clean = cleaner;
  if (schema3.config) {
    compiled.config = schema3.config;
    if (compiled?.schema?.config)
      delete compiled.schema.config;
  }
  return compiled;
};
var getResponseSchemaValidator = (s, {
  models = {},
  dynamic = false,
  normalize = false,
  additionalProperties = false
}) => {
  if (!s)
    return;
  if (typeof s === "string" && !(s in models))
    return;
  const maybeSchemaOrRecord = typeof s === "string" ? models[s] : s;
  const compile = (schema3, references) => {
    const cleaner = (value15) => exports_value2.Clean(schema3, value15);
    if (dynamic)
      return {
        schema: schema3,
        references: "",
        checkFunc: () => {
        },
        code: "",
        Check: (value15) => exports_value2.Check(schema3, value15),
        Errors: (value15) => exports_value2.Errors(schema3, value15),
        Code: () => ""
      };
    const compiledValidator = TypeCompiler.Compile(schema3, references);
    if (normalize && schema3.additionalProperties === false)
      compiledValidator.Clean = cleaner;
    return compiledValidator;
  };
  if (Kind in maybeSchemaOrRecord) {
    if ("additionalProperties" in maybeSchemaOrRecord === false)
      maybeSchemaOrRecord.additionalProperties = additionalProperties;
    return {
      200: compile(maybeSchemaOrRecord, Object.values(models))
    };
  }
  const record4 = {};
  Object.keys(maybeSchemaOrRecord).forEach((status) => {
    const maybeNameOrSchema = maybeSchemaOrRecord[+status];
    if (typeof maybeNameOrSchema === "string") {
      if (maybeNameOrSchema in models) {
        const schema3 = models[maybeNameOrSchema];
        schema3.type === "object" && "additionalProperties" in schema3;
        record4[+status] = Kind in schema3 ? compile(schema3, Object.values(models)) : schema3;
      }
      return;
    }
    if (maybeNameOrSchema.type === "object" && "additionalProperties" in maybeNameOrSchema === false)
      maybeNameOrSchema.additionalProperties = additionalProperties;
    record4[+status] = Kind in maybeNameOrSchema ? compile(maybeNameOrSchema, Object.values(models)) : maybeNameOrSchema;
  });
  return record4;
};
var isBun = typeof Bun !== "undefined";
var hasHash = isBun && typeof Bun.hash === "function";
var checksum = (s) => {
  if (hasHash)
    return Bun.hash(s);
  let h = 9;
  for (let i = 0;i < s.length; )
    h = Math.imul(h ^ s.charCodeAt(i++), 9 ** 9);
  return h = h ^ h >>> 9;
};
var getCookieValidator = ({
  validator,
  defaultConfig = {},
  config,
  dynamic,
  models
}) => {
  let cookieValidator = getSchemaValidator(validator, {
    dynamic,
    models,
    additionalProperties: true
  });
  if (isNotEmpty(defaultConfig)) {
    if (cookieValidator) {
      cookieValidator.config = mergeCookie(cookieValidator.config, config);
    } else {
      cookieValidator = getSchemaValidator(t2.Cookie({}), {
        dynamic,
        models,
        additionalProperties: true
      });
      cookieValidator.config = defaultConfig;
    }
  }
  return cookieValidator;
};
var mergeLifeCycle = (a2, b, checksum2) => {
  const injectChecksum = (x) => {
    if (!x)
      return;
    if (!Array.isArray(x)) {
      const fn = x;
      if (checksum2 && !fn.checksum)
        fn.checksum = checksum2;
      if (fn.scope === "scoped")
        fn.scope = "local";
      return fn;
    }
    const fns = [...x];
    for (const fn of fns) {
      if (checksum2 && !fn.checksum)
        fn.checksum = checksum2;
      if (fn.scope === "scoped")
        fn.scope = "local";
    }
    return fns;
  };
  return {
    start: mergeObjectArray(a2.start, injectChecksum(b?.start)),
    request: mergeObjectArray(a2.request, injectChecksum(b?.request)),
    parse: mergeObjectArray(a2.parse, injectChecksum(b?.parse)),
    transform: mergeObjectArray(a2.transform, injectChecksum(b?.transform)),
    beforeHandle: mergeObjectArray(a2.beforeHandle, injectChecksum(b?.beforeHandle)),
    afterHandle: mergeObjectArray(a2.afterHandle, injectChecksum(b?.afterHandle)),
    mapResponse: mergeObjectArray(a2.mapResponse, injectChecksum(b?.mapResponse)),
    onResponse: mergeObjectArray(a2.onResponse, injectChecksum(b?.onResponse)),
    trace: a2.trace,
    error: mergeObjectArray(a2.error, injectChecksum(b?.error)),
    stop: mergeObjectArray(a2.stop, injectChecksum(b?.stop))
  };
};
var asHookType = (fn, inject, { skipIfHasType = false } = {}) => {
  if (!fn)
    return fn;
  if (!Array.isArray(fn)) {
    if (skipIfHasType)
      fn.scope ??= inject;
    else
      fn.scope = inject;
    return fn;
  }
  for (const x of fn)
    if (skipIfHasType)
      x.scope ??= inject;
    else
      x.scope = inject;
  return fn;
};
var filterGlobal = (fn) => {
  if (!fn)
    return fn;
  if (!Array.isArray(fn))
    switch (fn.scope) {
      case "global":
      case "scoped":
        return { ...fn };
      default:
        return { fn };
    }
  const array5 = [];
  for (const x of fn)
    switch (x.scope) {
      case "global":
      case "scoped":
        array5.push({
          ...x
        });
        break;
    }
  return array5;
};
var filterGlobalHook = (hook) => {
  return {
    ...hook,
    type: hook?.type,
    detail: hook?.detail,
    parse: filterGlobal(hook?.parse),
    transform: filterGlobal(hook?.transform),
    beforeHandle: filterGlobal(hook?.beforeHandle),
    afterHandle: filterGlobal(hook?.afterHandle),
    onResponse: filterGlobal(hook?.onResponse),
    error: filterGlobal(hook?.error),
    mapResponse: filterGlobal(hook?.mapResponse)
  };
};
var StatusMap = {
  Continue: 100,
  "Switching Protocols": 101,
  Processing: 102,
  "Early Hints": 103,
  OK: 200,
  Created: 201,
  Accepted: 202,
  "Non-Authoritative Information": 203,
  "No Content": 204,
  "Reset Content": 205,
  "Partial Content": 206,
  "Multi-Status": 207,
  "Already Reported": 208,
  "Multiple Choices": 300,
  "Moved Permanently": 301,
  Found: 302,
  "See Other": 303,
  "Not Modified": 304,
  "Temporary Redirect": 307,
  "Permanent Redirect": 308,
  "Bad Request": 400,
  Unauthorized: 401,
  "Payment Required": 402,
  Forbidden: 403,
  "Not Found": 404,
  "Method Not Allowed": 405,
  "Not Acceptable": 406,
  "Proxy Authentication Required": 407,
  "Request Timeout": 408,
  Conflict: 409,
  Gone: 410,
  "Length Required": 411,
  "Precondition Failed": 412,
  "Payload Too Large": 413,
  "URI Too Long": 414,
  "Unsupported Media Type": 415,
  "Range Not Satisfiable": 416,
  "Expectation Failed": 417,
  "I'm a teapot": 418,
  "Misdirected Request": 421,
  "Unprocessable Content": 422,
  Locked: 423,
  "Failed Dependency": 424,
  "Too Early": 425,
  "Upgrade Required": 426,
  "Precondition Required": 428,
  "Too Many Requests": 429,
  "Request Header Fields Too Large": 431,
  "Unavailable For Legal Reasons": 451,
  "Internal Server Error": 500,
  "Not Implemented": 501,
  "Bad Gateway": 502,
  "Service Unavailable": 503,
  "Gateway Timeout": 504,
  "HTTP Version Not Supported": 505,
  "Variant Also Negotiates": 506,
  "Insufficient Storage": 507,
  "Loop Detected": 508,
  "Not Extended": 510,
  "Network Authentication Required": 511
};
var InvertedStatusMap = Object.fromEntries(Object.entries(StatusMap).map(([k, v]) => [v, k]));
var encoder = new TextEncoder;
var signCookie = async (val, secret) => {
  if (typeof val !== "string")
    throw new TypeError("Cookie value must be provided as a string.");
  if (secret === null)
    throw new TypeError("Secret key must be provided.");
  const secretKey = await crypto.subtle.importKey("raw", encoder.encode(secret), { name: "HMAC", hash: "SHA-256" }, false, ["sign"]);
  const hmacBuffer = await crypto.subtle.sign("HMAC", secretKey, encoder.encode(val));
  return val + "." + removeTrailingEquals(Buffer.from(hmacBuffer).toString("base64"));
};
var unsignCookie = async (input, secret) => {
  if (typeof input !== "string")
    throw new TypeError("Signed cookie string must be provided.");
  if (secret === null)
    throw new TypeError("Secret key must be provided.");
  const tentativeValue = input.slice(0, input.lastIndexOf("."));
  const expectedInput = await signCookie(tentativeValue, secret);
  return expectedInput === input ? tentativeValue : false;
};
var traceBackMacro = (extension, property, hooks = property) => {
  if (!extension || typeof extension !== "object" || !property)
    return;
  for (const [key, value15] of Object.entries(property)) {
    if (key in primitiveHookMap || !(key in extension))
      continue;
    const v = extension[key];
    if (typeof v === "function") {
      v(value15);
    } else if (typeof v === "object")
      traceBackMacro(v, value15, hooks);
  }
};
var createMacroManager = ({
  globalHook,
  localHook
}) => (stackName) => (type47, fn) => {
  if (typeof type47 === "function")
    type47 = {
      fn: type47
    };
  if ("fn" in type47 || Array.isArray(type47)) {
    if (!localHook[stackName])
      localHook[stackName] = [];
    if (typeof localHook[stackName] === "function")
      localHook[stackName] = [localHook[stackName]];
    if (Array.isArray(type47))
      localHook[stackName] = localHook[stackName].concat(type47);
    else
      localHook[stackName].push(type47);
    return;
  }
  const { insert = "after", stack = "local" } = type47;
  if (typeof fn === "function")
    fn = { fn };
  if (stack === "global") {
    if (!Array.isArray(fn)) {
      if (insert === "before") {
        globalHook[stackName].unshift(fn);
      } else {
        globalHook[stackName].push(fn);
      }
    } else {
      if (insert === "before") {
        globalHook[stackName] = fn.concat(globalHook[stackName]);
      } else {
        globalHook[stackName] = globalHook[stackName].concat(fn);
      }
    }
  } else {
    if (!localHook[stackName])
      localHook[stackName] = [];
    if (typeof localHook[stackName] === "function")
      localHook[stackName] = [localHook[stackName]];
    if (!Array.isArray(fn)) {
      if (insert === "before") {
        localHook[stackName].unshift(fn);
      } else {
        localHook[stackName].push(fn);
      }
    } else {
      if (insert === "before") {
        localHook[stackName] = fn.concat(localHook[stackName]);
      } else {
        localHook[stackName] = localHook[stackName].concat(fn);
      }
    }
  }
};
var isNumericString = (message) => {
  if (message.length < 16)
    return message.trim().length !== 0 && !Number.isNaN(Number(message));
  if (message.length === 16) {
    const numVal = Number(message);
    if (numVal.toString() === message)
      return message.trim().length !== 0 && !Number.isNaN(numVal);
  }
  return false;
};
var PromiseGroup = class {
  constructor(onError = console.error) {
    this.onError = onError;
    this.root = null;
    this.promises = [];
  }
  get size() {
    return this.promises.length;
  }
  add(promise5) {
    this.promises.push(promise5);
    this.root ||= this.drain();
    return promise5;
  }
  async drain() {
    while (this.promises.length > 0) {
      try {
        await this.promises[0];
      } catch (error22) {
        this.onError(error22);
      }
      this.promises.shift();
    }
    this.root = null;
  }
  then(onfulfilled, onrejected) {
    return (this.root ?? Promise.resolve()).then(onfulfilled, onrejected);
  }
};
var fnToContainer = (fn) => {
  if (!fn)
    return fn;
  if (!Array.isArray(fn)) {
    if (typeof fn === "function")
      return { fn };
    else if ("fn" in fn)
      return fn;
  }
  const fns = [];
  for (const x of fn) {
    if (typeof x === "function")
      fns.push({ fn: x });
    else if ("fn" in x)
      fns.push(x);
  }
  return fns;
};
var localHookToLifeCycleStore = (a2) => {
  return {
    ...a2,
    start: fnToContainer(a2?.start),
    request: fnToContainer(a2?.request),
    parse: fnToContainer(a2?.parse),
    transform: fnToContainer(a2?.transform),
    beforeHandle: fnToContainer(a2?.beforeHandle),
    afterHandle: fnToContainer(a2?.afterHandle),
    onResponse: fnToContainer(a2?.onResponse),
    mapResponse: fnToContainer(a2?.mapResponse),
    trace: fnToContainer(a2?.trace),
    error: fnToContainer(a2?.error),
    stop: fnToContainer(a2?.stop)
  };
};
var lifeCycleToFn = (a2) => {
  return {
    ...a2,
    start: a2.start?.map((x) => x.fn),
    request: a2.request?.map((x) => x.fn),
    parse: a2.parse?.map((x) => x.fn),
    transform: a2.transform?.map((x) => x.fn),
    beforeHandle: a2.beforeHandle?.map((x) => x.fn),
    afterHandle: a2.afterHandle?.map((x) => x.fn),
    onResponse: a2.onResponse?.map((x) => x.fn),
    mapResponse: a2.mapResponse?.map((x) => x.fn),
    trace: a2.trace?.map((x) => x.fn),
    error: a2.error?.map((x) => x.fn),
    stop: a2.stop?.map((x) => x.fn)
  };
};
var cloneInference = (inference) => ({
  event: {
    body: inference.event.body,
    cookie: inference.event.cookie,
    headers: inference.event.headers,
    queries: [...inference.event.queries],
    query: inference.event.query,
    set: inference.event.set,
    unknownQueries: inference.event.unknownQueries
  },
  trace: {
    request: inference.trace.request,
    parse: inference.trace.parse,
    transform: inference.trace.transform,
    handle: inference.trace.handle,
    beforeHandle: inference.trace.beforeHandle,
    afterHandle: inference.trace.afterHandle,
    error: inference.trace.error,
    context: inference.trace.context,
    store: inference.trace.store,
    set: inference.trace.set
  }
});
var redirect = (url, status = 301) => Response.redirect(url, status);
var ELYSIA_FORM_DATA = Symbol("ElysiaFormData");
var form = (items) => {
  const formData = new FormData;
  for (const [key, value15] of Object.entries(items)) {
    if (Array.isArray(value15)) {
      for (const v of value15) {
        if (value15 instanceof File)
          formData.append(key, value15, value15.name);
        formData.append(key, v);
      }
      continue;
    }
    if (value15 instanceof File)
      formData.append(key, value15, value15.name);
    formData.append(key, value15);
  }
  return formData;
};
var env = typeof Bun !== "undefined" ? Bun.env : typeof process !== "undefined" ? process?.env : undefined;
var ERROR_CODE = Symbol("ElysiaErrorCode");
var ELYSIA_RESPONSE = Symbol("ElysiaResponse");
var isProduction = (env?.NODE_ENV ?? env?.ENV) === "production";
var error22 = (code, response) => ({
  [ELYSIA_RESPONSE]: StatusMap[code] ?? code,
  response: response ?? (code in InvertedStatusMap ? InvertedStatusMap[code] : code),
  _type: undefined
});
var InternalServerError = class extends Error {
  constructor(message) {
    super(message ?? "INTERNAL_SERVER_ERROR");
    this.code = "INTERNAL_SERVER_ERROR";
    this.status = 500;
  }
};
var NotFoundError = class extends Error {
  constructor(message) {
    super(message ?? "NOT_FOUND");
    this.code = "NOT_FOUND";
    this.status = 404;
  }
};
var ParseError = class extends Error {
  constructor(message, body) {
    super(message ?? "PARSE");
    this.body = body;
    this.code = "PARSE";
    this.status = 400;
  }
};
var InvalidCookieSignature = class extends Error {
  constructor(key, message) {
    super(message ?? `"${key}" has invalid cookie signature`);
    this.key = key;
    this.code = "INVALID_COOKIE_SIGNATURE";
    this.status = 400;
  }
};
var ValidationError = class _ValidationError extends Error {
  constructor(type47, validator, value15) {
    if (typeof value15 === "object" && ELYSIA_RESPONSE in value15)
      value15 = value15.response;
    const error23 = isProduction ? undefined : ("Errors" in validator) ? validator.Errors(value15).First() : exports_value2.Errors(validator, value15).First();
    const customError = error23?.schema.error !== undefined ? typeof error23.schema.error === "function" ? error23.schema.error({
      type: type47,
      validator,
      value: value15,
      get errors() {
        return [...validator.Errors(value15)];
      }
    }) : error23.schema.error : undefined;
    const accessor = error23?.path || "root";
    let message = "";
    if (customError !== undefined) {
      message = typeof customError === "object" ? JSON.stringify(customError) : customError + "";
    } else if (isProduction) {
      message = JSON.stringify({
        type: "validation",
        on: type47,
        message: error23?.message,
        found: value15
      });
    } else {
      const schema3 = validator?.schema ?? validator;
      const errors5 = "Errors" in validator ? [...validator.Errors(value15)] : [...exports_value2.Errors(validator, value15)];
      let expected;
      try {
        expected = exports_value2.Create(schema3);
      } catch (error32) {
        expected = {
          type: "Could not create expected value",
          message: error32?.message,
          error: error32
        };
      }
      message = JSON.stringify({
        type: "validation",
        on: type47,
        property: accessor,
        message: error23?.message,
        expected,
        found: value15,
        errors: errors5
      }, null, 2);
    }
    super(message);
    this.type = type47;
    this.validator = validator;
    this.value = value15;
    this.code = "VALIDATION";
    this.status = 422;
    Object.setPrototypeOf(this, _ValidationError.prototype);
  }
  get all() {
    return [...this.validator.Errors(this.value)];
  }
  static simplifyModel(validator) {
    const model = "schema" in validator ? validator.schema : validator;
    try {
      return exports_value2.Create(model);
    } catch {
      return model;
    }
  }
  get model() {
    return _ValidationError.simplifyModel(this.validator);
  }
  toResponse(headers) {
    return new Response(this.message, {
      status: 400,
      headers: {
        ...headers,
        "content-type": "application/json"
      }
    });
  }
};
var websocket = {
  open(ws) {
    ws.data.open?.(ws);
  },
  message(ws, message) {
    ws.data.message?.(ws, message);
  },
  drain(ws) {
    ws.data.drain?.(ws);
  },
  close(ws, code, reason) {
    ws.data.close?.(ws, code, reason);
  }
};
var ElysiaWS = class {
  constructor(raw, data) {
    this.raw = raw;
    this.data = data;
    this.validator = raw.data.validator;
    if (raw.data.id) {
      this.id = raw.data.id;
    } else {
      const array5 = new Uint32Array(1);
      crypto.getRandomValues(array5);
      this.id = array5[0].toString();
    }
  }
  get id() {
    return this.raw.data.id;
  }
  set id(newID) {
    this.raw.data.id = newID;
  }
  get publish() {
    return (topic, data = undefined, compress) => {
      if (this.validator?.Check(data) === false)
        throw new ValidationError("message", this.validator, data);
      if (typeof data === "object")
        data = JSON.stringify(data);
      this.raw.publish(topic, data, compress);
      return this;
    };
  }
  get send() {
    return (data) => {
      if (this.validator?.Check(data) === false)
        throw new ValidationError("message", this.validator, data);
      if (Buffer.isBuffer(data)) {
        this.raw.send(data);
        return this;
      }
      if (typeof data === "object")
        data = JSON.stringify(data);
      this.raw.send(data);
      return this;
    };
  }
  get subscribe() {
    return (room) => {
      this.raw.subscribe(room);
      return this;
    };
  }
  get unsubscribe() {
    return (room) => {
      this.raw.unsubscribe(room);
      return this;
    };
  }
  get cork() {
    return (callback) => {
      this.raw.cork(callback);
      return this;
    };
  }
  get close() {
    return () => {
      this.raw.close();
      return this;
    };
  }
  get terminate() {
    return this.raw.terminate.bind(this.raw);
  }
  get isSubscribed() {
    return this.raw.isSubscribed.bind(this.raw);
  }
  get remoteAddress() {
    return this.raw.remoteAddress;
  }
};
var headersHasToJSON = new Headers().toJSON;
var requestId = { value: 0 };
var createReport = ({
  hasTrace,
  hasTraceSet = false,
  addFn,
  condition = {}
}) => {
  if (hasTrace) {
    addFn(`
const reporter = getReporter()
`);
    return (event, {
      name,
      attribute = "",
      unit = 0
    } = {}) => {
      const dotIndex = event.indexOf(".");
      const isGroup = dotIndex === -1;
      if (event !== "request" && event !== "response" && !condition[isGroup ? event : event.slice(0, dotIndex)])
        return () => {
          if (hasTraceSet && event === "afterHandle")
            addFn(`
await traceDone
`);
        };
      if (isGroup)
        name ||= event;
      else
        name ||= "anonymous";
      addFn("\n" + `reporter.emit('event', {
					id,
					event: '${event}',
					type: 'begin',
					name: '${name}',
					time: performance.now(),
					${isGroup ? `unit: ${unit},` : ""}
					${attribute}
				})`.replace(/(\t| |\n)/g, "") + "\n");
      return () => {
        addFn("\n" + `reporter.emit('event', {
							id,
							event: '${event}',
							type: 'end',
							time: performance.now()
						})`.replace(/(\t| |\n)/g, "") + "\n");
        if (hasTraceSet && event === "afterHandle")
          addFn(`
await traceDone
`);
      };
    };
  } else {
    return () => () => {
    };
  }
};
var hasReturn = (fnLiteral) => {
  const parenthesisEnd = fnLiteral.indexOf(")");
  if (fnLiteral.charCodeAt(parenthesisEnd + 2) === 61 && fnLiteral.charCodeAt(parenthesisEnd + 5) !== 123) {
    return true;
  }
  return fnLiteral.includes("return");
};
var composeValidationFactory = (hasErrorHandler, {
  injectResponse = "",
  normalize = false
} = {}) => ({
  composeValidation: (type47, value15 = `c.${type47}`) => hasErrorHandler ? `c.set.status = 422; throw new ValidationError('${type47}', ${type47}, ${value15})` : `c.set.status = 422; return new ValidationError('${type47}', ${type47}, ${value15}).toResponse(c.set.headers)`,
  composeResponseValidation: (name = "r") => {
    const returnError = hasErrorHandler ? `throw new ValidationError('response', response[c.set.status], ${name})` : `return new ValidationError('response', response[c.set.status], ${name}).toResponse(c.set.headers)`;
    let code = "\n" + injectResponse + "\n";
    code += `let er

		if(${name} && typeof ${name} === "object" && ELYSIA_RESPONSE in ${name})
			er = ${name}[ELYSIA_RESPONSE]
`;
    if (normalize)
      code += `
			if(!er && response[c.set.status]?.Clean)
				${name} = response[c.set.status]?.Clean(${name})
			else if(response[er]?.Clean)
				${name}.response = response[er]?.Clean(${name}.response)`;
    code += `
			if(er) {
				if(!(${name} instanceof Response) && response[er]?.Check(${name}.response) === false) {
					if(!(response instanceof Error)) {
						c.set.status = ${name}[ELYSIA_RESPONSE]

						${returnError}
					}
				}
			} else if(!(${name} instanceof Response) && response[c.set.status]?.Check(${name}) === false) {
				if(!(response instanceof Error))
					${returnError}
			}
`;
    return code;
  }
});
var KindSymbol = Symbol.for("TypeBox.Kind");
var hasProperty = (expectedProperty, schema3) => {
  if (!schema3)
    return;
  if (schema3.type === "object") {
    const properties = schema3.properties;
    if (!properties)
      return false;
    for (const key of Object.keys(properties)) {
      const property = properties[key];
      if (expectedProperty in property)
        return true;
      if (property.type === "object") {
        if (hasProperty(expectedProperty, property))
          return true;
      } else if (property.anyOf) {
        for (let i = 0;i < property.anyOf.length; i++) {
          if (hasProperty(expectedProperty, property.anyOf[i]))
            return true;
        }
      }
    }
    return false;
  }
  return expectedProperty in schema3;
};
var TransformSymbol = Symbol.for("TypeBox.Transform");
var hasTransform = (schema3) => {
  if (!schema3)
    return;
  if (schema3.type === "object" && schema3.properties) {
    const properties = schema3.properties;
    for (const key of Object.keys(properties)) {
      const property = properties[key];
      if (property.type === "object") {
        if (hasTransform(property))
          return true;
      } else if (property.anyOf) {
        for (let i = 0;i < property.anyOf.length; i++)
          if (hasTransform(property.anyOf[i]))
            return true;
      }
      const hasTransformSymbol = TransformSymbol in property;
      if (hasTransformSymbol)
        return true;
    }
    return false;
  }
  return TransformSymbol in schema3 || schema3.properties && TransformSymbol in schema3.properties;
};
var matchFnReturn = /(?:return|=>) \S+\(/g;
var isAsync = (v) => {
  const fn = "fn" in v ? v.fn : v;
  if (fn.constructor.name === "AsyncFunction")
    return true;
  const literal14 = fn.toString();
  if (literal14.includes("=> response.clone("))
    return false;
  if (literal14.includes("await"))
    return true;
  if (literal14.includes("async"))
    return true;
  return !!literal14.match(matchFnReturn);
};
var composeHandler = ({
  app,
  path,
  method,
  localHook,
  hooks,
  validator,
  handler,
  allowMeta = false,
  appInference: { event: eventInference, trace: traceInference }
}) => {
  const isHandleFn = typeof handler === "function";
  if (!isHandleFn)
    handler = mapResponse(handler, {
      headers: app.setHeaders ?? {}
    });
  const hasErrorHandler = app.config.forceErrorEncapsulation && (isHandleFn || hooks.afterHandle.length > 0 || hooks.beforeHandle.length > 0 || hooks.transform.length > 0) || hooks.error.length > 0 || app.event.error.length > 0 || typeof Bun === "undefined" || hooks.onResponse.length > 0 || !!hooks.trace.length;
  const handle = isHandleFn ? `handler(c)` : `handler`;
  const handleResponse = hooks.onResponse.length ? `
;(async () => {${hooks.onResponse.map((_, i) => `await res${i}(c)`).join(";")}})();
` : "";
  const traceConditions = traceInference;
  const hasTrace = hooks.trace.length > 0;
  let fnLiteral = "";
  const inference = sucrose(Object.assign(localHook, {
    handler
  }), eventInference);
  const hasQuery = inference.query || !!validator.query;
  const hasBody = method !== "$INTERNALWS" && method !== "GET" && method !== "HEAD" && hooks.type !== "none" && (inference.body || !!validator.body);
  const defaultHeaders = app.setHeaders;
  const hasDefaultHeaders = defaultHeaders && !!Object.keys(defaultHeaders).length;
  const hasHeaders = inference.headers || validator.headers;
  const hasCookie = inference.cookie || !!validator.cookie;
  const cookieValidator = hasCookie ? getCookieValidator({
    validator: validator.cookie,
    defaultConfig: app.config.cookie,
    dynamic: !!app.config.aot,
    config: validator.cookie?.config ?? {},
    models: app.definitions.type
  }) : undefined;
  const cookieMeta = cookieValidator?.config;
  let encodeCookie = "";
  if (cookieMeta?.sign) {
    if (!cookieMeta.secrets)
      throw new Error(`t.Cookie required secret which is not set in (${method}) ${path}.`);
    const secret = !cookieMeta.secrets ? undefined : typeof cookieMeta.secrets === "string" ? cookieMeta.secrets : cookieMeta.secrets[0];
    encodeCookie += `const _setCookie = c.set.cookie
		if(_setCookie) {`;
    if (cookieMeta.sign === true) {
      encodeCookie += `for(const [key, cookie] of Object.entries(_setCookie)) {
				c.set.cookie[key].value = await signCookie(cookie.value, '${secret}')
			}`;
    } else
      for (const name of cookieMeta.sign) {
        encodeCookie += `if(_setCookie['${name}']?.value) { c.set.cookie['${name}'].value = await signCookie(_setCookie['${name}'].value, '${secret}') }
`;
      }
    encodeCookie += "}\n";
  }
  const normalize = app.config.normalize;
  const { composeValidation, composeResponseValidation } = composeValidationFactory(hasErrorHandler, {
    normalize
  });
  if (hasHeaders) {
    fnLiteral += headersHasToJSON ? `c.headers = c.request.headers.toJSON()
` : `c.headers = {}
                for (const [key, value] of c.request.headers.entries())
					c.headers[key] = value
				`;
  }
  if (hasCookie) {
    const get = (name, defaultValue) => {
      const value15 = cookieMeta?.[name] ?? defaultValue;
      if (!value15)
        return typeof defaultValue === "string" ? `${name}: "${defaultValue}",` : `${name}: ${defaultValue},`;
      if (typeof value15 === "string")
        return `${name}: '${value15}',`;
      if (value15 instanceof Date)
        return `${name}: new Date(${value15.getTime()}),`;
      return `${name}: ${value15},`;
    };
    const options = cookieMeta ? `{
			secrets: ${cookieMeta.secrets !== undefined ? typeof cookieMeta.secrets === "string" ? `'${cookieMeta.secrets}'` : "[" + cookieMeta.secrets.reduce((a2, b) => a2 + `'${b}',`, "") + "]" : "undefined"},
			sign: ${cookieMeta.sign === true ? true : cookieMeta.sign !== undefined ? "[" + cookieMeta.sign.reduce((a2, b) => a2 + `'${b}',`, "") + "]" : "undefined"},
			${get("domain")}
			${get("expires")}
			${get("httpOnly")}
			${get("maxAge")}
			${get("path", "/")}
			${get("priority")}
			${get("sameSite")}
			${get("secure")}
		}` : "undefined";
    if (hasHeaders)
      fnLiteral += `
c.cookie = await parseCookie(c.set, c.headers.cookie, ${options})
`;
    else
      fnLiteral += `
c.cookie = await parseCookie(c.set, c.request.headers.get('cookie'), ${options})
`;
  }
  if (hasQuery) {
    let destructured = [];
    if (validator.query && validator.query.schema.type === "object") {
      destructured = Object.keys(validator.query.schema.properties);
    } else
      for (const query of inference.queries)
        if (destructured.indexOf(query) === -1)
          destructured.push(query);
    if (app.config.forceDynamicQuery === true || inference.unknownQueries === true || !destructured.length) {
      fnLiteral += `if(c.qi !== -1) {
				c.query = parseQuery(c.url.slice(c.qi + 1).replace(/\\+/g, ' '))

			} else c.query = {}`;
    } else {
      fnLiteral += `if(c.qi !== -1) {
				let url = '&' + c.url.slice(c.qi + 1).replace(/\\+/g, ' ')

				${destructured.map((name, index) => `
						${index === 0 ? "let" : ""} memory = url.indexOf('&${name}=')
						let a${index}

						if (memory !== -1) {
							const start = memory + ${name.length + 2}
							memory = url.indexOf('&', start)

							if(memory === -1) a${index} = decodeURIComponent(url.slice(start))
							else a${index} = decodeURIComponent(url.slice(start, memory))
						}`).join("\n")}

				c.query = {
					${destructured.map((name, index) => `'${name}': a${index}`).join(", ")}
				}
			} else {
				c.query = {}
			}`;
    }
  }
  const hasTraceSet = traceInference.set;
  const hasSet = inference.cookie || inference.set || hasTraceSet || hasHeaders || isHandleFn && hasDefaultHeaders;
  if (hasTrace)
    fnLiteral += "\nconst id = c.$$requestId\n";
  const report = createReport({
    hasTrace,
    hasTraceSet,
    condition: traceConditions,
    addFn: (word) => {
      fnLiteral += word;
    }
  });
  fnLiteral += hasErrorHandler ? "\n try {\n" : "";
  if (hasTraceSet) {
    fnLiteral += `
const traceDone = Promise.all([`;
    for (let i = 0;i < hooks.trace.length; i++) {
      fnLiteral += `new Promise(r => { reporter.once(\`res\${id}.${i}\`, r) }),`;
    }
    fnLiteral += `])
`;
  }
  const isAsyncHandler = typeof handler === "function" && isAsync(handler);
  const maybeAsync = hasCookie || hasBody || hasTraceSet || isAsyncHandler || !!hooks.mapResponse.length || hooks.parse.length > 0 || hooks.afterHandle.some(isAsync) || hooks.beforeHandle.some(isAsync) || hooks.transform.some(isAsync);
  const endParse = report("parse", {
    unit: hooks.parse.length
  });
  if (hasBody) {
    const hasBodyInference = hooks.parse.length || inference.body || validator.body;
    if (hooks.type && !hooks.parse.length) {
      switch (hooks.type) {
        case "json":
        case "application/json":
          if (hasErrorHandler)
            fnLiteral += `const tempBody = await c.request.text()

							try {
								c.body = JSON.parse(tempBody)
							} catch {
								throw new ParseError('Failed to parse body as found: ' + (typeof body === "string" ? "'" + body + "'" : body), body)
							}`;
          else
            fnLiteral += `c.body = await c.request.json()`;
          break;
        case "text":
        case "text/plain":
          fnLiteral += `c.body = await c.request.text()
`;
          break;
        case "urlencoded":
        case "application/x-www-form-urlencoded":
          fnLiteral += `c.body = parseQuery(await c.request.text())
`;
          break;
        case "arrayBuffer":
        case "application/octet-stream":
          fnLiteral += `c.body = await c.request.arrayBuffer()
`;
          break;
        case "formdata":
        case "multipart/form-data":
          fnLiteral += `c.body = {}

						const form = await c.request.formData()
						for (const key of form.keys()) {
							if (c.body[key])
								continue

							const value = form.getAll(key)
							if (value.length === 1)
								c.body[key] = value[0]
							else c.body[key] = value
						}
`;
          break;
      }
    } else if (hasBodyInference) {
      fnLiteral += "\n";
      fnLiteral += hasHeaders ? `let contentType = c.headers['content-type']` : `let contentType = c.request.headers.get('content-type')`;
      fnLiteral += `
				if (contentType) {
					const index = contentType.indexOf(';')
					if (index !== -1) contentType = contentType.substring(0, index)

					c.contentType = contentType
`;
      if (hooks.parse.length) {
        fnLiteral += `let used = false
`;
        const endReport = report("parse", {
          unit: hooks.parse.length
        });
        for (let i = 0;i < hooks.parse.length; i++) {
          const endUnit = report("parse.unit", {
            name: hooks.parse[i].fn.name
          });
          const name = `bo${i}`;
          if (i !== 0)
            fnLiteral += `if(!used) {
`;
          fnLiteral += `let ${name} = parse[${i}](c, contentType)
`;
          fnLiteral += `if(${name} instanceof Promise) ${name} = await ${name}
`;
          fnLiteral += `if(${name} !== undefined) { c.body = ${name}; used = true }
`;
          endUnit();
          if (i !== 0)
            fnLiteral += `}`;
        }
        endReport();
      }
      fnLiteral += "\ndelete c.contentType\n";
      if (hooks.parse.length)
        fnLiteral += `if (!used) {`;
      if (hooks.type && !Array.isArray(hooks.type)) {
        switch (hooks.type) {
          case "json":
          case "application/json":
            if (hasErrorHandler)
              fnLiteral += `const tempBody = await c.request.text()

								try {
									c.body = JSON.parse(tempBody)
								} catch {
									throw new ParseError('Failed to parse body as found: ' + (typeof body === "string" ? "'" + body + "'" : body), body)
								}`;
            else
              fnLiteral += `c.body = await c.request.json()`;
            break;
          case "text":
          case "text/plain":
            fnLiteral += `c.body = await c.request.text()
`;
            break;
          case "urlencoded":
          case "application/x-www-form-urlencoded":
            fnLiteral += `c.body = parseQuery(await c.request.text())
`;
            break;
          case "arrayBuffer":
          case "application/octet-stream":
            fnLiteral += `c.body = await c.request.arrayBuffer()
`;
            break;
          case "formdata":
          case "multipart/form-data":
            fnLiteral += `c.body = {}

							const form = await c.request.formData()
							for (const key of form.keys()) {
								if (c.body[key])
									continue

								const value = form.getAll(key)
								if (value.length === 1)
									c.body[key] = value[0]
								else c.body[key] = value
							}
`;
            break;
        }
      } else {
        fnLiteral += `
					switch (contentType) {
						case 'application/json':
							${hasErrorHandler ? `
							const tempBody = await c.request.text()

							try {
								c.body = JSON.parse(tempBody)
							} catch {
								throw new ParseError('Failed to parse body as found: ' + (typeof body === "string" ? "'" + body + "'" : body), body)
							}
							` : `c.body = await c.request.json()
`}
							break

						case 'text/plain':
							c.body = await c.request.text()
							break

						case 'application/x-www-form-urlencoded':
							c.body = parseQuery(await c.request.text())
							break

						case 'application/octet-stream':
							c.body = await c.request.arrayBuffer();
							break

						case 'multipart/form-data':
							c.body = {}

							const form = await c.request.formData()
							for (const key of form.keys()) {
								if (c.body[key])
									continue

								const value = form.getAll(key)
								if (value.length === 1)
									c.body[key] = value[0]
								else c.body[key] = value
							}

							break
					}`;
      }
      if (hooks.parse.length)
        fnLiteral += `}`;
      fnLiteral += "}\n";
    }
    fnLiteral += "\n";
  }
  endParse();
  if (hooks?.transform) {
    const endTransform = report("transform", {
      unit: hooks.transform.length
    });
    if (hooks.transform.length)
      fnLiteral += "\nlet transformed\n";
    for (let i = 0;i < hooks.transform.length; i++) {
      const transform7 = hooks.transform[i];
      const endUnit = report("transform.unit", {
        name: transform7.fn.name
      });
      fnLiteral += isAsync(transform7) ? `transformed = await transform[${i}](c)
` : `transformed = transform[${i}](c)
`;
      fnLiteral += `if(transformed?.[ELYSIA_RESPONSE])
				throw transformed
			else
				Object.assign(c, transformed)
`;
      endUnit();
    }
    endTransform();
  }
  if (validator) {
    fnLiteral += "\n";
    if (validator.headers) {
      if (hasProperty("default", validator.headers.schema))
        for (const [key, value15] of Object.entries(exports_value2.Default(validator.headers.schema, {}))) {
          const parsed = typeof value15 === "object" ? JSON.stringify(value15) : typeof value15 === "string" ? `'${value15}'` : value15;
          if (parsed)
            fnLiteral += `c.headers['${key}'] ??= ${parsed}
`;
        }
      fnLiteral += `if(headers.Check(c.headers) === false) {
				${composeValidation("headers")}
			}`;
      if (hasTransform(validator.headers.schema))
        fnLiteral += `
c.headers = headers.Decode(c.headers)
`;
    }
    if (validator.params) {
      if (hasProperty("default", validator.params.schema))
        for (const [key, value15] of Object.entries(exports_value2.Default(validator.params.schema, {}))) {
          const parsed = typeof value15 === "object" ? JSON.stringify(value15) : typeof value15 === "string" ? `'${value15}'` : value15;
          if (parsed)
            fnLiteral += `c.params['${key}'] ??= ${parsed}
`;
        }
      fnLiteral += `if(params.Check(c.params) === false) {
				${composeValidation("params")}
			}`;
      if (hasTransform(validator.params.schema))
        fnLiteral += `
c.params = params.Decode(c.params)
`;
    }
    if (validator.query) {
      if (normalize)
        fnLiteral += "c.query = query.Clean(c.query);\n";
      if (hasProperty("default", validator.query.schema))
        for (const [key, value15] of Object.entries(exports_value2.Default(validator.query.schema, {}))) {
          const parsed = typeof value15 === "object" ? JSON.stringify(value15) : typeof value15 === "string" ? `'${value15}'` : value15;
          if (parsed)
            fnLiteral += `c.query['${key}'] ??= ${parsed}
`;
        }
      for (const [key, value15] of Object.entries(validator.query.schema?.properties)) {
        const { type: type47, anyOf } = value15;
        if (type47 === "object" || type47 === "array") {
          fnLiteral += `
if(typeof c.query['${key}'] === "string")
						try {
							c.query['${key}'] = JSON.parse(c.query['${key}'])
						} catch {}
`;
          continue;
        }
        if (anyOf) {
          fnLiteral += `
if(Array.isArray(c.query['${key}'])) {
						for(let i = 0; i < c.query['${key}'].length; i++) {
							if(
								typeof c.query['${key}'][i] === "string" && 
								(c.query['${key}'][i].charCodeAt(0) === 123  ||
								 c.query['${key}'][i].charCodeAt(0) === 91)
							)
								try {
									c.query['${key}'][i] = JSON.parse(c.query['${key}'][i])
								} catch {}
						}
					} else if(typeof c.query['${key}'] === "object") {
						c.query['${key}'] = JSON.parse(c.query['${key}'])
					}
`;
        }
      }
      fnLiteral += `if(query.Check(c.query) === false) {
				${composeValidation("query")}
			}`;
      if (hasTransform(validator.query.schema))
        fnLiteral += `
c.query = query.Decode(Object.assign({}, c.query))
`;
    }
    if (validator.body) {
      if (normalize)
        fnLiteral += "c.body = body.Clean(c.body);\n";
      if (hasProperty("default", validator.body.schema)) {
        fnLiteral += `if(body.Check(c.body) === false) {
					if (typeof c.body === 'object') {
						c.body = Object.assign(${JSON.stringify(exports_value2.Default(validator.body.schema, {}) ?? {})}, c.body)
					} else {`;
        const defaultValue = exports_value2.Default(validator.body.schema, undefined);
        if (typeof defaultValue === "string")
          fnLiteral += `c.body = '${defaultValue}'`;
        else
          fnLiteral += `c.body = ${defaultValue}`;
        fnLiteral += `}
    				if(body.Check(c.body) === false) {
        				${composeValidation("body")}
     			}
            }`;
      } else
        fnLiteral += `if(body.Check(c.body) === false) {
			${composeValidation("body")}
		}`;
      if (hasTransform(validator.body.schema))
        fnLiteral += `
c.body = body.Decode(c.body)
`;
    }
    if (isNotEmpty(cookieValidator?.schema?.properties ?? cookieValidator?.schema?.schema ?? {})) {
      fnLiteral += `const cookieValue = {}
    			for(const [key, value] of Object.entries(c.cookie))
    				cookieValue[key] = value.value
`;
      if (hasProperty("default", cookieValidator.schema))
        for (const [key, value15] of Object.entries(exports_value2.Default(cookieValidator.schema, {}))) {
          fnLiteral += `cookieValue['${key}'] = ${typeof value15 === "object" ? JSON.stringify(value15) : value15}
`;
        }
      fnLiteral += `if(cookie.Check(cookieValue) === false) {
				${composeValidation("cookie", "cookieValue")}
			}`;
    }
  }
  if (hooks?.beforeHandle) {
    const endBeforeHandle = report("beforeHandle", {
      unit: hooks.beforeHandle.length
    });
    let hasResolve = false;
    for (let i = 0;i < hooks.beforeHandle.length; i++) {
      const beforeHandle = hooks.beforeHandle[i];
      const endUnit = report("beforeHandle.unit", {
        name: beforeHandle.fn.name
      });
      const returning = hasReturn(beforeHandle.fn.toString());
      const isResolver = beforeHandle.subType === "resolve";
      if (isResolver) {
        if (!hasResolve) {
          hasResolve = true;
          fnLiteral += "\nlet resolved\n";
        }
        fnLiteral += isAsync(beforeHandle) ? `resolved = await beforeHandle[${i}](c);
` : `resolved = beforeHandle[${i}](c);
`;
        fnLiteral += `if(resolved[ELYSIA_RESPONSE])
						throw resolved
					else
						Object.assign(c, resolved)
`;
      } else if (!returning) {
        fnLiteral += isAsync(beforeHandle) ? `await beforeHandle[${i}](c);
` : `beforeHandle[${i}](c);
`;
        endUnit();
      } else {
        fnLiteral += isAsync(beforeHandle) ? `be = await beforeHandle[${i}](c);
` : `be = beforeHandle[${i}](c);
`;
        endUnit();
        fnLiteral += `if(be !== undefined) {
`;
        endBeforeHandle();
        if (hooks.afterHandle?.length) {
          const endAfterHandle = report("afterHandle", {
            unit: hooks.transform.length
          });
          report("handle", {
            name: isHandleFn ? handler.name : undefined
          })();
          for (let i2 = 0;i2 < hooks.afterHandle.length; i2++) {
            const hook = hooks.afterHandle[i2];
            const returning2 = hasReturn(hook.fn.toString());
            const endUnit2 = report("afterHandle.unit", {
              name: hook.fn.name
            });
            fnLiteral += `c.response = be
`;
            if (!returning2) {
              fnLiteral += isAsync(hook.fn) ? `await afterHandle[${i2}](c, be)
` : `afterHandle[${i2}](c, be)
`;
            } else {
              fnLiteral += isAsync(hook.fn) ? `af = await afterHandle[${i2}](c)
` : `af = afterHandle[${i2}](c)
`;
              fnLiteral += `if(af !== undefined) { c.response = be = af }
`;
            }
            endUnit2();
          }
          endAfterHandle();
        }
        if (validator.response)
          fnLiteral += composeResponseValidation("be");
        if (hooks.mapResponse.length) {
          fnLiteral += `c.response = be`;
          for (let i2 = 0;i2 < hooks.mapResponse.length; i2++) {
            fnLiteral += `
if(mr === undefined) {
							mr = onMapResponse[${i2}](c)
							if(mr instanceof Promise) mr = await mr
							if(mr !== undefined) be = c.response = mr
						}
`;
          }
        }
        fnLiteral += encodeCookie;
        fnLiteral += `return mapEarlyResponse(be, c.set)}
`;
      }
    }
    endBeforeHandle();
  }
  if (hooks?.afterHandle.length) {
    const endHandle = report("handle", {
      name: isHandleFn ? handler.name : undefined
    });
    if (hooks.afterHandle.length)
      fnLiteral += isAsyncHandler ? `let r = c.response = await ${handle};
` : `let r = c.response = ${handle};
`;
    else
      fnLiteral += isAsyncHandler ? `let r = await ${handle};
` : `let r = ${handle};
`;
    endHandle();
    const endAfterHandle = report("afterHandle", {
      unit: hooks.afterHandle.length
    });
    for (let i = 0;i < hooks.afterHandle.length; i++) {
      const hook = hooks.afterHandle[i];
      const returning = hasReturn(hook.fn.toString());
      const endUnit = report("afterHandle.unit", {
        name: hook.fn.name
      });
      if (!returning) {
        fnLiteral += isAsync(hook.fn) ? `await afterHandle[${i}](c)
` : `afterHandle[${i}](c)
`;
        endUnit();
      } else {
        fnLiteral += isAsync(hook.fn) ? `af = await afterHandle[${i}](c)
` : `af = afterHandle[${i}](c)
`;
        endUnit();
        if (validator.response) {
          fnLiteral += `if(af !== undefined) {`;
          endAfterHandle();
          fnLiteral += composeResponseValidation("af");
          fnLiteral += `c.response = af }`;
        } else {
          fnLiteral += `if(af !== undefined) {`;
          endAfterHandle();
          fnLiteral += `c.response = af}
`;
        }
      }
    }
    endAfterHandle();
    fnLiteral += `r = c.response
`;
    if (validator.response)
      fnLiteral += composeResponseValidation();
    fnLiteral += encodeCookie;
    if (hooks.mapResponse.length) {
      for (let i = 0;i < hooks.mapResponse.length; i++) {
        fnLiteral += `
mr = onMapResponse[${i}](c)
				if(mr instanceof Promise) mr = await mr
				if(mr !== undefined) r = c.response = mr
`;
      }
    }
    if (hasSet)
      fnLiteral += `return mapResponse(r, c.set)
`;
    else
      fnLiteral += `return mapCompactResponse(r)
`;
  } else {
    const endHandle = report("handle", {
      name: isHandleFn ? handler.name : undefined
    });
    if (validator.response || hooks.mapResponse.length) {
      fnLiteral += isAsyncHandler ? `let r = await ${handle};
` : `let r = ${handle};
`;
      endHandle();
      if (validator.response)
        fnLiteral += composeResponseValidation();
      report("afterHandle")();
      if (hooks.mapResponse.length) {
        fnLiteral += "c.response = r";
        for (let i = 0;i < hooks.mapResponse.length; i++) {
          fnLiteral += `
if(mr === undefined) {
						mr = onMapResponse[${i}](c)
						if(mr instanceof Promise) mr = await mr
    					if(mr !== undefined) r = c.response = mr
					}
`;
        }
      }
      fnLiteral += encodeCookie;
      if (handler instanceof Response) {
        fnLiteral += inference.set ? `if(
					isNotEmpty(c.set.headers) ||
					c.set.status !== 200 ||
					c.set.redirect ||
					c.set.cookie
				)
					return mapResponse(${handle}.clone(), c.set)
				else
					return ${handle}.clone()` : `return ${handle}.clone()`;
        fnLiteral += "\n";
      } else if (hasSet)
        fnLiteral += `return mapResponse(r, c.set)
`;
      else
        fnLiteral += `return mapCompactResponse(r)
`;
    } else if (traceConditions.handle || hasCookie) {
      fnLiteral += isAsyncHandler ? `let r = await ${handle};
` : `let r = ${handle};
`;
      endHandle();
      report("afterHandle")();
      if (hooks.mapResponse.length) {
        fnLiteral += "c.response = r";
        for (let i = 0;i < hooks.mapResponse.length; i++) {
          fnLiteral += `
if(mr === undefined) {
							mr = onMapResponse[${i}](c)
							if(mr instanceof Promise) mr = await mr
    						if(mr !== undefined) r = c.response = mr
						}
`;
        }
      }
      fnLiteral += encodeCookie;
      if (hasSet)
        fnLiteral += `return mapResponse(r, c.set)
`;
      else
        fnLiteral += `return mapCompactResponse(r)
`;
    } else {
      endHandle();
      const handled = isAsyncHandler ? `await ${handle}` : handle;
      report("afterHandle")();
      if (handler instanceof Response) {
        fnLiteral += inference.set ? `if(
					isNotEmpty(c.set.headers) ||
					c.set.status !== 200 ||
					c.set.redirect ||
					c.set.cookie
				)
					return mapResponse(${handle}.clone(), c.set)
				else
					return ${handle}.clone()` : `return ${handle}.clone()`;
        fnLiteral += "\n";
      } else if (hasSet)
        fnLiteral += `return mapResponse(${handled}, c.set)
`;
      else
        fnLiteral += `return mapCompactResponse(${handled})
`;
    }
  }
  if (hasErrorHandler || handleResponse) {
    fnLiteral += `
} catch(error) {`;
    if (!maybeAsync)
      fnLiteral += `return (async () => {`;
    fnLiteral += `const set = c.set
if (!set.status || set.status < 300) set.status = error?.status || 500
`;
    const endError = report("error", {
      unit: hooks.error.length
    });
    if (hooks.error.length) {
      fnLiteral += `
				c.error = error
				c.code = error.code ?? error[ERROR_CODE] ?? "UNKNOWN"
			`;
      for (let i = 0;i < hooks.error.length; i++) {
        const name = `er${i}`;
        const endUnit = report("error.unit", {
          name: hooks.error[i].fn.name
        });
        fnLiteral += `
let ${name} = handleErrors[${i}](c)
`;
        if (isAsync(hooks.error[i]))
          fnLiteral += `if (${name} instanceof Promise) ${name} = await ${name}
`;
        endUnit();
        fnLiteral += `${name} = mapEarlyResponse(${name}, set)
`;
        fnLiteral += `if (${name}) {`;
        fnLiteral += `return ${name} }
`;
      }
    }
    endError();
    fnLiteral += `return handleError(c, error, true)

`;
    if (!maybeAsync)
      fnLiteral += "})()";
    fnLiteral += "}";
    if (handleResponse || hasTrace) {
      fnLiteral += ` finally { `;
      const endResponse = report("response", {
        unit: hooks.onResponse.length
      });
      fnLiteral += handleResponse;
      endResponse();
      fnLiteral += `}`;
    }
  }
  fnLiteral = `const {
		handler,
		handleError,
		hooks: {
			transform,
			resolve,
			beforeHandle,
			afterHandle,
			mapResponse: onMapResponse,
			parse,
			error: handleErrors,
			onResponse
		},
		validator: {
			body,
			headers,
			params,
			query,
			response,
			cookie
		},
		utils: {
			mapResponse,
			mapCompactResponse,
			mapEarlyResponse,
			parseQuery,
			isNotEmpty
		},
		error: {
			NotFoundError,
			ValidationError,
			InternalServerError,
			ParseError
		},
		schema,
		definitions,
		ERROR_CODE,
		getReporter,
		requestId,
		parseCookie,
		signCookie,
		decodeURIComponent,
		ELYSIA_RESPONSE
	} = hooks

	${hooks.onResponse.length ? `const ${hooks.onResponse.map((x, i) => `res${i} = onResponse[${i}]`).join(",")}` : ""}

	return ${maybeAsync ? "async" : ""} function handle(c) {
		${hooks.beforeHandle.length ? "let be" : ""}
		${hooks.afterHandle.length ? "let af" : ""}
		${hooks.mapResponse.length ? "let mr" : ""}

		${allowMeta ? "c.schema = schema; c.defs = definitions" : ""}
		${fnLiteral}
	}`;
  const createHandler = Function("hooks", fnLiteral);
  return createHandler({
    handler,
    hooks: lifeCycleToFn(hooks),
    validator,
    handleError: app.handleError,
    utils: {
      mapResponse,
      mapCompactResponse,
      mapEarlyResponse,
      parseQuery: import_fast_querystring.parse,
      isNotEmpty
    },
    error: {
      NotFoundError,
      ValidationError,
      InternalServerError,
      ParseError
    },
    schema: app.router.history,
    definitions: app.definitions.type,
    ERROR_CODE,
    getReporter: () => app.reporter,
    requestId,
    parseCookie,
    signCookie,
    decodeURIComponent: import_fast_decode_uri_component2.default,
    ELYSIA_RESPONSE
  });
};
var composeGeneralHandler = (app) => {
  const inference = {
    event: {
      ...app.inference.event,
      queries: [...app.inference.event.queries]
    },
    trace: { ...app.inference.trace }
  };
  let decoratorsLiteral = "";
  let fnLiteral = "";
  const defaultHeaders = app.setHeaders;
  for (const key of Object.keys(app.singleton.decorator))
    decoratorsLiteral += `,${key}: app.singleton.decorator.${key}`;
  const router = app.router;
  const hasTrace = app.event.trace.length > 0;
  let findDynamicRoute = `
	const route = router.find(request.method, path) ${router.http.root.ALL ? '?? router.find("ALL", path)' : ""}

	if (route === null)
		return ${app.event.error.length ? `app.handleError(ctx, notFound)` : app.event.request.length ? `new Response(error404Message, {
					status: ctx.set.status === 200 ? 404 : ctx.set.status,
					headers: ctx.set.headers
				})` : `error404.clone()`}

	ctx.params = route.params
`;
  const shouldPrecompile = app.config.precompile === true || typeof app.config.precompile === "object" && app.config.precompile.compose === true;
  if (!shouldPrecompile)
    findDynamicRoute += `
			if(route.store.composed)
				return route.store.composed(ctx)

			if(route.store.compose)
				return (route.store.compose())(ctx)`;
  else
    findDynamicRoute += `return route.store(ctx)`;
  findDynamicRoute += "\n";
  let switchMap = ``;
  for (const [path, { code, all }] of Object.entries(router.static.http.map))
    switchMap += `case '${path}':
switch(request.method) {
${code}
${all ?? `default: break map`}}

`;
  const maybeAsync = app.event.request.some(isAsync);
  const init = `

	const url = request.url
	const s = url.indexOf('/', 11)
	const qi = url.indexOf('?', s + 1)
	let path
	if(qi === -1)
		path = url.substring(s)
	else
		path = url.substring(s, qi)
`;
  fnLiteral += `const {
		app,
		mapEarlyResponse,
		NotFoundError,
		requestId,
		getReporter,
		handleError,
		error,
		redirect
	} = data

	const store = app.singleton.store
	const staticRouter = app.router.static.http
	const wsRouter = app.router.ws
	const router = app.router.http

	const notFound = new NotFoundError()

	${app.event.request.length ? `const onRequest = app.event.request.map(x => x.fn)` : ""}
	${router.static.http.variables}
	${app.event.error.length ? "" : `
	const error404Message = notFound.message.toString()
	const error404 = new Response(error404Message, { status: 404 });
	`}

	return ${maybeAsync ? "async" : ""} function map(request) {
`;
  if (app.event.request.length)
    fnLiteral += `let re`;
  const report = createReport({
    hasTrace,
    hasTraceSet: inference.trace.set,
    condition: {
      request: inference.trace.request
    },
    addFn: (word) => {
      fnLiteral += word;
    }
  });
  if (app.event.request.length) {
    fnLiteral += `
			${hasTrace ? "const id = +requestId.value++" : ""}

			const ctx = {
				request,
				store,
				redirect,
				set: {
					headers: ${Object.keys(defaultHeaders ?? {}).length ? "Object.assign({}, app.setHeaders)" : "{}"},
					status: 200
				},
				error
				${hasTrace ? ",$$requestId: +id" : ""}
				${decoratorsLiteral}
			}
		`;
    const endReport = report("request", {
      attribute: "ctx",
      unit: app.event.request.length
    });
    fnLiteral += `
 try {
`;
    for (let i = 0;i < app.event.request.length; i++) {
      const hook = app.event.request[i];
      const withReturn = hasReturn(hook.fn.toString());
      const maybeAsync2 = isAsync(hook);
      const endUnit = report("request.unit", {
        name: app.event.request[i].fn.name
      });
      if (withReturn) {
        fnLiteral += `re = mapEarlyResponse(
					${maybeAsync2 ? "await" : ""} onRequest[${i}](ctx),
					ctx.set,
					request
				)
`;
        endUnit();
        fnLiteral += `if(re !== undefined) return re
`;
      } else {
        fnLiteral += `${maybeAsync2 ? "await" : ""} onRequest[${i}](ctx)
`;
        endUnit();
      }
    }
    fnLiteral += `} catch (error) {
			return app.handleError(ctx, error)
		}`;
    endReport();
    fnLiteral += init;
    fnLiteral += `
ctx.qi = qi
 ctx.path = path
ctx.url=url`;
  } else {
    fnLiteral += init;
    fnLiteral += `${hasTrace ? "const id = +requestId.value++" : ""}
		const ctx = {
			request,
			store,
			qi,
			path,
			url,
			redirect,
			set: {
				headers: ${Object.keys(defaultHeaders ?? {}).length ? "Object.assign({}, app.setHeaders)" : "{}"},
				status: 200
			},
			error
			${hasTrace ? ",$$requestId: id" : ""}
			${decoratorsLiteral}
		}`;
    report("request", {
      unit: app.event.request.length,
      attribute: inference.trace.context || inference.trace.store || inference.trace.set ? "ctx" : ""
    })();
  }
  const wsPaths = app.router.static.ws;
  const wsRouter = app.router.ws;
  if (Object.keys(wsPaths).length || wsRouter.history.length) {
    fnLiteral += `
			if(request.method === 'GET') {
				switch(path) {`;
    for (const [path, index] of Object.entries(wsPaths)) {
      fnLiteral += `
					case '${path}':
						if(request.headers.get('upgrade') === 'websocket')
							return st${index}(ctx)

						break`;
    }
    fnLiteral += `
				default:
					if(request.headers.get('upgrade') === 'websocket') {
						const route = wsRouter.find('ws', path)

						if(route) {
							ctx.params = route.params

							return route.store(ctx)
						}
					}

					break
			}
		}
`;
  }
  fnLiteral += `
		map: switch(path) {
			${switchMap}

			default:
				break
		}

		${findDynamicRoute}
	}`;
  const handleError = composeErrorHandler(app);
  app.handleError = handleError;
  return Function("data", fnLiteral)({
    app,
    mapEarlyResponse,
    NotFoundError,
    getReporter: () => app.reporter,
    requestId,
    handleError,
    error: error22,
    redirect
  });
};
var composeErrorHandler = (app) => {
  let fnLiteral = `const {
		app: { event: { error: onErrorContainer, onResponse: resContainer } },
		mapResponse,
		ERROR_CODE,
		ELYSIA_RESPONSE
	} = inject

	const onError = onErrorContainer.map(x => x.fn)
	const res = resContainer.map(x => x.fn)

	return ${app.event.error.find(isAsync) ? "async" : ""} function(context, error, skipGlobal) {
		let r

		const { set } = context

		context.code = error.code
		context.error = error

		if(typeof error === "object" && ELYSIA_RESPONSE in error) {
			error.status = error[ELYSIA_RESPONSE]
			error.message = error.response
		}
`;
  for (let i = 0;i < app.event.error.length; i++) {
    const handler = app.event.error[i];
    const response = `${isAsync(handler) ? "await " : ""}onError[${i}](context)`;
    fnLiteral += "\nif(skipGlobal !== true) {\n";
    if (hasReturn(handler.fn.toString()))
      fnLiteral += `r = ${response}; if(r !== undefined) {
				if(r instanceof Response) return r

				if(r[ELYSIA_RESPONSE]) {
					error.status = error[ELYSIA_RESPONSE]
					error.message = error.response
				}

				if(set.status === 200) set.status = error.status
				return mapResponse(r, set, context.request)
			}
`;
    else
      fnLiteral += response + "\n";
    fnLiteral += "\n}\n";
  }
  fnLiteral += `if(error.constructor.name === "ValidationError" || error.constructor.name === "TransformDecodeError") {
		set.status = error.status ?? 422
		return new Response(
			error.message,
			{
				headers: Object.assign(
					{ 'content-type': 'application/json'},
					set.headers
				),
				status: set.status
			}
		)
	} else {
		if(error.code && typeof error.status === "number")
			return new Response(
				error.message,
				{ headers: set.headers, status: error.status }
			)

		return mapResponse(error, set, context.request)
	}
}`;
  return Function("inject", fnLiteral)({
    app,
    mapResponse,
    ERROR_CODE,
    ELYSIA_RESPONSE
  });
};
var jitRoute = (index) => `if(stc${index}) return stc${index}(ctx)
if(st${index}.compose) return (stc${index} = st${index}.compose())(ctx)

return st${index}(ctx)`;
var createDynamicHandler = (app) => async (request) => {
  const url = request.url, s = url.indexOf("/", 11), qi = url.indexOf("?", s + 1), path = qi === -1 ? url.substring(s) : url.substring(s, qi);
  const set2 = {
    cookie: {},
    status: 200,
    headers: {}
  };
  const context = Object.assign({}, app.singleton.decorator, {
    set: set2,
    store: app.singleton.store,
    request,
    path,
    qi,
    redirect
  });
  try {
    for (let i = 0;i < app.event.request.length; i++) {
      const onRequest = app.event.request[i].fn;
      let response2 = onRequest(context);
      if (response2 instanceof Promise)
        response2 = await response2;
      response2 = mapEarlyResponse(response2, set2);
      if (response2)
        return response2;
    }
    const handler = app.router.dynamic.find(request.method, path) ?? app.router.dynamic.find("ALL", path);
    if (!handler)
      throw new NotFoundError;
    const { handle, hooks, validator, content } = handler.store;
    let body;
    if (request.method !== "GET" && request.method !== "HEAD") {
      if (content) {
        switch (content) {
          case "application/json":
            body = await request.json();
            break;
          case "text/plain":
            body = await request.text();
            break;
          case "application/x-www-form-urlencoded":
            body = import_fast_querystring2.parse(await request.text());
            break;
          case "application/octet-stream":
            body = await request.arrayBuffer();
            break;
          case "multipart/form-data":
            body = {};
            const form2 = await request.formData();
            for (const key of form2.keys()) {
              if (body[key])
                continue;
              const value15 = form2.getAll(key);
              if (value15.length === 1)
                body[key] = value15[0];
              else
                body[key] = value15;
            }
            break;
        }
      } else {
        let contentType = request.headers.get("content-type");
        if (contentType) {
          const index = contentType.indexOf(";");
          if (index !== -1)
            contentType = contentType.slice(0, index);
          context.contentType = contentType;
          for (let i = 0;i < hooks.parse.length; i++) {
            const hook = hooks.parse[i].fn;
            let temp = hook(context, contentType);
            if (temp instanceof Promise)
              temp = await temp;
            if (temp) {
              body = temp;
              break;
            }
          }
          delete context.contentType;
          if (body === undefined) {
            switch (contentType) {
              case "application/json":
                body = await request.json();
                break;
              case "text/plain":
                body = await request.text();
                break;
              case "application/x-www-form-urlencoded":
                body = import_fast_querystring2.parse(await request.text());
                break;
              case "application/octet-stream":
                body = await request.arrayBuffer();
                break;
              case "multipart/form-data":
                body = {};
                const form2 = await request.formData();
                for (const key of form2.keys()) {
                  if (body[key])
                    continue;
                  const value15 = form2.getAll(key);
                  if (value15.length === 1)
                    body[key] = value15[0];
                  else
                    body[key] = value15;
                }
                break;
            }
          }
        }
      }
    }
    context.body = body;
    context.params = handler?.params || undefined;
    context.query = qi === -1 ? {} : import_fast_querystring2.parse(url.substring(qi + 1));
    context.headers = {};
    for (const [key, value15] of request.headers.entries())
      context.headers[key] = value15;
    const cookieMeta = Object.assign({}, app.config?.cookie, validator?.cookie?.config);
    const cookieHeaderValue = request.headers.get("cookie");
    context.cookie = await parseCookie(context.set, cookieHeaderValue, cookieMeta ? {
      secrets: cookieMeta.secrets !== undefined ? typeof cookieMeta.secrets === "string" ? cookieMeta.secrets : cookieMeta.secrets.join(",") : undefined,
      sign: cookieMeta.sign === true ? true : cookieMeta.sign !== undefined ? typeof cookieMeta.sign === "string" ? cookieMeta.sign : cookieMeta.sign.join(",") : undefined
    } : undefined);
    for (let i = 0;i < hooks.transform.length; i++) {
      const hook = hooks.transform[i];
      const operation = hook.fn(context);
      if (hook.subType === "derive") {
        if (operation instanceof Promise)
          Object.assign(context, await operation);
        else
          Object.assign(context, operation);
      } else if (operation instanceof Promise)
        await operation;
    }
    if (validator) {
      if (validator.headers) {
        const _header = {};
        for (const key in request.headers)
          _header[key] = request.headers.get(key);
        if (validator.headers.Check(_header) === false)
          throw new ValidationError("header", validator.headers, _header);
      }
      if (validator.params?.Check(context.params) === false)
        throw new ValidationError("params", validator.params, context.params);
      if (validator.query?.Check(context.query) === false)
        throw new ValidationError("query", validator.query, context.query);
      if (validator.cookie) {
        const cookieValue = {};
        for (const [key, value15] of Object.entries(context.cookie))
          cookieValue[key] = value15.value;
        if (validator.cookie?.Check(cookieValue) === false)
          throw new ValidationError("cookie", validator.cookie, cookieValue);
      }
      if (validator.body?.Check(body) === false)
        throw new ValidationError("body", validator.body, body);
    }
    for (let i = 0;i < hooks.beforeHandle.length; i++) {
      let response2 = hooks.beforeHandle[i].fn(context);
      if (response2 instanceof Promise)
        response2 = await response2;
      if (response2 !== undefined) {
        context.response = response2;
        for (let i2 = 0;i2 < hooks.afterHandle.length; i2++) {
          let newResponse = hooks.afterHandle[i2].fn(context);
          if (newResponse instanceof Promise)
            newResponse = await newResponse;
          if (newResponse)
            response2 = newResponse;
        }
        const result = mapEarlyResponse(response2, context.set);
        if (result)
          return result;
      }
    }
    let response = handle(context);
    if (response instanceof Promise)
      response = await response;
    if (!hooks.afterHandle.length) {
      const responseValidator = validator?.response?.[response.status];
      if (responseValidator?.Check(response) === false)
        throw new ValidationError("response", responseValidator, response);
    } else {
      context.response = response;
      for (let i = 0;i < hooks.afterHandle.length; i++) {
        let newResponse = hooks.afterHandle[i].fn(context);
        if (newResponse instanceof Promise)
          newResponse = await newResponse;
        const result = mapEarlyResponse(newResponse, context.set);
        if (result !== undefined) {
          const responseValidator = validator?.response?.[response.status];
          if (responseValidator?.Check(result) === false)
            throw new ValidationError("response", responseValidator, result);
          return result;
        }
      }
    }
    if (context.set.cookie && cookieMeta?.sign) {
      const secret = !cookieMeta.secrets ? undefined : typeof cookieMeta.secrets === "string" ? cookieMeta.secrets : cookieMeta.secrets[0];
      if (cookieMeta.sign === true)
        for (const [key, cookie] of Object.entries(context.set.cookie))
          context.set.cookie[key].value = await signCookie(cookie.value, "${secret}");
      else {
        const properties = validator?.cookie?.schema?.properties;
        for (const name of cookieMeta.sign) {
          if (!(name in properties))
            continue;
          if (context.set.cookie[name]?.value) {
            context.set.cookie[name].value = await signCookie(context.set.cookie[name].value, secret);
          }
        }
      }
    }
    return mapResponse(response, context.set);
  } catch (error23) {
    if (error23.status)
      set2.status = error23.status;
    return app.handleError(context, error23);
  } finally {
    for (const onResponse of app.event.onResponse)
      await onResponse.fn(context);
  }
};
var createDynamicErrorHandler = (app) => async (context, error23) => {
  const errorContext = Object.assign(context, { error: error23, code: error23.code });
  errorContext.set = context.set;
  for (let i = 0;i < app.event.error.length; i++) {
    const hook = app.event.error[i];
    let response = hook.fn(errorContext);
    if (response instanceof Promise)
      response = await response;
    if (response !== undefined && response !== null)
      return mapResponse(response, context.set);
  }
  return new Response(typeof error23.cause === "string" ? error23.cause : error23.message, {
    headers: context.set.headers,
    status: error23.status ?? 500
  });
};
var fullFormats = {
  date: date5,
  time: getTime(true),
  "date-time": getDateTime(true),
  "iso-time": getTime(false),
  "iso-date-time": getDateTime(false),
  duration: /^P(?!$)((\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?|(\d+W)?)$/,
  uri,
  "uri-reference": /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i,
  "uri-template": /^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i,
  url: /^(?:https?|ftp):\/\/(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)(?:\.(?:[a-z0-9\u{00a1}-\u{ffff}]+-)*[a-z0-9\u{00a1}-\u{ffff}]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu,
  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
  hostname: /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i,
  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)\.){3}(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)$/,
  ipv6: /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))$/i,
  regex,
  uuid: /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,
  "json-pointer": /^(?:\/(?:[^~/]|~0|~1)*)*$/,
  "json-pointer-uri-fragment": /^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,
  "relative-json-pointer": /^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/,
  byte,
  int32: { type: "number", validate: validateInt32 },
  int64: { type: "number", validate: validateInt64 },
  float: { type: "number", validate: validateNumber },
  double: { type: "number", validate: validateNumber },
  password: true,
  binary: true
};
var DATE = /^(\d\d\d\d)-(\d\d)-(\d\d)$/;
var DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var TIME = /^(\d\d):(\d\d):(\d\d(?:\.\d+)?)(z|([+-])(\d\d)(?::?(\d\d))?)?$/i;
var DATE_TIME_SEPARATOR = /t|\s/i;
var NOT_URI_FRAGMENT = /\/|:/;
var URI = /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
var BYTE = /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/gm;
var MIN_INT32 = -(2 ** 31);
var MAX_INT32 = 2 ** 31 - 1;
var Z_ANCHOR = /[^\\]\\Z/;
var isISO8601 = /(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))/;
var isFormalDate = /(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s\d{2}\s\d{4}\s\d{2}:\d{2}:\d{2}\sGMT(?:\+|-)\d{4}\s\([^)]+\)/;
var isShortenDate = /^(?:(?:(?:(?:0?[1-9]|[12][0-9]|3[01])[/\s-](?:0?[1-9]|1[0-2])[/\s-](?:19|20)\d{2})|(?:(?:19|20)\d{2}[/\s-](?:0?[1-9]|1[0-2])[/\s-](?:0?[1-9]|[12][0-9]|3[01]))))(?:\s(?:1[012]|0?[1-9]):[0-5][0-9](?::[0-5][0-9])?(?:\s[AP]M)?)?$/;
var _validateDate = fullFormats.date;
var _validateDateTime = fullFormats["date-time"];
if (!exports_format.Has("date"))
  TypeSystem.Format("date", (value15) => {
    const temp = value15.replace(/"/g, "");
    if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDate(temp)) {
      const date22 = new Date(temp);
      if (!Number.isNaN(date22.getTime()))
        return true;
    }
    return false;
  });
if (!exports_format.Has("date-time"))
  TypeSystem.Format("date-time", (value15) => {
    const temp = value15.replace(/"/g, "");
    if (isISO8601.test(temp) || isFormalDate.test(temp) || isShortenDate.test(temp) || _validateDateTime(temp)) {
      const date22 = new Date(temp);
      if (!Number.isNaN(date22.getTime()))
        return true;
    }
    return false;
  });
Object.entries(fullFormats).forEach((formatEntry) => {
  const [formatName, formatValue] = formatEntry;
  if (!exports_format.Has(formatName)) {
    if (formatValue instanceof RegExp)
      TypeSystem.Format(formatName, (value15) => formatValue.test(value15));
    else if (typeof formatValue === "function")
      TypeSystem.Format(formatName, formatValue);
  }
});
var t2 = Object.assign({}, Type);
var parseFileUnit = (size) => {
  if (typeof size === "string")
    switch (size.slice(-1)) {
      case "k":
        return +size.slice(0, size.length - 1) * 1024;
      case "m":
        return +size.slice(0, size.length - 1) * 1048576;
      default:
        return +size;
    }
  return size;
};
var validateFile = (options, value15) => {
  if (!(value15 instanceof Blob))
    return false;
  if (options.minSize && value15.size < parseFileUnit(options.minSize))
    return false;
  if (options.maxSize && value15.size > parseFileUnit(options.maxSize))
    return false;
  if (options.extension)
    if (typeof options.extension === "string") {
      if (!value15.type.startsWith(options.extension))
        return false;
    } else {
      for (let i = 0;i < options.extension.length; i++)
        if (value15.type.startsWith(options.extension[i]))
          return true;
      return false;
    }
  return true;
};
var File2 = exports_type.Get("Files") ?? TypeSystem.Type("File", validateFile);
var Files = exports_type.Get("Files") ?? TypeSystem.Type("Files", (options, value15) => {
  if (!Array.isArray(value15))
    return validateFile(options, value15);
  if (options.minItems && value15.length < options.minItems)
    return false;
  if (options.maxItems && value15.length > options.maxItems)
    return false;
  for (let i = 0;i < value15.length; i++)
    if (!validateFile(options, value15[i]))
      return false;
  return true;
});
if (!exports_format.Has("numeric"))
  exports_format.Set("numeric", (value15) => !!value15 && !isNaN(+value15));
if (!exports_format.Has("boolean"))
  exports_format.Set("boolean", (value15) => value15 === "true" || value15 === "false");
if (!exports_format.Has("ObjectString"))
  exports_format.Set("ObjectString", (value15) => {
    let start = value15.charCodeAt(0);
    if (start === 9 || start === 10 || start === 32)
      start = value15.trimStart().charCodeAt(0);
    if (start !== 123 && start !== 91)
      return false;
    try {
      JSON.parse(value15);
      return true;
    } catch {
      return false;
    }
  });
var ElysiaType = {
  Numeric: (property) => {
    const schema3 = Type.Number(property);
    return t2.Transform(t2.Union([
      t2.String({
        format: "numeric",
        default: 0
      }),
      t2.Number(property)
    ], property)).Decode((value15) => {
      const number7 = +value15;
      if (isNaN(number7))
        return value15;
      if (property && !exports_value2.Check(schema3, number7))
        throw new ValidationError("property", schema3, number7);
      return number7;
    }).Encode((value15) => value15);
  },
  Date: (property) => {
    const schema3 = Type.Date(property);
    return t2.Transform(t2.Union([
      Type.Date(property),
      t2.String({
        format: "date",
        default: (/* @__PURE__ */ new Date()).toISOString()
      }),
      t2.String({
        format: "date-time",
        default: (/* @__PURE__ */ new Date()).toISOString()
      })
    ], property)).Decode((value15) => {
      if (value15 instanceof Date)
        return value15;
      const date22 = new Date(value15);
      if (!exports_value2.Check(schema3, date22))
        throw new ValidationError("property", schema3, date22);
      return date22;
    }).Encode((value15) => {
      if (typeof value15 === "string")
        return new Date(value15);
      return value15;
    });
  },
  BooleanString: (property) => {
    const schema3 = Type.Boolean(property);
    return t2.Transform(t2.Union([
      t2.String({
        format: "boolean",
        default: false
      }),
      t2.Boolean(property)
    ], property)).Decode((value15) => {
      if (typeof value15 === "string")
        return value15 === "true";
      if (property && !exports_value2.Check(schema3, value15))
        throw new ValidationError("property", schema3, value15);
      return value15;
    }).Encode((value15) => value15);
  },
  ObjectString: (properties = {}, options) => {
    const schema3 = t2.Object(properties, options);
    const defaultValue = JSON.stringify(exports_value2.Create(schema3));
    return t2.Transform(t2.Union([
      t2.String({
        format: "ObjectString",
        default: defaultValue
      }),
      schema3
    ])).Decode((value15) => {
      if (typeof value15 === "string") {
        try {
          value15 = JSON.parse(value15);
        } catch {
          throw new ValidationError("property", schema3, value15);
        }
        if (!exports_value2.Check(schema3, value15))
          throw new ValidationError("property", schema3, value15);
        return value15;
      }
      return value15;
    }).Encode((value15) => {
      if (typeof value15 === "string")
        try {
          value15 = JSON.parse(value15);
        } catch {
          throw new ValidationError("property", schema3, value15);
        }
      if (!exports_value2.Check(schema3, value15))
        throw new ValidationError("property", schema3, value15);
      return JSON.stringify(value15);
    });
  },
  File: File2,
  Files: (options = {}) => t2.Transform(Files(options)).Decode((value15) => {
    if (Array.isArray(value15))
      return value15;
    return [value15];
  }).Encode((value15) => value15),
  Nullable: (schema3) => t2.Union([t2.Null(), schema3]),
  MaybeEmpty: (schema3) => t2.Union([t2.Null(), t2.Undefined(), schema3]),
  Cookie: (properties, {
    domain,
    expires,
    httpOnly,
    maxAge,
    path,
    priority,
    sameSite,
    secure,
    secrets,
    sign,
    ...options
  } = {}) => {
    const v = t2.Object(properties, options);
    v.config = {
      domain,
      expires,
      httpOnly,
      maxAge,
      path,
      priority,
      sameSite,
      secure,
      secrets,
      sign
    };
    return v;
  }
};
t2.BooleanString = ElysiaType.BooleanString;
t2.ObjectString = ElysiaType.ObjectString;
t2.Numeric = ElysiaType.Numeric;
t2.File = (arg = {}) => ElysiaType.File({
  default: "File",
  ...arg,
  extension: arg?.type,
  type: "string",
  format: "binary"
});
t2.Files = (arg = {}) => ElysiaType.Files({
  ...arg,
  elysiaMeta: "Files",
  default: "Files",
  extension: arg?.type,
  type: "array",
  items: {
    ...arg,
    default: "Files",
    type: "string",
    format: "binary"
  }
});
t2.Nullable = (schema3) => ElysiaType.Nullable(schema3);
t2.MaybeEmpty = ElysiaType.MaybeEmpty;
t2.Cookie = ElysiaType.Cookie;
t2.Date = ElysiaType.Date;
var Elysia = class _Elysia {
  constructor(config) {
    this.server = null;
    this.dependencies = {};
    this.reporter = new eventemitter3_default;
    this._routes = {};
    this._types = {
      Prefix: "",
      Scoped: false,
      Singleton: {},
      Definitions: {},
      Metadata: {}
    };
    this._ephemeral = {};
    this._volatile = {};
    this.singleton = {
      decorator: {},
      store: {},
      derive: {},
      resolve: {}
    };
    this.definitions = {
      type: {},
      error: {}
    };
    this.extender = {
      macros: []
    };
    this.validator = null;
    this.event = {
      start: [],
      request: [],
      parse: [],
      transform: [],
      beforeHandle: [],
      afterHandle: [],
      mapResponse: [],
      onResponse: [],
      trace: [],
      error: [],
      stop: []
    };
    this.telemetry = {
      stack: undefined
    };
    this.router = {
      http: new Memoirist,
      ws: new Memoirist,
      dynamic: new Memoirist,
      static: {
        http: {
          handlers: [],
          variables: "",
          map: {},
          all: ""
        },
        ws: {}
      },
      history: []
    };
    this.inference = {
      event: {
        body: false,
        cookie: false,
        headers: false,
        queries: [],
        query: false,
        set: false,
        unknownQueries: false
      },
      trace: {
        request: false,
        parse: false,
        transform: false,
        handle: false,
        beforeHandle: false,
        afterHandle: false,
        error: false,
        context: false,
        store: false,
        set: false
      }
    };
    this.promisedModules = new PromiseGroup;
    this.routeTree = /* @__PURE__ */ new Map;
    this.handle = async (request) => this.fetch(request);
    this.fetch = (request) => {
      if (false)
        ;
      return (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this))(request);
    };
    this.handleError = async (context, error23) => (this.handleError = this.config.aot ? composeErrorHandler(this) : createDynamicErrorHandler(this))(context, error23);
    this.outerErrorHandler = (error23) => new Response(error23.message || error23.name || "Error", {
      status: error23?.status ?? 500
    });
    this.listen = (options, callback) => {
      if (typeof Bun === "undefined")
        throw new Error(".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch");
      this.compile();
      if (typeof options === "string") {
        if (!isNumericString(options))
          throw new Error("Port must be a numeric value");
        options = parseInt(options);
      }
      const fetch = this.fetch;
      const serve = typeof options === "object" ? {
        development: !isProduction,
        reusePort: true,
        ...this.config.serve || {},
        ...options || {},
        websocket: {
          ...this.config.websocket || {},
          ...websocket || {}
        },
        fetch,
        error: this.outerErrorHandler
      } : {
        development: !isProduction,
        reusePort: true,
        ...this.config.serve || {},
        websocket: {
          ...this.config.websocket || {},
          ...websocket || {}
        },
        port: options,
        fetch,
        error: this.outerErrorHandler
      };
      this.server = Bun?.serve(serve);
      for (let i = 0;i < this.event.start.length; i++)
        this.event.start[i].fn(this);
      if (callback)
        callback(this.server);
      process.on("beforeExit", () => {
        if (this.server) {
          this.server.stop();
          this.server = null;
          for (let i = 0;i < this.event.stop.length; i++)
            this.event.stop[i].fn(this);
        }
      });
      this.promisedModules.then(() => {
        Bun?.gc(false);
      });
      return this;
    };
    this.stop = async () => {
      if (!this.server)
        throw new Error("Elysia isn't running. Call `app.listen` to start the server.");
      if (this.server) {
        this.server.stop();
        this.server = null;
        if (this.event.stop.length)
          for (let i = 0;i < this.event.stop.length; i++)
            this.event.stop[i].fn(this);
      }
    };
    if (config?.tags) {
      if (!config.detail)
        config.detail = {
          tags: config.tags
        };
      else
        config.detail.tags = config.tags;
    }
    this.config = {
      forceErrorEncapsulation: true,
      prefix: "",
      aot: true,
      strictPath: false,
      global: false,
      cookie: {
        path: "/"
      },
      analytic: false,
      forceDynamicQuery: true,
      ...config,
      experimental: config?.experimental ?? {},
      seed: config?.seed === undefined ? "" : config?.seed
    };
    if (config?.analytic && (config?.name || config?.seed !== undefined))
      this.telemetry.stack = new Error().stack;
  }
  get store() {
    return this.singleton.store;
  }
  get decorator() {
    return this.singleton.decorator;
  }
  get _scoped() {
    return this.config.scoped;
  }
  getServer() {
    return this.server;
  }
  get routes() {
    return this.router.history;
  }
  applyMacro(localHook) {
    if (this.extender.macros.length) {
      const manage = createMacroManager({
        globalHook: this.event,
        localHook
      });
      const manager = {
        events: {
          global: this.event,
          local: localHook
        },
        onParse: manage("parse"),
        onTransform: manage("transform"),
        onBeforeHandle: manage("beforeHandle"),
        onAfterHandle: manage("afterHandle"),
        onResponse: manage("onResponse"),
        mapResponse: manage("mapResponse"),
        onError: manage("error")
      };
      for (const macro of this.extender.macros)
        traceBackMacro(macro.fn(manager), localHook);
    }
  }
  add(method, path, handle, localHook, { allowMeta = false, skipPrefix = false } = {
    allowMeta: false,
    skipPrefix: false
  }) {
    localHook = localHookToLifeCycleStore(localHook);
    if (path !== "" && path.charCodeAt(0) !== 47)
      path = "/" + path;
    if (this.config.prefix && !skipPrefix && !this.config.scoped)
      path = this.config.prefix + path;
    if (localHook?.type)
      switch (localHook.type) {
        case "text":
          localHook.type = "text/plain";
          break;
        case "json":
          localHook.type = "application/json";
          break;
        case "formdata":
          localHook.type = "multipart/form-data";
          break;
        case "urlencoded":
          localHook.type = "application/x-www-form-urlencoded";
          break;
        case "arrayBuffer":
          localHook.type = "application/octet-stream";
          break;
        default:
          break;
      }
    const models = this.definitions.type;
    let _body, _headers, _params, _query, _cookie, _response;
    const dynamic = !this.config.aot;
    const cloned = {
      body: localHook?.body ?? this.validator?.body,
      headers: localHook?.headers ?? this.validator?.headers,
      params: localHook?.params ?? this.validator?.params,
      query: localHook?.query ?? this.validator?.query,
      cookie: localHook?.cookie ?? this.validator?.cookie,
      response: localHook?.response ?? this.validator?.response
    };
    const cookieValidator = () => cloned.cookie ? getCookieValidator({
      validator: cloned.cookie,
      defaultConfig: this.config.cookie,
      config: cloned.cookie?.config ?? {},
      dynamic,
      models
    }) : undefined;
    const normalize = this.config.normalize;
    const validator = this.config.precompile === true || typeof this.config.precompile === "object" && this.config.precompile.schema === true ? {
      body: getSchemaValidator(cloned.body, {
        dynamic,
        models,
        normalize
      }),
      headers: getSchemaValidator(cloned.headers, {
        dynamic,
        models,
        additionalProperties: true
      }),
      params: getSchemaValidator(cloned.params, {
        dynamic,
        models
      }),
      query: getSchemaValidator(cloned.query, {
        dynamic,
        models,
        normalize
      }),
      cookie: cookieValidator(),
      response: getResponseSchemaValidator(cloned.response, {
        dynamic,
        models,
        normalize
      })
    } : {
      get body() {
        if (_body)
          return _body;
        return _body = getSchemaValidator(cloned.body, {
          dynamic,
          models,
          normalize
        });
      },
      get headers() {
        if (_headers)
          return _headers;
        return getSchemaValidator(cloned.headers, {
          dynamic,
          models,
          additionalProperties: true
        });
      },
      get params() {
        if (_params)
          return _params;
        return _params = getSchemaValidator(cloned.params, {
          dynamic,
          models
        });
      },
      get query() {
        if (_query)
          return _query;
        return _query = getSchemaValidator(cloned.query, {
          dynamic,
          models
        });
      },
      get cookie() {
        if (_cookie)
          return _cookie;
        return _cookie = cookieValidator();
      },
      get response() {
        if (_response)
          return _response;
        return _response = getResponseSchemaValidator(cloned.response, {
          dynamic,
          models,
          normalize
        });
      }
    };
    const loosePath = path.endsWith("/") ? path.slice(0, path.length - 1) : path + "/";
    localHook = mergeHook(localHook, {}, { allowMacro: true });
    if (localHook.tags) {
      if (!localHook.detail)
        localHook.detail = {
          tags: localHook.tags
        };
      else
        localHook.detail.tags = localHook.tags;
    }
    if (isNotEmpty(this.config.detail))
      localHook.detail = mergeDeep(Object.assign({}, this.config.detail), localHook.detail);
    this.applyMacro(localHook);
    const hooks = mergeHook(this.event, localHook);
    if (this.config.aot === false) {
      this.router.dynamic.add(method, path, {
        validator,
        hooks,
        content: localHook?.type,
        handle
      });
      if (this.config.strictPath === false) {
        this.router.dynamic.add(method, loosePath, {
          validator,
          hooks,
          content: localHook?.type,
          handle
        });
      }
      this.router.history.push({
        method,
        path,
        composed: null,
        handler: handle,
        hooks
      });
      return;
    }
    let composed = undefined;
    const shouldPrecompile = this.config.precompile === true || typeof this.config.precompile === "object" && this.config.precompile.compose === true;
    const appInference = cloneInference(this.inference);
    const mainHandler = shouldPrecompile ? composeHandler({
      app: this,
      path,
      method,
      localHook: mergeHook(localHook),
      hooks,
      validator,
      handler: handle,
      allowMeta,
      appInference
    }) : (context) => {
      if (composed)
        return composed(context);
      return (composed = composeHandler({
        app: this,
        path,
        method,
        localHook: mergeHook(localHook),
        hooks,
        validator,
        handler: handle,
        allowMeta,
        appInference
      }))(context);
    };
    if (!shouldPrecompile)
      mainHandler.compose = () => {
        return mainHandler.composed = composeHandler({
          app: this,
          path,
          method,
          localHook: mergeHook(localHook),
          hooks,
          validator,
          handler: handle,
          allowMeta,
          appInference
        });
      };
    let routeIndex = this.router.history.length;
    if (this.routeTree.has(method + path)) {
      routeIndex = this.router.history.findIndex((route) => route.path === path && route.method === method);
      if (routeIndex !== -1) {
        const removed = this.router.history.splice(routeIndex, 1)[0];
        if (removed && this.routeTree.has(removed?.method + removed?.path))
          this.routeTree.delete(removed.method + removed.path);
      }
    }
    this.routeTree.set(method + path, routeIndex);
    this.router.history.push({
      method,
      path,
      composed: mainHandler,
      handler: handle,
      hooks
    });
    const staticRouter = this.router.static.http;
    if (method === "$INTERNALWS") {
      const loose = this.config.strictPath ? undefined : path.endsWith("/") ? path.slice(0, path.length - 1) : path + "/";
      if (path.indexOf(":") === -1 && path.indexOf("*") === -1) {
        const index = staticRouter.handlers.length;
        staticRouter.handlers.push(mainHandler);
        staticRouter.variables += `const st${index} = staticRouter.handlers[${index}]
`;
        this.router.static.ws[path] = index;
        if (loose)
          this.router.static.ws[loose] = index;
      } else {
        this.router.ws.add("ws", path, mainHandler);
        if (loose)
          this.router.ws.add("ws", loose, mainHandler);
      }
      return;
    }
    if (path.indexOf(":") === -1 && path.indexOf("*") === -1) {
      const index = staticRouter.handlers.length;
      staticRouter.handlers.push(mainHandler);
      staticRouter.variables += shouldPrecompile ? `const st${index} = staticRouter.handlers[${index}]
` : `let st${index} = staticRouter.handlers[${index}]
let stc${index}
`;
      if (!staticRouter.map[path])
        staticRouter.map[path] = {
          code: ""
        };
      if (method === "ALL")
        staticRouter.map[path].all = shouldPrecompile ? `default: return st${index}(ctx)
` : `default: ${jitRoute(index)}
`;
      else
        staticRouter.map[path].code = shouldPrecompile ? `case '${method}': return st${index}(ctx)
${staticRouter.map[path].code}` : `case '${method}': ${jitRoute(index)}
${staticRouter.map[path].code}`;
      if (!this.config.strictPath) {
        if (!staticRouter.map[loosePath])
          staticRouter.map[loosePath] = {
            code: ""
          };
        if (method === "ALL")
          staticRouter.map[loosePath].all = shouldPrecompile ? `default: return st${index}(ctx)
` : `default: ${jitRoute(index)}
`;
        else
          staticRouter.map[loosePath].code = shouldPrecompile ? `case '${method}': return st${index}(ctx)
${staticRouter.map[loosePath].code}` : `case '${method}': ${jitRoute(index)}
${staticRouter.map[loosePath].code}`;
      }
    } else {
      this.router.http.add(method, path, mainHandler);
      if (!this.config.strictPath)
        this.router.http.add(method, path.endsWith("/") ? path.slice(0, path.length - 1) : path + "/", mainHandler);
    }
  }
  headers(header) {
    if (!header)
      return this;
    if (!this.setHeaders)
      this.setHeaders = {};
    this.setHeaders = mergeDeep(this.setHeaders, header);
    return this;
  }
  onStart(handler) {
    this.on("start", handler);
    return this;
  }
  onRequest(handler) {
    this.on("request", handler);
    return this;
  }
  onParse(options, handler) {
    if (!handler)
      return this.on("parse", options);
    return this.on(options, "parse", handler);
  }
  onTransform(options, handler) {
    if (!handler)
      return this.on("transform", options);
    return this.on(options, "transform", handler);
  }
  resolve(optionsOrResolve, resolve) {
    if (!resolve) {
      resolve = optionsOrResolve;
      optionsOrResolve = { as: "local" };
    }
    const hook = {
      subType: "resolve",
      fn: resolve
    };
    return this.onBeforeHandle(optionsOrResolve, hook);
  }
  mapResolve(optionsOrResolve, mapper) {
    if (!mapper) {
      mapper = optionsOrResolve;
      optionsOrResolve = { as: "local" };
    }
    const hook = {
      subType: "resolve",
      fn: mapper
    };
    return this.onBeforeHandle(optionsOrResolve, hook);
  }
  onBeforeHandle(options, handler) {
    if (!handler)
      return this.on("beforeHandle", options);
    return this.on(options, "beforeHandle", handler);
  }
  onAfterHandle(options, handler) {
    if (!handler)
      return this.on("afterHandle", options);
    return this.on(options, "afterHandle", handler);
  }
  mapResponse(options, handler) {
    if (!handler)
      return this.on("mapResponse", options);
    return this.on(options, "mapResponse", handler);
  }
  onResponse(options, handler) {
    if (!handler)
      return this.on("response", options);
    return this.on(options, "response", handler);
  }
  trace(options, handler) {
    if (!handler) {
      handler = options;
      options = { as: "local" };
    }
    if (!Array.isArray(handler))
      handler = [handler];
    for (const fn of handler)
      this.reporter.on("event", createTraceListener(() => this.reporter, this.event.trace.length, fn));
    this.on(options, "trace", handler);
    return this;
  }
  error(name, error23) {
    switch (typeof name) {
      case "string":
        error23.prototype[ERROR_CODE] = name;
        this.definitions.error[name] = error23;
        return this;
      case "function":
        this.definitions.error = name(this.definitions.error);
        return this;
    }
    for (const [code, error32] of Object.entries(name)) {
      error32.prototype[ERROR_CODE] = code;
      this.definitions.error[code] = error32;
    }
    return this;
  }
  onError(options, handler) {
    if (!handler)
      return this.on("error", options);
    return this.on(options, "error", handler);
  }
  onStop(handler) {
    this.on("stop", handler);
    return this;
  }
  on(optionsOrType, typeOrHandlers, handlers) {
    let type47;
    switch (typeof optionsOrType) {
      case "string":
        type47 = optionsOrType;
        handlers = typeOrHandlers;
        break;
      case "object":
        type47 = typeOrHandlers;
        break;
    }
    if (type47 === "response")
      type47 = "onResponse";
    if (Array.isArray(handlers))
      handlers = fnToContainer(handlers);
    else {
      if (typeof handlers === "function")
        handlers = [
          {
            fn: handlers
          }
        ];
      else
        handlers = [handlers];
    }
    const handles = handlers;
    for (const handle of handles)
      handle.scope = typeof optionsOrType === "string" ? "local" : optionsOrType?.as ?? "local";
    if (type47 === "trace")
      sucroseTrace(handles.map((x) => x.fn), this.inference.trace);
    else
      sucrose({
        [type47]: handles.map((x) => x.fn)
      }, this.inference.event);
    for (const handle of handles) {
      const fn = asHookType(handle, "global", { skipIfHasType: true });
      switch (type47) {
        case "start":
          this.event.start.push(fn);
          break;
        case "request":
          this.event.request.push(fn);
          break;
        case "parse":
          this.event.parse.push(fn);
          break;
        case "transform":
          this.event.transform.push(fn);
          break;
        case "beforeHandle":
          this.event.beforeHandle.push(fn);
          break;
        case "afterHandle":
          this.event.afterHandle.push(fn);
          break;
        case "mapResponse":
          this.event.mapResponse.push(fn);
          break;
        case "onResponse":
          this.event.onResponse.push(fn);
          break;
        case "trace":
          this.event.trace.push(fn);
          break;
        case "error":
          this.event.error.push(fn);
          break;
        case "stop":
          this.event.stop.push(fn);
          break;
      }
    }
    return this;
  }
  propagate() {
    const promoteEvent = (events) => {
      for (const event of events) {
        if ("scope" in event && event.scope === "local")
          event.scope = "scoped";
      }
    };
    promoteEvent(this.event.parse);
    promoteEvent(this.event.transform);
    promoteEvent(this.event.beforeHandle);
    promoteEvent(this.event.afterHandle);
    promoteEvent(this.event.mapResponse);
    promoteEvent(this.event.onResponse);
    promoteEvent(this.event.trace);
    promoteEvent(this.event.error);
    return this;
  }
  group(prefix, schemaOrRun, run) {
    const instance = new _Elysia({
      ...this.config,
      prefix: ""
    });
    instance.singleton = { ...this.singleton };
    instance.definitions = { ...this.definitions };
    instance.getServer = () => this.server;
    instance.inference = cloneInference(this.inference);
    instance.extender = { ...this.extender };
    const isSchema = typeof schemaOrRun === "object";
    const sandbox = (isSchema ? run : schemaOrRun)(instance);
    this.singleton = mergeDeep(this.singleton, instance.singleton);
    this.definitions = mergeDeep(this.definitions, instance.definitions);
    if (sandbox.event.request.length)
      this.event.request = [
        ...this.event.request || [],
        ...sandbox.event.request || []
      ];
    if (sandbox.event.onResponse.length)
      this.event.onResponse = [
        ...this.event.onResponse || [],
        ...sandbox.event.onResponse || []
      ];
    this.model(sandbox.definitions.type);
    Object.values(instance.router.history).forEach(({ method, path, handler, hooks }) => {
      path = (isSchema ? "" : this.config.prefix) + prefix + path;
      if (isSchema) {
        const hook = schemaOrRun;
        const localHook = hooks;
        this.add(method, path, handler, mergeHook(hook, {
          ...localHook || {},
          error: !localHook.error ? sandbox.event.error : Array.isArray(localHook.error) ? [
            ...localHook.error || {},
            ...sandbox.event.error || {}
          ] : [
            localHook.error,
            ...sandbox.event.error || {}
          ]
        }));
      } else {
        this.add(method, path, handler, mergeHook(hooks, {
          error: sandbox.event.error
        }), {
          skipPrefix: true
        });
      }
    });
    return this;
  }
  guard(hook, run) {
    if (!run) {
      if (typeof hook === "object") {
        this.applyMacro(hook);
        this.event = mergeLifeCycle(this.event, hook);
        this.validator = {
          body: hook.body ?? this.validator?.body,
          headers: hook.headers ?? this.validator?.headers,
          params: hook.params ?? this.validator?.params,
          query: hook.query ?? this.validator?.query,
          response: hook.response ?? this.validator?.response,
          cookie: hook.cookie ?? this.validator?.cookie
        };
        if (hook.detail) {
          if (this.config.detail)
            this.config.detail = mergeDeep(Object.assign({}, this.config.detail), hook.detail);
          else
            this.config.detail = hook.detail;
        }
        if (hook?.tags) {
          if (!this.config.detail)
            this.config.detail = {
              tags: hook.tags
            };
          else
            this.config.detail.tags = hook.tags;
        }
        return this;
      }
      return this.guard({}, hook);
    }
    const instance = new _Elysia({
      ...this.config,
      prefix: ""
    });
    instance.singleton = { ...this.singleton };
    instance.definitions = { ...this.definitions };
    instance.inference = cloneInference(this.inference);
    instance.extender = { ...this.extender };
    const sandbox = run(instance);
    this.singleton = mergeDeep(this.singleton, instance.singleton);
    this.definitions = mergeDeep(this.definitions, instance.definitions);
    sandbox.getServer = () => this.server;
    if (sandbox.event.request.length)
      this.event.request = [
        ...this.event.request || [],
        ...sandbox.event.request || []
      ];
    if (sandbox.event.onResponse.length)
      this.event.onResponse = [
        ...this.event.onResponse || [],
        ...sandbox.event.onResponse || []
      ];
    this.model(sandbox.definitions.type);
    Object.values(instance.router.history).forEach(({ method, path, handler, hooks: localHook }) => {
      this.add(method, path, handler, mergeHook(hook, {
        ...localHook || {},
        error: !localHook.error ? sandbox.event.error : Array.isArray(localHook.error) ? [
          ...localHook.error || {},
          ...sandbox.event.error || []
        ] : [
          localHook.error,
          ...sandbox.event.error || []
        ]
      }, {
        allowMacro: true
      }));
    });
    return this;
  }
  use(plugin, options) {
    if (options?.scoped)
      return this.guard({}, (app) => app.use(plugin));
    if (Array.isArray(plugin)) {
      let current = this;
      for (const p of plugin)
        current = this.use(p);
      return current;
    }
    if (plugin instanceof Promise) {
      this.promisedModules.add(plugin.then((plugin2) => {
        if (typeof plugin2 === "function")
          return plugin2(this);
        if (plugin2 instanceof _Elysia)
          return this._use(plugin2);
        if (typeof plugin2.default === "function")
          return plugin2.default(this);
        if (plugin2.default instanceof _Elysia)
          return this._use(plugin2.default);
        throw new Error('Invalid plugin type. Expected Elysia instance, function, or module with "default" as Elysia instance or function that returns Elysia instance.');
      }).then((x) => x.compile()));
      return this;
    }
    return this._use(plugin);
  }
  _use(plugin) {
    if (typeof plugin === "function") {
      const instance = plugin(this);
      if (instance instanceof Promise) {
        this.promisedModules.add(instance.then((plugin2) => {
          if (plugin2 instanceof _Elysia) {
            this.compile();
            for (const {
              method,
              path,
              handler,
              hooks
            } of Object.values(plugin2.router.history)) {
              this.add(method, path, handler, mergeHook(hooks, {
                error: plugin2.event.error
              }));
            }
            return plugin2;
          }
          if (typeof plugin2 === "function")
            return plugin2(this);
          if (typeof plugin2.default === "function")
            return plugin2.default(this);
          return this._use(plugin2);
        }).then((x) => x.compile()));
        return this;
      }
      return instance;
    }
    if (plugin.promisedModules.size) {
      this.promisedModules.add(plugin.modules.then(() => this._use(plugin)).then((x) => x.compile()));
      return this;
    }
    const { name, seed } = plugin.config;
    plugin.getServer = () => this.getServer();
    plugin.model(this.definitions.type);
    plugin.error(this.definitions.error);
    const isScoped = plugin.config.scoped;
    if (isScoped) {
      if (name) {
        if (!(name in this.dependencies))
          this.dependencies[name] = [];
        const current = seed !== undefined ? checksum(name + JSON.stringify(seed)) : 0;
        if (this.dependencies[name].some(({ checksum: checksum2 }) => current === checksum2))
          return this;
        this.dependencies[name].push(!this.config?.analytic ? {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies
        } : {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies,
          stack: plugin.telemetry.stack,
          routes: plugin.router.history,
          decorators: plugin.singleton.decorator,
          store: plugin.singleton.store,
          type: plugin.definitions.type,
          error: plugin.definitions.error,
          derive: plugin.event.transform.filter((x) => x.subType === "derive").map((x) => ({
            fn: x.fn.toString(),
            stack: new Error().stack ?? ""
          })),
          resolve: plugin.event.transform.filter((x) => x.subType === "derive").map((x) => ({
            fn: x.fn.toString(),
            stack: new Error().stack ?? ""
          }))
        });
      }
      plugin.extender.macros = this.extender.macros.concat(plugin.extender.macros);
      const macroHashes = [];
      for (let i = 0;i < plugin.extender.macros.length; i++) {
        const macro = this.extender.macros[i];
        if (macroHashes.includes(macro.checksum)) {
          plugin.extender.macros.splice(i, 1);
          i--;
        }
        macroHashes.push(macro.checksum);
      }
      plugin.onRequest((context) => {
        Object.assign(context, this.singleton.decorator);
        Object.assign(context.store, this.singleton.store);
      });
      if (plugin.event.trace.length)
        plugin.event.trace.push(...plugin.event.trace);
      if (!plugin.config.prefix)
        console.warn("It's recommended to use scoped instance with a prefix to prevent collision routing with other instance.");
      if (plugin.event.error.length)
        plugin.event.error.push(...this.event.error);
      if (plugin.config.aot)
        plugin.compile();
      if (isScoped === true && plugin.config.prefix) {
        this.mount(plugin.config.prefix + "/", plugin.fetch);
        for (const route of plugin.router.history) {
          this.routeTree.set(route.method + `${plugin.config.prefix}${route.path}`, this.router.history.length);
          this.router.history.push({
            ...route,
            path: `${plugin.config.prefix}${route.path}`,
            hooks: mergeHook(route.hooks, {
              error: this.event.error
            })
          });
        }
      } else {
        this.mount(plugin.fetch);
        for (const route of plugin.router.history) {
          this.routeTree.set(route.method + `${plugin.config.prefix}${route.path}`, this.router.history.length);
          this.router.history.push({
            ...route,
            path: `${plugin.config.prefix}${route.path}`,
            hooks: mergeHook(route.hooks, {
              error: this.event.error
            })
          });
        }
      }
      return this;
    } else {
      this.headers(plugin.setHeaders);
      plugin.reporter = this.reporter;
      for (const trace of plugin.event.trace)
        if (trace.scope && trace.scope !== "local")
          this.trace(trace);
      if (name) {
        if (!(name in this.dependencies))
          this.dependencies[name] = [];
        const current = seed !== undefined ? checksum(name + JSON.stringify(seed)) : 0;
        if (!this.dependencies[name].some(({ checksum: checksum2 }) => current === checksum2))
          this.extender.macros = this.extender.macros.concat(plugin.extender.macros);
      } else {
        this.extender.macros = this.extender.macros.concat(plugin.extender.macros);
      }
      const macroHashes = [];
      for (let i = 0;i < this.extender.macros.length; i++) {
        const macro = this.extender.macros[i];
        if (macro.checksum) {
          if (macroHashes.includes(macro.checksum)) {
            this.extender.macros.splice(i, 1);
            i--;
          }
          macroHashes.push(macro.checksum);
        }
      }
      this.inference = {
        event: {
          body: this.inference.event.body || plugin.inference.event.body,
          cookie: this.inference.event.cookie || plugin.inference.event.cookie,
          headers: this.inference.event.headers || plugin.inference.event.headers,
          queries: [
            ...this.inference.event.queries,
            ...plugin.inference.event.queries
          ],
          query: this.inference.event.query || plugin.inference.event.query,
          set: this.inference.event.set || plugin.inference.event.set,
          unknownQueries: this.inference.event.unknownQueries || plugin.inference.event.unknownQueries
        },
        trace: {
          request: this.inference.trace.request || plugin.inference.trace.request,
          parse: this.inference.trace.parse || plugin.inference.trace.parse,
          transform: this.inference.trace.transform || plugin.inference.trace.transform,
          handle: this.inference.trace.handle || plugin.inference.trace.handle,
          beforeHandle: this.inference.trace.beforeHandle || plugin.inference.trace.beforeHandle,
          afterHandle: this.inference.trace.afterHandle || plugin.inference.trace.afterHandle,
          error: this.inference.trace.error || plugin.inference.trace.error,
          context: this.inference.trace.context || plugin.inference.trace.context,
          store: this.inference.trace.store || plugin.inference.trace.store,
          set: this.inference.trace.set || plugin.inference.trace.set
        }
      };
    }
    this.decorate(plugin.singleton.decorator);
    this.state(plugin.singleton.store);
    this.model(plugin.definitions.type);
    this.error(plugin.definitions.error);
    plugin.extender.macros = this.extender.macros.concat(plugin.extender.macros);
    for (const { method, path, handler, hooks } of Object.values(plugin.router.history)) {
      this.add(method, path, handler, mergeHook(hooks, {
        error: plugin.event.error
      }));
    }
    if (!isScoped)
      if (name) {
        if (!(name in this.dependencies))
          this.dependencies[name] = [];
        const current = seed !== undefined ? checksum(name + JSON.stringify(seed)) : 0;
        if (this.dependencies[name].some(({ checksum: checksum2 }) => current === checksum2))
          return this;
        this.dependencies[name].push(!this.config?.analytic ? {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies
        } : {
          name: plugin.config.name,
          seed: plugin.config.seed,
          checksum: current,
          dependencies: plugin.dependencies,
          stack: plugin.telemetry.stack,
          routes: plugin.router.history,
          decorators: plugin.singleton,
          store: plugin.singleton.store,
          type: plugin.definitions.type,
          error: plugin.definitions.error,
          derive: plugin.event.transform.filter((x) => x?.subType === "derive").map((x) => ({
            fn: x.toString(),
            stack: new Error().stack ?? ""
          })),
          resolve: plugin.event.transform.filter((x) => x?.subType === "resolve").map((x) => ({
            fn: x.toString(),
            stack: new Error().stack ?? ""
          }))
        });
        this.event = mergeLifeCycle(this.event, filterGlobalHook(plugin.event), current);
      } else {
        this.event = mergeLifeCycle(this.event, filterGlobalHook(plugin.event));
      }
    return this;
  }
  macro(macro) {
    const hook = {
      checksum: checksum(JSON.stringify({
        name: this.config.name,
        seed: this.config.seed,
        content: macro.toString()
      })),
      fn: macro
    };
    this.extender.macros.push(hook);
    return this;
  }
  mount(path, handle) {
    if (path instanceof _Elysia || typeof path === "function" || path.length === 0 || path === "/") {
      const run = typeof path === "function" ? path : path instanceof _Elysia ? path.compile().fetch : handle instanceof _Elysia ? handle.compile().fetch : handle;
      const handler2 = async ({ request, path: path2 }) => run(new Request(replaceUrlPath(request.url, path2 || "/"), request));
      this.all("/*", handler2, {
        type: "none"
      });
      return this;
    }
    const length = path.length;
    if (handle instanceof _Elysia)
      handle = handle.compile().fetch;
    const handler = async ({ request, path: path2 }) => handle(new Request(replaceUrlPath(request.url, path2.slice(length) || "/"), request));
    this.all(path, handler, {
      type: "none"
    });
    this.all(path + (path.endsWith("/") ? "*" : "/*"), handler, {
      type: "none"
    });
    return this;
  }
  get(path, handler, hook) {
    this.add("GET", path, handler, hook);
    return this;
  }
  post(path, handler, hook) {
    this.add("POST", path, handler, hook);
    return this;
  }
  put(path, handler, hook) {
    this.add("PUT", path, handler, hook);
    return this;
  }
  patch(path, handler, hook) {
    this.add("PATCH", path, handler, hook);
    return this;
  }
  delete(path, handler, hook) {
    this.add("DELETE", path, handler, hook);
    return this;
  }
  options(path, handler, hook) {
    this.add("OPTIONS", path, handler, hook);
    return this;
  }
  all(path, handler, hook) {
    this.add("ALL", path, handler, hook);
    return this;
  }
  head(path, handler, hook) {
    this.add("HEAD", path, handler, hook);
    return this;
  }
  connect(path, handler, hook) {
    this.add("CONNECT", path, handler, hook);
    return this;
  }
  route(method, path, handler, hook) {
    this.add(method.toUpperCase(), path, handler, hook, hook?.config);
    return this;
  }
  ws(path, options) {
    const transform7 = options.transformMessage ? Array.isArray(options.transformMessage) ? options.transformMessage : [options.transformMessage] : undefined;
    let server = null;
    const validateMessage = getSchemaValidator(options?.body, {
      models: this.definitions.type,
      normalize: this.config.normalize
    });
    const validateResponse = getSchemaValidator(options?.response, {
      models: this.definitions.type,
      normalize: this.config.normalize
    });
    const parseMessage = (message) => {
      if (typeof message === "string") {
        const start = message?.charCodeAt(0);
        if (start === 47 || start === 123)
          try {
            message = JSON.parse(message);
          } catch {
          }
        else if (isNumericString(message))
          message = +message;
      }
      if (transform7?.length)
        for (let i = 0;i < transform7.length; i++) {
          const temp = transform7[i](message);
          if (temp !== undefined)
            message = temp;
        }
      return message;
    };
    this.route("$INTERNALWS", path, (context) => {
      const { set: set2, path: path2, qi, headers, query, params } = context;
      if (server === null)
        server = this.getServer();
      if (server?.upgrade(context.request, {
        headers: typeof options.upgrade === "function" ? options.upgrade(context) : options.upgrade,
        data: {
          validator: validateResponse,
          open(ws) {
            options.open?.(new ElysiaWS(ws, context));
          },
          message: (ws, msg) => {
            const message = parseMessage(msg);
            if (validateMessage?.Check(message) === false)
              return void ws.send(new ValidationError("message", validateMessage, message).message);
            options.message?.(new ElysiaWS(ws, context), message);
          },
          drain(ws) {
            options.drain?.(new ElysiaWS(ws, context));
          },
          close(ws, code, reason) {
            options.close?.(new ElysiaWS(ws, context), code, reason);
          }
        }
      }))
        return;
      set2.status = 400;
      return "Expected a websocket connection";
    }, {
      beforeHandle: options.beforeHandle,
      transform: options.transform,
      headers: options.headers,
      params: options.params,
      query: options.query
    });
    return this;
  }
  state(name, value15) {
    switch (typeof name) {
      case "object":
        this.singleton.store = mergeDeep(this.singleton.store, name);
        return this;
      case "function":
        this.singleton.store = name(this.singleton.store);
        return this;
    }
    if (!(name in this.singleton.store)) {
      this.singleton.store[name] = value15;
    }
    return this;
  }
  decorate(name, value15) {
    switch (typeof name) {
      case "object":
        this.singleton.decorator = mergeDeep(this.singleton.decorator, name);
        return this;
      case "function":
        this.singleton.decorator = name(this.singleton.decorator);
        return this;
    }
    if (!(name in this.singleton.decorator))
      this.singleton.decorator[name] = value15;
    return this;
  }
  derive(optionsOrTransform, transform7) {
    if (!transform7) {
      transform7 = optionsOrTransform;
      optionsOrTransform = { as: "local" };
    }
    const hook = {
      subType: "derive",
      fn: transform7
    };
    return this.onTransform(optionsOrTransform, hook);
  }
  model(name, model) {
    switch (typeof name) {
      case "object":
        Object.entries(name).forEach(([key, value15]) => {
          if (!(key in this.definitions.type))
            this.definitions.type[key] = value15;
        });
        return this;
      case "function":
        this.definitions.type = name(this.definitions.type);
        return this;
    }
    this.definitions.type[name] = model;
    return this;
  }
  mapDerive(optionsOrDerive, mapper) {
    if (!mapper) {
      mapper = optionsOrDerive;
      optionsOrDerive = { as: "local" };
    }
    const hook = {
      subType: "derive",
      fn: mapper
    };
    return this.onTransform(optionsOrDerive, hook);
  }
  affix(base, type47, word) {
    if (word === "")
      return this;
    const delimieter = ["_", "-", " "];
    const capitalize2 = (word2) => word2[0].toUpperCase() + word2.slice(1);
    const joinKey = base === "prefix" ? (prefix, word2) => delimieter.includes(prefix.at(-1) ?? "") ? prefix + word2 : prefix + capitalize2(word2) : delimieter.includes(word.at(-1) ?? "") ? (suffix, word2) => word2 + suffix : (suffix, word2) => word2 + capitalize2(suffix);
    const remap = (type210) => {
      const store = {};
      switch (type210) {
        case "decorator":
          for (const key in this.singleton.decorator) {
            store[joinKey(word, key)] = this.singleton.decorator[key];
          }
          this.singleton.decorator = store;
          break;
        case "state":
          for (const key in this.singleton.store)
            store[joinKey(word, key)] = this.singleton.store[key];
          this.singleton.store = store;
          break;
        case "model":
          for (const key in this.definitions.type)
            store[joinKey(word, key)] = this.definitions.type[key];
          this.definitions.type = store;
          break;
        case "error":
          for (const key in this.definitions.error)
            store[joinKey(word, key)] = this.definitions.error[key];
          this.definitions.error = store;
          break;
      }
    };
    const types = Array.isArray(type47) ? type47 : [type47];
    for (const type210 of types.some((x) => x === "all") ? ["decorator", "state", "model", "error"] : types)
      remap(type210);
    return this;
  }
  prefix(type47, word) {
    return this.affix("prefix", type47, word);
  }
  suffix(type47, word) {
    return this.affix("suffix", type47, word);
  }
  compile() {
    this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this);
    if (typeof this.server?.reload === "function")
      this.server.reload({
        ...this.server || {},
        fetch: this.fetch
      });
    return this;
  }
  get modules() {
    return Promise.all(this.promisedModules.promises);
  }
};

// node_modules/@elysiajs/cors/dist/index.js
var processOrigin = (origin, request, from) => {
  if (Array.isArray(origin))
    return origin.some((o) => processOrigin(o, request, from));
  switch (typeof origin) {
    case "string":
      const protocolStart = from.indexOf("://");
      if (protocolStart !== -1)
        from = from.slice(protocolStart + 3);
      const trailingSlash = from.indexOf("/", 0);
      if (trailingSlash !== -1)
        from = from.slice(trailingSlash);
      return origin === from;
    case "function":
      return origin(request) === true;
    case "object":
      if (origin instanceof RegExp)
        return origin.test(from);
  }
  return false;
};
var cors = (config) => {
  let { aot = true, origin = "*", methods = "*", allowedHeaders = "*", exposedHeaders = "*", credentials = true, maxAge = 5, preflight = true } = config ?? {};
  if (Array.isArray(allowedHeaders))
    allowedHeaders = allowedHeaders.join(", ");
  if (Array.isArray(exposedHeaders))
    exposedHeaders = exposedHeaders.join(", ");
  const origins = typeof origin === "boolean" ? undefined : Array.isArray(origin) ? origin : [origin];
  const app = new Elysia({
    name: "@elysiajs/cors",
    seed: config,
    aot
  });
  const anyOrigin = origins?.some((o) => o === "*");
  const handleOrigin = (set2, request) => {
    if (origin === true) {
      set2.headers["Vary"] = "*";
      set2.headers["Access-Control-Allow-Origin"] = request.headers.get("Origin") || "*";
      return;
    }
    if (anyOrigin) {
      set2.headers["Vary"] = "*";
      set2.headers["Access-Control-Allow-Origin"] = "*";
      return;
    }
    if (!origins?.length)
      return;
    const headers = [];
    if (origins.length) {
      const from = request.headers.get("Origin") ?? "";
      for (let i = 0;i < origins.length; i++) {
        const value15 = processOrigin(origins[i], request, from);
        if (value15 === true) {
          set2.headers["Vary"] = origin ? "Origin" : "*";
          set2.headers["Access-Control-Allow-Origin"] = from || "*";
          return;
        }
        if (value15)
          headers.push(value15);
      }
    }
    set2.headers["Vary"] = "Origin";
    set2.headers["Access-Control-Allow-Origin"] = headers.join(", ");
  };
  const handleMethod = (set2, method) => {
    if (methods === true)
      return set2.headers["Access-Control-Allow-Methods"] = method ?? "*";
    if (methods === false || !methods?.length)
      return;
    if (methods === "*")
      return set2.headers["Access-Control-Allow-Methods"] = "*";
    if (!Array.isArray(methods))
      return set2.headers["Access-Control-Allow-Methods"] = methods;
    set2.headers["Access-Control-Allow-Methods"] = methods.join(", ");
  };
  if (preflight)
    app.options("/", ({ set: set2, request }) => {
      handleOrigin(set2, request);
      handleMethod(set2, request.method);
      if (allowedHeaders.length)
        set2.headers["Access-Control-Allow-Headers"] = allowedHeaders;
      if (exposedHeaders.length)
        set2.headers["Access-Control-Expose-Headers"] = exposedHeaders;
      if (maxAge)
        set2.headers["Access-Control-Max-Age"] = maxAge.toString();
      return new Response(null, {
        status: 204
      });
    }).options("/*", ({ set: set2, request }) => {
      handleOrigin(set2, request);
      handleMethod(set2, request.method);
      if (allowedHeaders.length)
        set2.headers["Access-Control-Allow-Headers"] = allowedHeaders;
      if (exposedHeaders.length)
        set2.headers["Access-Control-Expose-Headers"] = exposedHeaders;
      if (maxAge)
        set2.headers["Access-Control-Max-Age"] = maxAge.toString();
      return new Response(null, {
        status: 204
      });
    });
  const defaultHeaders = {
    "Access-Control-Allow-Headers": allowedHeaders,
    "Access-Control-Exposed-Headers": exposedHeaders
  };
  if (credentials === true)
    defaultHeaders["Access-Control-Allow-Credentials"] = "true";
  return app.headers(defaultHeaders).onRequest(({ set: set2, request }) => {
    handleOrigin(set2, request);
    handleMethod(set2, request.method);
    if (allowedHeaders.length)
      set2.headers["Access-Control-Allow-Headers"] = allowedHeaders;
    if (exposedHeaders.length)
      set2.headers["Access-Control-Expose-Headers"] = exposedHeaders;
  });
};

// node_modules/jose/dist/browser/runtime/webcrypto.js
var webcrypto_default = crypto;
var isCryptoKey = (key) => key instanceof CryptoKey;

// node_modules/jose/dist/browser/lib/buffer_utils.js
function concat(...buffers) {
  const size = buffers.reduce((acc, { length }) => acc + length, 0);
  const buf = new Uint8Array(size);
  let i = 0;
  buffers.forEach((buffer) => {
    buf.set(buffer, i);
    i += buffer.length;
  });
  return buf;
}
var encoder2 = new TextEncoder;
var decoder = new TextDecoder;
var MAX_INT322 = 2 ** 32;

// node_modules/jose/dist/browser/runtime/base64url.js
var encodeBase64 = (input) => {
  let unencoded = input;
  if (typeof unencoded === "string") {
    unencoded = encoder2.encode(unencoded);
  }
  const CHUNK_SIZE = 32768;
  const arr = [];
  for (let i = 0;i < unencoded.length; i += CHUNK_SIZE) {
    arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));
  }
  return btoa(arr.join(""));
};
var encode3 = (input) => {
  return encodeBase64(input).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
};
var decodeBase64 = (encoded) => {
  const binary = atob(encoded);
  const bytes = new Uint8Array(binary.length);
  for (let i = 0;i < binary.length; i++) {
    bytes[i] = binary.charCodeAt(i);
  }
  return bytes;
};
var decode3 = (input) => {
  let encoded = input;
  if (encoded instanceof Uint8Array) {
    encoded = decoder.decode(encoded);
  }
  encoded = encoded.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, "");
  try {
    return decodeBase64(encoded);
  } catch (_a) {
    throw new TypeError("The input to be decoded is not correctly encoded.");
  }
};

// node_modules/jose/dist/browser/util/errors.js
class JOSEError extends Error {
  static get code() {
    return "ERR_JOSE_GENERIC";
  }
  constructor(message) {
    var _a;
    super(message);
    this.code = "ERR_JOSE_GENERIC";
    this.name = this.constructor.name;
    (_a = Error.captureStackTrace) === null || _a === undefined || _a.call(Error, this, this.constructor);
  }
}

class JWTClaimValidationFailed extends JOSEError {
  static get code() {
    return "ERR_JWT_CLAIM_VALIDATION_FAILED";
  }
  constructor(message, claim = "unspecified", reason = "unspecified") {
    super(message);
    this.code = "ERR_JWT_CLAIM_VALIDATION_FAILED";
    this.claim = claim;
    this.reason = reason;
  }
}

class JWTExpired extends JOSEError {
  static get code() {
    return "ERR_JWT_EXPIRED";
  }
  constructor(message, claim = "unspecified", reason = "unspecified") {
    super(message);
    this.code = "ERR_JWT_EXPIRED";
    this.claim = claim;
    this.reason = reason;
  }
}

class JOSEAlgNotAllowed extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JOSE_ALG_NOT_ALLOWED";
  }
  static get code() {
    return "ERR_JOSE_ALG_NOT_ALLOWED";
  }
}

class JOSENotSupported extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JOSE_NOT_SUPPORTED";
  }
  static get code() {
    return "ERR_JOSE_NOT_SUPPORTED";
  }
}
class JWSInvalid extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JWS_INVALID";
  }
  static get code() {
    return "ERR_JWS_INVALID";
  }
}

class JWTInvalid extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JWT_INVALID";
  }
  static get code() {
    return "ERR_JWT_INVALID";
  }
}
class JWSSignatureVerificationFailed extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JWS_SIGNATURE_VERIFICATION_FAILED";
    this.message = "signature verification failed";
  }
  static get code() {
    return "ERR_JWS_SIGNATURE_VERIFICATION_FAILED";
  }
}

// node_modules/jose/dist/browser/lib/crypto_key.js
function unusable(name, prop = "algorithm.name") {
  return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);
}
function isAlgorithm(algorithm, name) {
  return algorithm.name === name;
}
function getHashLength(hash7) {
  return parseInt(hash7.name.slice(4), 10);
}
function getNamedCurve(alg) {
  switch (alg) {
    case "ES256":
      return "P-256";
    case "ES384":
      return "P-384";
    case "ES512":
      return "P-521";
    default:
      throw new Error("unreachable");
  }
}
function checkUsage(key, usages) {
  if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {
    let msg = "CryptoKey does not support this operation, its usages must include ";
    if (usages.length > 2) {
      const last = usages.pop();
      msg += `one of ${usages.join(", ")}, or ${last}.`;
    } else if (usages.length === 2) {
      msg += `one of ${usages[0]} or ${usages[1]}.`;
    } else {
      msg += `${usages[0]}.`;
    }
    throw new TypeError(msg);
  }
}
function checkSigCryptoKey(key, alg, ...usages) {
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512": {
      if (!isAlgorithm(key.algorithm, "HMAC"))
        throw unusable("HMAC");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "RS256":
    case "RS384":
    case "RS512": {
      if (!isAlgorithm(key.algorithm, "RSASSA-PKCS1-v1_5"))
        throw unusable("RSASSA-PKCS1-v1_5");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "PS256":
    case "PS384":
    case "PS512": {
      if (!isAlgorithm(key.algorithm, "RSA-PSS"))
        throw unusable("RSA-PSS");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "EdDSA": {
      if (key.algorithm.name !== "Ed25519" && key.algorithm.name !== "Ed448") {
        throw unusable("Ed25519 or Ed448");
      }
      break;
    }
    case "ES256":
    case "ES384":
    case "ES512": {
      if (!isAlgorithm(key.algorithm, "ECDSA"))
        throw unusable("ECDSA");
      const expected = getNamedCurve(alg);
      const actual = key.algorithm.namedCurve;
      if (actual !== expected)
        throw unusable(expected, "algorithm.namedCurve");
      break;
    }
    default:
      throw new TypeError("CryptoKey does not support this operation");
  }
  checkUsage(key, usages);
}

// node_modules/jose/dist/browser/lib/invalid_key_input.js
function message(msg, actual, ...types) {
  if (types.length > 2) {
    const last = types.pop();
    msg += `one of type ${types.join(", ")}, or ${last}.`;
  } else if (types.length === 2) {
    msg += `one of type ${types[0]} or ${types[1]}.`;
  } else {
    msg += `of type ${types[0]}.`;
  }
  if (actual == null) {
    msg += ` Received ${actual}`;
  } else if (typeof actual === "function" && actual.name) {
    msg += ` Received function ${actual.name}`;
  } else if (typeof actual === "object" && actual != null) {
    if (actual.constructor && actual.constructor.name) {
      msg += ` Received an instance of ${actual.constructor.name}`;
    }
  }
  return msg;
}
function withAlg(alg, actual, ...types) {
  return message(`Key for the ${alg} algorithm must be `, actual, ...types);
}
var invalid_key_input_default = (actual, ...types) => {
  return message("Key must be ", actual, ...types);
};

// node_modules/jose/dist/browser/runtime/is_key_like.js
var is_key_like_default = (key) => {
  return isCryptoKey(key);
};
var types = ["CryptoKey"];

// node_modules/jose/dist/browser/lib/is_disjoint.js
var isDisjoint = (...headers) => {
  const sources = headers.filter(Boolean);
  if (sources.length === 0 || sources.length === 1) {
    return true;
  }
  let acc;
  for (const header of sources) {
    const parameters4 = Object.keys(header);
    if (!acc || acc.size === 0) {
      acc = new Set(parameters4);
      continue;
    }
    for (const parameter of parameters4) {
      if (acc.has(parameter)) {
        return false;
      }
      acc.add(parameter);
    }
  }
  return true;
};
var is_disjoint_default = isDisjoint;

// node_modules/jose/dist/browser/lib/is_object.js
function isObjectLike(value15) {
  return typeof value15 === "object" && value15 !== null;
}
function isObject2(input) {
  if (!isObjectLike(input) || Object.prototype.toString.call(input) !== "[object Object]") {
    return false;
  }
  if (Object.getPrototypeOf(input) === null) {
    return true;
  }
  let proto = input;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(input) === proto;
}

// node_modules/jose/dist/browser/runtime/check_key_length.js
var check_key_length_default = (alg, key) => {
  if (alg.startsWith("RS") || alg.startsWith("PS")) {
    const { modulusLength } = key.algorithm;
    if (typeof modulusLength !== "number" || modulusLength < 2048) {
      throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);
    }
  }
};

// node_modules/jose/dist/browser/lib/check_key_type.js
var symmetricTypeCheck = (alg, key) => {
  if (key instanceof Uint8Array)
    return;
  if (!is_key_like_default(key)) {
    throw new TypeError(withAlg(alg, key, ...types, "Uint8Array"));
  }
  if (key.type !== "secret") {
    throw new TypeError(`${types.join(" or ")} instances for symmetric algorithms must be of type "secret"`);
  }
};
var asymmetricTypeCheck = (alg, key, usage) => {
  if (!is_key_like_default(key)) {
    throw new TypeError(withAlg(alg, key, ...types));
  }
  if (key.type === "secret") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);
  }
  if (usage === "sign" && key.type === "public") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);
  }
  if (usage === "decrypt" && key.type === "public") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);
  }
  if (key.algorithm && usage === "verify" && key.type === "private") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);
  }
  if (key.algorithm && usage === "encrypt" && key.type === "private") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`);
  }
};
var checkKeyType = (alg, key, usage) => {
  const symmetric = alg.startsWith("HS") || alg === "dir" || alg.startsWith("PBES2") || /^A\d{3}(?:GCM)?KW$/.test(alg);
  if (symmetric) {
    symmetricTypeCheck(alg, key);
  } else {
    asymmetricTypeCheck(alg, key, usage);
  }
};
var check_key_type_default = checkKeyType;

// node_modules/jose/dist/browser/lib/validate_crit.js
function validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {
  if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {
    throw new Err('"crit" (Critical) Header Parameter MUST be integrity protected');
  }
  if (!protectedHeader || protectedHeader.crit === undefined) {
    return new Set;
  }
  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input) => typeof input !== "string" || input.length === 0)) {
    throw new Err('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');
  }
  let recognized;
  if (recognizedOption !== undefined) {
    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);
  } else {
    recognized = recognizedDefault;
  }
  for (const parameter of protectedHeader.crit) {
    if (!recognized.has(parameter)) {
      throw new JOSENotSupported(`Extension Header Parameter "${parameter}" is not recognized`);
    }
    if (joseHeader[parameter] === undefined) {
      throw new Err(`Extension Header Parameter "${parameter}" is missing`);
    } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {
      throw new Err(`Extension Header Parameter "${parameter}" MUST be integrity protected`);
    }
  }
  return new Set(protectedHeader.crit);
}
var validate_crit_default = validateCrit;

// node_modules/jose/dist/browser/lib/validate_algorithms.js
var validateAlgorithms = (option, algorithms) => {
  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== "string"))) {
    throw new TypeError(`"${option}" option must be an array of strings`);
  }
  if (!algorithms) {
    return;
  }
  return new Set(algorithms);
};
var validate_algorithms_default = validateAlgorithms;

// node_modules/jose/dist/browser/runtime/subtle_dsa.js
function subtleDsa(alg, algorithm) {
  const hash7 = `SHA-${alg.slice(-3)}`;
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512":
      return { hash: hash7, name: "HMAC" };
    case "PS256":
    case "PS384":
    case "PS512":
      return { hash: hash7, name: "RSA-PSS", saltLength: alg.slice(-3) >> 3 };
    case "RS256":
    case "RS384":
    case "RS512":
      return { hash: hash7, name: "RSASSA-PKCS1-v1_5" };
    case "ES256":
    case "ES384":
    case "ES512":
      return { hash: hash7, name: "ECDSA", namedCurve: algorithm.namedCurve };
    case "EdDSA":
      return { name: algorithm.name };
    default:
      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);
  }
}

// node_modules/jose/dist/browser/runtime/get_sign_verify_key.js
function getCryptoKey(alg, key, usage) {
  if (isCryptoKey(key)) {
    checkSigCryptoKey(key, alg, usage);
    return key;
  }
  if (key instanceof Uint8Array) {
    if (!alg.startsWith("HS")) {
      throw new TypeError(invalid_key_input_default(key, ...types));
    }
    return webcrypto_default.subtle.importKey("raw", key, { hash: `SHA-${alg.slice(-3)}`, name: "HMAC" }, false, [usage]);
  }
  throw new TypeError(invalid_key_input_default(key, ...types, "Uint8Array"));
}

// node_modules/jose/dist/browser/runtime/verify.js
var verify = async (alg, key, signature, data) => {
  const cryptoKey = await getCryptoKey(alg, key, "verify");
  check_key_length_default(alg, cryptoKey);
  const algorithm = subtleDsa(alg, cryptoKey.algorithm);
  try {
    return await webcrypto_default.subtle.verify(algorithm, cryptoKey, signature, data);
  } catch (_a) {
    return false;
  }
};
var verify_default = verify;

// node_modules/jose/dist/browser/jws/flattened/verify.js
async function flattenedVerify(jws, key, options) {
  var _a;
  if (!isObject2(jws)) {
    throw new JWSInvalid("Flattened JWS must be an object");
  }
  if (jws.protected === undefined && jws.header === undefined) {
    throw new JWSInvalid('Flattened JWS must have either of the "protected" or "header" members');
  }
  if (jws.protected !== undefined && typeof jws.protected !== "string") {
    throw new JWSInvalid("JWS Protected Header incorrect type");
  }
  if (jws.payload === undefined) {
    throw new JWSInvalid("JWS Payload missing");
  }
  if (typeof jws.signature !== "string") {
    throw new JWSInvalid("JWS Signature missing or incorrect type");
  }
  if (jws.header !== undefined && !isObject2(jws.header)) {
    throw new JWSInvalid("JWS Unprotected Header incorrect type");
  }
  let parsedProt = {};
  if (jws.protected) {
    try {
      const protectedHeader = decode3(jws.protected);
      parsedProt = JSON.parse(decoder.decode(protectedHeader));
    } catch (_b) {
      throw new JWSInvalid("JWS Protected Header is invalid");
    }
  }
  if (!is_disjoint_default(parsedProt, jws.header)) {
    throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
  }
  const joseHeader = {
    ...parsedProt,
    ...jws.header
  };
  const extensions = validate_crit_default(JWSInvalid, new Map([["b64", true]]), options === null || options === undefined ? undefined : options.crit, parsedProt, joseHeader);
  let b64 = true;
  if (extensions.has("b64")) {
    b64 = parsedProt.b64;
    if (typeof b64 !== "boolean") {
      throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
    }
  }
  const { alg } = joseHeader;
  if (typeof alg !== "string" || !alg) {
    throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');
  }
  const algorithms = options && validate_algorithms_default("algorithms", options.algorithms);
  if (algorithms && !algorithms.has(alg)) {
    throw new JOSEAlgNotAllowed('"alg" (Algorithm) Header Parameter not allowed');
  }
  if (b64) {
    if (typeof jws.payload !== "string") {
      throw new JWSInvalid("JWS Payload must be a string");
    }
  } else if (typeof jws.payload !== "string" && !(jws.payload instanceof Uint8Array)) {
    throw new JWSInvalid("JWS Payload must be a string or an Uint8Array instance");
  }
  let resolvedKey = false;
  if (typeof key === "function") {
    key = await key(parsedProt, jws);
    resolvedKey = true;
  }
  check_key_type_default(alg, key, "verify");
  const data = concat(encoder2.encode((_a = jws.protected) !== null && _a !== undefined ? _a : ""), encoder2.encode("."), typeof jws.payload === "string" ? encoder2.encode(jws.payload) : jws.payload);
  let signature;
  try {
    signature = decode3(jws.signature);
  } catch (_c) {
    throw new JWSInvalid("Failed to base64url decode the signature");
  }
  const verified = await verify_default(alg, key, signature, data);
  if (!verified) {
    throw new JWSSignatureVerificationFailed;
  }
  let payload;
  if (b64) {
    try {
      payload = decode3(jws.payload);
    } catch (_d) {
      throw new JWSInvalid("Failed to base64url decode the payload");
    }
  } else if (typeof jws.payload === "string") {
    payload = encoder2.encode(jws.payload);
  } else {
    payload = jws.payload;
  }
  const result = { payload };
  if (jws.protected !== undefined) {
    result.protectedHeader = parsedProt;
  }
  if (jws.header !== undefined) {
    result.unprotectedHeader = jws.header;
  }
  if (resolvedKey) {
    return { ...result, key };
  }
  return result;
}

// node_modules/jose/dist/browser/jws/compact/verify.js
async function compactVerify(jws, key, options) {
  if (jws instanceof Uint8Array) {
    jws = decoder.decode(jws);
  }
  if (typeof jws !== "string") {
    throw new JWSInvalid("Compact JWS must be a string or Uint8Array");
  }
  const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split(".");
  if (length !== 3) {
    throw new JWSInvalid("Invalid Compact JWS");
  }
  const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);
  const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: verified.key };
  }
  return result;
}

// node_modules/jose/dist/browser/lib/epoch.js
var epoch_default = (date6) => Math.floor(date6.getTime() / 1000);

// node_modules/jose/dist/browser/lib/secs.js
var minute = 60;
var hour = minute * 60;
var day = hour * 24;
var week = day * 7;
var year = day * 365.25;
var REGEX = /^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;
var secs_default = (str) => {
  const matched = REGEX.exec(str);
  if (!matched) {
    throw new TypeError("Invalid time period format");
  }
  const value15 = parseFloat(matched[1]);
  const unit = matched[2].toLowerCase();
  switch (unit) {
    case "sec":
    case "secs":
    case "second":
    case "seconds":
    case "s":
      return Math.round(value15);
    case "minute":
    case "minutes":
    case "min":
    case "mins":
    case "m":
      return Math.round(value15 * minute);
    case "hour":
    case "hours":
    case "hr":
    case "hrs":
    case "h":
      return Math.round(value15 * hour);
    case "day":
    case "days":
    case "d":
      return Math.round(value15 * day);
    case "week":
    case "weeks":
    case "w":
      return Math.round(value15 * week);
    default:
      return Math.round(value15 * year);
  }
};

// node_modules/jose/dist/browser/lib/jwt_claims_set.js
var normalizeTyp = (value15) => value15.toLowerCase().replace(/^application\//, "");
var checkAudiencePresence = (audPayload, audOption) => {
  if (typeof audPayload === "string") {
    return audOption.includes(audPayload);
  }
  if (Array.isArray(audPayload)) {
    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));
  }
  return false;
};
var jwt_claims_set_default = (protectedHeader, encodedPayload, options = {}) => {
  const { typ } = options;
  if (typ && (typeof protectedHeader.typ !== "string" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {
    throw new JWTClaimValidationFailed('unexpected "typ" JWT header value', "typ", "check_failed");
  }
  let payload;
  try {
    payload = JSON.parse(decoder.decode(encodedPayload));
  } catch (_a) {
  }
  if (!isObject2(payload)) {
    throw new JWTInvalid("JWT Claims Set must be a top-level JSON object");
  }
  const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;
  if (maxTokenAge !== undefined)
    requiredClaims.push("iat");
  if (audience !== undefined)
    requiredClaims.push("aud");
  if (subject !== undefined)
    requiredClaims.push("sub");
  if (issuer !== undefined)
    requiredClaims.push("iss");
  for (const claim of new Set(requiredClaims.reverse())) {
    if (!(claim in payload)) {
      throw new JWTClaimValidationFailed(`missing required "${claim}" claim`, claim, "missing");
    }
  }
  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {
    throw new JWTClaimValidationFailed('unexpected "iss" claim value', "iss", "check_failed");
  }
  if (subject && payload.sub !== subject) {
    throw new JWTClaimValidationFailed('unexpected "sub" claim value', "sub", "check_failed");
  }
  if (audience && !checkAudiencePresence(payload.aud, typeof audience === "string" ? [audience] : audience)) {
    throw new JWTClaimValidationFailed('unexpected "aud" claim value', "aud", "check_failed");
  }
  let tolerance;
  switch (typeof options.clockTolerance) {
    case "string":
      tolerance = secs_default(options.clockTolerance);
      break;
    case "number":
      tolerance = options.clockTolerance;
      break;
    case "undefined":
      tolerance = 0;
      break;
    default:
      throw new TypeError("Invalid clockTolerance option type");
  }
  const { currentDate } = options;
  const now = epoch_default(currentDate || new Date);
  if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== "number") {
    throw new JWTClaimValidationFailed('"iat" claim must be a number', "iat", "invalid");
  }
  if (payload.nbf !== undefined) {
    if (typeof payload.nbf !== "number") {
      throw new JWTClaimValidationFailed('"nbf" claim must be a number', "nbf", "invalid");
    }
    if (payload.nbf > now + tolerance) {
      throw new JWTClaimValidationFailed('"nbf" claim timestamp check failed', "nbf", "check_failed");
    }
  }
  if (payload.exp !== undefined) {
    if (typeof payload.exp !== "number") {
      throw new JWTClaimValidationFailed('"exp" claim must be a number', "exp", "invalid");
    }
    if (payload.exp <= now - tolerance) {
      throw new JWTExpired('"exp" claim timestamp check failed', "exp", "check_failed");
    }
  }
  if (maxTokenAge) {
    const age = now - payload.iat;
    const max = typeof maxTokenAge === "number" ? maxTokenAge : secs_default(maxTokenAge);
    if (age - tolerance > max) {
      throw new JWTExpired('"iat" claim timestamp check failed (too far in the past)', "iat", "check_failed");
    }
    if (age < 0 - tolerance) {
      throw new JWTClaimValidationFailed('"iat" claim timestamp check failed (it should be in the past)', "iat", "check_failed");
    }
  }
  return payload;
};

// node_modules/jose/dist/browser/jwt/verify.js
async function jwtVerify(jwt, key, options) {
  var _a;
  const verified = await compactVerify(jwt, key, options);
  if (((_a = verified.protectedHeader.crit) === null || _a === undefined ? undefined : _a.includes("b64")) && verified.protectedHeader.b64 === false) {
    throw new JWTInvalid("JWTs MUST NOT use unencoded payload");
  }
  const payload = jwt_claims_set_default(verified.protectedHeader, verified.payload, options);
  const result = { payload, protectedHeader: verified.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: verified.key };
  }
  return result;
}
// node_modules/jose/dist/browser/runtime/sign.js
var sign = async (alg, key, data) => {
  const cryptoKey = await getCryptoKey(alg, key, "sign");
  check_key_length_default(alg, cryptoKey);
  const signature = await webcrypto_default.subtle.sign(subtleDsa(alg, cryptoKey.algorithm), cryptoKey, data);
  return new Uint8Array(signature);
};
var sign_default = sign;

// node_modules/jose/dist/browser/jws/flattened/sign.js
class FlattenedSign {
  constructor(payload) {
    if (!(payload instanceof Uint8Array)) {
      throw new TypeError("payload must be an instance of Uint8Array");
    }
    this._payload = payload;
  }
  setProtectedHeader(protectedHeader) {
    if (this._protectedHeader) {
      throw new TypeError("setProtectedHeader can only be called once");
    }
    this._protectedHeader = protectedHeader;
    return this;
  }
  setUnprotectedHeader(unprotectedHeader) {
    if (this._unprotectedHeader) {
      throw new TypeError("setUnprotectedHeader can only be called once");
    }
    this._unprotectedHeader = unprotectedHeader;
    return this;
  }
  async sign(key, options) {
    if (!this._protectedHeader && !this._unprotectedHeader) {
      throw new JWSInvalid("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");
    }
    if (!is_disjoint_default(this._protectedHeader, this._unprotectedHeader)) {
      throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
    }
    const joseHeader = {
      ...this._protectedHeader,
      ...this._unprotectedHeader
    };
    const extensions = validate_crit_default(JWSInvalid, new Map([["b64", true]]), options === null || options === undefined ? undefined : options.crit, this._protectedHeader, joseHeader);
    let b64 = true;
    if (extensions.has("b64")) {
      b64 = this._protectedHeader.b64;
      if (typeof b64 !== "boolean") {
        throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
      }
    }
    const { alg } = joseHeader;
    if (typeof alg !== "string" || !alg) {
      throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');
    }
    check_key_type_default(alg, key, "sign");
    let payload = this._payload;
    if (b64) {
      payload = encoder2.encode(encode3(payload));
    }
    let protectedHeader;
    if (this._protectedHeader) {
      protectedHeader = encoder2.encode(encode3(JSON.stringify(this._protectedHeader)));
    } else {
      protectedHeader = encoder2.encode("");
    }
    const data = concat(protectedHeader, encoder2.encode("."), payload);
    const signature = await sign_default(alg, key, data);
    const jws = {
      signature: encode3(signature),
      payload: ""
    };
    if (b64) {
      jws.payload = decoder.decode(payload);
    }
    if (this._unprotectedHeader) {
      jws.header = this._unprotectedHeader;
    }
    if (this._protectedHeader) {
      jws.protected = decoder.decode(protectedHeader);
    }
    return jws;
  }
}

// node_modules/jose/dist/browser/jws/compact/sign.js
class CompactSign {
  constructor(payload) {
    this._flattened = new FlattenedSign(payload);
  }
  setProtectedHeader(protectedHeader) {
    this._flattened.setProtectedHeader(protectedHeader);
    return this;
  }
  async sign(key, options) {
    const jws = await this._flattened.sign(key, options);
    if (jws.payload === undefined) {
      throw new TypeError("use the flattened module for creating JWS with b64: false");
    }
    return `${jws.protected}.${jws.payload}.${jws.signature}`;
  }
}

// node_modules/jose/dist/browser/jwt/produce.js
class ProduceJWT {
  constructor(payload) {
    if (!isObject2(payload)) {
      throw new TypeError("JWT Claims Set MUST be an object");
    }
    this._payload = payload;
  }
  setIssuer(issuer) {
    this._payload = { ...this._payload, iss: issuer };
    return this;
  }
  setSubject(subject) {
    this._payload = { ...this._payload, sub: subject };
    return this;
  }
  setAudience(audience) {
    this._payload = { ...this._payload, aud: audience };
    return this;
  }
  setJti(jwtId) {
    this._payload = { ...this._payload, jti: jwtId };
    return this;
  }
  setNotBefore(input) {
    if (typeof input === "number") {
      this._payload = { ...this._payload, nbf: input };
    } else {
      this._payload = { ...this._payload, nbf: epoch_default(new Date) + secs_default(input) };
    }
    return this;
  }
  setExpirationTime(input) {
    if (typeof input === "number") {
      this._payload = { ...this._payload, exp: input };
    } else {
      this._payload = { ...this._payload, exp: epoch_default(new Date) + secs_default(input) };
    }
    return this;
  }
  setIssuedAt(input) {
    if (typeof input === "undefined") {
      this._payload = { ...this._payload, iat: epoch_default(new Date) };
    } else {
      this._payload = { ...this._payload, iat: input };
    }
    return this;
  }
}

// node_modules/jose/dist/browser/jwt/sign.js
class SignJWT extends ProduceJWT {
  setProtectedHeader(protectedHeader) {
    this._protectedHeader = protectedHeader;
    return this;
  }
  async sign(key, options) {
    var _a;
    const sig = new CompactSign(encoder2.encode(JSON.stringify(this._payload)));
    sig.setProtectedHeader(this._protectedHeader);
    if (Array.isArray((_a = this._protectedHeader) === null || _a === undefined ? undefined : _a.crit) && this._protectedHeader.crit.includes("b64") && this._protectedHeader.b64 === false) {
      throw new JWTInvalid("JWTs MUST NOT use unencoded payload");
    }
    return sig.sign(key, options);
  }
}
// node_modules/@elysiajs/jwt/dist/index.js
var jwt = ({ name = "jwt", secret, alg = "HS256", crit, schema: schema3, nbf, exp, ...payload }) => {
  if (!secret)
    throw new Error("Secret can't be empty");
  const key = typeof secret === "string" ? new TextEncoder().encode(secret) : secret;
  const validator = schema3 ? getSchemaValidator(Type.Intersect([
    schema3,
    Type.Object({
      iss: Type.Optional(Type.String()),
      sub: Type.Optional(Type.String()),
      aud: Type.Optional(Type.Union([Type.String(), Type.Array(Type.String())])),
      jti: Type.Optional(Type.String()),
      nbf: Type.Optional(Type.Union([Type.String(), Type.Number()])),
      exp: Type.Optional(Type.Union([Type.String(), Type.Number()])),
      iat: Type.Optional(Type.String())
    })
  ]), {}) : undefined;
  return new Elysia({
    name: "@elysiajs/jwt",
    seed: {
      name,
      secret,
      alg,
      crit,
      schema: schema3,
      nbf,
      exp,
      ...payload
    }
  }).decorate(name, {
    sign: (morePayload) => {
      let jwt2 = new SignJWT({
        ...payload,
        ...morePayload,
        nbf: undefined,
        exp: undefined
      }).setProtectedHeader({
        alg,
        crit
      });
      if (nbf)
        jwt2 = jwt2.setNotBefore(nbf);
      if (exp)
        jwt2 = jwt2.setExpirationTime(exp);
      return jwt2.sign(key);
    },
    verify: async (jwt2) => {
      if (!jwt2)
        return false;
      try {
        const data = (await jwtVerify(jwt2, key)).payload;
        if (validator && !validator.Check(data))
          throw new ValidationError("JWT", validator, data);
        return data;
      } catch (_) {
        return false;
      }
    }
  });
};

// prisma/client/index.ts
var client = __toESM(require_index_browser3(), 1);
var prisma = new client.PrismaClient;
var client_default = prisma;

// src/controllers/PostController.ts
async function getPosts() {
  try {
    const posts = await client_default.post.findMany({ orderBy: { id: "desc" } });
    return {
      success: true,
      message: "List Data Posts!",
      data: posts
    };
  } catch (e2) {
    console.error(`Error getting posts: ${e2}`);
  }
}
async function createPost(options) {
  try {
    const { title, content } = options;
    const post = await client_default.post.create({
      data: {
        title,
        content
      }
    });
    return {
      success: true,
      message: "Post Created Successfully!",
      data: post
    };
  } catch (e2) {
    console.error(`Error creating post: ${e2}`);
  }
}
async function getPostById(id) {
  try {
    const postId = parseInt(id);
    const post = await client_default.post.findUnique({
      where: { id: postId }
    });
    if (!post) {
      return {
        sucess: true,
        message: "Detail Data Post Not Found!",
        data: null
      };
    }
    return {
      success: true,
      message: `Detail Data Post By ID : ${id}`,
      data: post
    };
  } catch (e2) {
    console.error(`Error finding post: ${e2}`);
  }
}

// node:crypto
function dw() {
  return Hq;
}
var pw = Object.create;
var Xa = Object.defineProperty;
var vw = Object.getOwnPropertyDescriptor;
var bw = Object.getOwnPropertyNames;
var mw = Object.getPrototypeOf;
var gw = Object.prototype.hasOwnProperty;
var R0 = (t3, e2) => () => (t3 && (e2 = t3(t3 = 0)), e2);
var T = (t3, e2) => () => (e2 || t3((e2 = { exports: {} }).exports, e2), e2.exports);
var Ja = (t3, e2) => {
  for (var r2 in e2)
    Xa(t3, r2, { get: e2[r2], enumerable: true });
};
var Ya = (t3, e2, r2, o) => {
  if (e2 && typeof e2 == "object" || typeof e2 == "function")
    for (let f of bw(e2))
      !gw.call(t3, f) && f !== r2 && Xa(t3, f, { get: () => e2[f], enumerable: !(o = vw(e2, f)) || o.enumerable });
  return t3;
};
var ot = (t3, e2, r2) => (Ya(t3, e2, "default"), r2 && Ya(r2, e2, "default"));
var rn = (t3, e2, r2) => (r2 = t3 != null ? pw(mw(t3)) : {}, Ya(e2 || !t3 || !t3.__esModule ? Xa(r2, "default", { value: t3, enumerable: true }) : r2, t3));
var ur = (t3) => Ya(Xa({}, "__esModule", { value: true }), t3);
var Nd = T((Qa) => {
  Qa.byteLength = ww;
  Qa.toByteArray = _w;
  Qa.fromByteArray = Ew;
  var jr = [], lr = [], yw = typeof Uint8Array < "u" ? Uint8Array : Array, B0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  for (nn = 0, kd = B0.length;nn < kd; ++nn)
    jr[nn] = B0[nn], lr[B0.charCodeAt(nn)] = nn;
  var nn, kd;
  lr["-".charCodeAt(0)] = 62;
  lr["_".charCodeAt(0)] = 63;
  function Ld(t3) {
    var e2 = t3.length;
    if (e2 % 4 > 0)
      throw new Error("Invalid string. Length must be a multiple of 4");
    var r2 = t3.indexOf("=");
    r2 === -1 && (r2 = e2);
    var o = r2 === e2 ? 0 : 4 - r2 % 4;
    return [r2, o];
  }
  function ww(t3) {
    var e2 = Ld(t3), r2 = e2[0], o = e2[1];
    return (r2 + o) * 3 / 4 - o;
  }
  function Mw(t3, e2, r2) {
    return (e2 + r2) * 3 / 4 - r2;
  }
  function _w(t3) {
    var e2, r2 = Ld(t3), o = r2[0], f = r2[1], p = new yw(Mw(t3, o, f)), m = 0, y = f > 0 ? o - 4 : o, M;
    for (M = 0;M < y; M += 4)
      e2 = lr[t3.charCodeAt(M)] << 18 | lr[t3.charCodeAt(M + 1)] << 12 | lr[t3.charCodeAt(M + 2)] << 6 | lr[t3.charCodeAt(M + 3)], p[m++] = e2 >> 16 & 255, p[m++] = e2 >> 8 & 255, p[m++] = e2 & 255;
    return f === 2 && (e2 = lr[t3.charCodeAt(M)] << 2 | lr[t3.charCodeAt(M + 1)] >> 4, p[m++] = e2 & 255), f === 1 && (e2 = lr[t3.charCodeAt(M)] << 10 | lr[t3.charCodeAt(M + 1)] << 4 | lr[t3.charCodeAt(M + 2)] >> 2, p[m++] = e2 >> 8 & 255, p[m++] = e2 & 255), p;
  }
  function xw(t3) {
    return jr[t3 >> 18 & 63] + jr[t3 >> 12 & 63] + jr[t3 >> 6 & 63] + jr[t3 & 63];
  }
  function Sw(t3, e2, r2) {
    for (var o, f = [], p = e2;p < r2; p += 3)
      o = (t3[p] << 16 & 16711680) + (t3[p + 1] << 8 & 65280) + (t3[p + 2] & 255), f.push(xw(o));
    return f.join("");
  }
  function Ew(t3) {
    for (var e2, r2 = t3.length, o = r2 % 3, f = [], p = 16383, m = 0, y = r2 - o;m < y; m += p)
      f.push(Sw(t3, m, m + p > y ? y : m + p));
    return o === 1 ? (e2 = t3[r2 - 1], f.push(jr[e2 >> 2] + jr[e2 << 4 & 63] + "==")) : o === 2 && (e2 = (t3[r2 - 2] << 8) + t3[r2 - 1], f.push(jr[e2 >> 10] + jr[e2 >> 4 & 63] + jr[e2 << 2 & 63] + "=")), f.join("");
  }
});
var Dd = T((q0) => {
  q0.read = function(t3, e2, r2, o, f) {
    var p, m, y = f * 8 - o - 1, M = (1 << y) - 1, x = M >> 1, S = -7, E = r2 ? f - 1 : 0, B = r2 ? -1 : 1, q = t3[e2 + E];
    for (E += B, p = q & (1 << -S) - 1, q >>= -S, S += y;S > 0; p = p * 256 + t3[e2 + E], E += B, S -= 8)
      ;
    for (m = p & (1 << -S) - 1, p >>= -S, S += o;S > 0; m = m * 256 + t3[e2 + E], E += B, S -= 8)
      ;
    if (p === 0)
      p = 1 - x;
    else {
      if (p === M)
        return m ? NaN : (q ? -1 : 1) * (1 / 0);
      m = m + Math.pow(2, o), p = p - x;
    }
    return (q ? -1 : 1) * m * Math.pow(2, p - o);
  };
  q0.write = function(t3, e2, r2, o, f, p) {
    var m, y, M, x = p * 8 - f - 1, S = (1 << x) - 1, E = S >> 1, B = f === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, q = o ? 0 : p - 1, L = o ? 1 : -1, ge = e2 < 0 || e2 === 0 && 1 / e2 < 0 ? 1 : 0;
    for (e2 = Math.abs(e2), isNaN(e2) || e2 === 1 / 0 ? (y = isNaN(e2) ? 1 : 0, m = S) : (m = Math.floor(Math.log(e2) / Math.LN2), e2 * (M = Math.pow(2, -m)) < 1 && (m--, M *= 2), m + E >= 1 ? e2 += B / M : e2 += B * Math.pow(2, 1 - E), e2 * M >= 2 && (m++, M /= 2), m + E >= S ? (y = 0, m = S) : m + E >= 1 ? (y = (e2 * M - 1) * Math.pow(2, f), m = m + E) : (y = e2 * Math.pow(2, E - 1) * Math.pow(2, f), m = 0));f >= 8; t3[r2 + q] = y & 255, q += L, y /= 256, f -= 8)
      ;
    for (m = m << f | y, x += f;x > 0; t3[r2 + q] = m & 255, q += L, m /= 256, x -= 8)
      ;
    t3[r2 + q - L] |= ge * 128;
  };
});
var Ut = T((Xn) => {
  var I0 = Nd(), Gn = Dd(), Pd = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
  Xn.Buffer = me;
  Xn.SlowBuffer = Tw;
  Xn.INSPECT_MAX_BYTES = 50;
  var eo = 2147483647;
  Xn.kMaxLength = eo;
  me.TYPED_ARRAY_SUPPORT = Aw();
  !me.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
  function Aw() {
    try {
      let t3 = new Uint8Array(1), e2 = { foo: function() {
        return 42;
      } };
      return Object.setPrototypeOf(e2, Uint8Array.prototype), Object.setPrototypeOf(t3, e2), t3.foo() === 42;
    } catch {
      return false;
    }
  }
  Object.defineProperty(me.prototype, "parent", { enumerable: true, get: function() {
    if (!!me.isBuffer(this))
      return this.buffer;
  } });
  Object.defineProperty(me.prototype, "offset", { enumerable: true, get: function() {
    if (!!me.isBuffer(this))
      return this.byteOffset;
  } });
  function li(t3) {
    if (t3 > eo)
      throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
    let e2 = new Uint8Array(t3);
    return Object.setPrototypeOf(e2, me.prototype), e2;
  }
  function me(t3, e2, r2) {
    if (typeof t3 == "number") {
      if (typeof e2 == "string")
        throw new TypeError('The "string" argument must be of type string. Received type number');
      return N0(t3);
    }
    return Ud(t3, e2, r2);
  }
  me.poolSize = 8192;
  function Ud(t3, e2, r2) {
    if (typeof t3 == "string")
      return Bw(t3, e2);
    if (ArrayBuffer.isView(t3))
      return qw(t3);
    if (t3 == null)
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
    if (Zr(t3, ArrayBuffer) || t3 && Zr(t3.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Zr(t3, SharedArrayBuffer) || t3 && Zr(t3.buffer, SharedArrayBuffer)))
      return k0(t3, e2, r2);
    if (typeof t3 == "number")
      throw new TypeError('The "value" argument must not be of type number. Received type number');
    let o = t3.valueOf && t3.valueOf();
    if (o != null && o !== t3)
      return me.from(o, e2, r2);
    let f = Iw(t3);
    if (f)
      return f;
    if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof t3[Symbol.toPrimitive] == "function")
      return me.from(t3[Symbol.toPrimitive]("string"), e2, r2);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
  }
  me.from = function(t3, e2, r2) {
    return Ud(t3, e2, r2);
  };
  Object.setPrototypeOf(me.prototype, Uint8Array.prototype);
  Object.setPrototypeOf(me, Uint8Array);
  function zd(t3) {
    if (typeof t3 != "number")
      throw new TypeError('"size" argument must be of type number');
    if (t3 < 0)
      throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
  }
  function Rw(t3, e2, r2) {
    return zd(t3), t3 <= 0 ? li(t3) : e2 !== undefined ? typeof r2 == "string" ? li(t3).fill(e2, r2) : li(t3).fill(e2) : li(t3);
  }
  me.alloc = function(t3, e2, r2) {
    return Rw(t3, e2, r2);
  };
  function N0(t3) {
    return zd(t3), li(t3 < 0 ? 0 : D0(t3) | 0);
  }
  me.allocUnsafe = function(t3) {
    return N0(t3);
  };
  me.allocUnsafeSlow = function(t3) {
    return N0(t3);
  };
  function Bw(t3, e2) {
    if ((typeof e2 != "string" || e2 === "") && (e2 = "utf8"), !me.isEncoding(e2))
      throw new TypeError("Unknown encoding: " + e2);
    let r2 = Hd(t3, e2) | 0, o = li(r2), f = o.write(t3, e2);
    return f !== r2 && (o = o.slice(0, f)), o;
  }
  function T0(t3) {
    let e2 = t3.length < 0 ? 0 : D0(t3.length) | 0, r2 = li(e2);
    for (let o = 0;o < e2; o += 1)
      r2[o] = t3[o] & 255;
    return r2;
  }
  function qw(t3) {
    if (Zr(t3, Uint8Array)) {
      let e2 = new Uint8Array(t3);
      return k0(e2.buffer, e2.byteOffset, e2.byteLength);
    }
    return T0(t3);
  }
  function k0(t3, e2, r2) {
    if (e2 < 0 || t3.byteLength < e2)
      throw new RangeError('"offset" is outside of buffer bounds');
    if (t3.byteLength < e2 + (r2 || 0))
      throw new RangeError('"length" is outside of buffer bounds');
    let o;
    return e2 === undefined && r2 === undefined ? o = new Uint8Array(t3) : r2 === undefined ? o = new Uint8Array(t3, e2) : o = new Uint8Array(t3, e2, r2), Object.setPrototypeOf(o, me.prototype), o;
  }
  function Iw(t3) {
    if (me.isBuffer(t3)) {
      let e2 = D0(t3.length) | 0, r2 = li(e2);
      return r2.length === 0 || t3.copy(r2, 0, 0, e2), r2;
    }
    if (t3.length !== undefined)
      return typeof t3.length != "number" || C0(t3.length) ? li(0) : T0(t3);
    if (t3.type === "Buffer" && Array.isArray(t3.data))
      return T0(t3.data);
  }
  function D0(t3) {
    if (t3 >= eo)
      throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + eo.toString(16) + " bytes");
    return t3 | 0;
  }
  function Tw(t3) {
    return +t3 != t3 && (t3 = 0), me.alloc(+t3);
  }
  me.isBuffer = function(e2) {
    return e2 != null && e2._isBuffer === true && e2 !== me.prototype;
  };
  me.compare = function(e2, r2) {
    if (Zr(e2, Uint8Array) && (e2 = me.from(e2, e2.offset, e2.byteLength)), Zr(r2, Uint8Array) && (r2 = me.from(r2, r2.offset, r2.byteLength)), !me.isBuffer(e2) || !me.isBuffer(r2))
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (e2 === r2)
      return 0;
    let o = e2.length, f = r2.length;
    for (let p = 0, m = Math.min(o, f);p < m; ++p)
      if (e2[p] !== r2[p]) {
        o = e2[p], f = r2[p];
        break;
      }
    return o < f ? -1 : f < o ? 1 : 0;
  };
  me.isEncoding = function(e2) {
    switch (String(e2).toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "latin1":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
        return true;
      default:
        return false;
    }
  };
  me.concat = function(e2, r2) {
    if (!Array.isArray(e2))
      throw new TypeError('"list" argument must be an Array of Buffers');
    if (e2.length === 0)
      return me.alloc(0);
    let o;
    if (r2 === undefined)
      for (r2 = 0, o = 0;o < e2.length; ++o)
        r2 += e2[o].length;
    let f = me.allocUnsafe(r2), p = 0;
    for (o = 0;o < e2.length; ++o) {
      let m = e2[o];
      if (Zr(m, Uint8Array))
        p + m.length > f.length ? (me.isBuffer(m) || (m = me.from(m)), m.copy(f, p)) : Uint8Array.prototype.set.call(f, m, p);
      else if (me.isBuffer(m))
        m.copy(f, p);
      else
        throw new TypeError('"list" argument must be an Array of Buffers');
      p += m.length;
    }
    return f;
  };
  function Hd(t3, e2) {
    if (me.isBuffer(t3))
      return t3.length;
    if (ArrayBuffer.isView(t3) || Zr(t3, ArrayBuffer))
      return t3.byteLength;
    if (typeof t3 != "string")
      throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t3);
    let r2 = t3.length, o = arguments.length > 2 && arguments[2] === true;
    if (!o && r2 === 0)
      return 0;
    let f = false;
    for (;; )
      switch (e2) {
        case "ascii":
        case "latin1":
        case "binary":
          return r2;
        case "utf8":
        case "utf-8":
          return L0(t3).length;
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return r2 * 2;
        case "hex":
          return r2 >>> 1;
        case "base64":
          return Xd(t3).length;
        default:
          if (f)
            return o ? -1 : L0(t3).length;
          e2 = ("" + e2).toLowerCase(), f = true;
      }
  }
  me.byteLength = Hd;
  function kw(t3, e2, r2) {
    let o = false;
    if ((e2 === undefined || e2 < 0) && (e2 = 0), e2 > this.length || ((r2 === undefined || r2 > this.length) && (r2 = this.length), r2 <= 0) || (r2 >>>= 0, e2 >>>= 0, r2 <= e2))
      return "";
    for (t3 || (t3 = "utf8");; )
      switch (t3) {
        case "hex":
          return Hw(this, e2, r2);
        case "utf8":
        case "utf-8":
          return Kd(this, e2, r2);
        case "ascii":
          return Uw(this, e2, r2);
        case "latin1":
        case "binary":
          return zw(this, e2, r2);
        case "base64":
          return Ow(this, e2, r2);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Ww(this, e2, r2);
        default:
          if (o)
            throw new TypeError("Unknown encoding: " + t3);
          t3 = (t3 + "").toLowerCase(), o = true;
      }
  }
  me.prototype._isBuffer = true;
  function fn(t3, e2, r2) {
    let o = t3[e2];
    t3[e2] = t3[r2], t3[r2] = o;
  }
  me.prototype.swap16 = function() {
    let e2 = this.length;
    if (e2 % 2 !== 0)
      throw new RangeError("Buffer size must be a multiple of 16-bits");
    for (let r2 = 0;r2 < e2; r2 += 2)
      fn(this, r2, r2 + 1);
    return this;
  };
  me.prototype.swap32 = function() {
    let e2 = this.length;
    if (e2 % 4 !== 0)
      throw new RangeError("Buffer size must be a multiple of 32-bits");
    for (let r2 = 0;r2 < e2; r2 += 4)
      fn(this, r2, r2 + 3), fn(this, r2 + 1, r2 + 2);
    return this;
  };
  me.prototype.swap64 = function() {
    let e2 = this.length;
    if (e2 % 8 !== 0)
      throw new RangeError("Buffer size must be a multiple of 64-bits");
    for (let r2 = 0;r2 < e2; r2 += 8)
      fn(this, r2, r2 + 7), fn(this, r2 + 1, r2 + 6), fn(this, r2 + 2, r2 + 5), fn(this, r2 + 3, r2 + 4);
    return this;
  };
  me.prototype.toString = function() {
    let e2 = this.length;
    return e2 === 0 ? "" : arguments.length === 0 ? Kd(this, 0, e2) : kw.apply(this, arguments);
  };
  me.prototype.toLocaleString = me.prototype.toString;
  me.prototype.equals = function(e2) {
    if (!me.isBuffer(e2))
      throw new TypeError("Argument must be a Buffer");
    return this === e2 ? true : me.compare(this, e2) === 0;
  };
  me.prototype.inspect = function() {
    let e2 = "", r2 = Xn.INSPECT_MAX_BYTES;
    return e2 = this.toString("hex", 0, r2).replace(/(.{2})/g, "$1 ").trim(), this.length > r2 && (e2 += " ... "), "<Buffer " + e2 + ">";
  };
  Pd && (me.prototype[Pd] = me.prototype.inspect);
  me.prototype.compare = function(e2, r2, o, f, p) {
    if (Zr(e2, Uint8Array) && (e2 = me.from(e2, e2.offset, e2.byteLength)), !me.isBuffer(e2))
      throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e2);
    if (r2 === undefined && (r2 = 0), o === undefined && (o = e2 ? e2.length : 0), f === undefined && (f = 0), p === undefined && (p = this.length), r2 < 0 || o > e2.length || f < 0 || p > this.length)
      throw new RangeError("out of range index");
    if (f >= p && r2 >= o)
      return 0;
    if (f >= p)
      return -1;
    if (r2 >= o)
      return 1;
    if (r2 >>>= 0, o >>>= 0, f >>>= 0, p >>>= 0, this === e2)
      return 0;
    let m = p - f, y = o - r2, M = Math.min(m, y), x = this.slice(f, p), S = e2.slice(r2, o);
    for (let E = 0;E < M; ++E)
      if (x[E] !== S[E]) {
        m = x[E], y = S[E];
        break;
      }
    return m < y ? -1 : y < m ? 1 : 0;
  };
  function Wd(t3, e2, r2, o, f) {
    if (t3.length === 0)
      return -1;
    if (typeof r2 == "string" ? (o = r2, r2 = 0) : r2 > 2147483647 ? r2 = 2147483647 : r2 < -2147483648 && (r2 = -2147483648), r2 = +r2, C0(r2) && (r2 = f ? 0 : t3.length - 1), r2 < 0 && (r2 = t3.length + r2), r2 >= t3.length) {
      if (f)
        return -1;
      r2 = t3.length - 1;
    } else if (r2 < 0)
      if (f)
        r2 = 0;
      else
        return -1;
    if (typeof e2 == "string" && (e2 = me.from(e2, o)), me.isBuffer(e2))
      return e2.length === 0 ? -1 : Cd(t3, e2, r2, o, f);
    if (typeof e2 == "number")
      return e2 = e2 & 255, typeof Uint8Array.prototype.indexOf == "function" ? f ? Uint8Array.prototype.indexOf.call(t3, e2, r2) : Uint8Array.prototype.lastIndexOf.call(t3, e2, r2) : Cd(t3, [e2], r2, o, f);
    throw new TypeError("val must be string, number or Buffer");
  }
  function Cd(t3, e2, r2, o, f) {
    let p = 1, m = t3.length, y = e2.length;
    if (o !== undefined && (o = String(o).toLowerCase(), o === "ucs2" || o === "ucs-2" || o === "utf16le" || o === "utf-16le")) {
      if (t3.length < 2 || e2.length < 2)
        return -1;
      p = 2, m /= 2, y /= 2, r2 /= 2;
    }
    function M(S, E) {
      return p === 1 ? S[E] : S.readUInt16BE(E * p);
    }
    let x;
    if (f) {
      let S = -1;
      for (x = r2;x < m; x++)
        if (M(t3, x) === M(e2, S === -1 ? 0 : x - S)) {
          if (S === -1 && (S = x), x - S + 1 === y)
            return S * p;
        } else
          S !== -1 && (x -= x - S), S = -1;
    } else
      for (r2 + y > m && (r2 = m - y), x = r2;x >= 0; x--) {
        let S = true;
        for (let E = 0;E < y; E++)
          if (M(t3, x + E) !== M(e2, E)) {
            S = false;
            break;
          }
        if (S)
          return x;
      }
    return -1;
  }
  me.prototype.includes = function(e2, r2, o) {
    return this.indexOf(e2, r2, o) !== -1;
  };
  me.prototype.indexOf = function(e2, r2, o) {
    return Wd(this, e2, r2, o, true);
  };
  me.prototype.lastIndexOf = function(e2, r2, o) {
    return Wd(this, e2, r2, o, false);
  };
  function Lw(t3, e2, r2, o) {
    r2 = Number(r2) || 0;
    let f = t3.length - r2;
    o ? (o = Number(o), o > f && (o = f)) : o = f;
    let p = e2.length;
    o > p / 2 && (o = p / 2);
    let m;
    for (m = 0;m < o; ++m) {
      let y = parseInt(e2.substr(m * 2, 2), 16);
      if (C0(y))
        return m;
      t3[r2 + m] = y;
    }
    return m;
  }
  function Nw(t3, e2, r2, o) {
    return to(L0(e2, t3.length - r2), t3, r2, o);
  }
  function Dw(t3, e2, r2, o) {
    return to(Vw(e2), t3, r2, o);
  }
  function Pw(t3, e2, r2, o) {
    return to(Xd(e2), t3, r2, o);
  }
  function Cw(t3, e2, r2, o) {
    return to($w(e2, t3.length - r2), t3, r2, o);
  }
  me.prototype.write = function(e2, r2, o, f) {
    if (r2 === undefined)
      f = "utf8", o = this.length, r2 = 0;
    else if (o === undefined && typeof r2 == "string")
      f = r2, o = this.length, r2 = 0;
    else if (isFinite(r2))
      r2 = r2 >>> 0, isFinite(o) ? (o = o >>> 0, f === undefined && (f = "utf8")) : (f = o, o = undefined);
    else
      throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
    let p = this.length - r2;
    if ((o === undefined || o > p) && (o = p), e2.length > 0 && (o < 0 || r2 < 0) || r2 > this.length)
      throw new RangeError("Attempt to write outside buffer bounds");
    f || (f = "utf8");
    let m = false;
    for (;; )
      switch (f) {
        case "hex":
          return Lw(this, e2, r2, o);
        case "utf8":
        case "utf-8":
          return Nw(this, e2, r2, o);
        case "ascii":
        case "latin1":
        case "binary":
          return Dw(this, e2, r2, o);
        case "base64":
          return Pw(this, e2, r2, o);
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return Cw(this, e2, r2, o);
        default:
          if (m)
            throw new TypeError("Unknown encoding: " + f);
          f = ("" + f).toLowerCase(), m = true;
      }
  };
  me.prototype.toJSON = function() {
    return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
  };
  function Ow(t3, e2, r2) {
    return e2 === 0 && r2 === t3.length ? I0.fromByteArray(t3) : I0.fromByteArray(t3.slice(e2, r2));
  }
  function Kd(t3, e2, r2) {
    r2 = Math.min(t3.length, r2);
    let o = [], f = e2;
    for (;f < r2; ) {
      let p = t3[f], m = null, y = p > 239 ? 4 : p > 223 ? 3 : p > 191 ? 2 : 1;
      if (f + y <= r2) {
        let M, x, S, E;
        switch (y) {
          case 1:
            p < 128 && (m = p);
            break;
          case 2:
            M = t3[f + 1], (M & 192) === 128 && (E = (p & 31) << 6 | M & 63, E > 127 && (m = E));
            break;
          case 3:
            M = t3[f + 1], x = t3[f + 2], (M & 192) === 128 && (x & 192) === 128 && (E = (p & 15) << 12 | (M & 63) << 6 | x & 63, E > 2047 && (E < 55296 || E > 57343) && (m = E));
            break;
          case 4:
            M = t3[f + 1], x = t3[f + 2], S = t3[f + 3], (M & 192) === 128 && (x & 192) === 128 && (S & 192) === 128 && (E = (p & 15) << 18 | (M & 63) << 12 | (x & 63) << 6 | S & 63, E > 65535 && E < 1114112 && (m = E));
        }
      }
      m === null ? (m = 65533, y = 1) : m > 65535 && (m -= 65536, o.push(m >>> 10 & 1023 | 55296), m = 56320 | m & 1023), o.push(m), f += y;
    }
    return Fw(o);
  }
  var Od = 4096;
  function Fw(t3) {
    let e2 = t3.length;
    if (e2 <= Od)
      return String.fromCharCode.apply(String, t3);
    let r2 = "", o = 0;
    for (;o < e2; )
      r2 += String.fromCharCode.apply(String, t3.slice(o, o += Od));
    return r2;
  }
  function Uw(t3, e2, r2) {
    let o = "";
    r2 = Math.min(t3.length, r2);
    for (let f = e2;f < r2; ++f)
      o += String.fromCharCode(t3[f] & 127);
    return o;
  }
  function zw(t3, e2, r2) {
    let o = "";
    r2 = Math.min(t3.length, r2);
    for (let f = e2;f < r2; ++f)
      o += String.fromCharCode(t3[f]);
    return o;
  }
  function Hw(t3, e2, r2) {
    let o = t3.length;
    (!e2 || e2 < 0) && (e2 = 0), (!r2 || r2 < 0 || r2 > o) && (r2 = o);
    let f = "";
    for (let p = e2;p < r2; ++p)
      f += Gw[t3[p]];
    return f;
  }
  function Ww(t3, e2, r2) {
    let o = t3.slice(e2, r2), f = "";
    for (let p = 0;p < o.length - 1; p += 2)
      f += String.fromCharCode(o[p] + o[p + 1] * 256);
    return f;
  }
  me.prototype.slice = function(e2, r2) {
    let o = this.length;
    e2 = ~~e2, r2 = r2 === undefined ? o : ~~r2, e2 < 0 ? (e2 += o, e2 < 0 && (e2 = 0)) : e2 > o && (e2 = o), r2 < 0 ? (r2 += o, r2 < 0 && (r2 = 0)) : r2 > o && (r2 = o), r2 < e2 && (r2 = e2);
    let f = this.subarray(e2, r2);
    return Object.setPrototypeOf(f, me.prototype), f;
  };
  function Dt(t3, e2, r2) {
    if (t3 % 1 !== 0 || t3 < 0)
      throw new RangeError("offset is not uint");
    if (t3 + e2 > r2)
      throw new RangeError("Trying to access beyond buffer length");
  }
  me.prototype.readUintLE = me.prototype.readUIntLE = function(e2, r2, o) {
    e2 = e2 >>> 0, r2 = r2 >>> 0, o || Dt(e2, r2, this.length);
    let f = this[e2], p = 1, m = 0;
    for (;++m < r2 && (p *= 256); )
      f += this[e2 + m] * p;
    return f;
  };
  me.prototype.readUintBE = me.prototype.readUIntBE = function(e2, r2, o) {
    e2 = e2 >>> 0, r2 = r2 >>> 0, o || Dt(e2, r2, this.length);
    let f = this[e2 + --r2], p = 1;
    for (;r2 > 0 && (p *= 256); )
      f += this[e2 + --r2] * p;
    return f;
  };
  me.prototype.readUint8 = me.prototype.readUInt8 = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 1, this.length), this[e2];
  };
  me.prototype.readUint16LE = me.prototype.readUInt16LE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 2, this.length), this[e2] | this[e2 + 1] << 8;
  };
  me.prototype.readUint16BE = me.prototype.readUInt16BE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 2, this.length), this[e2] << 8 | this[e2 + 1];
  };
  me.prototype.readUint32LE = me.prototype.readUInt32LE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 4, this.length), (this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16) + this[e2 + 3] * 16777216;
  };
  me.prototype.readUint32BE = me.prototype.readUInt32BE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 4, this.length), this[e2] * 16777216 + (this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3]);
  };
  me.prototype.readBigUInt64LE = Ti(function(e2) {
    e2 = e2 >>> 0, Yn(e2, "offset");
    let r2 = this[e2], o = this[e2 + 7];
    (r2 === undefined || o === undefined) && Vf(e2, this.length - 8);
    let f = r2 + this[++e2] * 2 ** 8 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 24, p = this[++e2] + this[++e2] * 2 ** 8 + this[++e2] * 2 ** 16 + o * 2 ** 24;
    return BigInt(f) + (BigInt(p) << BigInt(32));
  });
  me.prototype.readBigUInt64BE = Ti(function(e2) {
    e2 = e2 >>> 0, Yn(e2, "offset");
    let r2 = this[e2], o = this[e2 + 7];
    (r2 === undefined || o === undefined) && Vf(e2, this.length - 8);
    let f = r2 * 2 ** 24 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + this[++e2], p = this[++e2] * 2 ** 24 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + o;
    return (BigInt(f) << BigInt(32)) + BigInt(p);
  });
  me.prototype.readIntLE = function(e2, r2, o) {
    e2 = e2 >>> 0, r2 = r2 >>> 0, o || Dt(e2, r2, this.length);
    let f = this[e2], p = 1, m = 0;
    for (;++m < r2 && (p *= 256); )
      f += this[e2 + m] * p;
    return p *= 128, f >= p && (f -= Math.pow(2, 8 * r2)), f;
  };
  me.prototype.readIntBE = function(e2, r2, o) {
    e2 = e2 >>> 0, r2 = r2 >>> 0, o || Dt(e2, r2, this.length);
    let f = r2, p = 1, m = this[e2 + --f];
    for (;f > 0 && (p *= 256); )
      m += this[e2 + --f] * p;
    return p *= 128, m >= p && (m -= Math.pow(2, 8 * r2)), m;
  };
  me.prototype.readInt8 = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 1, this.length), this[e2] & 128 ? (255 - this[e2] + 1) * -1 : this[e2];
  };
  me.prototype.readInt16LE = function(e2, r2) {
    e2 = e2 >>> 0, r2 || Dt(e2, 2, this.length);
    let o = this[e2] | this[e2 + 1] << 8;
    return o & 32768 ? o | 4294901760 : o;
  };
  me.prototype.readInt16BE = function(e2, r2) {
    e2 = e2 >>> 0, r2 || Dt(e2, 2, this.length);
    let o = this[e2 + 1] | this[e2] << 8;
    return o & 32768 ? o | 4294901760 : o;
  };
  me.prototype.readInt32LE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 4, this.length), this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16 | this[e2 + 3] << 24;
  };
  me.prototype.readInt32BE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 4, this.length), this[e2] << 24 | this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3];
  };
  me.prototype.readBigInt64LE = Ti(function(e2) {
    e2 = e2 >>> 0, Yn(e2, "offset");
    let r2 = this[e2], o = this[e2 + 7];
    (r2 === undefined || o === undefined) && Vf(e2, this.length - 8);
    let f = this[e2 + 4] + this[e2 + 5] * 2 ** 8 + this[e2 + 6] * 2 ** 16 + (o << 24);
    return (BigInt(f) << BigInt(32)) + BigInt(r2 + this[++e2] * 2 ** 8 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 24);
  });
  me.prototype.readBigInt64BE = Ti(function(e2) {
    e2 = e2 >>> 0, Yn(e2, "offset");
    let r2 = this[e2], o = this[e2 + 7];
    (r2 === undefined || o === undefined) && Vf(e2, this.length - 8);
    let f = (r2 << 24) + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + this[++e2];
    return (BigInt(f) << BigInt(32)) + BigInt(this[++e2] * 2 ** 24 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + o);
  });
  me.prototype.readFloatLE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 4, this.length), Gn.read(this, e2, true, 23, 4);
  };
  me.prototype.readFloatBE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 4, this.length), Gn.read(this, e2, false, 23, 4);
  };
  me.prototype.readDoubleLE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 8, this.length), Gn.read(this, e2, true, 52, 8);
  };
  me.prototype.readDoubleBE = function(e2, r2) {
    return e2 = e2 >>> 0, r2 || Dt(e2, 8, this.length), Gn.read(this, e2, false, 52, 8);
  };
  function er(t3, e2, r2, o, f, p) {
    if (!me.isBuffer(t3))
      throw new TypeError('"buffer" argument must be a Buffer instance');
    if (e2 > f || e2 < p)
      throw new RangeError('"value" argument is out of bounds');
    if (r2 + o > t3.length)
      throw new RangeError("Index out of range");
  }
  me.prototype.writeUintLE = me.prototype.writeUIntLE = function(e2, r2, o, f) {
    if (e2 = +e2, r2 = r2 >>> 0, o = o >>> 0, !f) {
      let y = Math.pow(2, 8 * o) - 1;
      er(this, e2, r2, o, y, 0);
    }
    let p = 1, m = 0;
    for (this[r2] = e2 & 255;++m < o && (p *= 256); )
      this[r2 + m] = e2 / p & 255;
    return r2 + o;
  };
  me.prototype.writeUintBE = me.prototype.writeUIntBE = function(e2, r2, o, f) {
    if (e2 = +e2, r2 = r2 >>> 0, o = o >>> 0, !f) {
      let y = Math.pow(2, 8 * o) - 1;
      er(this, e2, r2, o, y, 0);
    }
    let p = o - 1, m = 1;
    for (this[r2 + p] = e2 & 255;--p >= 0 && (m *= 256); )
      this[r2 + p] = e2 / m & 255;
    return r2 + o;
  };
  me.prototype.writeUint8 = me.prototype.writeUInt8 = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 1, 255, 0), this[r2] = e2 & 255, r2 + 1;
  };
  me.prototype.writeUint16LE = me.prototype.writeUInt16LE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 2, 65535, 0), this[r2] = e2 & 255, this[r2 + 1] = e2 >>> 8, r2 + 2;
  };
  me.prototype.writeUint16BE = me.prototype.writeUInt16BE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 2, 65535, 0), this[r2] = e2 >>> 8, this[r2 + 1] = e2 & 255, r2 + 2;
  };
  me.prototype.writeUint32LE = me.prototype.writeUInt32LE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 4, 4294967295, 0), this[r2 + 3] = e2 >>> 24, this[r2 + 2] = e2 >>> 16, this[r2 + 1] = e2 >>> 8, this[r2] = e2 & 255, r2 + 4;
  };
  me.prototype.writeUint32BE = me.prototype.writeUInt32BE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 4, 4294967295, 0), this[r2] = e2 >>> 24, this[r2 + 1] = e2 >>> 16, this[r2 + 2] = e2 >>> 8, this[r2 + 3] = e2 & 255, r2 + 4;
  };
  function jd(t3, e2, r2, o, f) {
    Yd(e2, o, f, t3, r2, 7);
    let p = Number(e2 & BigInt(4294967295));
    t3[r2++] = p, p = p >> 8, t3[r2++] = p, p = p >> 8, t3[r2++] = p, p = p >> 8, t3[r2++] = p;
    let m = Number(e2 >> BigInt(32) & BigInt(4294967295));
    return t3[r2++] = m, m = m >> 8, t3[r2++] = m, m = m >> 8, t3[r2++] = m, m = m >> 8, t3[r2++] = m, r2;
  }
  function Zd(t3, e2, r2, o, f) {
    Yd(e2, o, f, t3, r2, 7);
    let p = Number(e2 & BigInt(4294967295));
    t3[r2 + 7] = p, p = p >> 8, t3[r2 + 6] = p, p = p >> 8, t3[r2 + 5] = p, p = p >> 8, t3[r2 + 4] = p;
    let m = Number(e2 >> BigInt(32) & BigInt(4294967295));
    return t3[r2 + 3] = m, m = m >> 8, t3[r2 + 2] = m, m = m >> 8, t3[r2 + 1] = m, m = m >> 8, t3[r2] = m, r2 + 8;
  }
  me.prototype.writeBigUInt64LE = Ti(function(e2, r2 = 0) {
    return jd(this, e2, r2, BigInt(0), BigInt("0xffffffffffffffff"));
  });
  me.prototype.writeBigUInt64BE = Ti(function(e2, r2 = 0) {
    return Zd(this, e2, r2, BigInt(0), BigInt("0xffffffffffffffff"));
  });
  me.prototype.writeIntLE = function(e2, r2, o, f) {
    if (e2 = +e2, r2 = r2 >>> 0, !f) {
      let M = Math.pow(2, 8 * o - 1);
      er(this, e2, r2, o, M - 1, -M);
    }
    let p = 0, m = 1, y = 0;
    for (this[r2] = e2 & 255;++p < o && (m *= 256); )
      e2 < 0 && y === 0 && this[r2 + p - 1] !== 0 && (y = 1), this[r2 + p] = (e2 / m >> 0) - y & 255;
    return r2 + o;
  };
  me.prototype.writeIntBE = function(e2, r2, o, f) {
    if (e2 = +e2, r2 = r2 >>> 0, !f) {
      let M = Math.pow(2, 8 * o - 1);
      er(this, e2, r2, o, M - 1, -M);
    }
    let p = o - 1, m = 1, y = 0;
    for (this[r2 + p] = e2 & 255;--p >= 0 && (m *= 256); )
      e2 < 0 && y === 0 && this[r2 + p + 1] !== 0 && (y = 1), this[r2 + p] = (e2 / m >> 0) - y & 255;
    return r2 + o;
  };
  me.prototype.writeInt8 = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 1, 127, -128), e2 < 0 && (e2 = 255 + e2 + 1), this[r2] = e2 & 255, r2 + 1;
  };
  me.prototype.writeInt16LE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 2, 32767, -32768), this[r2] = e2 & 255, this[r2 + 1] = e2 >>> 8, r2 + 2;
  };
  me.prototype.writeInt16BE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 2, 32767, -32768), this[r2] = e2 >>> 8, this[r2 + 1] = e2 & 255, r2 + 2;
  };
  me.prototype.writeInt32LE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 4, 2147483647, -2147483648), this[r2] = e2 & 255, this[r2 + 1] = e2 >>> 8, this[r2 + 2] = e2 >>> 16, this[r2 + 3] = e2 >>> 24, r2 + 4;
  };
  me.prototype.writeInt32BE = function(e2, r2, o) {
    return e2 = +e2, r2 = r2 >>> 0, o || er(this, e2, r2, 4, 2147483647, -2147483648), e2 < 0 && (e2 = 4294967295 + e2 + 1), this[r2] = e2 >>> 24, this[r2 + 1] = e2 >>> 16, this[r2 + 2] = e2 >>> 8, this[r2 + 3] = e2 & 255, r2 + 4;
  };
  me.prototype.writeBigInt64LE = Ti(function(e2, r2 = 0) {
    return jd(this, e2, r2, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  me.prototype.writeBigInt64BE = Ti(function(e2, r2 = 0) {
    return Zd(this, e2, r2, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
  });
  function Vd(t3, e2, r2, o, f, p) {
    if (r2 + o > t3.length)
      throw new RangeError("Index out of range");
    if (r2 < 0)
      throw new RangeError("Index out of range");
  }
  function $d(t3, e2, r2, o, f) {
    return e2 = +e2, r2 = r2 >>> 0, f || Vd(t3, e2, r2, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), Gn.write(t3, e2, r2, o, 23, 4), r2 + 4;
  }
  me.prototype.writeFloatLE = function(e2, r2, o) {
    return $d(this, e2, r2, true, o);
  };
  me.prototype.writeFloatBE = function(e2, r2, o) {
    return $d(this, e2, r2, false, o);
  };
  function Gd(t3, e2, r2, o, f) {
    return e2 = +e2, r2 = r2 >>> 0, f || Vd(t3, e2, rn.write(t3, e2, r2, o, 52, 8), r2 + 8;
  }
  me.prototype.writeDoubleLE = function(e2, r2, o) {
    return Gd(this, e2, r2, true, o);
  };
  me.prototype.writeDoubleBE = function(e2, r2, o) {
    return Gd(this, e2, r2, false, o);
  };
  me.prototype.copy = function(e2, r2, o, f) {
    if (!me.isBuffer(e2))
      throw new TypeError("argument should be a Buffer");
    if (o || (o = 0), !f && f !== 0 && (f = this.length), r2 >= e2.length && (r2 = e2.length), r2 || (r2 = 0), f > 0 && f < o && (f = o), f === o || e2.length === 0 || this.length === 0)
      return 0;
    if (r2 < 0)
      throw new RangeError("targetStart out of bounds");
    if (o < 0 || o >= this.length)
      throw new RangeError("Index out of range");
    if (f < 0)
      throw new RangeError("sourceEnd out of bounds");
    f > this.length && (f = this.length), e2.length - r2 < f - o && (f = e2.length - r2 + o);
    let p = f - o;
    return this === e2 && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r2, o, f) : Uint8Array.prototype.set.call(e2, this.subarray(o, f), r2), p;
  };
  me.prototype.fill = function(e2, r2, o, f) {
    if (typeof e2 == "string") {
      if (typeof r2 == "string" ? (f = r2, r2 = 0, o = this.length) : typeof o == "string" && (f = o, o = this.length), f !== undefined && typeof f != "string")
        throw new TypeError("encoding must be a string");
      if (typeof f == "string" && !me.isEncoding(f))
        throw new TypeError("Unknown encoding: " + f);
      if (e2.length === 1) {
        let m = e2.charCodeAt(0);
        (f === "utf8" && m < 128 || f === "latin1") && (e2 = m);
      }
    } else
      typeof e2 == "number" ? e2 = e2 & 255 : typeof e2 == "boolean" && (e2 = Number(e2));
    if (r2 < 0 || this.length < r2 || this.length < o)
      throw new RangeError("Out of range index");
    if (o <= r2)
      return this;
    r2 = r2 >>> 0, o = o === undefined ? this.length : o >>> 0, e2 || (e2 = 0);
    let p;
    if (typeof e2 == "number")
      for (p = r2;p < o; ++p)
        this[p] = e2;
    else {
      let m = me.isBuffer(e2) ? e2 : me.from(e2, f), y = m.length;
      if (y === 0)
        throw new TypeError('The value "' + e2 + '" is invalid for argument "value"');
      for (p = 0;p < o - r2; ++p)
        this[p + r2] = m[p % y];
    }
    return this;
  };
  var $n = {};
  function P0(t3, e2, r2) {
    $n[t3] = class extends r2 {
      constructor() {
        super(), Object.defineProperty(this, "message", { value: e2.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${t3}]`, this.stack, delete this.name;
      }
      get code() {
        return t3;
      }
      set code(f) {
        Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: f, writable: true });
      }
      toString() {
        return `${this.name} [${t3}]: ${this.message}`;
      }
    };
  }
  P0("ERR_BUFFER_OUT_OF_BOUNDS", function(t3) {
    return t3 ? `${t3} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
  }, RangeError);
  P0("ERR_INVALID_ARG_TYPE", function(t3, e2) {
    return `The "${t3}" argument must be of type number. Received type ${typeof e2}`;
  }, TypeError);
  P0("ERR_OUT_OF_RANGE", function(t3, e2, r2) {
    let o = `The value of "${t3}" is out of range.`, f = r2;
    return Number.isInteger(r2) && Math.abs(r2) > 2 ** 32 ? f = Fd(String(r2)) : typeof r2 == "bigint" && (f = String(r2), (r2 > BigInt(2) ** BigInt(32) || r2 < -(BigInt(2) ** BigInt(32))) && (f = Fd(f)), f += "n"), o += ` It must be ${e2}. Received ${f}`, o;
  }, RangeError);
  function Fd(t3) {
    let e2 = "", r2 = t3.length, o = t3[0] === "-" ? 1 : 0;
    for (;r2 >= o + 4; r2 -= 3)
      e2 = `_${t3.slice(r2 - 3, r2)}${e2}`;
    return `${t3.slice(0, r2)}${e2}`;
  }
  function Kw(t3, e2, r2) {
    Yn(e2, "offset"), (t3[e2] === undefined || t3[e2 + r2] === undefined) && Vf(e2, t3.length - (r2 + 1));
  }
  function Yd(t3, e2, r2, o, f, p) {
    if (t3 > r2 || t3 < e2) {
      let m = typeof e2 == "bigint" ? "n" : "", y;
      throw p > 3 ? e2 === 0 || e2 === BigInt(0) ? y = `>= 0${m} and < 2${m} ** ${(p + 1) * 8}${m}` : y = `>= -(2${m} ** ${(p + 1) * 8 - 1}${m}) and < 2 ** ${(p + 1) * 8 - 1}${m}` : y = `>= ${e2}${m} and <= ${r2}${m}`, new $n.ERR_OUT_OF_RANGE("value", y, t3);
    }
    Kw(o, f, p);
  }
  function Yn(t3, e2) {
    if (typeof t3 != "number")
      throw new $n.ERR_INVALID_ARG_TYPE(e2, "number", t3);
  }
  function Vf(t3, e2, r2) {
    throw Math.floor(t3) !== t3 ? (Yn(t3, r2), new $n.ERR_OUT_OF_RANGE(r2 || "offset", "an integer", t3)) : e2 < 0 ? new $n.ERR_BUFFER_OUT_OF_BOUNDS : new $n.ERR_OUT_OF_RANGE(r2 || "offset", `>= ${r2 ? 1 : 0} and <= ${e2}`, t3);
  }
  var jw = /[^+/0-9A-Za-z-_]/g;
  function Zw(t3) {
    if (t3 = t3.split("=")[0], t3 = t3.trim().replace(jw, ""), t3.length < 2)
      return "";
    for (;t3.length % 4 !== 0; )
      t3 = t3 + "=";
    return t3;
  }
  function L0(t3, e2) {
    e2 = e2 || 1 / 0;
    let r2, o = t3.length, f = null, p = [];
    for (let m = 0;m < o; ++m) {
      if (r2 = t3.charCodeAt(m), r2 > 55295 && r2 < 57344) {
        if (!f) {
          if (r2 > 56319) {
            (e2 -= 3) > -1 && p.push(239, 191, 189);
            continue;
          } else if (m + 1 === o) {
            (e2 -= 3) > -1 && p.push(239, 191, 189);
            continue;
          }
          f = r2;
          continue;
        }
        if (r2 < 56320) {
          (e2 -= 3) > -1 && p.push(239, 191, 189), f = r2;
          continue;
        }
        r2 = (f - 55296 << 10 | r2 - 56320) + 65536;
      } else
        f && (e2 -= 3) > -1 && p.push(239, 191, 189);
      if (f = null, r2 < 128) {
        if ((e2 -= 1) < 0)
          break;
        p.push(r2);
      } else if (r2 < 2048) {
        if ((e2 -= 2) < 0)
          break;
        p.push(r2 >> 6 | 192, r2 & 63 | 128);
      } else if (r2 < 65536) {
        if ((e2 -= 3) < 0)
          break;
        p.push(r2 >> 12 | 224, r2 >> 6 & 63 | 128, r2 & 63 | 128);
      } else if (r2 < 1114112) {
        if ((e2 -= 4) < 0)
          break;
        p.push(r2 >> 18 | 240, r2 >> 12 & 63 | 128, r2 >> 6 & 63 | 128, r2 & 63 | 128);
      } else
        throw new Error("Invalid code point");
    }
    return p;
  }
  function Vw(t3) {
    let e2 = [];
    for (let r2 = 0;r2 < t3.length; ++r2)
      e2.push(t3.charCodeAt(r2) & 255);
    return e2;
  }
  function $w(t3, e2) {
    let r2, o, f, p = [];
    for (let m = 0;m < t3.length && !((e2 -= 2) < 0); ++m)
      r2 = t3.charCodeAt(m), o = r2 >> 8, f = r2 % 256, p.push(f), p.push(o);
    return p;
  }
  function Xd(t3) {
    return I0.toByteArray(Zw(t3));
  }
  function to(t3, e2, r2, o) {
    let f;
    for (f = 0;f < o && !(f + r2 >= e2.length || f >= t3.length); ++f)
      e2[f + r2] = t3[f];
    return f;
  }
  function Zr(t3, e2) {
    return t3 instanceof e2 || t3 != null && t3.constructor != null && t3.constructor.name != null && t3.constructor.name === e2.name;
  }
  function C0(t3) {
    return t3 !== t3;
  }
  var Gw = function() {
    let t3 = "0123456789abcdef", e2 = new Array(256);
    for (let r2 = 0;r2 < 16; ++r2) {
      let o = r2 * 16;
      for (let f = 0;f < 16; ++f)
        e2[o + f] = t3[r2] + t3[f];
    }
    return e2;
  }();
  function Ti(t3) {
    return typeof BigInt > "u" ? Yw : t3;
  }
  function Yw() {
    throw new Error("BigInt not supported");
  }
});
var Te = T((O0, Qd) => {
  var ro = Ut(), Vr = ro.Buffer;
  function Jd(t3, e2) {
    for (var r2 in t3)
      e2[r2] = t3[r2];
  }
  Vr.from && Vr.alloc && Vr.allocUnsafe && Vr.allocUnsafeSlow ? Qd.exports = ro : (Jd(ro, O0), O0.Buffer = an);
  function an(t3, e2, r2) {
    return Vr(t3, e2, r2);
  }
  an.prototype = Object.create(Vr.prototype);
  Jd(Vr, an);
  an.from = function(t3, e2, r2) {
    if (typeof t3 == "number")
      throw new TypeError("Argument must not be a number");
    return Vr(t3, e2, r2);
  };
  an.alloc = function(t3, e2, r2) {
    if (typeof t3 != "number")
      throw new TypeError("Argument must be a number");
    var o = Vr(t3);
    return e2 !== undefined ? typeof r2 == "string" ? o.fill(e2, r2) : o.fill(e2) : o.fill(0), o;
  };
  an.allocUnsafe = function(t3) {
    if (typeof t3 != "number")
      throw new TypeError("Argument must be a number");
    return Vr(t3);
  };
  an.allocUnsafeSlow = function(t3) {
    if (typeof t3 != "number")
      throw new TypeError("Argument must be a number");
    return ro.SlowBuffer(t3);
  };
});
var on = T((Gq, U0) => {
  var F0 = 65536, Xw = 4294967295;
  function Jw() {
    throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
  }
  var Qw = Te().Buffer, io = global.crypto || global.msCrypto;
  io && io.getRandomValues ? U0.exports = e6 : U0.exports = Jw;
  function e6(t3, e2) {
    if (t3 > Xw)
      throw new RangeError("requested too many random bytes");
    var r2 = Qw.allocUnsafe(t3);
    if (t3 > 0)
      if (t3 > F0)
        for (var o = 0;o < t3; o += F0)
          io.getRandomValues(r2.slice(o, o + F0));
      else
        io.getRandomValues(r2);
    return typeof e2 == "function" ? process.nextTick(function() {
      e2(null, r2);
    }) : r2;
  }
});
var Ie = T((Yq, z0) => {
  typeof Object.create == "function" ? z0.exports = function(e2, r2) {
    r2 && (e2.super_ = r2, e2.prototype = Object.create(r2.prototype, { constructor: { value: e2, enumerable: false, writable: true, configurable: true } }));
  } : z0.exports = function(e2, r2) {
    if (r2) {
      e2.super_ = r2;
      var o = function() {
      };
      o.prototype = r2.prototype, e2.prototype = new o, e2.prototype.constructor = e2;
    }
  };
});
var ki = T((Xq, H0) => {
  var Jn = typeof Reflect == "object" ? Reflect : null, ec = Jn && typeof Jn.apply == "function" ? Jn.apply : function(e2, r2, o) {
    return Function.prototype.apply.call(e2, r2, o);
  }, no;
  Jn && typeof Jn.ownKeys == "function" ? no = Jn.ownKeys : Object.getOwnPropertySymbols ? no = function(e2) {
    return Object.getOwnPropertyNames(e2).concat(Object.getOwnPropertySymbols(e2));
  } : no = function(e2) {
    return Object.getOwnPropertyNames(e2);
  };
  function t6(t3) {
    console && console.warn && console.warn(t3);
  }
  var rc = Number.isNaN || function(e2) {
    return e2 !== e2;
  };
  function Fe() {
    Fe.init.call(this);
  }
  H0.exports = Fe;
  H0.exports.once = f6;
  Fe.EventEmitter = Fe;
  Fe.prototype._events = undefined;
  Fe.prototype._eventsCount = 0;
  Fe.prototype._maxListeners = undefined;
  var tc = 10;
  function fo(t3) {
    if (typeof t3 != "function")
      throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t3);
  }
  Object.defineProperty(Fe, "defaultMaxListeners", { enumerable: true, get: function() {
    return tc;
  }, set: function(t3) {
    if (typeof t3 != "number" || t3 < 0 || rc(t3))
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t3 + ".");
    tc = t3;
  } });
  Fe.init = function() {
    (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
  };
  Fe.prototype.setMaxListeners = function(e2) {
    if (typeof e2 != "number" || e2 < 0 || rc(e2))
      throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e2 + ".");
    return this._maxListeners = e2, this;
  };
  function ic(t3) {
    return t3._maxListeners === undefined ? Fe.defaultMaxListeners : t3._maxListeners;
  }
  Fe.prototype.getMaxListeners = function() {
    return ic(this);
  };
  Fe.prototype.emit = function(e2) {
    for (var r2 = [], o = 1;o < arguments.length; o++)
      r2.push(arguments[o]);
    var f = e2 === "error", p = this._events;
    if (p !== undefined)
      f = f && p.error === undefined;
    else if (!f)
      return false;
    if (f) {
      var m;
      if (r2.length > 0 && (m = r2[0]), m instanceof Error)
        throw m;
      var y = new Error("Unhandled error." + (m ? " (" + m.message + ")" : ""));
      throw y.context = m, y;
    }
    var M = p[e2];
    if (M === undefined)
      return false;
    if (typeof M == "function")
      ec(M, this, r2);
    else
      for (var x = M.length, S = sc(M, x), o = 0;o < x; ++o)
        ec(S[o], this, r2);
    return true;
  };
  function nc(t3, e2, r2, o) {
    var f, p, m;
    if (fo(r2), p = t3._events, p === undefined ? (p = t3._events = Object.create(null), t3._eventsCount = 0) : (p.newListener !== undefined && (t3.emit("newListener", e2, r2.listener ? r2.listener : r2), p = t3._events), m = p[e2]), m === undefined)
      m = p[e2] = r2, ++t3._eventsCount;
    else if (typeof m == "function" ? m = p[e2] = o ? [r2, m] : [m, r2] : o ? m.unshift(r2) : m.push(r2), f = ic(t3), f > 0 && m.length > f && !m.warned) {
      m.warned = true;
      var y = new Error("Possible EventEmitter memory leak detected. " + m.length + " " + String(e2) + " listeners added. Use emitter.setMaxListeners() to increase limit");
      y.name = "MaxListenersExceededWarning", y.emitter = t3, y.type = e2, y.count = m.length, t6(y);
    }
    return t3;
  }
  Fe.prototype.addListener = function(e2, r2) {
    return nc(this, e2, r2, false);
  };
  Fe.prototype.on = Fe.prototype.addListener;
  Fe.prototype.prependListener = function(e2, r2) {
    return nc(this, e2, r2, true);
  };
  function r6() {
    if (!this.fired)
      return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
  }
  function fc(t3, e2, r2) {
    var o = { fired: false, wrapFn: undefined, target: t3, type: e2, listener: r2 }, f = r6.bind(o);
    return f.listener = r2, o.wrapFn = f, f;
  }
  Fe.prototype.once = function(e2, r2) {
    return fo(r2), this.on(e2, fc(this, e2, r2)), this;
  };
  Fe.prototype.prependOnceListener = function(e2, r2) {
    return fo(r2), this.prependListener(e2, fc(this, e2, r2)), this;
  };
  Fe.prototype.removeListener = function(e2, r2) {
    var o, f, p, m, y;
    if (fo(r2), f = this._events, f === undefined)
      return this;
    if (o = f[e2], o === undefined)
      return this;
    if (o === r2 || o.listener === r2)
      --this._eventsCount === 0 ? this._events = Object.create(null) : (delete f[e2], f.removeListener && this.emit("removeListener", e2, o.listener || r2));
    else if (typeof o != "function") {
      for (p = -1, m = o.length - 1;m >= 0; m--)
        if (o[m] === r2 || o[m].listener === r2) {
          y = o[m].listener, p = m;
          break;
        }
      if (p < 0)
        return this;
      p === 0 ? o.shift() : i6(o, p), o.length === 1 && (f[e2] = o[0]), f.removeListener !== undefined && this.emit("removeListener", e2, y || r2);
    }
    return this;
  };
  Fe.prototype.off = Fe.prototype.removeListener;
  Fe.prototype.removeAllListeners = function(e2) {
    var r2, o, f;
    if (o = this._events, o === undefined)
      return this;
    if (o.removeListener === undefined)
      return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : o[e2] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete o[e2]), this;
    if (arguments.length === 0) {
      var p = Object.keys(o), m;
      for (f = 0;f < p.length; ++f)
        m = p[f], m !== "removeListener" && this.removeAllListeners(m);
      return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
    }
    if (r2 = o[e2], typeof r2 == "function")
      this.removeListener(e2, r2);
    else if (r2 !== undefined)
      for (f = r2.length - 1;f >= 0; f--)
        this.removeListener(e2, r2[f]);
    return this;
  };
  function ac(t3, e2, r2) {
    var o = t3._events;
    if (o === undefined)
      return [];
    var f = o[e2];
    return f === undefined ? [] : typeof f == "function" ? r2 ? [f.listener || f] : [f] : r2 ? n6(f) : sc(f, f.length);
  }
  Fe.prototype.listeners = function(e2) {
    return ac(this, e2, true);
  };
  Fe.prototype.rawListeners = function(e2) {
    return ac(this, e2, false);
  };
  Fe.listenerCount = function(t3, e2) {
    return typeof t3.listenerCount == "function" ? t3.listenerCount(e2) : oc.call(t3, e2);
  };
  Fe.prototype.listenerCount = oc;
  function oc(t3) {
    var e2 = this._events;
    if (e2 !== undefined) {
      var r2 = e2[t3];
      if (typeof r2 == "function")
        return 1;
      if (r2 !== undefined)
        return r2.length;
    }
    return 0;
  }
  Fe.prototype.eventNames = function() {
    return this._eventsCount > 0 ? no(this._events) : [];
  };
  function sc(t3, e2) {
    for (var r2 = new Array(e2), o = 0;o < e2; ++o)
      r2[o] = t3[o];
    return r2;
  }
  function i6(t3, e2) {
    for (;e2 + 1 < t3.length; e2++)
      t3[e2] = t3[e2 + 1];
    t3.pop();
  }
  function n6(t3) {
    for (var e2 = new Array(t3.length), r2 = 0;r2 < e2.length; ++r2)
      e2[r2] = t3[r2].listener || t3[r2];
    return e2;
  }
  function f6(t3, e2) {
    return new Promise(function(r2, o) {
      function f(m) {
        t3.removeListener(e2, p), o(m);
      }
      function p() {
        typeof t3.removeListener == "function" && t3.removeListener("error", f), r2([].slice.call(arguments));
      }
      hc(t3, e2, p, { once: true }), e2 !== "error" && a6(t3, f, { once: true });
    });
  }
  function a6(t3, e2, r2) {
    typeof t3.on == "function" && hc(t3, "error", e2, r2);
  }
  function hc(t3, e2, r2, o) {
    if (typeof t3.on == "function")
      o.once ? t3.once(e2, r2) : t3.on(e2, r2);
    else if (typeof t3.addEventListener == "function")
      t3.addEventListener(e2, function f(p) {
        o.once && t3.removeEventListener(e2, f), r2(p);
      });
    else
      throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t3);
  }
});
var W0 = T((Jq, uc) => {
  uc.exports = ki().EventEmitter;
});
var $f = T(() => {
});
var pc = T((tI, cc) => {
  function lc(t3, e2) {
    var r2 = Object.keys(t3);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(t3);
      e2 && (o = o.filter(function(f) {
        return Object.getOwnPropertyDescriptor(t3, f).enumerable;
      })), r2.push.apply(r2, o);
    }
    return r2;
  }
  function o6(t3) {
    for (var e2 = 1;e2 < arguments.length; e2++) {
      var r2 = arguments[e2] != null ? arguments[e2] : {};
      e2 % 2 ? lc(Object(r2), true).forEach(function(o) {
        s6(t3, o, r2[o]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r2)) : lc(Object(r2)).forEach(function(o) {
        Object.defineProperty(t3, o, Object.getOwnPropertyDescriptor(r2, o));
      });
    }
    return t3;
  }
  function s6(t3, e2, r2) {
    return e2 in t3 ? Object.defineProperty(t3, e2, { value: r2, enumerable: true, configurable: true, writable: true }) : t3[e2] = r2, t3;
  }
  function h6(t3, e2) {
    if (!(t3 instanceof e2))
      throw new TypeError("Cannot call a class as a function");
  }
  function dc(t3, e2) {
    for (var r2 = 0;r2 < e2.length; r2++) {
      var o = e2[r2];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(t3, o.key, o);
    }
  }
  function u6(t3, e2, r2) {
    return e2 && dc(t3.prototype, e2), r2 && dc(t3, r2), t3;
  }
  var l6 = Ut(), ao = l6.Buffer, d6 = $f(), K0 = d6.inspect, c6 = K0 && K0.custom || "inspect";
  function p6(t3, e2, r2) {
    ao.prototype.copy.call(t3, e2, r2);
  }
  cc.exports = function() {
    function t3() {
      h6(this, t3), this.head = null, this.tail = null, this.length = 0;
    }
    return u6(t3, [{ key: "push", value: function(r2) {
      var o = { data: r2, next: null };
      this.length > 0 ? this.tail.next = o : this.head = o, this.tail = o, ++this.length;
    } }, { key: "unshift", value: function(r2) {
      var o = { data: r2, next: this.head };
      this.length === 0 && (this.tail = o), this.head = o, ++this.length;
    } }, { key: "shift", value: function() {
      if (this.length !== 0) {
        var r2 = this.head.data;
        return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r2;
      }
    } }, { key: "clear", value: function() {
      this.head = this.tail = null, this.length = 0;
    } }, { key: "join", value: function(r2) {
      if (this.length === 0)
        return "";
      for (var o = this.head, f = "" + o.data;o = o.next; )
        f += r2 + o.data;
      return f;
    } }, { key: "concat", value: function(r2) {
      if (this.length === 0)
        return ao.alloc(0);
      for (var o = ao.allocUnsafe(r2 >>> 0), f = this.head, p = 0;f; )
        p6(f.data, o, p), p += f.data.length, f = f.next;
      return o;
    } }, { key: "consume", value: function(r2, o) {
      var f;
      return r2 < this.head.data.length ? (f = this.head.data.slice(0, r2), this.head.data = this.head.data.slice(r2)) : r2 === this.head.data.length ? f = this.shift() : f = o ? this._getString(r2) : this._getBuffer(r2), f;
    } }, { key: "first", value: function() {
      return this.head.data;
    } }, { key: "_getString", value: function(r2) {
      var o = this.head, f = 1, p = o.data;
      for (r2 -= p.length;o = o.next; ) {
        var m = o.data, y = r2 > m.length ? m.length : r2;
        if (y === m.length ? p += m : p += m.slice(0, r2), r2 -= y, r2 === 0) {
          y === m.length ? (++f, o.next ? this.head = o.next : this.head = this.tail = null) : (this.head = o, o.data = m.slice(y));
          break;
        }
        ++f;
      }
      return this.length -= f, p;
    } }, { key: "_getBuffer", value: function(r2) {
      var o = ao.allocUnsafe(r2), f = this.head, p = 1;
      for (f.data.copy(o), r2 -= f.data.length;f = f.next; ) {
        var m = f.data, y = r2 > m.length ? m.length : r2;
        if (m.copy(o, o.length - r2, 0, y), r2 -= y, r2 === 0) {
          y === m.length ? (++p, f.next ? this.head = f.next : this.head = this.tail = null) : (this.head = f, f.data = m.slice(y));
          break;
        }
        ++p;
      }
      return this.length -= p, o;
    } }, { key: c6, value: function(r2, o) {
      return K0(this, o6({}, o, { depth: 0, customInspect: false }));
    } }]), t3;
  }();
});
var Z0 = T((rI, bc) => {
  function v6(t3, e2) {
    var r2 = this, o = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
    return o || f ? (e2 ? e2(t3) : t3 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(j0, this, t3)) : process.nextTick(j0, this, t3)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t3 || null, function(p) {
      !e2 && p ? r2._writableState ? r2._writableState.errorEmitted ? process.nextTick(oo, r2) : (r2._writableState.errorEmitted = true, process.nextTick(vc, r2, p)) : process.nextTick(vc, r2, p) : e2 ? (process.nextTick(oo, r2), e2(p)) : process.nextTick(oo, r2);
    }), this);
  }
  function vc(t3, e2) {
    j0(t3, e2), oo(t3);
  }
  function oo(t3) {
    t3._writableState && !t3._writableState.emitClose || t3._readableState && !t3._readableState.emitClose || t3.emit("close");
  }
  function b6() {
    this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
  }
  function j0(t3, e2) {
    t3.emit("error", e2);
  }
  function m6(t3, e2) {
    var { _readableState: r2, _writableState: o } = t3;
    r2 && r2.autoDestroy || o && o.autoDestroy ? t3.destroy(e2) : t3.emit("error", e2);
  }
  bc.exports = { destroy: v6, undestroy: b6, errorOrDestroy: m6 };
});
var sn = T((iI, yc) => {
  function g6(t3, e2) {
    t3.prototype = Object.create(e2.prototype), t3.prototype.constructor = t3, t3.__proto__ = e2;
  }
  var gc = {};
  function dr(t3, e2, r2) {
    r2 || (r2 = Error);
    function o(p, m, y) {
      return typeof e2 == "string" ? e2 : e2(p, m, y);
    }
    var f = function(p) {
      g6(m, p);
      function m(y, M, x) {
        return p.call(this, o(y, M, x)) || this;
      }
      return m;
    }(r2);
    f.prototype.name = r2.name, f.prototype.code = t3, gc[t3] = f;
  }
  function mc(t3, e2) {
    if (Array.isArray(t3)) {
      var r2 = t3.length;
      return t3 = t3.map(function(o) {
        return String(o);
      }), r2 > 2 ? "one of ".concat(e2, " ").concat(t3.slice(0, r2 - 1).join(", "), ", or ") + t3[r2 - 1] : r2 === 2 ? "one of ".concat(e2, " ").concat(t3[0], " or ").concat(t3[1]) : "of ".concat(e2, " ").concat(t3[0]);
    } else
      return "of ".concat(e2, " ").concat(String(t3));
  }
  function y6(t3, e2, r2) {
    return t3.substr(!r2 || r2 < 0 ? 0 : +r2, e2.length) === e2;
  }
  function w6(t3, e2, r2) {
    return (r2 === undefined || r2 > t3.length) && (r2 = t3.length), t3.substring(r2 - e2.length, r2) === e2;
  }
  function M6(t3, e2, r2) {
    return typeof r2 != "number" && (r2 = 0), r2 + e2.length > t3.length ? false : t3.indexOf(e2, r2) !== -1;
  }
  dr("ERR_INVALID_OPT_VALUE", function(t3, e2) {
    return 'The value "' + e2 + '" is invalid for option "' + t3 + '"';
  }, TypeError);
  dr("ERR_INVALID_ARG_TYPE", function(t3, e2, r2) {
    var o;
    typeof e2 == "string" && y6(e2, "not ") ? (o = "must not be", e2 = e2.replace(/^not /, "")) : o = "must be";
    var f;
    if (w6(t3, " argument"))
      f = "The ".concat(t3, " ").concat(o, " ").concat(mc(e2, "type"));
    else {
      var p = M6(t3, ".") ? "property" : "argument";
      f = 'The "'.concat(t3, '" ').concat(p, " ").concat(o, " ").concat(mc(e2, "type"));
    }
    return f += ". Received type ".concat(typeof r2), f;
  }, TypeError);
  dr("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
  dr("ERR_METHOD_NOT_IMPLEMENTED", function(t3) {
    return "The " + t3 + " method is not implemented";
  });
  dr("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
  dr("ERR_STREAM_DESTROYED", function(t3) {
    return "Cannot call " + t3 + " after a stream was destroyed";
  });
  dr("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
  dr("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
  dr("ERR_STREAM_WRITE_AFTER_END", "write after end");
  dr("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
  dr("ERR_UNKNOWN_ENCODING", function(t3) {
    return "Unknown encoding: " + t3;
  }, TypeError);
  dr("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
  yc.exports.codes = gc;
});
var V0 = T((nI, wc) => {
  var _6 = sn().codes.ERR_INVALID_OPT_VALUE;
  function x6(t3, e2, r2) {
    return t3.highWaterMark != null ? t3.highWaterMark : e2 ? t3[r2] : null;
  }
  function S6(t3, e2, r2, o) {
    var f = x6(e2, o, r2);
    if (f != null) {
      if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
        var p = o ? r2 : "highWaterMark";
        throw new _6(p, f);
      }
      return Math.floor(f);
    }
    return t3.objectMode ? 16 : 16 * 1024;
  }
  wc.exports = { getHighWaterMark: S6 };
});
var G0 = T((fI, Mc) => {
  Mc.exports = E6;
  function E6(t3, e2) {
    if ($0("noDeprecation"))
      return t3;
    var r2 = false;
    function o() {
      if (!r2) {
        if ($0("throwDeprecation"))
          throw new Error(e2);
        $0("traceDeprecation") ? console.trace(e2) : console.warn(e2), r2 = true;
      }
      return t3.apply(this, arguments);
    }
    return o;
  }
  function $0(t3) {
    try {
      if (!global.localStorage)
        return false;
    } catch {
      return false;
    }
    var e2 = global.localStorage[t3];
    return e2 == null ? false : String(e2).toLowerCase() === "true";
  }
});
var J0 = T((aI, Rc) => {
  Rc.exports = ht;
  function xc(t3) {
    var e2 = this;
    this.next = null, this.entry = null, this.finish = function() {
      J6(e2, t3);
    };
  }
  var Qn;
  ht.WritableState = Yf;
  var A6 = { deprecate: G0() }, Sc = W0(), ho = Ut().Buffer, R6 = global.Uint8Array || function() {
  };
  function B6(t3) {
    return ho.from(t3);
  }
  function q6(t3) {
    return ho.isBuffer(t3) || t3 instanceof R6;
  }
  var X0 = Z0(), I6 = V0(), T6 = I6.getHighWaterMark, Li = sn().codes, k6 = Li.ERR_INVALID_ARG_TYPE, L6 = Li.ERR_METHOD_NOT_IMPLEMENTED, N6 = Li.ERR_MULTIPLE_CALLBACK, D6 = Li.ERR_STREAM_CANNOT_PIPE, P6 = Li.ERR_STREAM_DESTROYED, C6 = Li.ERR_STREAM_NULL_VALUES, O6 = Li.ERR_STREAM_WRITE_AFTER_END, F6 = Li.ERR_UNKNOWN_ENCODING, ef = X0.errorOrDestroy;
  Ie()(ht, Sc);
  function U6() {
  }
  function Yf(t3, e2, r2) {
    Qn = Qn || hn(), t3 = t3 || {}, typeof r2 != "boolean" && (r2 = e2 instanceof Qn), this.objectMode = !!t3.objectMode, r2 && (this.objectMode = this.objectMode || !!t3.writableObjectMode), this.highWaterMark = T6(this, t3, "writableHighWaterMark", r2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
    var o = t3.decodeStrings === false;
    this.decodeStrings = !o, this.defaultEncoding = t3.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(f) {
      V6(e2, f);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t3.emitClose !== false, this.autoDestroy = !!t3.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new xc(this);
  }
  Yf.prototype.getBuffer = function() {
    for (var e2 = this.bufferedRequest, r2 = [];e2; )
      r2.push(e2), e2 = e2.next;
    return r2;
  };
  (function() {
    try {
      Object.defineProperty(Yf.prototype, "buffer", { get: A6.deprecate(function() {
        return this.getBuffer();
      }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
    } catch {
    }
  })();
  var so;
  typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (so = Function.prototype[Symbol.hasInstance], Object.defineProperty(ht, Symbol.hasInstance, { value: function(e2) {
    return so.call(this, e2) ? true : this !== ht ? false : e2 && e2._writableState instanceof Yf;
  } })) : so = function(e2) {
    return e2 instanceof this;
  };
  function ht(t3) {
    Qn = Qn || hn();
    var e2 = this instanceof Qn;
    if (!e2 && !so.call(ht, this))
      return new ht(t3);
    this._writableState = new Yf(t3, this, e2), this.writable = true, t3 && (typeof t3.write == "function" && (this._write = t3.write), typeof t3.writev == "function" && (this._writev = t3.writev), typeof t3.destroy == "function" && (this._destroy = t3.destroy), typeof t3.final == "function" && (this._final = t3.final)), Sc.call(this);
  }
  ht.prototype.pipe = function() {
    ef(this, new D6);
  };
  function z6(t3, e2) {
    var r2 = new O6;
    ef(t3, r2), process.nextTick(e2, r2);
  }
  function H6(t3, e2, r2, o) {
    var f;
    return r2 === null ? f = new C6 : typeof r2 != "string" && !e2.objectMode && (f = new k6("chunk", ["string", "Buffer"], r2)), f ? (ef(t3, f), process.nextTick(o, f), false) : true;
  }
  ht.prototype.write = function(t3, e2, r2) {
    var o = this._writableState, f = false, p = !o.objectMode && q6(t3);
    return p && !ho.isBuffer(t3) && (t3 = B6(t3)), typeof e2 == "function" && (r2 = e2, e2 = null), p ? e2 = "buffer" : e2 || (e2 = o.defaultEncoding), typeof r2 != "function" && (r2 = U6), o.ending ? z6(this, r2) : (p || H6(this, o, t3, r2)) && (o.pendingcb++, f = K6(this, o, p, t3, e2, r2)), f;
  };
  ht.prototype.cork = function() {
    this._writableState.corked++;
  };
  ht.prototype.uncork = function() {
    var t3 = this._writableState;
    t3.corked && (t3.corked--, !t3.writing && !t3.corked && !t3.bufferProcessing && t3.bufferedRequest && Ec(this, t3));
  };
  ht.prototype.setDefaultEncoding = function(e2) {
    if (typeof e2 == "string" && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
      throw new F6(e2);
    return this._writableState.defaultEncoding = e2, this;
  };
  Object.defineProperty(ht.prototype, "writableBuffer", { enumerable: false, get: function() {
    return this._writableState && this._writableState.getBuffer();
  } });
  function W6(t3, e2, r2) {
    return !t3.objectMode && t3.decodeStrings !== false && typeof e2 == "string" && (e2 = ho.from(e2, r2)), e2;
  }
  Object.defineProperty(ht.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
    return this._writableState.highWaterMark;
  } });
  function K6(t3, e2, r2, o, f, p) {
    if (!r2) {
      var m = W6(e2, o, f);
      o !== m && (r2 = true, f = "buffer", o = m);
    }
    var y = e2.objectMode ? 1 : o.length;
    e2.length += y;
    var M = e2.length < e2.highWaterMark;
    if (M || (e2.needDrain = true), e2.writing || e2.corked) {
      var x = e2.lastBufferedRequest;
      e2.lastBufferedRequest = { chunk: o, encoding: f, isBuf: r2, callback: p, next: null }, x ? x.next = e2.lastBufferedRequest : e2.bufferedRequest = e2.lastBufferedRequest, e2.bufferedRequestCount += 1;
    } else
      Y0(t3, e2, false, y, o, f, p);
    return M;
  }
  function Y0(t3, e2, r2, o, f, p, m) {
    e2.writelen = o, e2.writecb = m, e2.writing = true, e2.sync = true, e2.destroyed ? e2.onwrite(new P6("write")) : r2 ? t3._writev(f, e2.onwrite) : t3._write(f, p, e2.onwrite), e2.sync = false;
  }
  function j6(t3, e2, r2, o, f) {
    --e2.pendingcb, r2 ? (process.nextTick(f, o), process.nextTick(Gf, t3, e2), t3._writableState.errorEmitted = true, ef(t3, o)) : (f(o), t3._writableState.errorEmitted = true, ef(t3, o), Gf(t3, e2));
  }
  function Z6(t3) {
    t3.writing = false, t3.writecb = null, t3.length -= t3.writelen, t3.writelen = 0;
  }
  function V6(t3, e2) {
    var r2 = t3._writableState, o = r2.sync, f = r2.writecb;
    if (typeof f != "function")
      throw new N6;
    if (Z6(r2), e2)
      j6(t3, r2, o, e2, f);
    else {
      var p = Ac(r2) || t3.destroyed;
      !p && !r2.corked && !r2.bufferProcessing && r2.bufferedRequest && Ec(t3, r2), o ? process.nextTick(_c, t3, r2, p, f) : _c(t3, r2, p, f);
    }
  }
  function _c(t3, e2, r2, o) {
    r2 || $6(t3, e2), e2.pendingcb--, o(), Gf(t3, e2);
  }
  function $6(t3, e2) {
    e2.length === 0 && e2.needDrain && (e2.needDrain = false, t3.emit("drain"));
  }
  function Ec(t3, e2) {
    e2.bufferProcessing = true;
    var r2 = e2.bufferedRequest;
    if (t3._writev && r2 && r2.next) {
      var o = e2.bufferedRequestCount, f = new Array(o), p = e2.corkedRequestsFree;
      p.entry = r2;
      for (var m = 0, y = true;r2; )
        f[m] = r2, r2.isBuf || (y = false), r2 = r2.next, m += 1;
      f.allBuffers = y, Y0(t3, e2, true, e2.length, f, "", p.finish), e2.pendingcb++, e2.lastBufferedRequest = null, p.next ? (e2.corkedRequestsFree = p.next, p.next = null) : e2.corkedRequestsFree = new xc(e2), e2.bufferedRequestCount = 0;
    } else {
      for (;r2; ) {
        var { chunk: M, encoding: x, callback: S } = r2, E = e2.objectMode ? 1 : M.length;
        if (Y0(t3, e2, false, E, M, x, S), r2 = r2.next, e2.bufferedRequestCount--, e2.writing)
          break;
      }
      r2 === null && (e2.lastBufferedRequest = null);
    }
    e2.bufferedRequest = r2, e2.bufferProcessing = false;
  }
  ht.prototype._write = function(t3, e2, r2) {
    r2(new L6("_write()"));
  };
  ht.prototype._writev = null;
  ht.prototype.end = function(t3, e2, r2) {
    var o = this._writableState;
    return typeof t3 == "function" ? (r2 = t3, t3 = null, e2 = null) : typeof e2 == "function" && (r2 = e2, e2 = null), t3 != null && this.write(t3, e2), o.corked && (o.corked = 1, this.uncork()), o.ending || X6(this, o, r2), this;
  };
  Object.defineProperty(ht.prototype, "writableLength", { enumerable: false, get: function() {
    return this._writableState.length;
  } });
  function Ac(t3) {
    return t3.ending && t3.length === 0 && t3.bufferedRequest === null && !t3.finished && !t3.writing;
  }
  function G6(t3, e2) {
    t3._final(function(r2) {
      e2.pendingcb--, r2 && ef(t3, r2), e2.prefinished = true, t3.emit("prefinish"), Gf(t3, e2);
    });
  }
  function Y6(t3, e2) {
    !e2.prefinished && !e2.finalCalled && (typeof t3._final == "function" && !e2.destroyed ? (e2.pendingcb++, e2.finalCalled = true, process.nextTick(G6, t3, e2)) : (e2.prefinished = true, t3.emit("prefinish")));
  }
  function Gf(t3, e2) {
    var r2 = Ac(e2);
    if (r2 && (Y6(t3, e2), e2.pendingcb === 0 && (e2.finished = true, t3.emit("finish"), e2.autoDestroy))) {
      var o = t3._readableState;
      (!o || o.autoDestroy && o.endEmitted) && t3.destroy();
    }
    return r2;
  }
  function X6(t3, e2, r2) {
    e2.ending = true, Gf(t3, e2), r2 && (e2.finished ? process.nextTick(r2) : t3.once("finish", r2)), e2.ended = true, t3.writable = false;
  }
  function J6(t3, e2, r2) {
    var o = t3.entry;
    for (t3.entry = null;o; ) {
      var f = o.callback;
      e2.pendingcb--, f(r2), o = o.next;
    }
    e2.corkedRequestsFree.next = t3;
  }
  Object.defineProperty(ht.prototype, "destroyed", { enumerable: false, get: function() {
    return this._writableState === undefined ? false : this._writableState.destroyed;
  }, set: function(e2) {
    !this._writableState || (this._writableState.destroyed = e2);
  } });
  ht.prototype.destroy = X0.destroy;
  ht.prototype._undestroy = X0.undestroy;
  ht.prototype._destroy = function(t3, e2) {
    e2(t3);
  };
});
var hn = T((oI, qc) => {
  var Q6 = Object.keys || function(t3) {
    var e2 = [];
    for (var r2 in t3)
      e2.push(r2);
    return e2;
  };
  qc.exports = $r;
  var Bc = th(), eh = J0();
  Ie()($r, Bc);
  for (Q0 = Q6(eh.prototype), uo = 0;uo < Q0.length; uo++)
    lo = Q0[uo], $r.prototype[lo] || ($r.prototype[lo] = eh.prototype[lo]);
  var Q0, lo, uo;
  function $r(t3) {
    if (!(this instanceof $r))
      return new $r(t3);
    Bc.call(this, t3), eh.call(this, t3), this.allowHalfOpen = true, t3 && (t3.readable === false && (this.readable = false), t3.writable === false && (this.writable = false), t3.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", eM)));
  }
  Object.defineProperty($r.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
    return this._writableState.highWaterMark;
  } });
  Object.defineProperty($r.prototype, "writableBuffer", { enumerable: false, get: function() {
    return this._writableState && this._writableState.getBuffer();
  } });
  Object.defineProperty($r.prototype, "writableLength", { enumerable: false, get: function() {
    return this._writableState.length;
  } });
  function eM() {
    this._writableState.ended || process.nextTick(tM, this);
  }
  function tM(t3) {
    t3.end();
  }
  Object.defineProperty($r.prototype, "destroyed", { enumerable: false, get: function() {
    return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
  }, set: function(e2) {
    this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
  } });
});
var co = T((Tc) => {
  var ih = Te().Buffer, Ic = ih.isEncoding || function(t3) {
    switch (t3 = "" + t3, t3 && t3.toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
      case "raw":
        return true;
      default:
        return false;
    }
  };
  function rM(t3) {
    if (!t3)
      return "utf8";
    for (var e2;; )
      switch (t3) {
        case "utf8":
        case "utf-8":
          return "utf8";
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return "utf16le";
        case "latin1":
        case "binary":
          return "latin1";
        case "base64":
        case "ascii":
        case "hex":
          return t3;
        default:
          if (e2)
            return;
          t3 = ("" + t3).toLowerCase(), e2 = true;
      }
  }
  function iM(t3) {
    var e2 = rM(t3);
    if (typeof e2 != "string" && (ih.isEncoding === Ic || !Ic(t3)))
      throw new Error("Unknown encoding: " + t3);
    return e2 || t3;
  }
  Tc.StringDecoder = Xf;
  function Xf(t3) {
    this.encoding = iM(t3);
    var e2;
    switch (this.encoding) {
      case "utf16le":
        this.text = hM, this.end = uM, e2 = 4;
        break;
      case "utf8":
        this.fillLast = aM, e2 = 4;
        break;
      case "base64":
        this.text = lM, this.end = dM, e2 = 3;
        break;
      default:
        this.write = cM, this.end = pM;
        return;
    }
    this.lastNeed = 0, this.lastTotal = 0, this.lastChar = ih.allocUnsafe(e2);
  }
  Xf.prototype.write = function(t3) {
    if (t3.length === 0)
      return "";
    var e2, r2;
    if (this.lastNeed) {
      if (e2 = this.fillLast(t3), e2 === undefined)
        return "";
      r2 = this.lastNeed, this.lastNeed = 0;
    } else
      r2 = 0;
    return r2 < t3.length ? e2 ? e2 + this.text(t3, r2) : this.text(t3, r2) : e2 || "";
  };
  Xf.prototype.end = sM;
  Xf.prototype.text = oM;
  Xf.prototype.fillLast = function(t3) {
    if (this.lastNeed <= t3.length)
      return t3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
    t3.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t3.length), this.lastNeed -= t3.length;
  };
  function rh(t3) {
    return t3 <= 127 ? 0 : t3 >> 5 === 6 ? 2 : t3 >> 4 === 14 ? 3 : t3 >> 3 === 30 ? 4 : t3 >> 6 === 2 ? -1 : -2;
  }
  function nM(t3, e2, r2) {
    var o = e2.length - 1;
    if (o < r2)
      return 0;
    var f = rh(e2[o]);
    return f >= 0 ? (f > 0 && (t3.lastNeed = f - 1), f) : --o < r2 || f === -2 ? 0 : (f = rh(e2[o]), f >= 0 ? (f > 0 && (t3.lastNeed = f - 2), f) : --o < r2 || f === -2 ? 0 : (f = rh(e2[o]), f >= 0 ? (f > 0 && (f === 2 ? f = 0 : t3.lastNeed = f - 3), f) : 0));
  }
  function fM(t3, e2, r2) {
    if ((e2[0] & 192) !== 128)
      return t3.lastNeed = 0, "\uFFFD";
    if (t3.lastNeed > 1 && e2.length > 1) {
      if ((e2[1] & 192) !== 128)
        return t3.lastNeed = 1, "\uFFFD";
      if (t3.lastNeed > 2 && e2.length > 2 && (e2[2] & 192) !== 128)
        return t3.lastNeed = 2, "\uFFFD";
    }
  }
  function aM(t3) {
    var e2 = this.lastTotal - this.lastNeed, r2 = fM(this, t3, e2);
    if (r2 !== undefined)
      return r2;
    if (this.lastNeed <= t3.length)
      return t3.copy(this.lastChar, e2, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
    t3.copy(this.lastChar, e2, 0, t3.length), this.lastNeed -= t3.length;
  }
  function oM(t3, e2) {
    var r2 = nM(this, t3, e2);
    if (!this.lastNeed)
      return t3.toString("utf8", e2);
    this.lastTotal = r2;
    var o = t3.length - (r2 - this.lastNeed);
    return t3.copy(this.lastChar, 0, o), t3.toString("utf8", e2, o);
  }
  function sM(t3) {
    var e2 = t3 && t3.length ? this.write(t3) : "";
    return this.lastNeed ? e2 + "\uFFFD" : e2;
  }
  function hM(t3, e2) {
    if ((t3.length - e2) % 2 === 0) {
      var r2 = t3.toString("utf16le", e2);
      if (r2) {
        var o = r2.charCodeAt(r2.length - 1);
        if (o >= 55296 && o <= 56319)
          return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t3[t3.length - 2], this.lastChar[1] = t3[t3.length - 1], r2.slice(0, -1);
      }
      return r2;
    }
    return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t3[t3.length - 1], t3.toString("utf16le", e2, t3.length - 1);
  }
  function uM(t3) {
    var e2 = t3 && t3.length ? this.write(t3) : "";
    if (this.lastNeed) {
      var r2 = this.lastTotal - this.lastNeed;
      return e2 + this.lastChar.toString("utf16le", 0, r2);
    }
    return e2;
  }
  function lM(t3, e2) {
    var r2 = (t3.length - e2) % 3;
    return r2 === 0 ? t3.toString("base64", e2) : (this.lastNeed = 3 - r2, this.lastTotal = 3, r2 === 1 ? this.lastChar[0] = t3[t3.length - 1] : (this.lastChar[0] = t3[t3.length - 2], this.lastChar[1] = t3[t3.length - 1]), t3.toString("base64", e2, t3.length - r2));
  }
  function dM(t3) {
    var e2 = t3 && t3.length ? this.write(t3) : "";
    return this.lastNeed ? e2 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e2;
  }
  function cM(t3) {
    return t3.toString(this.encoding);
  }
  function pM(t3) {
    return t3 && t3.length ? this.write(t3) : "";
  }
});
var Jf = {};
Ja(Jf, { StringDecoder: () => po.StringDecoder, default: () => po.StringDecoder });
var po;
var Qf = R0(() => {
  po = rn(co());
});
var vo = T((hI, Nc) => {
  var kc = sn().codes.ERR_STREAM_PREMATURE_CLOSE;
  function vM(t3) {
    var e2 = false;
    return function() {
      if (!e2) {
        e2 = true;
        for (var r2 = arguments.length, o = new Array(r2), f = 0;f < r2; f++)
          o[f] = arguments[f];
        t3.apply(this, o);
      }
    };
  }
  function bM() {
  }
  function mM(t3) {
    return t3.setHeader && typeof t3.abort == "function";
  }
  function Lc(t3, e2, r2) {
    if (typeof e2 == "function")
      return Lc(t3, null, e2);
    e2 || (e2 = {}), r2 = vM(r2 || bM);
    var o = e2.readable || e2.readable !== false && t3.readable, f = e2.writable || e2.writable !== false && t3.writable, p = function() {
      t3.writable || y();
    }, m = t3._writableState && t3._writableState.finished, y = function() {
      f = false, m = true, o || r2.call(t3);
    }, M = t3._readableState && t3._readableState.endEmitted, x = function() {
      o = false, M = true, f || r2.call(t3);
    }, S = function(L) {
      r2.call(t3, L);
    }, E = function() {
      var L;
      if (o && !M)
        return (!t3._readableState || !t3._readableState.ended) && (L = new kc), r2.call(t3, L);
      if (f && !m)
        return (!t3._writableState || !t3._writableState.ended) && (L = new kc), r2.call(t3, L);
    }, B = function() {
      t3.req.on("finish", y);
    };
    return mM(t3) ? (t3.on("complete", y), t3.on("abort", E), t3.req ? B() : t3.on("request", B)) : f && !t3._writableState && (t3.on("end", p), t3.on("close", p)), t3.on("end", x), t3.on("finish", y), e2.error !== false && t3.on("error", S), t3.on("close", E), function() {
      t3.removeListener("complete", y), t3.removeListener("abort", E), t3.removeListener("request", B), t3.req && t3.req.removeListener("finish", y), t3.removeListener("end", p), t3.removeListener("close", p), t3.removeListener("finish", y), t3.removeListener("end", x), t3.removeListener("error", S), t3.removeListener("close", E);
    };
  }
  Nc.exports = Lc;
});
var Pc = T((uI, Dc) => {
  var bo;
  function Ni(t3, e2, r2) {
    return e2 in t3 ? Object.defineProperty(t3, e2, { value: r2, enumerable: true, configurable: true, writable: true }) : t3[e2] = r2, t3;
  }
  var gM = vo(), Di = Symbol("lastResolve"), un = Symbol("lastReject"), ea = Symbol("error"), mo = Symbol("ended"), ln = Symbol("lastPromise"), nh = Symbol("handlePromise"), dn = Symbol("stream");
  function Pi(t3, e2) {
    return { value: t3, done: e2 };
  }
  function yM(t3) {
    var e2 = t3[Di];
    if (e2 !== null) {
      var r2 = t3[dn].read();
      r2 !== null && (t3[ln] = null, t3[Di] = null, t3[un] = null, e2(Pi(r2, false)));
    }
  }
  function wM(t3) {
    process.nextTick(yM, t3);
  }
  function MM(t3, e2) {
    return function(r2, o) {
      t3.then(function() {
        if (e2[mo]) {
          r2(Pi(undefined, true));
          return;
        }
        e2[nh](r2, o);
      }, o);
    };
  }
  var _M = Object.getPrototypeOf(function() {
  }), xM = Object.setPrototypeOf((bo = { get stream() {
    return this[dn];
  }, next: function() {
    var e2 = this, r2 = this[ea];
    if (r2 !== null)
      return Promise.reject(r2);
    if (this[mo])
      return Promise.resolve(Pi(undefined, true));
    if (this[dn].destroyed)
      return new Promise(function(m, y) {
        process.nextTick(function() {
          e2[ea] ? y(e2[ea]) : m(Pi(undefined, true));
        });
      });
    var o = this[ln], f;
    if (o)
      f = new Promise(MM(o, this));
    else {
      var p = this[dn].read();
      if (p !== null)
        return Promise.resolve(Pi(p, false));
      f = new Promise(this[nh]);
    }
    return this[ln] = f, f;
  } }, Ni(bo, Symbol.asyncIterator, function() {
    return this;
  }), Ni(bo, "return", function() {
    var e2 = this;
    return new Promise(function(r2, o) {
      e2[dn].destroy(null, function(f) {
        if (f) {
          o(f);
          return;
        }
        r2(Pi(undefined, true));
      });
    });
  }), bo), _M), SM = function(e2) {
    var r2, o = Object.create(xM, (r2 = {}, Ni(r2, dn, { value: e2, writable: true }), Ni(r2, Di, { value: null, writable: true }), Ni(r2, un, { value: null, writable: true }), Ni(r2, ea, { value: null, writable: true }), Ni(r2, mo, { value: e2._readableState.endEmitted, writable: true }), Ni(r2, nh, { value: function(p, m) {
      var y = o[dn].read();
      y ? (o[ln] = null, o[Di] = null, o[un] = null, p(Pi(y, false))) : (o[Di] = p, o[un] = m);
    }, writable: true }), r2));
    return o[ln] = null, gM(e2, function(f) {
      if (f && f.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var p = o[un];
        p !== null && (o[ln] = null, o[Di] = null, o[un] = null, p(f)), o[ea] = f;
        return;
      }
      var m = o[Di];
      m !== null && (o[ln] = null, o[Di] = null, o[un] = null, m(Pi(undefined, true))), o[mo] = true;
    }), e2.on("readable", wM.bind(null, o)), o;
  };
  Dc.exports = SM;
});
var Oc = T((lI, Cc) => {
  Cc.exports = function() {
    throw new Error("Readable.from is not available in the browser");
  };
});
var th = T((cI, $c) => {
  $c.exports = Ce;
  var tf;
  Ce.ReadableState = Hc;
  var dI = ki().EventEmitter, zc = function(e2, r2) {
    return e2.listeners(r2).length;
  }, ra = W0(), go = Ut().Buffer, EM = global.Uint8Array || function() {
  };
  function AM(t3) {
    return go.from(t3);
  }
  function RM(t3) {
    return go.isBuffer(t3) || t3 instanceof EM;
  }
  var fh = $f(), Ne;
  fh && fh.debuglog ? Ne = fh.debuglog("stream") : Ne = function() {
  };
  var BM = pc(), dh = Z0(), qM = V0(), IM = qM.getHighWaterMark, yo = sn().codes, TM = yo.ERR_INVALID_ARG_TYPE, kM = yo.ERR_STREAM_PUSH_AFTER_EOF, LM = yo.ERR_METHOD_NOT_IMPLEMENTED, NM = yo.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, rf, ah, oh;
  Ie()(Ce, ra);
  var ta = dh.errorOrDestroy, sh = ["error", "close", "destroy", "pause", "resume"];
  function DM(t3, e2, r2) {
    if (typeof t3.prependListener == "function")
      return t3.prependListener(e2, r2);
    !t3._events || !t3._events[e2] ? t3.on(e2, r2) : Array.isArray(t3._events[e2]) ? t3._events[e2].unshift(r2) : t3._events[e2] = [r2, t3._events[e2]];
  }
  function Hc(t3, e2, r2) {
    tf = tf || hn(), t3 = t3 || {}, typeof r2 != "boolean" && (r2 = e2 instanceof tf), this.objectMode = !!t3.objectMode, r2 && (this.objectMode = this.objectMode || !!t3.readableObjectMode), this.highWaterMark = IM(this, t3, "readableHighWaterMark", r2), this.buffer = new BM, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t3.emitClose !== false, this.autoDestroy = !!t3.autoDestroy, this.destroyed = false, this.defaultEncoding = t3.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t3.encoding && (rf || (rf = (Qf(), ur(Jf)).StringDecoder), this.decoder = new rf(t3.encoding), this.encoding = t3.encoding);
  }
  function Ce(t3) {
    if (tf = tf || hn(), !(this instanceof Ce))
      return new Ce(t3);
    var e2 = this instanceof tf;
    this._readableState = new Hc(t3, this, e2), this.readable = true, t3 && (typeof t3.read == "function" && (this._read = t3.read), typeof t3.destroy == "function" && (this._destroy = t3.destroy)), ra.call(this);
  }
  Object.defineProperty(Ce.prototype, "destroyed", { enumerable: false, get: function() {
    return this._readableState === undefined ? false : this._readableState.destroyed;
  }, set: function(e2) {
    !this._readableState || (this._readableState.destroyed = e2);
  } });
  Ce.prototype.destroy = dh.destroy;
  Ce.prototype._undestroy = dh.undestroy;
  Ce.prototype._destroy = function(t3, e2) {
    e2(t3);
  };
  Ce.prototype.push = function(t3, e2) {
    var r2 = this._readableState, o;
    return r2.objectMode ? o = true : typeof t3 == "string" && (e2 = e2 || r2.defaultEncoding, e2 !== r2.encoding && (t3 = go.from(t3, e2), e2 = ""), o = true), Wc(this, t3, e2, false, o);
  };
  Ce.prototype.unshift = function(t3) {
    return Wc(this, t3, null, true, false);
  };
  function Wc(t3, e2, r2, o, f) {
    Ne("readableAddChunk", e2);
    var p = t3._readableState;
    if (e2 === null)
      p.reading = false, OM(t3, p);
    else {
      var m;
      if (f || (m = PM(p, e2)), m)
        ta(t3, m);
      else if (p.objectMode || e2 && e2.length > 0)
        if (typeof e2 != "string" && !p.objectMode && Object.getPrototypeOf(e2) !== go.prototype && (e2 = AM(e2)), o)
          p.endEmitted ? ta(t3, new NM) : hh(t3, p, e2, true);
        else if (p.ended)
          ta(t3, new kM);
        else {
          if (p.destroyed)
            return false;
          p.reading = false, p.decoder && !r2 ? (e2 = p.decoder.write(e2), p.objectMode || e2.length !== 0 ? hh(t3, p, e2, false) : lh(t3, p)) : hh(t3, p, e2, false);
        }
      else
        o || (p.reading = false, lh(t3, p));
    }
    return !p.ended && (p.length < p.highWaterMark || p.length === 0);
  }
  function hh(t3, e2, r2, o) {
    e2.flowing && e2.length === 0 && !e2.sync ? (e2.awaitDrain = 0, t3.emit("data", r2)) : (e2.length += e2.objectMode ? 1 : r2.length, o ? e2.buffer.unshift(r2) : e2.buffer.push(r2), e2.needReadable && wo(t3)), lh(t3, e2);
  }
  function PM(t3, e2) {
    var r2;
    return !RM(e2) && typeof e2 != "string" && e2 !== undefined && !t3.objectMode && (r2 = new TM("chunk", ["string", "Buffer", "Uint8Array"], e2)), r2;
  }
  Ce.prototype.isPaused = function() {
    return this._readableState.flowing === false;
  };
  Ce.prototype.setEncoding = function(t3) {
    rf || (rf = (Qf(), ur(Jf)).StringDecoder);
    var e2 = new rf(t3);
    this._readableState.decoder = e2, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var r2 = this._readableState.buffer.head, o = "";r2 !== null; )
      o += e2.write(r2.data), r2 = r2.next;
    return this._readableState.buffer.clear(), o !== "" && this._readableState.buffer.push(o), this._readableState.length = o.length, this;
  };
  var Fc = 1073741824;
  function CM(t3) {
    return t3 >= Fc ? t3 = Fc : (t3--, t3 |= t3 >>> 1, t3 |= t3 >>> 2, t3 |= t3 >>> 4, t3 |= t3 >>> 8, t3 |= t3 >>> 16, t3++), t3;
  }
  function Uc(t3, e2) {
    return t3 <= 0 || e2.length === 0 && e2.ended ? 0 : e2.objectMode ? 1 : t3 !== t3 ? e2.flowing && e2.length ? e2.buffer.head.data.length : e2.length : (t3 > e2.highWaterMark && (e2.highWaterMark = CM(t3)), t3 <= e2.length ? t3 : e2.ended ? e2.length : (e2.needReadable = true, 0));
  }
  Ce.prototype.read = function(t3) {
    Ne("read", t3), t3 = parseInt(t3, 10);
    var e2 = this._readableState, r2 = t3;
    if (t3 !== 0 && (e2.emittedReadable = false), t3 === 0 && e2.needReadable && ((e2.highWaterMark !== 0 ? e2.length >= e2.highWaterMark : e2.length > 0) || e2.ended))
      return Ne("read: emitReadable", e2.length, e2.ended), e2.length === 0 && e2.ended ? uh(this) : wo(this), null;
    if (t3 = Uc(t3, e2), t3 === 0 && e2.ended)
      return e2.length === 0 && uh(this), null;
    var o = e2.needReadable;
    Ne("need readable", o), (e2.length === 0 || e2.length - t3 < e2.highWaterMark) && (o = true, Ne("length less than watermark", o)), e2.ended || e2.reading ? (o = false, Ne("reading or ended", o)) : o && (Ne("do read"), e2.reading = true, e2.sync = true, e2.length === 0 && (e2.needReadable = true), this._read(e2.highWaterMark), e2.sync = false, e2.reading || (t3 = Uc(r2, e2)));
    var f;
    return t3 > 0 ? f = Zc(t3, e2) : f = null, f === null ? (e2.needReadable = e2.length <= e2.highWaterMark, t3 = 0) : (e2.length -= t3, e2.awaitDrain = 0), e2.length === 0 && (e2.ended || (e2.needReadable = true), r2 !== t3 && e2.ended && uh(this)), f !== null && this.emit("data", f), f;
  };
  function OM(t3, e2) {
    if (Ne("onEofChunk"), !e2.ended) {
      if (e2.decoder) {
        var r2 = e2.decoder.end();
        r2 && r2.length && (e2.buffer.push(r2), e2.length += e2.objectMode ? 1 : r2.length);
      }
      e2.ended = true, e2.sync ? wo(t3) : (e2.needReadable = false, e2.emittedReadable || (e2.emittedReadable = true, Kc(t3)));
    }
  }
  function wo(t3) {
    var e2 = t3._readableState;
    Ne("emitReadable", e2.needReadable, e2.emittedReadable), e2.needReadable = false, e2.emittedReadable || (Ne("emitReadable", e2.flowing), e2.emittedReadable = true, process.nextTick(Kc, t3));
  }
  function Kc(t3) {
    var e2 = t3._readableState;
    Ne("emitReadable_", e2.destroyed, e2.length, e2.ended), !e2.destroyed && (e2.length || e2.ended) && (t3.emit("readable"), e2.emittedReadable = false), e2.needReadable = !e2.flowing && !e2.ended && e2.length <= e2.highWaterMark, ch(t3);
  }
  function lh(t3, e2) {
    e2.readingMore || (e2.readingMore = true, process.nextTick(FM, t3, e2));
  }
  function FM(t3, e2) {
    for (;!e2.reading && !e2.ended && (e2.length < e2.highWaterMark || e2.flowing && e2.length === 0); ) {
      var r2 = e2.length;
      if (Ne("maybeReadMore read 0"), t3.read(0), r2 === e2.length)
        break;
    }
    e2.readingMore = false;
  }
  Ce.prototype._read = function(t3) {
    ta(this, new LM("_read()"));
  };
  Ce.prototype.pipe = function(t3, e2) {
    var r2 = this, o = this._readableState;
    switch (o.pipesCount) {
      case 0:
        o.pipes = t3;
        break;
      case 1:
        o.pipes = [o.pipes, t3];
        break;
      default:
        o.pipes.push(t3);
        break;
    }
    o.pipesCount += 1, Ne("pipe count=%d opts=%j", o.pipesCount, e2);
    var f = (!e2 || e2.end !== false) && t3 !== process.stdout && t3 !== process.stderr, p = f ? y : ge;
    o.endEmitted ? process.nextTick(p) : r2.once("end", p), t3.on("unpipe", m);
    function m(_e, N) {
      Ne("onunpipe"), _e === r2 && N && N.hasUnpiped === false && (N.hasUnpiped = true, S());
    }
    function y() {
      Ne("onend"), t3.end();
    }
    var M = UM(r2);
    t3.on("drain", M);
    var x = false;
    function S() {
      Ne("cleanup"), t3.removeListener("close", q), t3.removeListener("finish", L), t3.removeListener("drain", M), t3.removeListener("error", B), t3.removeListener("unpipe", m), r2.removeListener("end", y), r2.removeListener("end", ge), r2.removeListener("data", E), x = true, o.awaitDrain && (!t3._writableState || t3._writableState.needDrain) && M();
    }
    r2.on("data", E);
    function E(_e) {
      Ne("ondata");
      var N = t3.write(_e);
      Ne("dest.write", N), N === false && ((o.pipesCount === 1 && o.pipes === t3 || o.pipesCount > 1 && Vc(o.pipes, t3) !== -1) && !x && (Ne("false write response, pause", o.awaitDrain), o.awaitDrain++), r2.pause());
    }
    function B(_e) {
      Ne("onerror", _e), ge(), t3.removeListener("error", B), zc(t3, "error") === 0 && ta(t3, _e);
    }
    DM(t3, "error", B);
    function q() {
      t3.removeListener("finish", L), ge();
    }
    t3.once("close", q);
    function L() {
      Ne("onfinish"), t3.removeListener("close", q), ge();
    }
    t3.once("finish", L);
    function ge() {
      Ne("unpipe"), r2.unpipe(t3);
    }
    return t3.emit("pipe", r2), o.flowing || (Ne("pipe resume"), r2.resume()), t3;
  };
  function UM(t3) {
    return function() {
      var r2 = t3._readableState;
      Ne("pipeOnDrain", r2.awaitDrain), r2.awaitDrain && r2.awaitDrain--, r2.awaitDrain === 0 && zc(t3, "data") && (r2.flowing = true, ch(t3));
    };
  }
  Ce.prototype.unpipe = function(t3) {
    var e2 = this._readableState, r2 = { hasUnpiped: false };
    if (e2.pipesCount === 0)
      return this;
    if (e2.pipesCount === 1)
      return t3 && t3 !== e2.pipes ? this : (t3 || (t3 = e2.pipes), e2.pipes = null, e2.pipesCount = 0, e2.flowing = false, t3 && t3.emit("unpipe", this, r2), this);
    if (!t3) {
      var { pipes: o, pipesCount: f } = e2;
      e2.pipes = null, e2.pipesCount = 0, e2.flowing = false;
      for (var p = 0;p < f; p++)
        o[p].emit("unpipe", this, { hasUnpiped: false });
      return this;
    }
    var m = Vc(e2.pipes, t3);
    return m === -1 ? this : (e2.pipes.splice(m, 1), e2.pipesCount -= 1, e2.pipesCount === 1 && (e2.pipes = e2.pipes[0]), t3.emit("unpipe", this, r2), this);
  };
  Ce.prototype.on = function(t3, e2) {
    var r2 = ra.prototype.on.call(this, t3, e2), o = this._readableState;
    return t3 === "data" ? (o.readableListening = this.listenerCount("readable") > 0, o.flowing !== false && this.resume()) : t3 === "readable" && !o.endEmitted && !o.readableListening && (o.readableListening = o.needReadable = true, o.flowing = false, o.emittedReadable = false, Ne("on readable", o.length, o.reading), o.length ? wo(this) : o.reading || process.nextTick(zM, this)), r2;
  };
  Ce.prototype.addListener = Ce.prototype.on;
  Ce.prototype.removeListener = function(t3, e2) {
    var r2 = ra.prototype.removeListener.call(this, t3, e2);
    return t3 === "readable" && process.nextTick(jc, this), r2;
  };
  Ce.prototype.removeAllListeners = function(t3) {
    var e2 = ra.prototype.removeAllListeners.apply(this, arguments);
    return (t3 === "readable" || t3 === undefined) && process.nextTick(jc, this), e2;
  };
  function jc(t3) {
    var e2 = t3._readableState;
    e2.readableListening = t3.listenerCount("readable") > 0, e2.resumeScheduled && !e2.paused ? e2.flowing = true : t3.listenerCount("data") > 0 && t3.resume();
  }
  function zM(t3) {
    Ne("readable nexttick read 0"), t3.read(0);
  }
  Ce.prototype.resume = function() {
    var t3 = this._readableState;
    return t3.flowing || (Ne("resume"), t3.flowing = !t3.readableListening, HM(this, t3)), t3.paused = false, this;
  };
  function HM(t3, e2) {
    e2.resumeScheduled || (e2.resumeScheduled = true, process.nextTick(WM, t3, e2));
  }
  function WM(t3, e2) {
    Ne("resume", e2.reading), e2.reading || t3.read(0), e2.resumeScheduled = false, t3.emit("resume"), ch(t3), e2.flowing && !e2.reading && t3.read(0);
  }
  Ce.prototype.pause = function() {
    return Ne("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Ne("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
  };
  function ch(t3) {
    var e2 = t3._readableState;
    for (Ne("flow", e2.flowing);e2.flowing && t3.read() !== null; )
      ;
  }
  Ce.prototype.wrap = function(t3) {
    var e2 = this, r2 = this._readableState, o = false;
    t3.on("end", function() {
      if (Ne("wrapped end"), r2.decoder && !r2.ended) {
        var m = r2.decoder.end();
        m && m.length && e2.push(m);
      }
      e2.push(null);
    }), t3.on("data", function(m) {
      if (Ne("wrapped data"), r2.decoder && (m = r2.decoder.write(m)), !(r2.objectMode && m == null) && !(!r2.objectMode && (!m || !m.length))) {
        var y = e2.push(m);
        y || (o = true, t3.pause());
      }
    });
    for (var f in t3)
      this[f] === undefined && typeof t3[f] == "function" && (this[f] = function(y) {
        return function() {
          return t3[y].apply(t3, arguments);
        };
      }(f));
    for (var p = 0;p < sh.length; p++)
      t3.on(sh[p], this.emit.bind(this, sh[p]));
    return this._read = function(m) {
      Ne("wrapped _read", m), o && (o = false, t3.resume());
    }, this;
  };
  typeof Symbol == "function" && (Ce.prototype[Symbol.asyncIterator] = function() {
    return ah === undefined && (ah = Pc()), ah(this);
  });
  Object.defineProperty(Ce.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
    return this._readableState.highWaterMark;
  } });
  Object.defineProperty(Ce.prototype, "readableBuffer", { enumerable: false, get: function() {
    return this._readableState && this._readableState.buffer;
  } });
  Object.defineProperty(Ce.prototype, "readableFlowing", { enumerable: false, get: function() {
    return this._readableState.flowing;
  }, set: function(e2) {
    this._readableState && (this._readableState.flowing = e2);
  } });
  Ce._fromList = Zc;
  Object.defineProperty(Ce.prototype, "readableLength", { enumerable: false, get: function() {
    return this._readableState.length;
  } });
  function Zc(t3, e2) {
    if (e2.length === 0)
      return null;
    var r2;
    return e2.objectMode ? r2 = e2.buffer.shift() : !t3 || t3 >= e2.length ? (e2.decoder ? r2 = e2.buffer.join("") : e2.buffer.length === 1 ? r2 = e2.buffer.first() : r2 = e2.buffer.concat(e2.length), e2.buffer.clear()) : r2 = e2.buffer.consume(t3, e2.decoder), r2;
  }
  function uh(t3) {
    var e2 = t3._readableState;
    Ne("endReadable", e2.endEmitted), e2.endEmitted || (e2.ended = true, process.nextTick(KM, e2, t3));
  }
  function KM(t3, e2) {
    if (Ne("endReadableNT", t3.endEmitted, t3.length), !t3.endEmitted && t3.length === 0 && (t3.endEmitted = true, e2.readable = false, e2.emit("end"), t3.autoDestroy)) {
      var r2 = e2._writableState;
      (!r2 || r2.autoDestroy && r2.finished) && e2.destroy();
    }
  }
  typeof Symbol == "function" && (Ce.from = function(t3, e2) {
    return oh === undefined && (oh = Oc()), oh(Ce, t3, e2);
  });
  function Vc(t3, e2) {
    for (var r2 = 0, o = t3.length;r2 < o; r2++)
      if (t3[r2] === e2)
        return r2;
    return -1;
  }
});
var ph = T((pI, Yc) => {
  Yc.exports = di;
  var Mo = sn().codes, jM = Mo.ERR_METHOD_NOT_IMPLEMENTED, ZM = Mo.ERR_MULTIPLE_CALLBACK, VM = Mo.ERR_TRANSFORM_ALREADY_TRANSFORMING, $M = Mo.ERR_TRANSFORM_WITH_LENGTH_0, _o = hn();
  Ie()(di, _o);
  function GM(t3, e2) {
    var r2 = this._transformState;
    r2.transforming = false;
    var o = r2.writecb;
    if (o === null)
      return this.emit("error", new ZM);
    r2.writechunk = null, r2.writecb = null, e2 != null && this.push(e2), o(t3);
    var f = this._readableState;
    f.reading = false, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
  }
  function di(t3) {
    if (!(this instanceof di))
      return new di(t3);
    _o.call(this, t3), this._transformState = { afterTransform: GM.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t3 && (typeof t3.transform == "function" && (this._transform = t3.transform), typeof t3.flush == "function" && (this._flush = t3.flush)), this.on("prefinish", YM);
  }
  function YM() {
    var t3 = this;
    typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(e2, r2) {
      Gc(t3, e2, r2);
    }) : Gc(this, null, null);
  }
  di.prototype.push = function(t3, e2) {
    return this._transformState.needTransform = false, _o.prototype.push.call(this, t3, e2);
  };
  di.prototype._transform = function(t3, e2, r2) {
    r2(new jM("_transform()"));
  };
  di.prototype._write = function(t3, e2, r2) {
    var o = this._transformState;
    if (o.writecb = r2, o.writechunk = t3, o.writeencoding = e2, !o.transforming) {
      var f = this._readableState;
      (o.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
    }
  };
  di.prototype._read = function(t3) {
    var e2 = this._transformState;
    e2.writechunk !== null && !e2.transforming ? (e2.transforming = true, this._transform(e2.writechunk, e2.writeencoding, e2.afterTransform)) : e2.needTransform = true;
  };
  di.prototype._destroy = function(t3, e2) {
    _o.prototype._destroy.call(this, t3, function(r2) {
      e2(r2);
    });
  };
  function Gc(t3, e2, r2) {
    if (e2)
      return t3.emit("error", e2);
    if (r2 != null && t3.push(r2), t3._writableState.length)
      throw new $M;
    if (t3._transformState.transforming)
      throw new VM;
    return t3.push(null);
  }
});
var Qc = T((vI, Jc) => {
  Jc.exports = ia;
  var Xc = ph();
  Ie()(ia, Xc);
  function ia(t3) {
    if (!(this instanceof ia))
      return new ia(t3);
    Xc.call(this, t3);
  }
  ia.prototype._transform = function(t3, e2, r2) {
    r2(null, t3);
  };
});
var np = T((bI, ip) => {
  var vh;
  function XM(t3) {
    var e2 = false;
    return function() {
      e2 || (e2 = true, t3.apply(undefined, arguments));
    };
  }
  var rp = sn().codes, JM = rp.ERR_MISSING_ARGS, QM = rp.ERR_STREAM_DESTROYED;
  function ep(t3) {
    if (t3)
      throw t3;
  }
  function e4(t3) {
    return t3.setHeader && typeof t3.abort == "function";
  }
  function t4(t3, e2, r2, o) {
    o = XM(o);
    var f = false;
    t3.on("close", function() {
      f = true;
    }), vh === undefined && (vh = vo()), vh(t3, { readable: e2, writable: r2 }, function(m) {
      if (m)
        return o(m);
      f = true, o();
    });
    var p = false;
    return function(m) {
      if (!f && !p) {
        if (p = true, e4(t3))
          return t3.abort();
        if (typeof t3.destroy == "function")
          return t3.destroy();
        o(m || new QM("pipe"));
      }
    };
  }
  function tp(t3) {
    t3();
  }
  function r4(t3, e2) {
    return t3.pipe(e2);
  }
  function i4(t3) {
    return !t3.length || typeof t3[t3.length - 1] != "function" ? ep : t3.pop();
  }
  function n4() {
    for (var t3 = arguments.length, e2 = new Array(t3), r2 = 0;r2 < t3; r2++)
      e2[r2] = arguments[r2];
    var o = i4(e2);
    if (Array.isArray(e2[0]) && (e2 = e2[0]), e2.length < 2)
      throw new JM("streams");
    var f, p = e2.map(function(m, y) {
      var M = y < e2.length - 1, x = y > 0;
      return t4(m, M, x, function(S) {
        f || (f = S), S && p.forEach(tp), !M && (p.forEach(tp), o(f));
      });
    });
    return e2.reduce(r4);
  }
  ip.exports = n4;
});
var ap = T((cr, fp) => {
  cr = fp.exports = th();
  cr.Stream = cr;
  cr.Readable = cr;
  cr.Writable = J0();
  cr.Duplex = hn();
  cr.Transform = ph();
  cr.PassThrough = Qc();
  cr.finished = vo();
  cr.pipeline = np();
});
var bh = T((mI, sp) => {
  var xo = Te().Buffer, op = ap().Transform, f4 = Ie();
  function a4(t3, e2) {
    if (!xo.isBuffer(t3) && typeof t3 != "string")
      throw new TypeError(e2 + " must be a string or a buffer");
  }
  function Ci(t3) {
    op.call(this), this._block = xo.allocUnsafe(t3), this._blockSize = t3, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
  }
  f4(Ci, op);
  Ci.prototype._transform = function(t3, e2, r2) {
    var o = null;
    try {
      this.update(t3, e2);
    } catch (f) {
      o = f;
    }
    r2(o);
  };
  Ci.prototype._flush = function(t3) {
    var e2 = null;
    try {
      this.push(this.digest());
    } catch (r2) {
      e2 = r2;
    }
    t3(e2);
  };
  Ci.prototype.update = function(t3, e2) {
    if (a4(t3, "Data"), this._finalized)
      throw new Error("Digest already called");
    xo.isBuffer(t3) || (t3 = xo.from(t3, e2));
    for (var r2 = this._block, o = 0;this._blockOffset + t3.length - o >= this._blockSize; ) {
      for (var f = this._blockOffset;f < this._blockSize; )
        r2[f++] = t3[o++];
      this._update(), this._blockOffset = 0;
    }
    for (;o < t3.length; )
      r2[this._blockOffset++] = t3[o++];
    for (var p = 0, m = t3.length * 8;m > 0; ++p)
      this._length[p] += m, m = this._length[p] / 4294967296 | 0, m > 0 && (this._length[p] -= 4294967296 * m);
    return this;
  };
  Ci.prototype._update = function() {
    throw new Error("_update is not implemented");
  };
  Ci.prototype.digest = function(t3) {
    if (this._finalized)
      throw new Error("Digest already called");
    this._finalized = true;
    var e2 = this._digest();
    t3 !== undefined && (e2 = e2.toString(t3)), this._block.fill(0), this._blockOffset = 0;
    for (var r2 = 0;r2 < 4; ++r2)
      this._length[r2] = 0;
    return e2;
  };
  Ci.prototype._digest = function() {
    throw new Error("_digest is not implemented");
  };
  sp.exports = Ci;
});
var Ao = T((gI, up) => {
  var o4 = Ie(), hp = bh(), s4 = Te().Buffer, h4 = new Array(16);
  function So() {
    hp.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
  }
  o4(So, hp);
  So.prototype._update = function() {
    for (var t3 = h4, e2 = 0;e2 < 16; ++e2)
      t3[e2] = this._block.readInt32LE(e2 * 4);
    var r2 = this._a, o = this._b, f = this._c, p = this._d;
    r2 = jt(r2, o, f, p, t3[0], 3614090360, 7), p = jt(p, r2, o, f, t3[1], 3905402710, 12), f = jt(f, p, r2, o, t3[2], 606105819, 17), o = jt(o, f, p, r2, t3[3], 3250441966, 22), r2 = jt(r2, o, f, p, t3[4], 4118548399, 7), p = jt(p, r2, o, f, t3[5], 1200080426, 12), f = jt(f, p, r2, o, t3[6], 2821735955, 17), o = jt(o, f, p, r2, t3[7], 4249261313, 22), r2 = jt(r2, o, f, p, t3[8], 1770035416, 7), p = jt(p, r2, o, f, t3[9], 2336552879, 12), f = jt(f, p, r2, o, t3[10], 4294925233, 17), o = jt(o, f, p, r2, t3[11], 2304563134, 22), r2 = jt(r2, o, f, p, t3[12], 1804603682, 7), p = jt(p, r2, o, f, t3[13], 4254626195, 12), f = jt(f, p, r2, o, t3[14], 2792965006, 17), o = jt(o, f, p, r2, t3[15], 1236535329, 22), r2 = Zt(r2, o, f, p, t3[1], 4129170786, 5), p = Zt(p, r2, o, f, t3[6], 3225465664, 9), f = Zt(f, p, r2, o, t3[11], 643717713, 14), o = Zt(o, f, p, r2, t3[0], 3921069994, 20), r2 = Zt(r2, o, f, p, t3[5], 3593408605, 5), p = Zt(p, r2, o, f, t3[10], 38016083, 9), f = Zt(f, p, r2, o, t3[15], 3634488961, 14), o = Zt(o, f, p, r2, t3[4], 3889429448, 20), r2 = Zt(r2, o, f, p, t3[9], 568446438, 5), p = Zt(p, r2, o, f, t3[14], 3275163606, 9), f = Zt(f, p, r2, o, t3[3], 4107603335, 14), o = Zt(o, f, p, r2, t3[8], 1163531501, 20), r2 = Zt(r2, o, f, p, t3[13], 2850285829, 5), p = Zt(p, r2, o, f, t3[2], 4243563512, 9), f = Zt(f, p, r2, o, t3[7], 1735328473, 14), o = Zt(o, f, p, r2, t3[12], 2368359562, 20), r2 = Vt(r2, o, f, p, t3[5], 4294588738, 4), p = Vt(p, r2, o, f, t3[8], 2272392833, 11), f = Vt(f, p, r2, o, t3[11], 1839030562, 16), o = Vt(o, f, p, r2, t3[14], 4259657740, 23), r2 = Vt(r2, o, f, p, t3[1], 2763975236, 4), p = Vt(p, r2, o, f, t3[4], 1272893353, 11), f = Vt(f, p, r2, o, t3[7], 4139469664, 16), o = Vt(o, f, p, r2, t3[10], 3200236656, 23), r2 = Vt(r2, o, f, p, t3[13], 681279174, 4), p = Vt(p, r2, o, f, t3[0], 3936430074, 11), f = Vt(f, p, r2, o, t3[3], 3572445317, 16), o = Vt(o, f, p, r2, t3[6], 76029189, 23), r2 = Vt(r2, o, f, p, t3[9], 3654602809, 4), p = Vt(p, r2, o, f, t3[12], 3873151461, 11), f = Vt(f, p, r2, o, t3[15], 530742520, 16), o = Vt(o, f, p, r2, t3[2], 3299628645, 23), r2 = $t(r2, o, f, p, t3[0], 4096336452, 6), p = $t(p, r2, o, f, t3[7], 1126891415, 10), f = $t(f, p, r2, o, t3[14], 2878612391, 15), o = $t(o, f, p, r2, t3[5], 4237533241, 21), r2 = $t(r2, o, f, p, t3[12], 1700485571, 6), p = $t(p, r2, o, f, t3[3], 2399980690, 10), f = $t(f, p, r2, o, t3[10], 4293915773, 15), o = $t(o, f, p, r2, t3[1], 2240044497, 21), r2 = $t(r2, o, f, p, t3[8], 1873313359, 6), p = $t(p, r2, o, f, t3[15], 4264355552, 10), f = $t(f, p, r2, o, t3[6], 2734768916, 15), o = $t(o, f, p, r2, t3[13], 1309151649, 21), r2 = $t(r2, o, f, p, t3[4], 4149444226, 6), p = $t(p, r2, o, f, t3[11], 3174756917, 10), f = $t(f, p, r2, o, t3[2], 718787259, 15), o = $t(o, f, p, r2, t3[9], 3951481745, 21), this._a = this._a + r2 | 0, this._b = this._b + o | 0, this._c = this._c + f | 0, this._d = this._d + p | 0;
  };
  So.prototype._digest = function() {
    this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
    var t3 = s4.allocUnsafe(16);
    return t3.writeInt32LE(this._a, 0), t3.writeInt32LE(this._b, 4), t3.writeInt32LE(this._c, 8), t3.writeInt32LE(this._d, 12), t3;
  };
  function Eo(t3, e2) {
    return t3 << e2 | t3 >>> 32 - e2;
  }
  function jt(t3, e2, r2, o, f, p, m) {
    return Eo(t3 + (e2 & r2 | ~e2 & o) + f + p | 0, m) + e2 | 0;
  }
  function Zt(t3, e2, r2, o, f, p, m) {
    return Eo(t3 + (e2 & o | r2 & ~o) + f + p | 0, m) + e2 | 0;
  }
  function Vt(t3, e2, r2, o, f, p, m) {
    return Eo(t3 + (e2 ^ r2 ^ o) + f + p | 0, m) + e2 | 0;
  }
  function $t(t3, e2, r2, o, f, p, m) {
    return Eo(t3 + (r2 ^ (e2 | ~o)) + f + p | 0, m) + e2 | 0;
  }
  up.exports = So;
});
var Bo = T((yI, mp) => {
  var mh = Ut().Buffer, u4 = Ie(), bp = bh(), l4 = new Array(16), na = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], fa = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], aa = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], oa = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], sa = [0, 1518500249, 1859775393, 2400959708, 2840853838], ha = [1352829926, 1548603684, 1836072691, 2053994217, 0];
  function Ro() {
    bp.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
  }
  u4(Ro, bp);
  Ro.prototype._update = function() {
    for (var t3 = l4, e2 = 0;e2 < 16; ++e2)
      t3[e2] = this._block.readInt32LE(e2 * 4);
    for (var r2 = this._a | 0, o = this._b | 0, f = this._c | 0, p = this._d | 0, m = this._e | 0, y = this._a | 0, M = this._b | 0, x = this._c | 0, S = this._d | 0, E = this._e | 0, B = 0;B < 80; B += 1) {
      var q, L;
      B < 16 ? (q = lp(r2, o, f, p, m, t3[na[B]], sa[0], aa[B]), L = vp(y, M, x, S, E, t3[fa[B]], ha[0], oa[B])) : B < 32 ? (q = dp(r2, o, f, p, m, t3[na[B]], sa[1], aa[B]), L = pp(y, M, x, S, E, t3[fa[B]], ha[1], oa[B])) : B < 48 ? (q = cp(r2, o, f, p, m, t3[na[B]], sa[2], aa[B]), L = cp(y, M, x, S, E, t3[fa[B]], ha[2], oa[B])) : B < 64 ? (q = pp(r2, o, f, p, m, t3[na[B]], sa[3], aa[B]), L = dp(y, M, x, S, E, t3[fa[B]], ha[3], oa[B])) : (q = vp(r2, o, f, p, m, t3[na[B]], sa[4], aa[B]), L = lp(y, M, x, S, E, t3[fa[B]], ha[4], oa[B])), r2 = m, m = p, p = cn(f, 10), f = o, o = q, y = E, E = S, S = cn(x, 10), x = M, M = L;
    }
    var ge = this._b + f + S | 0;
    this._b = this._c + p + E | 0, this._c = this._d + m + y | 0, this._d = this._e + r2 + M | 0, this._e = this._a + o + x | 0, this._a = ge;
  };
  Ro.prototype._digest = function() {
    this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
    var t3 = mh.alloc ? mh.alloc(20) : new mh(20);
    return t3.writeInt32LE(this._a, 0), t3.writeInt32LE(this._b, 4), t3.writeInt32LE(this._c, 8), t3.writeInt32LE(this._d, 12), t3.writeInt32LE(this._e, 16), t3;
  };
  function cn(t3, e2) {
    return t3 << e2 | t3 >>> 32 - e2;
  }
  function lp(t3, e2, r2, o, f, p, m, y) {
    return cn(t3 + (e2 ^ r2 ^ o) + p + m | 0, y) + f | 0;
  }
  function dp(t3, e2, r2, o, f, p, m, y) {
    return cn(t3 + (e2 & r2 | ~e2 & o) + p + m | 0, y) + f | 0;
  }
  function cp(t3, e2, r2, o, f, p, m, y) {
    return cn(t3 + ((e2 | ~r2) ^ o) + p + m | 0, y) + f | 0;
  }
  function pp(t3, e2, r2, o, f, p, m, y) {
    return cn(t3 + (e2 & o | r2 & ~o) + p + m | 0, y) + f | 0;
  }
  function vp(t3, e2, r2, o, f, p, m, y) {
    return cn(t3 + (e2 ^ (r2 | ~o)) + p + m | 0, y) + f | 0;
  }
  mp.exports = Ro;
});
var pn = T((wI, yp) => {
  var gp = Te().Buffer;
  function qo(t3, e2) {
    this._block = gp.alloc(t3), this._finalSize = e2, this._blockSize = t3, this._len = 0;
  }
  qo.prototype.update = function(t3, e2) {
    typeof t3 == "string" && (e2 = e2 || "utf8", t3 = gp.from(t3, e2));
    for (var r2 = this._block, o = this._blockSize, f = t3.length, p = this._len, m = 0;m < f; ) {
      for (var y = p % o, M = Math.min(f - m, o - y), x = 0;x < M; x++)
        r2[y + x] = t3[m + x];
      p += M, m += M, p % o === 0 && this._update(r2);
    }
    return this._len += f, this;
  };
  qo.prototype.digest = function(t3) {
    var e2 = this._len % this._blockSize;
    this._block[e2] = 128, this._block.fill(0, e2 + 1), e2 >= this._finalSize && (this._update(this._block), this._block.fill(0));
    var r2 = this._len * 8;
    if (r2 <= 4294967295)
      this._block.writeUInt32BE(r2, this._blockSize - 4);
    else {
      var o = (r2 & 4294967295) >>> 0, f = (r2 - o) / 4294967296;
      this._block.writeUInt32BE(f, this._blockSize - 8), this._block.writeUInt32BE(o, this._blockSize - 4);
    }
    this._update(this._block);
    var p = this._hash();
    return t3 ? p.toString(t3) : p;
  };
  qo.prototype._update = function() {
    throw new Error("_update must be implemented by subclass");
  };
  yp.exports = qo;
});
var _p = T((MI, Mp) => {
  var d4 = Ie(), wp = pn(), c4 = Te().Buffer, p4 = [1518500249, 1859775393, -1894007588, -899497514], v4 = new Array(80);
  function ua() {
    this.init(), this._w = v4, wp.call(this, 64, 56);
  }
  d4(ua, wp);
  ua.prototype.init = function() {
    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
  };
  function b4(t3) {
    return t3 << 5 | t3 >>> 27;
  }
  function m4(t3) {
    return t3 << 30 | t3 >>> 2;
  }
  function g4(t3, e2, r2, o) {
    return t3 === 0 ? e2 & r2 | ~e2 & o : t3 === 2 ? e2 & r2 | e2 & o | r2 & o : e2 ^ r2 ^ o;
  }
  ua.prototype._update = function(t3) {
    for (var e2 = this._w, r2 = this._a | 0, o = this._b | 0, f = this._c | 0, p = this._d | 0, m = this._e | 0, y = 0;y < 16; ++y)
      e2[y] = t3.readInt32BE(y * 4);
    for (;y < 80; ++y)
      e2[y] = e2[y - 3] ^ e2[y - 8] ^ e2[y - 14] ^ e2[y - 16];
    for (var M = 0;M < 80; ++M) {
      var x = ~~(M / 20), S = b4(r2) + g4(x, o, f, p) + m + e2[M] + p4[x] | 0;
      m = p, p = f, f = m4(o), o = r2, r2 = S;
    }
    this._a = r2 + this._a | 0, this._b = o + this._b | 0, this._c = f + this._c | 0, this._d = p + this._d | 0, this._e = m + this._e | 0;
  };
  ua.prototype._hash = function() {
    var t3 = c4.allocUnsafe(20);
    return t3.writeInt32BE(this._a | 0, 0), t3.writeInt32BE(this._b | 0, 4), t3.writeInt32BE(this._c | 0, 8), t3.writeInt32BE(this._d | 0, 12), t3.writeInt32BE(this._e | 0, 16), t3;
  };
  Mp.exports = ua;
});
var Ep = T((_I, Sp) => {
  var y4 = Ie(), xp = pn(), w4 = Te().Buffer, M4 = [1518500249, 1859775393, -1894007588, -899497514], _4 = new Array(80);
  function la() {
    this.init(), this._w = _4, xp.call(this, 64, 56);
  }
  y4(la, xp);
  la.prototype.init = function() {
    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
  };
  function x4(t3) {
    return t3 << 1 | t3 >>> 31;
  }
  function S4(t3) {
    return t3 << 5 | t3 >>> 27;
  }
  function E4(t3) {
    return t3 << 30 | t3 >>> 2;
  }
  function A4(t3, e2, r2, o) {
    return t3 === 0 ? e2 & r2 | ~e2 & o : t3 === 2 ? e2 & r2 | e2 & o | r2 & o : e2 ^ r2 ^ o;
  }
  la.prototype._update = function(t3) {
    for (var e2 = this._w, r2 = this._a | 0, o = this._b | 0, f = this._c | 0, p = this._d | 0, m = this._e | 0, y = 0;y < 16; ++y)
      e2[y] = t3.readInt32BE(y * 4);
    for (;y < 80; ++y)
      e2[y] = x4(e2[y - 3] ^ e2[y - 8] ^ e2[y - 14] ^ e2[y - 16]);
    for (var M = 0;M < 80; ++M) {
      var x = ~~(M / 20), S = S4(r2) + A4(x, o, f, p) + m + e2[M] + M4[x] | 0;
      m = p, p = f, f = E4(o), o = r2, r2 = S;
    }
    this._a = r2 + this._a | 0, this._b = o + this._b | 0, this._c = f + this._c | 0, this._d = p + this._d | 0, this._e = m + this._e | 0;
  };
  la.prototype._hash = function() {
    var t3 = w4.allocUnsafe(20);
    return t3.writeInt32BE(this._a | 0, 0), t3.writeInt32BE(this._b | 0, 4), t3.writeInt32BE(this._c | 0, 8), t3.writeInt32BE(this._d | 0, 12), t3.writeInt32BE(this._e | 0, 16), t3;
  };
  Sp.exports = la;
});
var gh = T((xI, Rp) => {
  var R4 = Ie(), Ap = pn(), B4 = Te().Buffer, q4 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], I4 = new Array(64);
  function da() {
    this.init(), this._w = I4, Ap.call(this, 64, 56);
  }
  R4(da, Ap);
  da.prototype.init = function() {
    return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
  };
  function T4(t3, e2, r2) {
    return r2 ^ t3 & (e2 ^ r2);
  }
  function k4(t3, e2, r2) {
    return t3 & e2 | r2 & (t3 | e2);
  }
  function L4(t3) {
    return (t3 >>> 2 | t3 << 30) ^ (t3 >>> 13 | t3 << 19) ^ (t3 >>> 22 | t3 << 10);
  }
  function N4(t3) {
    return (t3 >>> 6 | t3 << 26) ^ (t3 >>> 11 | t3 << 21) ^ (t3 >>> 25 | t3 << 7);
  }
  function D4(t3) {
    return (t3 >>> 7 | t3 << 25) ^ (t3 >>> 18 | t3 << 14) ^ t3 >>> 3;
  }
  function P4(t3) {
    return (t3 >>> 17 | t3 << 15) ^ (t3 >>> 19 | t3 << 13) ^ t3 >>> 10;
  }
  da.prototype._update = function(t3) {
    for (var e2 = this._w, r2 = this._a | 0, o = this._b | 0, f = this._c | 0, p = this._d | 0, m = this._e | 0, y = this._f | 0, M = this._g | 0, x = this._h | 0, S = 0;S < 16; ++S)
      e2[S] = t3.readInt32BE(S * 4);
    for (;S < 64; ++S)
      e2[S] = P4(e2[S - 2]) + e2[S - 7] + D4(e2[S - 15]) + e2[S - 16] | 0;
    for (var E = 0;E < 64; ++E) {
      var B = x + N4(m) + T4(m, y, M) + q4[E] + e2[E] | 0, q = L4(r2) + k4(r2, o, f) | 0;
      x = M, M = y, y = m, m = p + B | 0, p = f, f = o, o = r2, r2 = B + q | 0;
    }
    this._a = r2 + this._a | 0, this._b = o + this._b | 0, this._c = f + this._c | 0, this._d = p + this._d | 0, this._e = m + this._e | 0, this._f = y + this._f | 0, this._g = M + this._g | 0, this._h = x + this._h | 0;
  };
  da.prototype._hash = function() {
    var t3 = B4.allocUnsafe(32);
    return t3.writeInt32BE(this._a, 0), t3.writeInt32BE(this._b, 4), t3.writeInt32BE(this._c, 8), t3.writeInt32BE(this._d, 12), t3.writeInt32BE(this._e, 16), t3.writeInt32BE(this._f, 20), t3.writeInt32BE(this._g, 24), t3.writeInt32BE(this._h, 28), t3;
  };
  Rp.exports = da;
});
var qp = T((SI, Bp) => {
  var C4 = Ie(), O4 = gh(), F4 = pn(), U4 = Te().Buffer, z4 = new Array(64);
  function Io() {
    this.init(), this._w = z4, F4.call(this, 64, 56);
  }
  C4(Io, O4);
  Io.prototype.init = function() {
    return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
  };
  Io.prototype._hash = function() {
    var t3 = U4.allocUnsafe(28);
    return t3.writeInt32BE(this._a, 0), t3.writeInt32BE(this._b, 4), t3.writeInt32BE(this._c, 8), t3.writeInt32BE(this._d, 12), t3.writeInt32BE(this._e, 16), t3.writeInt32BE(this._f, 20), t3.writeInt32BE(this._g, 24), t3;
  };
  Bp.exports = Io;
});
var yh = T((EI, Pp) => {
  var H4 = Ie(), Dp = pn(), W4 = Te().Buffer, Ip = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], K4 = new Array(160);
  function ca() {
    this.init(), this._w = K4, Dp.call(this, 128, 112);
  }
  H4(ca, Dp);
  ca.prototype.init = function() {
    return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
  };
  function Tp(t3, e2, r2) {
    return r2 ^ t3 & (e2 ^ r2);
  }
  function kp(t3, e2, r2) {
    return t3 & e2 | r2 & (t3 | e2);
  }
  function Lp(t3, e2) {
    return (t3 >>> 28 | e2 << 4) ^ (e2 >>> 2 | t3 << 30) ^ (e2 >>> 7 | t3 << 25);
  }
  function Np(t3, e2) {
    return (t3 >>> 14 | e2 << 18) ^ (t3 >>> 18 | e2 << 14) ^ (e2 >>> 9 | t3 << 23);
  }
  function j4(t3, e2) {
    return (t3 >>> 1 | e2 << 31) ^ (t3 >>> 8 | e2 << 24) ^ t3 >>> 7;
  }
  function Z4(t3, e2) {
    return (t3 >>> 1 | e2 << 31) ^ (t3 >>> 8 | e2 << 24) ^ (t3 >>> 7 | e2 << 25);
  }
  function V4(t3, e2) {
    return (t3 >>> 19 | e2 << 13) ^ (e2 >>> 29 | t3 << 3) ^ t3 >>> 6;
  }
  function $4(t3, e2) {
    return (t3 >>> 19 | e2 << 13) ^ (e2 >>> 29 | t3 << 3) ^ (t3 >>> 6 | e2 << 26);
  }
  function Pt(t3, e2) {
    return t3 >>> 0 < e2 >>> 0 ? 1 : 0;
  }
  ca.prototype._update = function(t3) {
    for (var e2 = this._w, r2 = this._ah | 0, o = this._bh | 0, f = this._ch | 0, p = this._dh | 0, m = this._eh | 0, y = this._fh | 0, M = this._gh | 0, x = this._hh | 0, S = this._al | 0, E = this._bl | 0, B = this._cl | 0, q = this._dl | 0, L = this._el | 0, ge = this._fl | 0, _e = this._gl | 0, N = this._hl | 0, we = 0;we < 32; we += 2)
      e2[we] = t3.readInt32BE(we * 4), e2[we + 1] = t3.readInt32BE(we * 4 + 4);
    for (;we < 160; we += 2) {
      var ye = e2[we - 30], xe = e2[we - 15 * 2 + 1], Re = j4(ye, xe), Ee = Z4(xe, ye);
      ye = e2[we - 2 * 2], xe = e2[we - 2 * 2 + 1];
      var Ae = V4(ye, xe), P = $4(xe, ye), Se = e2[we - 7 * 2], v = e2[we - 7 * 2 + 1], i = e2[we - 16 * 2], a2 = e2[we - 16 * 2 + 1], h = Ee + v | 0, s = Re + Se + Pt(h, Ee) | 0;
      h = h + P | 0, s = s + Ae + Pt(h, P) | 0, h = h + a2 | 0, s = s + i + Pt(h, a2) | 0, e2[we] = s, e2[we + 1] = h;
    }
    for (var u = 0;u < 160; u += 2) {
      s = e2[u], h = e2[u + 1];
      var c = kp(r2, o, f), b = kp(S, E, B), l = Lp(r2, S), n = Lp(S, r2), d = Np(m, L), w = Np(L, m), g = Ip[u], _ = Ip[u + 1], A = Tp(m, y, M), R = Tp(L, ge, _e), I = N + w | 0, Me = x + d + Pt(I, N) | 0;
      I = I + R | 0, Me = Me + A + Pt(I, R) | 0, I = I + _ | 0, Me = Me + g + Pt(I, _) | 0, I = I + h | 0, Me = Me + s + Pt(I, h) | 0;
      var k = n + b | 0, D = l + c + Pt(k, n) | 0;
      x = M, N = _e, M = y, _e = ge, y = m, ge = L, L = q + I | 0, m = p + Me + Pt(L, q) | 0, p = f, q = B, f = o, B = E, o = r2, E = S, S = I + k | 0, r2 = Me + D + Pt(S, I) | 0;
    }
    this._al = this._al + S | 0, this._bl = this._bl + E | 0, this._cl = this._cl + B | 0, this._dl = this._dl + q | 0, this._el = this._el + L | 0, this._fl = this._fl + ge | 0, this._gl = this._gl + _e | 0, this._hl = this._hl + N | 0, this._ah = this._ah + r2 + Pt(this._al, S) | 0, this._bh = this._bh + o + Pt(this._bl, E) | 0, this._ch = this._ch + f + Pt(this._cl, B) | 0, this._dh = this._dh + p + Pt(this._dl, q) | 0, this._eh = this._eh + m + Pt(this._el, L) | 0, this._fh = this._fh + y + Pt(this._fl, ge) | 0, this._gh = this._gh + M + Pt(this._gl, _e) | 0, this._hh = this._hh + x + Pt(this._hl, N) | 0;
  };
  ca.prototype._hash = function() {
    var t3 = W4.allocUnsafe(64);
    function e2(r2, o, f) {
      t3.writeInt32BE(r2, f), t3.writeInt32BE(o, f + 4);
    }
    return e2(this._ah, this._al, 0), e2(this._bh, this._bl, 8), e2(this._ch, this._cl, 16), e2(this._dh, this._dl, 24), e2(this._eh, this._el, 32), e2(this._fh, this._fl, 40), e2(this._gh, this._gl, 48), e2(this._hh, this._hl, 56), t3;
  };
  Pp.exports = ca;
});
var Op = T((AI, Cp) => {
  var G4 = Ie(), Y4 = yh(), X4 = pn(), J4 = Te().Buffer, Q4 = new Array(160);
  function To() {
    this.init(), this._w = Q4, X4.call(this, 128, 112);
  }
  G4(To, Y4);
  To.prototype.init = function() {
    return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
  };
  To.prototype._hash = function() {
    var t3 = J4.allocUnsafe(48);
    function e2(r2, o, f) {
      t3.writeInt32BE(r2, f), t3.writeInt32BE(o, f + 4);
    }
    return e2(this._ah, this._al, 0), e2(this._bh, this._bl, 8), e2(this._ch, this._cl, 16), e2(this._dh, this._dl, 24), e2(this._eh, this._el, 32), e2(this._fh, this._fl, 40), t3;
  };
  Cp.exports = To;
});
var ko = T((ci, Fp) => {
  var ci = Fp.exports = function(e2) {
    e2 = e2.toLowerCase();
    var r2 = ci[e2];
    if (!r2)
      throw new Error(e2 + " is not supported (we accept pull requests)");
    return new r2;
  };
  ci.sha = _p();
  ci.sha1 = Ep();
  ci.sha224 = qp();
  ci.sha256 = gh();
  ci.sha384 = Op();
  ci.sha512 = yh();
});
var Tt = T((RI, Up) => {
  Up.exports = { ArrayIsArray(t3) {
    return Array.isArray(t3);
  }, ArrayPrototypeIncludes(t3, e2) {
    return t3.includes(e2);
  }, ArrayPrototypeIndexOf(t3, e2) {
    return t3.indexOf(e2);
  }, ArrayPrototypeJoin(t3, e2) {
    return t3.join(e2);
  }, ArrayPrototypeMap(t3, e2) {
    return t3.map(e2);
  }, ArrayPrototypePop(t3, e2) {
    return t3.pop(e2);
  }, ArrayPrototypePush(t3, e2) {
    return t3.push(e2);
  }, ArrayPrototypeSlice(t3, e2, r2) {
    return t3.slice(e2, r2);
  }, Error, FunctionPrototypeCall(t3, e2, ...r2) {
    return t3.call(e2, ...r2);
  }, FunctionPrototypeSymbolHasInstance(t3, e2) {
    return Function.prototype[Symbol.hasInstance].call(t3, e2);
  }, MathFloor: Math.floor, Number, NumberIsInteger: Number.isInteger, NumberIsNaN: Number.isNaN, NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER, NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER, NumberParseInt: Number.parseInt, ObjectDefineProperties(t3, e2) {
    return Object.defineProperties(t3, e2);
  }, ObjectDefineProperty(t3, e2, r2) {
    return Object.defineProperty(t3, e2, r2);
  }, ObjectGetOwnPropertyDescriptor(t3, e2) {
    return Object.getOwnPropertyDescriptor(t3, e2);
  }, ObjectKeys(t3) {
    return Object.keys(t3);
  }, ObjectSetPrototypeOf(t3, e2) {
    return Object.setPrototypeOf(t3, e2);
  }, Promise, PromisePrototypeCatch(t3, e2) {
    return t3.catch(e2);
  }, PromisePrototypeThen(t3, e2, r2) {
    return t3.then(e2, r2);
  }, PromiseReject(t3) {
    return Promise.reject(t3);
  }, ReflectApply: Reflect.apply, RegExpPrototypeTest(t3, e2) {
    return t3.test(e2);
  }, SafeSet: Set, String, StringPrototypeSlice(t3, e2, r2) {
    return t3.slice(e2, r2);
  }, StringPrototypeToLowerCase(t3) {
    return t3.toLowerCase();
  }, StringPrototypeToUpperCase(t3) {
    return t3.toUpperCase();
  }, StringPrototypeTrim(t3) {
    return t3.trim();
  }, Symbol, SymbolAsyncIterator: Symbol.asyncIterator, SymbolHasInstance: Symbol.hasInstance, SymbolIterator: Symbol.iterator, TypedArrayPrototypeSet(t3, e2, r2) {
    return t3.set(e2, r2);
  }, Uint8Array };
});
var Gr = T((BI, Mh) => {
  var e_ = Ut(), t_ = Object.getPrototypeOf(async function() {
  }).constructor, zp = globalThis.Blob || e_.Blob, r_ = typeof zp < "u" ? function(e2) {
    return e2 instanceof zp;
  } : function(e2) {
    return false;
  }, wh = class extends Error {
    constructor(e2) {
      if (!Array.isArray(e2))
        throw new TypeError(`Expected input to be an Array, got ${typeof e2}`);
      let r2 = "";
      for (let o = 0;o < e2.length; o++)
        r2 += `    ${e2[o].stack}
`;
      super(r2), this.name = "AggregateError", this.errors = e2;
    }
  };
  Mh.exports = { AggregateError: wh, kEmptyObject: Object.freeze({}), once(t3) {
    let e2 = false;
    return function(...r2) {
      e2 || (e2 = true, t3.apply(this, r2));
    };
  }, createDeferredPromise: function() {
    let t3, e2;
    return { promise: new Promise((o, f) => {
      t3 = o, e2 = f;
    }), resolve: t3, reject: e2 };
  }, promisify(t3) {
    return new Promise((e2, r2) => {
      t3((o, ...f) => o ? r2(o) : e2(...f));
    });
  }, debuglog() {
    return function() {
    };
  }, format(t3, ...e2) {
    return t3.replace(/%([sdifj])/g, function(...[r2, o]) {
      let f = e2.shift();
      return o === "f" ? f.toFixed(6) : o === "j" ? JSON.stringify(f) : o === "s" && typeof f == "object" ? `${f.constructor !== Object ? f.constructor.name : ""} {}`.trim() : f.toString();
    });
  }, inspect(t3) {
    switch (typeof t3) {
      case "string":
        if (t3.includes("'"))
          if (t3.includes('"')) {
            if (!t3.includes("`") && !t3.includes("${"))
              return `\`${t3}\``;
          } else
            return `"${t3}"`;
        return `'${t3}'`;
      case "number":
        return isNaN(t3) ? "NaN" : Object.is(t3, -0) ? String(t3) : t3;
      case "bigint":
        return `${String(t3)}n`;
      case "boolean":
      case "undefined":
        return String(t3);
      case "object":
        return "{}";
    }
  }, types: { isAsyncFunction(t3) {
    return t3 instanceof t_;
  }, isArrayBufferView(t3) {
    return ArrayBuffer.isView(t3);
  } }, isBlob: r_ };
  Mh.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
});
var No = T((qI, Lo) => {
  var { AbortController: Hp, AbortSignal: i_ } = typeof self < "u" ? self : typeof window < "u" ? window : undefined;
  Lo.exports = Hp;
  Lo.exports.AbortSignal = i_;
  Lo.exports.default = Hp;
});
var Jt = T((II, jp) => {
  var { format: n_, inspect: Do, AggregateError: f_ } = Gr(), a_ = globalThis.AggregateError || f_, o_ = Symbol("kIsNodeError"), s_ = ["string", "function", "number", "object", "Function", "Object", "boolean", "bigint", "symbol"], h_ = /^([A-Z][a-z0-9]*)+$/, u_ = "__node_internal_", Po = {};
  function vn(t3, e2) {
    if (!t3)
      throw new Po.ERR_INTERNAL_ASSERTION(e2);
  }
  function Wp(t3) {
    let e2 = "", r2 = t3.length, o = t3[0] === "-" ? 1 : 0;
    for (;r2 >= o + 4; r2 -= 3)
      e2 = `_${t3.slice(r2 - 3, r2)}${e2}`;
    return `${t3.slice(0, r2)}${e2}`;
  }
  function l_(t3, e2, r2) {
    if (typeof e2 == "function")
      return vn(e2.length <= r2.length, `Code: ${t3}; The provided arguments length (${r2.length}) does not match the required ones (${e2.length}).`), e2(...r2);
    let o = (e2.match(/%[dfijoOs]/g) || []).length;
    return vn(o === r2.length, `Code: ${t3}; The provided arguments length (${r2.length}) does not match the required ones (${o}).`), r2.length === 0 ? e2 : n_(e2, ...r2);
  }
  function zt(t3, e2, r2) {
    r2 || (r2 = Error);

    class o extends r2 {
      constructor(...p) {
        super(l_(t3, e2, p));
      }
      toString() {
        return `${this.name} [${t3}]: ${this.message}`;
      }
    }
    Object.defineProperties(o.prototype, { name: { value: r2.name, writable: true, enumerable: false, configurable: true }, toString: { value() {
      return `${this.name} [${t3}]: ${this.message}`;
    }, writable: true, enumerable: false, configurable: true } }), o.prototype.code = t3, o.prototype[o_] = true, Po[t3] = o;
  }
  function Kp(t3) {
    let e2 = u_ + t3.name;
    return Object.defineProperty(t3, "name", { value: e2 }), t3;
  }
  function d_(t3, e2) {
    if (t3 && e2 && t3 !== e2) {
      if (Array.isArray(e2.errors))
        return e2.errors.push(t3), e2;
      let r2 = new a_([e2, t3], e2.message);
      return r2.code = e2.code, r2;
    }
    return t3 || e2;
  }
  var _h = class extends Error {
    constructor(e2 = "The operation was aborted", r2 = undefined) {
      if (r2 !== undefined && typeof r2 != "object")
        throw new Po.ERR_INVALID_ARG_TYPE("options", "Object", r2);
      super(e2, r2), this.code = "ABORT_ERR", this.name = "AbortError";
    }
  };
  zt("ERR_ASSERTION", "%s", Error);
  zt("ERR_INVALID_ARG_TYPE", (t3, e2, r2) => {
    vn(typeof t3 == "string", "'name' must be a string"), Array.isArray(e2) || (e2 = [e2]);
    let o = "The ";
    t3.endsWith(" argument") ? o += `${t3} ` : o += `"${t3}" ${t3.includes(".") ? "property" : "argument"} `, o += "must be ";
    let f = [], p = [], m = [];
    for (let M of e2)
      vn(typeof M == "string", "All expected entries have to be of type string"), s_.includes(M) ? f.push(M.toLowerCase()) : h_.test(M) ? p.push(M) : (vn(M !== "object", 'The value "object" should be written as "Object"'), m.push(M));
    if (p.length > 0) {
      let M = f.indexOf("object");
      M !== -1 && (f.splice(f, M, 1), p.push("Object"));
    }
    if (f.length > 0) {
      switch (f.length) {
        case 1:
          o += `of type ${f[0]}`;
          break;
        case 2:
          o += `one of type ${f[0]} or ${f[1]}`;
          break;
        default: {
          let M = f.pop();
          o += `one of type ${f.join(", ")}, or ${M}`;
        }
      }
      (p.length > 0 || m.length > 0) && (o += " or ");
    }
    if (p.length > 0) {
      switch (p.length) {
        case 1:
          o += `an instance of ${p[0]}`;
          break;
        case 2:
          o += `an instance of ${p[0]} or ${p[1]}`;
          break;
        default: {
          let M = p.pop();
          o += `an instance of ${p.join(", ")}, or ${M}`;
        }
      }
      m.length > 0 && (o += " or ");
    }
    switch (m.length) {
      case 0:
        break;
      case 1:
        m[0].toLowerCase() !== m[0] && (o += "an "), o += `${m[0]}`;
        break;
      case 2:
        o += `one of ${m[0]} or ${m[1]}`;
        break;
      default: {
        let M = m.pop();
        o += `one of ${m.join(", ")}, or ${M}`;
      }
    }
    if (r2 == null)
      o += `. Received ${r2}`;
    else if (typeof r2 == "function" && r2.name)
      o += `. Received function ${r2.name}`;
    else if (typeof r2 == "object") {
      var y;
      (y = r2.constructor) !== null && y !== undefined && y.name ? o += `. Received an instance of ${r2.constructor.name}` : o += `. Received ${Do(r2, { depth: -1 })}`;
    } else {
      let M = Do(r2, { colors: false });
      M.length > 25 && (M = `${M.slice(0, 25)}...`), o += `. Received type ${typeof r2} (${M})`;
    }
    return o;
  }, TypeError);
  zt("ERR_INVALID_ARG_VALUE", (t3, e2, r2 = "is invalid") => {
    let o = Do(e2);
    return o.length > 128 && (o = o.slice(0, 128) + "..."), `The ${t3.includes(".") ? "property" : "argument"} '${t3}' ${r2}. Received ${o}`;
  }, TypeError);
  zt("ERR_INVALID_RETURN_VALUE", (t3, e2, r2) => {
    var o;
    let f = r2 != null && (o = r2.constructor) !== null && o !== undefined && o.name ? `instance of ${r2.constructor.name}` : `type ${typeof r2}`;
    return `Expected ${t3} to be returned from the "${e2}" function but got ${f}.`;
  }, TypeError);
  zt("ERR_MISSING_ARGS", (...t3) => {
    vn(t3.length > 0, "At least one arg needs to be specified");
    let e2, r2 = t3.length;
    switch (t3 = (Array.isArray(t3) ? t3 : [t3]).map((o) => `"${o}"`).join(" or "), r2) {
      case 1:
        e2 += `The ${t3[0]} argument`;
        break;
      case 2:
        e2 += `The ${t3[0]} and ${t3[1]} arguments`;
        break;
      default:
        {
          let o = t3.pop();
          e2 += `The ${t3.join(", ")}, and ${o} arguments`;
        }
        break;
    }
    return `${e2} must be specified`;
  }, TypeError);
  zt("ERR_OUT_OF_RANGE", (t3, e2, r2) => {
    vn(e2, 'Missing "range" argument');
    let o;
    return Number.isInteger(r2) && Math.abs(r2) > 2 ** 32 ? o = Wp(String(r2)) : typeof r2 == "bigint" ? (o = String(r2), (r2 > 2n ** 32n || r2 < -(2n ** 32n)) && (o = Wp(o)), o += "n") : o = Do(r2), `The value of "${t3}" is out of range. It must be ${e2}. Received ${o}`;
  }, RangeError);
  zt("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
  zt("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
  zt("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
  zt("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
  zt("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
  zt("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
  zt("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
  zt("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
  zt("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
  zt("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
  zt("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
  jp.exports = { AbortError: _h, aggregateTwoErrors: Kp(d_), hideStackFrames: Kp, codes: Po };
});
var pa = T((TI, Qp) => {
  var { ArrayIsArray: $p, ArrayPrototypeIncludes: Gp, ArrayPrototypeJoin: Yp, ArrayPrototypeMap: c_, NumberIsInteger: Sh, NumberIsNaN: p_, NumberMAX_SAFE_INTEGER: v_, NumberMIN_SAFE_INTEGER: b_, NumberParseInt: m_, ObjectPrototypeHasOwnProperty: g_, RegExpPrototypeExec: y_, String: w_, StringPrototypeToUpperCase: M_, StringPrototypeTrim: __ } = Tt(), { hideStackFrames: Ir, codes: { ERR_SOCKET_BAD_PORT: x_, ERR_INVALID_ARG_TYPE: tr, ERR_INVALID_ARG_VALUE: Co, ERR_OUT_OF_RANGE: bn, ERR_UNKNOWN_SIGNAL: Zp } } = Jt(), { normalizeEncoding: S_ } = Gr(), { isAsyncFunction: E_, isArrayBufferView: A_ } = Gr().types, Vp = {};
  function R_(t3) {
    return t3 === (t3 | 0);
  }
  function B_(t3) {
    return t3 === t3 >>> 0;
  }
  var q_ = /^[0-7]+$/, I_ = "must be a 32-bit unsigned integer or an octal string";
  function T_(t3, e2, r2) {
    if (typeof t3 > "u" && (t3 = r2), typeof t3 == "string") {
      if (y_(q_, t3) === null)
        throw new Co(e2, t3, I_);
      t3 = m_(t3, 8);
    }
    return Xp(t3, e2), t3;
  }
  var k_ = Ir((t3, e2, r2 = b_, o = v_) => {
    if (typeof t3 != "number")
      throw new tr(e2, "number", t3);
    if (!Sh(t3))
      throw new bn(e2, "an integer", t3);
    if (t3 < r2 || t3 > o)
      throw new bn(e2, `>= ${r2} && <= ${o}`, t3);
  }), L_ = Ir((t3, e2, r2 = -2147483648, o = 2147483647) => {
    if (typeof t3 != "number")
      throw new tr(e2, "number", t3);
    if (!Sh(t3))
      throw new bn(e2, "an integer", t3);
    if (t3 < r2 || t3 > o)
      throw new bn(e2, `>= ${r2} && <= ${o}`, t3);
  }), Xp = Ir((t3, e2, r2 = false) => {
    if (typeof t3 != "number")
      throw new tr(e2, "number", t3);
    if (!Sh(t3))
      throw new bn(e2, "an integer", t3);
    let o = r2 ? 1 : 0, f = 4294967295;
    if (t3 < o || t3 > f)
      throw new bn(e2, `>= ${o} && <= ${f}`, t3);
  });
  function Jp(t3, e2) {
    if (typeof t3 != "string")
      throw new tr(e2, "string", t3);
  }
  function N_(t3, e2, r2 = undefined, o) {
    if (typeof t3 != "number")
      throw new tr(e2, "number", t3);
    if (r2 != null && t3 < r2 || o != null && t3 > o || (r2 != null || o != null) && p_(t3))
      throw new bn(e2, `${r2 != null ? `>= ${r2}` : ""}${r2 != null && o != null ? " && " : ""}${o != null ? `<= ${o}` : ""}`, t3);
  }
  var D_ = Ir((t3, e2, r2) => {
    if (!Gp(r2, t3)) {
      let o = Yp(c_(r2, (p) => typeof p == "string" ? `'${p}'` : w_(p)), ", "), f = "must be one of: " + o;
      throw new Co(e2, t3, f);
    }
  });
  function P_(t3, e2) {
    if (typeof t3 != "boolean")
      throw new tr(e2, "boolean", t3);
  }
  function xh(t3, e2, r2) {
    return t3 == null || !g_(t3, e2) ? r2 : t3[e2];
  }
  var C_ = Ir((t3, e2, r2 = null) => {
    let o = xh(r2, "allowArray", false), f = xh(r2, "allowFunction", false);
    if (!xh(r2, "nullable", false) && t3 === null || !o && $p(t3) || typeof t3 != "object" && (!f || typeof t3 != "function"))
      throw new tr(e2, "Object", t3);
  }), O_ = Ir((t3, e2, r2 = 0) => {
    if (!$p(t3))
      throw new tr(e2, "Array", t3);
    if (t3.length < r2) {
      let o = `must be longer than ${r2}`;
      throw new Co(e2, t3, o);
    }
  });
  function F_(t3, e2 = "signal") {
    if (Jp(t3, e2), Vp[t3] === undefined)
      throw Vp[M_(t3)] !== undefined ? new Zp(t3 + " (signals must use all capital letters)") : new Zp(t3);
  }
  var U_ = Ir((t3, e2 = "buffer") => {
    if (!A_(t3))
      throw new tr(e2, ["Buffer", "TypedArray", "DataView"], t3);
  });
  function z_(t3, e2) {
    let r2 = S_(e2), o = t3.length;
    if (r2 === "hex" && o % 2 !== 0)
      throw new Co("encoding", e2, `is invalid for data of length ${o}`);
  }
  function H_(t3, e2 = "Port", r2 = true) {
    if (typeof t3 != "number" && typeof t3 != "string" || typeof t3 == "string" && __(t3).length === 0 || +t3 !== +t3 >>> 0 || t3 > 65535 || t3 === 0 && !r2)
      throw new x_(e2, t3, r2);
    return t3 | 0;
  }
  var W_ = Ir((t3, e2) => {
    if (t3 !== undefined && (t3 === null || typeof t3 != "object" || !("aborted" in t3)))
      throw new tr(e2, "AbortSignal", t3);
  }), K_ = Ir((t3, e2) => {
    if (typeof t3 != "function")
      throw new tr(e2, "Function", t3);
  }), j_ = Ir((t3, e2) => {
    if (typeof t3 != "function" || E_(t3))
      throw new tr(e2, "Function", t3);
  }), Z_ = Ir((t3, e2) => {
    if (t3 !== undefined)
      throw new tr(e2, "undefined", t3);
  });
  function V_(t3, e2, r2) {
    if (!Gp(r2, t3))
      throw new tr(e2, `('${Yp(r2, "|")}')`, t3);
  }
  Qp.exports = { isInt32: R_, isUint32: B_, parseFileMode: T_, validateArray: O_, validateBoolean: P_, validateBuffer: U_, validateEncoding: z_, validateFunction: K_, validateInt32: L_, validateInteger: k_, validateNumber: N_, validateObject: C_, validateOneOf: D_, validatePlainFunction: j_, validatePort: H_, validateSignalName: F_, validateString: Jp, validateUint32: Xp, validateUndefined: Z_, validateUnion: V_, validateAbortSignal: W_ };
});
var Rh = T((kI, i1) => {
  var dt = i1.exports = {}, Yr, Xr;
  function Eh() {
    throw new Error("setTimeout has not been defined");
  }
  function Ah() {
    throw new Error("clearTimeout has not been defined");
  }
  (function() {
    try {
      typeof setTimeout == "function" ? Yr = setTimeout : Yr = Eh;
    } catch {
      Yr = Eh;
    }
    try {
      typeof clearTimeout == "function" ? Xr = clearTimeout : Xr = Ah;
    } catch {
      Xr = Ah;
    }
  })();
  function e1(t3) {
    if (Yr === setTimeout)
      return setTimeout(t3, 0);
    if ((Yr === Eh || !Yr) && setTimeout)
      return Yr = setTimeout, setTimeout(t3, 0);
    try {
      return Yr(t3, 0);
    } catch {
      try {
        return Yr.call(null, t3, 0);
      } catch {
        return Yr.call(this, t3, 0);
      }
    }
  }
  function $_(t3) {
    if (Xr === clearTimeout)
      return clearTimeout(t3);
    if ((Xr === Ah || !Xr) && clearTimeout)
      return Xr = clearTimeout, clearTimeout(t3);
    try {
      return Xr(t3);
    } catch {
      try {
        return Xr.call(null, t3);
      } catch {
        return Xr.call(this, t3);
      }
    }
  }
  var pi = [], nf = false, mn, Oo = -1;
  function G_() {
    !nf || !mn || (nf = false, mn.length ? pi = mn.concat(pi) : Oo = -1, pi.length && t1());
  }
  function t1() {
    if (!nf) {
      var t3 = e1(G_);
      nf = true;
      for (var e2 = pi.length;e2; ) {
        for (mn = pi, pi = [];++Oo < e2; )
          mn && mn[Oo].run();
        Oo = -1, e2 = pi.length;
      }
      mn = null, nf = false, $_(t3);
    }
  }
  dt.nextTick = function(t3) {
    var e2 = new Array(arguments.length - 1);
    if (arguments.length > 1)
      for (var r2 = 1;r2 < arguments.length; r2++)
        e2[r2 - 1] = arguments[r2];
    pi.push(new r1(t3, e2)), pi.length === 1 && !nf && e1(t1);
  };
  function r1(t3, e2) {
    this.fun = t3, this.array = e2;
  }
  r1.prototype.run = function() {
    this.fun.apply(null, this.array);
  };
  dt.title = "browser";
  dt.browser = true;
  dt.env = {};
  dt.argv = [];
  dt.version = "";
  dt.versions = {};
  function vi() {
  }
  dt.on = vi;
  dt.addListener = vi;
  dt.once = vi;
  dt.off = vi;
  dt.removeListener = vi;
  dt.removeAllListeners = vi;
  dt.emit = vi;
  dt.prependListener = vi;
  dt.prependOnceListener = vi;
  dt.listeners = function(t3) {
    return [];
  };
  dt.binding = function(t3) {
    throw new Error("process.binding is not supported");
  };
  dt.cwd = function() {
    return "/";
  };
  dt.chdir = function(t3) {
    throw new Error("process.chdir is not supported");
  };
  dt.umask = function() {
    return 0;
  };
});
var pr = {};
Ja(pr, { default: () => Y_ });
var Y_;
var Oi = R0(() => {
  ot(pr, rn(Rh()));
  Y_ = rn(Rh());
});
var Fi = T((NI, v1) => {
  var { Symbol: Fo, SymbolAsyncIterator: n1, SymbolIterator: f1 } = Tt(), a1 = Fo("kDestroyed"), o1 = Fo("kIsErrored"), Bh = Fo("kIsReadable"), s1 = Fo("kIsDisturbed");
  function Uo(t3, e2 = false) {
    var r2;
    return !!(t3 && typeof t3.pipe == "function" && typeof t3.on == "function" && (!e2 || typeof t3.pause == "function" && typeof t3.resume == "function") && (!t3._writableState || ((r2 = t3._readableState) === null || r2 === undefined ? undefined : r2.readable) !== false) && (!t3._writableState || t3._readableState));
  }
  function zo(t3) {
    var e2;
    return !!(t3 && typeof t3.write == "function" && typeof t3.on == "function" && (!t3._readableState || ((e2 = t3._writableState) === null || e2 === undefined ? undefined : e2.writable) !== false));
  }
  function X_(t3) {
    return !!(t3 && typeof t3.pipe == "function" && t3._readableState && typeof t3.on == "function" && typeof t3.write == "function");
  }
  function gn(t3) {
    return t3 && (t3._readableState || t3._writableState || typeof t3.write == "function" && typeof t3.on == "function" || typeof t3.pipe == "function" && typeof t3.on == "function");
  }
  function J_(t3, e2) {
    return t3 == null ? false : e2 === true ? typeof t3[n1] == "function" : e2 === false ? typeof t3[f1] == "function" : typeof t3[n1] == "function" || typeof t3[f1] == "function";
  }
  function Ho(t3) {
    if (!gn(t3))
      return null;
    let { _writableState: e2, _readableState: r2 } = t3, o = e2 || r2;
    return !!(t3.destroyed || t3[a1] || o != null && o.destroyed);
  }
  function h1(t3) {
    if (!zo(t3))
      return null;
    if (t3.writableEnded === true)
      return true;
    let e2 = t3._writableState;
    return e2 != null && e2.errored ? false : typeof e2?.ended != "boolean" ? null : e2.ended;
  }
  function Q_(t3, e2) {
    if (!zo(t3))
      return null;
    if (t3.writableFinished === true)
      return true;
    let r2 = t3._writableState;
    return r2 != null && r2.errored ? false : typeof r2?.finished != "boolean" ? null : !!(r2.finished || e2 === false && r2.ended === true && r2.length === 0);
  }
  function e8(t3) {
    if (!Uo(t3))
      return null;
    if (t3.readableEnded === true)
      return true;
    let e2 = t3._readableState;
    return !e2 || e2.errored ? false : typeof e2?.ended != "boolean" ? null : e2.ended;
  }
  function u1(t3, e2) {
    if (!Uo(t3))
      return null;
    let r2 = t3._readableState;
    return r2 != null && r2.errored ? false : typeof r2?.endEmitted != "boolean" ? null : !!(r2.endEmitted || e2 === false && r2.ended === true && r2.length === 0);
  }
  function l1(t3) {
    return t3 && t3[Bh] != null ? t3[Bh] : typeof t3?.readable != "boolean" ? null : Ho(t3) ? false : Uo(t3) && t3.readable && !u1(t3);
  }
  function d1(t3) {
    return typeof t3?.writable != "boolean" ? null : Ho(t3) ? false : zo(t3) && t3.writable && !h1(t3);
  }
  function t8(t3, e2) {
    return gn(t3) ? Ho(t3) ? true : !(e2?.readable !== false && l1(t3) || e2?.writable !== false && d1(t3)) : null;
  }
  function r8(t3) {
    var e2, r2;
    return gn(t3) ? t3.writableErrored ? t3.writableErrored : (e2 = (r2 = t3._writableState) === null || r2 === undefined ? undefined : r2.errored) !== null && e2 !== undefined ? e2 : null : null;
  }
  function i8(t3) {
    var e2, r2;
    return gn(t3) ? t3.readableErrored ? t3.readableErrored : (e2 = (r2 = t3._readableState) === null || r2 === undefined ? undefined : r2.errored) !== null && e2 !== undefined ? e2 : null : null;
  }
  function n8(t3) {
    if (!gn(t3))
      return null;
    if (typeof t3.closed == "boolean")
      return t3.closed;
    let { _writableState: e2, _readableState: r2 } = t3;
    return typeof e2?.closed == "boolean" || typeof r2?.closed == "boolean" ? e2?.closed || r2?.closed : typeof t3._closed == "boolean" && c1(t3) ? t3._closed : null;
  }
  function c1(t3) {
    return typeof t3._closed == "boolean" && typeof t3._defaultKeepAlive == "boolean" && typeof t3._removedConnection == "boolean" && typeof t3._removedContLen == "boolean";
  }
  function p1(t3) {
    return typeof t3._sent100 == "boolean" && c1(t3);
  }
  function f8(t3) {
    var e2;
    return typeof t3._consuming == "boolean" && typeof t3._dumped == "boolean" && ((e2 = t3.req) === null || e2 === undefined ? undefined : e2.upgradeOrConnect) === undefined;
  }
  function a8(t3) {
    if (!gn(t3))
      return null;
    let { _writableState: e2, _readableState: r2 } = t3, o = e2 || r2;
    return !o && p1(t3) || !!(o && o.autoDestroy && o.emitClose && o.closed === false);
  }
  function o8(t3) {
    var e2;
    return !!(t3 && ((e2 = t3[s1]) !== null && e2 !== undefined ? e2 : t3.readableDidRead || t3.readableAborted));
  }
  function s8(t3) {
    var e2, r2, o, f, p, m, y, M, x, S;
    return !!(t3 && ((e2 = (r2 = (o = (f = (p = (m = t3[o1]) !== null && m !== undefined ? m : t3.readableErrored) !== null && p !== undefined ? p : t3.writableErrored) !== null && f !== undefined ? f : (y = t3._readableState) === null || y === undefined ? undefined : y.errorEmitted) !== null && o !== undefined ? o : (M = t3._writableState) === null || M === undefined ? undefined : M.errorEmitted) !== null && r2 !== undefined ? r2 : (x = t3._readableState) === null || x === undefined ? undefined : x.errored) !== null && e2 !== undefined ? e2 : (S = t3._writableState) === null || S === undefined ? undefined : S.errored));
  }
  v1.exports = { kDestroyed: a1, isDisturbed: o8, kIsDisturbed: s1, isErrored: s8, kIsErrored: o1, isReadable: l1, kIsReadable: Bh, isClosed: n8, isDestroyed: Ho, isDuplexNodeStream: X_, isFinished: t8, isIterable: J_, isReadableNodeStream: Uo, isReadableEnded: e8, isReadableFinished: u1, isReadableErrored: i8, isNodeStream: gn, isWritable: d1, isWritableNodeStream: zo, isWritableEnded: h1, isWritableFinished: Q_, isWritableErrored: r8, isServerRequest: f8, isServerResponse: p1, willEmitClose: a8 };
});
var Ui = T((DI, Ih) => {
  var ff = (Oi(), ur(pr)), { AbortError: h8, codes: u8 } = Jt(), { ERR_INVALID_ARG_TYPE: l8, ERR_STREAM_PREMATURE_CLOSE: b1 } = u8, { kEmptyObject: m1, once: g1 } = Gr(), { validateAbortSignal: d8, validateFunction: c8, validateObject: p8 } = pa(), { Promise: v8 } = Tt(), { isClosed: b8, isReadable: y1, isReadableNodeStream: qh, isReadableFinished: w1, isReadableErrored: m8, isWritable: M1, isWritableNodeStream: _1, isWritableFinished: x1, isWritableErrored: g8, isNodeStream: y8, willEmitClose: w8 } = Fi();
  function M8(t3) {
    return t3.setHeader && typeof t3.abort == "function";
  }
  var _8 = () => {
  };
  function S1(t3, e2, r2) {
    var o, f;
    arguments.length === 2 ? (r2 = e2, e2 = m1) : e2 == null ? e2 = m1 : p8(e2, "options"), c8(r2, "callback"), d8(e2.signal, "options.signal"), r2 = g1(r2);
    let p = (o = e2.readable) !== null && o !== undefined ? o : qh(t3), m = (f = e2.writable) !== null && f !== undefined ? f : _1(t3);
    if (!y8(t3))
      throw new l8("stream", "Stream", t3);
    let { _writableState: y, _readableState: M } = t3, x = () => {
      t3.writable || B();
    }, S = w8(t3) && qh(t3) === p && _1(t3) === m, E = x1(t3, false), B = () => {
      E = true, t3.destroyed && (S = false), !(S && (!t3.readable || p)) && (!p || q) && r2.call(t3);
    }, q = w1(t3, false), L = () => {
      q = true, t3.destroyed && (S = false), !(S && (!t3.writable || m)) && (!m || E) && r2.call(t3);
    }, ge = (xe) => {
      r2.call(t3, xe);
    }, _e = b8(t3), N = () => {
      _e = true;
      let xe = g8(t3) || m8(t3);
      if (xe && typeof xe != "boolean")
        return r2.call(t3, xe);
      if (p && !q && qh(t3, true) && !w1(t3, false))
        return r2.call(t3, new b1);
      if (m && !E && !x1(t3, false))
        return r2.call(t3, new b1);
      r2.call(t3);
    }, we = () => {
      t3.req.on("finish", B);
    };
    M8(t3) ? (t3.on("complete", B), S || t3.on("abort", N), t3.req ? we() : t3.on("request", we)) : m && !y && (t3.on("end", x), t3.on("close", x)), !S && typeof t3.aborted == "boolean" && t3.on("aborted", N), t3.on("end", L), t3.on("finish", B), e2.error !== false && t3.on("error", ge), t3.on("close", N), _e ? ff.nextTick(N) : y != null && y.errorEmitted || M != null && M.errorEmitted ? S || ff.nextTick(N) : (!p && (!S || y1(t3)) && (E || M1(t3) === false) || !m && (!S || M1(t3)) && (q || y1(t3) === false) || M && t3.req && t3.aborted) && ff.nextTick(N);
    let ye = () => {
      r2 = _8, t3.removeListener("aborted", N), t3.removeListener("complete", B), t3.removeListener("abort", N), t3.removeListener("request", we), t3.req && t3.req.removeListener("finish", B), t3.removeListener("end", x), t3.removeListener("close", x), t3.removeListener("finish", B), t3.removeListener("end", L), t3.removeListener("error", ge), t3.removeListener("close", N);
    };
    if (e2.signal && !_e) {
      let xe = () => {
        let Re = r2;
        ye(), Re.call(t3, new h8(undefined, { cause: e2.signal.reason }));
      };
      if (e2.signal.aborted)
        ff.nextTick(xe);
      else {
        let Re = r2;
        r2 = g1((...Ee) => {
          e2.signal.removeEventListener("abort", xe), Re.apply(t3, Ee);
        }), e2.signal.addEventListener("abort", xe);
      }
    }
    return ye;
  }
  function x8(t3, e2) {
    return new v8((r2, o) => {
      S1(t3, e2, (f) => {
        f ? o(f) : r2();
      });
    });
  }
  Ih.exports = S1;
  Ih.exports.finished = x8;
});
var k1 = T((PI, Lh) => {
  var B1 = globalThis.AbortController || No().AbortController, { codes: { ERR_INVALID_ARG_TYPE: va, ERR_MISSING_ARGS: S8, ERR_OUT_OF_RANGE: E8 }, AbortError: Jr } = Jt(), { validateAbortSignal: af, validateInteger: A8, validateObject: of } = pa(), R8 = Tt().Symbol("kWeak"), { finished: B8 } = Ui(), { ArrayPrototypePush: q8, MathFloor: I8, Number: T8, NumberIsNaN: k8, Promise: E1, PromiseReject: A1, PromisePrototypeThen: L8, Symbol: q1 } = Tt(), Wo = q1("kEmpty"), R1 = q1("kEof");
  function Ko(t3, e2) {
    if (typeof t3 != "function")
      throw new va("fn", ["Function", "AsyncFunction"], t3);
    e2 != null && of(e2, "options"), e2?.signal != null && af(e2.signal, "options.signal");
    let r2 = 1;
    return e2?.concurrency != null && (r2 = I8(e2.concurrency)), A8(r2, "concurrency", 1), async function* () {
      var f, p;
      let m = new B1, y = this, M = [], x = m.signal, S = { signal: x }, E = () => m.abort();
      e2 != null && (f = e2.signal) !== null && f !== undefined && f.aborted && E(), e2 == null || (p = e2.signal) === null || p === undefined || p.addEventListener("abort", E);
      let B, q, L = false;
      function ge() {
        L = true;
      }
      async function _e() {
        try {
          for await (let ye of y) {
            var N;
            if (L)
              return;
            if (x.aborted)
              throw new Jr;
            try {
              ye = t3(ye, S);
            } catch (xe) {
              ye = A1(xe);
            }
            ye !== Wo && (typeof ((N = ye) === null || N === undefined ? undefined : N.catch) == "function" && ye.catch(ge), M.push(ye), B && (B(), B = null), !L && M.length && M.length >= r2 && await new E1((xe) => {
              q = xe;
            }));
          }
          M.push(R1);
        } catch (ye) {
          let xe = A1(ye);
          L8(xe, undefined, ge), M.push(xe);
        } finally {
          var we;
          L = true, B && (B(), B = null), e2 == null || (we = e2.signal) === null || we === undefined || we.removeEventListener("abort", E);
        }
      }
      _e();
      try {
        for (;; ) {
          for (;M.length > 0; ) {
            let N = await M[0];
            if (N === R1)
              return;
            if (x.aborted)
              throw new Jr;
            N !== Wo && (yield N), M.shift(), q && (q(), q = null);
          }
          await new E1((N) => {
            B = N;
          });
        }
      } finally {
        m.abort(), L = true, q && (q(), q = null);
      }
    }.call(this);
  }
  function N8(t3 = undefined) {
    return t3 != null && of(t3, "options"), t3?.signal != null && af(t3.signal, "options.signal"), async function* () {
      let r2 = 0;
      for await (let f of this) {
        var o;
        if (t3 != null && (o = t3.signal) !== null && o !== undefined && o.aborted)
          throw new Jr({ cause: t3.signal.reason });
        yield [r2++, f];
      }
    }.call(this);
  }
  async function I1(t3, e2 = undefined) {
    for await (let r2 of kh.call(this, t3, e2))
      return true;
    return false;
  }
  async function D8(t3, e2 = undefined) {
    if (typeof t3 != "function")
      throw new va("fn", ["Function", "AsyncFunction"], t3);
    return !await I1.call(this, async (...r2) => !await t3(...r2), e2);
  }
  async function P8(t3, e2) {
    for await (let r2 of kh.call(this, t3, e2))
      return r2;
  }
  async function C8(t3, e2) {
    if (typeof t3 != "function")
      throw new va("fn", ["Function", "AsyncFunction"], t3);
    async function r2(o, f) {
      return await t3(o, f), Wo;
    }
    for await (let o of Ko.call(this, r2, e2))
      ;
  }
  function kh(t3, e2) {
    if (typeof t3 != "function")
      throw new va("fn", ["Function", "AsyncFunction"], t3);
    async function r2(o, f) {
      return await t3(o, f) ? o : Wo;
    }
    return Ko.call(this, r2, e2);
  }
  var Th = class extends S8 {
    constructor() {
      super("reduce"), this.message = "Reduce of an empty stream requires an initial value";
    }
  };
  async function O8(t3, e2, r2) {
    var o;
    if (typeof t3 != "function")
      throw new va("reducer", ["Function", "AsyncFunction"], t3);
    r2 != null && of(r2, "options"), r2?.signal != null && af(r2.signal, "options.signal");
    let f = arguments.length > 1;
    if (r2 != null && (o = r2.signal) !== null && o !== undefined && o.aborted) {
      let x = new Jr(undefined, { cause: r2.signal.reason });
      throw this.once("error", () => {
      }), await B8(this.destroy(x)), x;
    }
    let p = new B1, m = p.signal;
    if (r2 != null && r2.signal) {
      let x = { once: true, [R8]: this };
      r2.signal.addEventListener("abort", () => p.abort(), x);
    }
    let y = false;
    try {
      for await (let x of this) {
        var M;
        if (y = true, r2 != null && (M = r2.signal) !== null && M !== undefined && M.aborted)
          throw new Jr;
        f ? e2 = await t3(e2, x, { signal: m }) : (e2 = x, f = true);
      }
      if (!y && !f)
        throw new Th;
    } finally {
      p.abort();
    }
    return e2;
  }
  async function F8(t3) {
    t3 != null && of(t3, "options"), t3?.signal != null && af(t3.signal, "options.signal");
    let e2 = [];
    for await (let o of this) {
      var r2;
      if (t3 != null && (r2 = t3.signal) !== null && r2 !== undefined && r2.aborted)
        throw new Jr(undefined, { cause: t3.signal.reason });
      q8(e2, o);
    }
    return e2;
  }
  function U8(t3, e2) {
    let r2 = Ko.call(this, t3, e2);
    return async function* () {
      for await (let f of r2)
        yield* f;
    }.call(this);
  }
  function T1(t3) {
    if (t3 = T8(t3), k8(t3))
      return 0;
    if (t3 < 0)
      throw new E8("number", ">= 0", t3);
    return t3;
  }
  function z8(t3, e2 = undefined) {
    return e2 != null && of(e2, "options"), e2?.signal != null && af(e2.signal, "options.signal"), t3 = T1(t3), async function* () {
      var o;
      if (e2 != null && (o = e2.signal) !== null && o !== undefined && o.aborted)
        throw new Jr;
      for await (let p of this) {
        var f;
        if (e2 != null && (f = e2.signal) !== null && f !== undefined && f.aborted)
          throw new Jr;
        t3-- <= 0 && (yield p);
      }
    }.call(this);
  }
  function H8(t3, e2 = undefined) {
    return e2 != null && of(e2, "options"), e2?.signal != null && af(e2.signal, "options.signal"), t3 = T1(t3), async function* () {
      var o;
      if (e2 != null && (o = e2.signal) !== null && o !== undefined && o.aborted)
        throw new Jr;
      for await (let p of this) {
        var f;
        if (e2 != null && (f = e2.signal) !== null && f !== undefined && f.aborted)
          throw new Jr;
        if (t3-- > 0)
          yield p;
        else
          return;
      }
    }.call(this);
  }
  Lh.exports.streamReturningOperators = { asIndexedPairs: N8, drop: z8, filter: kh, flatMap: U8, map: Ko, take: H8 };
  Lh.exports.promiseReturningOperators = { every: D8, forEach: C8, reduce: O8, toArray: F8, some: I1, find: P8 };
});
var yn = T((CI, U1) => {
  var zi = (Oi(), ur(pr)), { aggregateTwoErrors: W8, codes: { ERR_MULTIPLE_CALLBACK: K8 }, AbortError: j8 } = Jt(), { Symbol: D1 } = Tt(), { kDestroyed: Z8, isDestroyed: V8, isFinished: $8, isServerRequest: G8 } = Fi(), P1 = D1("kDestroy"), Nh = D1("kConstruct");
  function C1(t3, e2, r2) {
    t3 && (t3.stack, e2 && !e2.errored && (e2.errored = t3), r2 && !r2.errored && (r2.errored = t3));
  }
  function Y8(t3, e2) {
    let r2 = this._readableState, o = this._writableState, f = o || r2;
    return o && o.destroyed || r2 && r2.destroyed ? (typeof e2 == "function" && e2(), this) : (C1(t3, o, r2), o && (o.destroyed = true), r2 && (r2.destroyed = true), f.constructed ? L1(this, t3, e2) : this.once(P1, function(p) {
      L1(this, W8(p, t3), e2);
    }), this);
  }
  function L1(t3, e2, r2) {
    let o = false;
    function f(p) {
      if (o)
        return;
      o = true;
      let { _readableState: m, _writableState: y } = t3;
      C1(p, y, m), y && (y.closed = true), m && (m.closed = true), typeof r2 == "function" && r2(p), p ? zi.nextTick(X8, t3, p) : zi.nextTick(O1, t3);
    }
    try {
      t3._destroy(e2 || null, f);
    } catch (p) {
      f(p);
    }
  }
  function X8(t3, e2) {
    Dh(t3, e2), O1(t3);
  }
  function O1(t3) {
    let { _readableState: e2, _writableState: r2 } = t3;
    r2 && (r2.closeEmitted = true), e2 && (e2.closeEmitted = true), (r2 && r2.emitClose || e2 && e2.emitClose) && t3.emit("close");
  }
  function Dh(t3, e2) {
    let { _readableState: r2, _writableState: o } = t3;
    o && o.errorEmitted || r2 && r2.errorEmitted || (o && (o.errorEmitted = true), r2 && (r2.errorEmitted = true), t3.emit("error", e2));
  }
  function J8() {
    let t3 = this._readableState, e2 = this._writableState;
    t3 && (t3.constructed = true, t3.closed = false, t3.closeEmitted = false, t3.destroyed = false, t3.errored = null, t3.errorEmitted = false, t3.reading = false, t3.ended = t3.readable === false, t3.endEmitted = t3.readable === false), e2 && (e2.constructed = true, e2.destroyed = false, e2.closed = false, e2.closeEmitted = false, e2.errored = null, e2.errorEmitted = false, e2.finalCalled = false, e2.prefinished = false, e2.ended = e2.writable === false, e2.ending = e2.writable === false, e2.finished = e2.writable === false);
  }
  function Ph(t3, e2, r2) {
    let { _readableState: o, _writableState: f } = t3;
    if (f && f.destroyed || o && o.destroyed)
      return this;
    o && o.autoDestroy || f && f.autoDestroy ? t3.destroy(e2) : e2 && (e2.stack, f && !f.errored && (f.errored = e2), o && !o.errored && (o.errored = e2), r2 ? zi.nextTick(Dh, t3, e2) : Dh(t3, e2));
  }
  function Q8(t3, e2) {
    if (typeof t3._construct != "function")
      return;
    let { _readableState: r2, _writableState: o } = t3;
    r2 && (r2.constructed = false), o && (o.constructed = false), t3.once(Nh, e2), !(t3.listenerCount(Nh) > 1) && zi.nextTick(e5, t3);
  }
  function e5(t3) {
    let e2 = false;
    function r2(o) {
      if (e2) {
        Ph(t3, o ?? new K8);
        return;
      }
      e2 = true;
      let { _readableState: f, _writableState: p } = t3, m = p || f;
      f && (f.constructed = true), p && (p.constructed = true), m.destroyed ? t3.emit(P1, o) : o ? Ph(t3, o, true) : zi.nextTick(t5, t3);
    }
    try {
      t3._construct(r2);
    } catch (o) {
      r2(o);
    }
  }
  function t5(t3) {
    t3.emit(Nh);
  }
  function N1(t3) {
    return t3 && t3.setHeader && typeof t3.abort == "function";
  }
  function F1(t3) {
    t3.emit("close");
  }
  function r5(t3, e2) {
    t3.emit("error", e2), zi.nextTick(F1, t3);
  }
  function i5(t3, e2) {
    !t3 || V8(t3) || (!e2 && !$8(t3) && (e2 = new j8), G8(t3) ? (t3.socket = null, t3.destroy(e2)) : N1(t3) ? t3.abort() : N1(t3.req) ? t3.req.abort() : typeof t3.destroy == "function" ? t3.destroy(e2) : typeof t3.close == "function" ? t3.close() : e2 ? zi.nextTick(r5, t3, e2) : zi.nextTick(F1, t3), t3.destroyed || (t3[Z8] = true));
  }
  U1.exports = { construct: Q8, destroyer: i5, destroy: Y8, undestroy: J8, errorOrDestroy: Ph };
});
var Vo = T((OI, H1) => {
  var { ArrayIsArray: n5, ObjectSetPrototypeOf: z1 } = Tt(), { EventEmitter: jo } = ki();
  function Zo(t3) {
    jo.call(this, t3);
  }
  z1(Zo.prototype, jo.prototype);
  z1(Zo, jo);
  Zo.prototype.pipe = function(t3, e2) {
    let r2 = this;
    function o(S) {
      t3.writable && t3.write(S) === false && r2.pause && r2.pause();
    }
    r2.on("data", o);
    function f() {
      r2.readable && r2.resume && r2.resume();
    }
    t3.on("drain", f), !t3._isStdio && (!e2 || e2.end !== false) && (r2.on("end", m), r2.on("close", y));
    let p = false;
    function m() {
      p || (p = true, t3.end());
    }
    function y() {
      p || (p = true, typeof t3.destroy == "function" && t3.destroy());
    }
    function M(S) {
      x(), jo.listenerCount(this, "error") === 0 && this.emit("error", S);
    }
    Ch(r2, "error", M), Ch(t3, "error", M);
    function x() {
      r2.removeListener("data", o), t3.removeListener("drain", f), r2.removeListener("end", m), r2.removeListener("close", y), r2.removeListener("error", M), t3.removeListener("error", M), r2.removeListener("end", x), r2.removeListener("close", x), t3.removeListener("close", x);
    }
    return r2.on("end", x), r2.on("close", x), t3.on("close", x), t3.emit("pipe", r2), t3;
  };
  function Ch(t3, e2, r2) {
    if (typeof t3.prependListener == "function")
      return t3.prependListener(e2, r2);
    !t3._events || !t3._events[e2] ? t3.on(e2, r2) : n5(t3._events[e2]) ? t3._events[e2].unshift(r2) : t3._events[e2] = [r2, t3._events[e2]];
  }
  H1.exports = { Stream: Zo, prependListener: Ch };
});
var Go = T((FI, $o) => {
  var { AbortError: f5, codes: a5 } = Jt(), o5 = Ui(), { ERR_INVALID_ARG_TYPE: W1 } = a5, s5 = (t3, e2) => {
    if (typeof t3 != "object" || !("aborted" in t3))
      throw new W1(e2, "AbortSignal", t3);
  };
  function h5(t3) {
    return !!(t3 && typeof t3.pipe == "function");
  }
  $o.exports.addAbortSignal = function(e2, r2) {
    if (s5(e2, "signal"), !h5(r2))
      throw new W1("stream", "stream.Stream", r2);
    return $o.exports.addAbortSignalNoValidate(e2, r2);
  };
  $o.exports.addAbortSignalNoValidate = function(t3, e2) {
    if (typeof t3 != "object" || !("aborted" in t3))
      return e2;
    let r2 = () => {
      e2.destroy(new f5(undefined, { cause: t3.reason }));
    };
    return t3.aborted ? r2() : (t3.addEventListener("abort", r2), o5(e2, () => t3.removeEventListener("abort", r2))), e2;
  };
});
var Z1 = T((zI, j1) => {
  var { StringPrototypeSlice: K1, SymbolIterator: u5, TypedArrayPrototypeSet: Yo, Uint8Array: l5 } = Tt(), { Buffer: Oh } = Ut(), { inspect: d5 } = Gr();
  j1.exports = class {
    constructor() {
      this.head = null, this.tail = null, this.length = 0;
    }
    push(e2) {
      let r2 = { data: e2, next: null };
      this.length > 0 ? this.tail.next = r2 : this.head = r2, this.tail = r2, ++this.length;
    }
    unshift(e2) {
      let r2 = { data: e2, next: this.head };
      this.length === 0 && (this.tail = r2), this.head = r2, ++this.length;
    }
    shift() {
      if (this.length === 0)
        return;
      let e2 = this.head.data;
      return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, e2;
    }
    clear() {
      this.head = this.tail = null, this.length = 0;
    }
    join(e2) {
      if (this.length === 0)
        return "";
      let r2 = this.head, o = "" + r2.data;
      for (;(r2 = r2.next) !== null; )
        o += e2 + r2.data;
      return o;
    }
    concat(e2) {
      if (this.length === 0)
        return Oh.alloc(0);
      let r2 = Oh.allocUnsafe(e2 >>> 0), o = this.head, f = 0;
      for (;o; )
        Yo(r2, o.data, f), f += o.data.length, o = o.next;
      return r2;
    }
    consume(e2, r2) {
      let o = this.head.data;
      if (e2 < o.length) {
        let f = o.slice(0, e2);
        return this.head.data = o.slice(e2), f;
      }
      return e2 === o.length ? this.shift() : r2 ? this._getString(e2) : this._getBuffer(e2);
    }
    first() {
      return this.head.data;
    }
    *[u5]() {
      for (let e2 = this.head;e2; e2 = e2.next)
        yield e2.data;
    }
    _getString(e2) {
      let r2 = "", o = this.head, f = 0;
      do {
        let p = o.data;
        if (e2 > p.length)
          r2 += p, e2 -= p.length;
        else {
          e2 === p.length ? (r2 += p, ++f, o.next ? this.head = o.next : this.head = this.tail = null) : (r2 += K1(p, 0, e2), this.head = o, o.data = K1(p, e2));
          break;
        }
        ++f;
      } while ((o = o.next) !== null);
      return this.length -= f, r2;
    }
    _getBuffer(e2) {
      let r2 = Oh.allocUnsafe(e2), o = e2, f = this.head, p = 0;
      do {
        let m = f.data;
        if (e2 > m.length)
          Yo(r2, m, o - e2), e2 -= m.length;
        else {
          e2 === m.length ? (Yo(r2, m, o - e2), ++p, f.next ? this.head = f.next : this.head = this.tail = null) : (Yo(r2, new l5(m.buffer, m.byteOffset, e2), o - e2), this.head = f, f.data = m.slice(e2));
          break;
        }
        ++p;
      } while ((f = f.next) !== null);
      return this.length -= p, r2;
    }
    [Symbol.for("nodejs.util.inspect.custom")](e2, r2) {
      return d5(this, { ...r2, depth: 0, customInspect: false });
    }
  };
});
var Xo = T((HI, $1) => {
  var { MathFloor: c5, NumberIsInteger: p5 } = Tt(), { ERR_INVALID_ARG_VALUE: v5 } = Jt().codes;
  function b5(t3, e2, r2) {
    return t3.highWaterMark != null ? t3.highWaterMark : e2 ? t3[r2] : null;
  }
  function V1(t3) {
    return t3 ? 16 : 16 * 1024;
  }
  function m5(t3, e2, r2, o) {
    let f = b5(e2, o, r2);
    if (f != null) {
      if (!p5(f) || f < 0) {
        let p = o ? `options.${r2}` : "options.highWaterMark";
        throw new v5(p, f);
      }
      return c5(f);
    }
    return V1(t3.objectMode);
  }
  $1.exports = { getHighWaterMark: m5, getDefaultHighWaterMark: V1 };
});
var Fh = T((WI, J1) => {
  var G1 = (Oi(), ur(pr)), { PromisePrototypeThen: g5, SymbolAsyncIterator: Y1, SymbolIterator: X1 } = Tt(), { Buffer: y5 } = Ut(), { ERR_INVALID_ARG_TYPE: w5, ERR_STREAM_NULL_VALUES: M5 } = Jt().codes;
  function _5(t3, e2, r2) {
    let o;
    if (typeof e2 == "string" || e2 instanceof y5)
      return new t3({ objectMode: true, ...r2, read() {
        this.push(e2), this.push(null);
      } });
    let f;
    if (e2 && e2[Y1])
      f = true, o = e2[Y1]();
    else if (e2 && e2[X1])
      f = false, o = e2[X1]();
    else
      throw new w5("iterable", ["Iterable"], e2);
    let p = new t3({ objectMode: true, highWaterMark: 1, ...r2 }), m = false;
    p._read = function() {
      m || (m = true, M());
    }, p._destroy = function(x, S) {
      g5(y(x), () => G1.nextTick(S, x), (E) => G1.nextTick(S, E || x));
    };
    async function y(x) {
      let S = x != null, E = typeof o.throw == "function";
      if (S && E) {
        let { value: B, done: q } = await o.throw(x);
        if (await B, q)
          return;
      }
      if (typeof o.return == "function") {
        let { value: B } = await o.return();
        await B;
      }
    }
    async function M() {
      for (;; ) {
        try {
          let { value: x, done: S } = f ? await o.next() : o.next();
          if (S)
            p.push(null);
          else {
            let E = x && typeof x.then == "function" ? await x : x;
            if (E === null)
              throw m = false, new M5;
            if (p.push(E))
              continue;
            m = false;
          }
        } catch (x) {
          p.destroy(x);
        }
        break;
      }
    }
    return p;
  }
  J1.exports = _5;
});
var ba = T((KI, lv) => {
  var Tr = (Oi(), ur(pr)), { ArrayPrototypeIndexOf: x5, NumberIsInteger: S5, NumberIsNaN: E5, NumberParseInt: A5, ObjectDefineProperties: tv, ObjectKeys: R5, ObjectSetPrototypeOf: rv, Promise: B5, SafeSet: q5, SymbolAsyncIterator: I5, Symbol: T5 } = Tt();
  lv.exports = Le;
  Le.ReadableState = jh;
  var { EventEmitter: k5 } = ki(), { Stream: Hi, prependListener: L5 } = Vo(), { Buffer: Uh } = Ut(), { addAbortSignal: N5 } = Go(), D5 = Ui(), Pe = Gr().debuglog("stream", (t3) => {
    Pe = t3;
  }), P5 = Z1(), hf = yn(), { getHighWaterMark: C5, getDefaultHighWaterMark: O5 } = Xo(), { aggregateTwoErrors: Q1, codes: { ERR_INVALID_ARG_TYPE: F5, ERR_METHOD_NOT_IMPLEMENTED: U5, ERR_OUT_OF_RANGE: z5, ERR_STREAM_PUSH_AFTER_EOF: H5, ERR_STREAM_UNSHIFT_AFTER_END_EVENT: W5 } } = Jt(), { validateObject: K5 } = pa(), wn = T5("kPaused"), { StringDecoder: iv } = co(), j5 = Fh();
  rv(Le.prototype, Hi.prototype);
  rv(Le, Hi);
  var zh = () => {
  }, { errorOrDestroy: sf } = hf;
  function jh(t3, e2, r2) {
    typeof r2 != "boolean" && (r2 = e2 instanceof Qr()), this.objectMode = !!(t3 && t3.objectMode), r2 && (this.objectMode = this.objectMode || !!(t3 && t3.readableObjectMode)), this.highWaterMark = t3 ? C5(this, t3, "readableHighWaterMark", r2) : O5(false), this.buffer = new P5, this.length = 0, this.pipes = [], this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.constructed = true, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this[wn] = null, this.errorEmitted = false, this.emitClose = !t3 || t3.emitClose !== false, this.autoDestroy = !t3 || t3.autoDestroy !== false, this.destroyed = false, this.errored = null, this.closed = false, this.closeEmitted = false, this.defaultEncoding = t3 && t3.defaultEncoding || "utf8", this.awaitDrainWriters = null, this.multiAwaitDrain = false, this.readingMore = false, this.dataEmitted = false, this.decoder = null, this.encoding = null, t3 && t3.encoding && (this.decoder = new iv(t3.encoding), this.encoding = t3.encoding);
  }
  function Le(t3) {
    if (!(this instanceof Le))
      return new Le(t3);
    let e2 = this instanceof Qr();
    this._readableState = new jh(t3, this, e2), t3 && (typeof t3.read == "function" && (this._read = t3.read), typeof t3.destroy == "function" && (this._destroy = t3.destroy), typeof t3.construct == "function" && (this._construct = t3.construct), t3.signal && !e2 && N5(t3.signal, this)), Hi.call(this, t3), hf.construct(this, () => {
      this._readableState.needReadable && Jo(this, this._readableState);
    });
  }
  Le.prototype.destroy = hf.destroy;
  Le.prototype._undestroy = hf.undestroy;
  Le.prototype._destroy = function(t3, e2) {
    e2(t3);
  };
  Le.prototype[k5.captureRejectionSymbol] = function(t3) {
    this.destroy(t3);
  };
  Le.prototype.push = function(t3, e2) {
    return nv(this, t3, e2, false);
  };
  Le.prototype.unshift = function(t3, e2) {
    return nv(this, t3, e2, true);
  };
  function nv(t3, e2, r2, o) {
    Pe("readableAddChunk", e2);
    let f = t3._readableState, p;
    if (f.objectMode || (typeof e2 == "string" ? (r2 = r2 || f.defaultEncoding, f.encoding !== r2 && (o && f.encoding ? e2 = Uh.from(e2, r2).toString(f.encoding) : (e2 = Uh.from(e2, r2), r2 = ""))) : e2 instanceof Uh ? r2 = "" : Hi._isUint8Array(e2) ? (e2 = Hi._uint8ArrayToBuffer(e2), r2 = "") : e2 != null && (p = new F5("chunk", ["string", "Buffer", "Uint8Array"], e2))), p)
      sf(t3, p);
    else if (e2 === null)
      f.reading = false, $5(t3, f);
    else if (f.objectMode || e2 && e2.length > 0)
      if (o)
        if (f.endEmitted)
          sf(t3, new W5);
        else {
          if (f.destroyed || f.errored)
            return false;
          Hh(t3, f, e2, true);
        }
      else if (f.ended)
        sf(t3, new H5);
      else {
        if (f.destroyed || f.errored)
          return false;
        f.reading = false, f.decoder && !r2 ? (e2 = f.decoder.write(e2), f.objectMode || e2.length !== 0 ? Hh(t3, f, e2, false) : Jo(t3, f)) : Hh(t3, f, e2, false);
      }
    else
      o || (f.reading = false, Jo(t3, f));
    return !f.ended && (f.length < f.highWaterMark || f.length === 0);
  }
  function Hh(t3, e2, r2, o) {
    e2.flowing && e2.length === 0 && !e2.sync && t3.listenerCount("data") > 0 ? (e2.multiAwaitDrain ? e2.awaitDrainWriters.clear() : e2.awaitDrainWriters = null, e2.dataEmitted = true, t3.emit("data", r2)) : (e2.length += e2.objectMode ? 1 : r2.length, o ? e2.buffer.unshift(r2) : e2.buffer.push(r2), e2.needReadable && Qo(t3)), Jo(t3, e2);
  }
  Le.prototype.isPaused = function() {
    let t3 = this._readableState;
    return t3[wn] === true || t3.flowing === false;
  };
  Le.prototype.setEncoding = function(t3) {
    let e2 = new iv(t3);
    this._readableState.decoder = e2, this._readableState.encoding = this._readableState.decoder.encoding;
    let r2 = this._readableState.buffer, o = "";
    for (let f of r2)
      o += e2.write(f);
    return r2.clear(), o !== "" && r2.push(o), this._readableState.length = o.length, this;
  };
  var Z5 = 1073741824;
  function V5(t3) {
    if (t3 > Z5)
      throw new z5("size", "<= 1GiB", t3);
    return t3--, t3 |= t3 >>> 1, t3 |= t3 >>> 2, t3 |= t3 >>> 4, t3 |= t3 >>> 8, t3 |= t3 >>> 16, t3++, t3;
  }
  function ev(t3, e2) {
    return t3 <= 0 || e2.length === 0 && e2.ended ? 0 : e2.objectMode ? 1 : E5(t3) ? e2.flowing && e2.length ? e2.buffer.first().length : e2.length : t3 <= e2.length ? t3 : e2.ended ? e2.length : 0;
  }
  Le.prototype.read = function(t3) {
    Pe("read", t3), t3 === undefined ? t3 = NaN : S5(t3) || (t3 = A5(t3, 10));
    let e2 = this._readableState, r2 = t3;
    if (t3 > e2.highWaterMark && (e2.highWaterMark = V5(t3)), t3 !== 0 && (e2.emittedReadable = false), t3 === 0 && e2.needReadable && ((e2.highWaterMark !== 0 ? e2.length >= e2.highWaterMark : e2.length > 0) || e2.ended))
      return Pe("read: emitReadable", e2.length, e2.ended), e2.length === 0 && e2.ended ? Wh(this) : Qo(this), null;
    if (t3 = ev(t3, e2), t3 === 0 && e2.ended)
      return e2.length === 0 && Wh(this), null;
    let o = e2.needReadable;
    if (Pe("need readable", o), (e2.length === 0 || e2.length - t3 < e2.highWaterMark) && (o = true, Pe("length less than watermark", o)), e2.ended || e2.reading || e2.destroyed || e2.errored || !e2.constructed)
      o = false, Pe("reading, ended or constructing", o);
    else if (o) {
      Pe("do read"), e2.reading = true, e2.sync = true, e2.length === 0 && (e2.needReadable = true);
      try {
        this._read(e2.highWaterMark);
      } catch (p) {
        sf(this, p);
      }
      e2.sync = false, e2.reading || (t3 = ev(r2, e2));
    }
    let f;
    return t3 > 0 ? f = hv(t3, e2) : f = null, f === null ? (e2.needReadable = e2.length <= e2.highWaterMark, t3 = 0) : (e2.length -= t3, e2.multiAwaitDrain ? e2.awaitDrainWriters.clear() : e2.awaitDrainWriters = null), e2.length === 0 && (e2.ended || (e2.needReadable = true), r2 !== t3 && e2.ended && Wh(this)), f !== null && !e2.errorEmitted && !e2.closeEmitted && (e2.dataEmitted = true, this.emit("data", f)), f;
  };
  function $5(t3, e2) {
    if (Pe("onEofChunk"), !e2.ended) {
      if (e2.decoder) {
        let r2 = e2.decoder.end();
        r2 && r2.length && (e2.buffer.push(r2), e2.length += e2.objectMode ? 1 : r2.length);
      }
      e2.ended = true, e2.sync ? Qo(t3) : (e2.needReadable = false, e2.emittedReadable = true, fv(t3));
    }
  }
  function Qo(t3) {
    let e2 = t3._readableState;
    Pe("emitReadable", e2.needReadable, e2.emittedReadable), e2.needReadable = false, e2.emittedReadable || (Pe("emitReadable", e2.flowing), e2.emittedReadable = true, Tr.nextTick(fv, t3));
  }
  function fv(t3) {
    let e2 = t3._readableState;
    Pe("emitReadable_", e2.destroyed, e2.length, e2.ended), !e2.destroyed && !e2.errored && (e2.length || e2.ended) && (t3.emit("readable"), e2.emittedReadable = false), e2.needReadable = !e2.flowing && !e2.ended && e2.length <= e2.highWaterMark, ov(t3);
  }
  function Jo(t3, e2) {
    !e2.readingMore && e2.constructed && (e2.readingMore = true, Tr.nextTick(G5, t3, e2));
  }
  function G5(t3, e2) {
    for (;!e2.reading && !e2.ended && (e2.length < e2.highWaterMark || e2.flowing && e2.length === 0); ) {
      let r2 = e2.length;
      if (Pe("maybeReadMore read 0"), t3.read(0), r2 === e2.length)
        break;
    }
    e2.readingMore = false;
  }
  Le.prototype._read = function(t3) {
    throw new U5("_read()");
  };
  Le.prototype.pipe = function(t3, e2) {
    let r2 = this, o = this._readableState;
    o.pipes.length === 1 && (o.multiAwaitDrain || (o.multiAwaitDrain = true, o.awaitDrainWriters = new q5(o.awaitDrainWriters ? [o.awaitDrainWriters] : []))), o.pipes.push(t3), Pe("pipe count=%d opts=%j", o.pipes.length, e2);
    let p = (!e2 || e2.end !== false) && t3 !== Tr.stdout && t3 !== Tr.stderr ? y : _e;
    o.endEmitted ? Tr.nextTick(p) : r2.once("end", p), t3.on("unpipe", m);
    function m(N, we) {
      Pe("onunpipe"), N === r2 && we && we.hasUnpiped === false && (we.hasUnpiped = true, S());
    }
    function y() {
      Pe("onend"), t3.end();
    }
    let M, x = false;
    function S() {
      Pe("cleanup"), t3.removeListener("close", L), t3.removeListener("finish", ge), M && t3.removeListener("drain", M), t3.removeListener("error", q), t3.removeListener("unpipe", m), r2.removeListener("end", y), r2.removeListener("end", _e), r2.removeListener("data", B), x = true, M && o.awaitDrainWriters && (!t3._writableState || t3._writableState.needDrain) && M();
    }
    function E() {
      x || (o.pipes.length === 1 && o.pipes[0] === t3 ? (Pe("false write response, pause", 0), o.awaitDrainWriters = t3, o.multiAwaitDrain = false) : o.pipes.length > 1 && o.pipes.includes(t3) && (Pe("false write response, pause", o.awaitDrainWriters.size), o.awaitDrainWriters.add(t3)), r2.pause()), M || (M = Y5(r2, t3), t3.on("drain", M));
    }
    r2.on("data", B);
    function B(N) {
      Pe("ondata");
      let we = t3.write(N);
      Pe("dest.write", we), we === false && E();
    }
    function q(N) {
      if (Pe("onerror", N), _e(), t3.removeListener("error", q), t3.listenerCount("error") === 0) {
        let we = t3._writableState || t3._readableState;
        we && !we.errorEmitted ? sf(t3, N) : t3.emit("error", N);
      }
    }
    L5(t3, "error", q);
    function L() {
      t3.removeListener("finish", ge), _e();
    }
    t3.once("close", L);
    function ge() {
      Pe("onfinish"), t3.removeListener("close", L), _e();
    }
    t3.once("finish", ge);
    function _e() {
      Pe("unpipe"), r2.unpipe(t3);
    }
    return t3.emit("pipe", r2), t3.writableNeedDrain === true ? o.flowing && E() : o.flowing || (Pe("pipe resume"), r2.resume()), t3;
  };
  function Y5(t3, e2) {
    return function() {
      let o = t3._readableState;
      o.awaitDrainWriters === e2 ? (Pe("pipeOnDrain", 1), o.awaitDrainWriters = null) : o.multiAwaitDrain && (Pe("pipeOnDrain", o.awaitDrainWriters.size), o.awaitDrainWriters.delete(e2)), (!o.awaitDrainWriters || o.awaitDrainWriters.size === 0) && t3.listenerCount("data") && t3.resume();
    };
  }
  Le.prototype.unpipe = function(t3) {
    let e2 = this._readableState, r2 = { hasUnpiped: false };
    if (e2.pipes.length === 0)
      return this;
    if (!t3) {
      let f = e2.pipes;
      e2.pipes = [], this.pause();
      for (let p = 0;p < f.length; p++)
        f[p].emit("unpipe", this, { hasUnpiped: false });
      return this;
    }
    let o = x5(e2.pipes, t3);
    return o === -1 ? this : (e2.pipes.splice(o, 1), e2.pipes.length === 0 && this.pause(), t3.emit("unpipe", this, r2), this);
  };
  Le.prototype.on = function(t3, e2) {
    let r2 = Hi.prototype.on.call(this, t3, e2), o = this._readableState;
    return t3 === "data" ? (o.readableListening = this.listenerCount("readable") > 0, o.flowing !== false && this.resume()) : t3 === "readable" && !o.endEmitted && !o.readableListening && (o.readableListening = o.needReadable = true, o.flowing = false, o.emittedReadable = false, Pe("on readable", o.length, o.reading), o.length ? Qo(this) : o.reading || Tr.nextTick(X5, this)), r2;
  };
  Le.prototype.addListener = Le.prototype.on;
  Le.prototype.removeListener = function(t3, e2) {
    let r2 = Hi.prototype.removeListener.call(this, t3, e2);
    return t3 === "readable" && Tr.nextTick(av, this), r2;
  };
  Le.prototype.off = Le.prototype.removeListener;
  Le.prototype.removeAllListeners = function(t3) {
    let e2 = Hi.prototype.removeAllListeners.apply(this, arguments);
    return (t3 === "readable" || t3 === undefined) && Tr.nextTick(av, this), e2;
  };
  function av(t3) {
    let e2 = t3._readableState;
    e2.readableListening = t3.listenerCount("readable") > 0, e2.resumeScheduled && e2[wn] === false ? e2.flowing = true : t3.listenerCount("data") > 0 ? t3.resume() : e2.readableListening || (e2.flowing = null);
  }
  function X5(t3) {
    Pe("readable nexttick read 0"), t3.read(0);
  }
  Le.prototype.resume = function() {
    let t3 = this._readableState;
    return t3.flowing || (Pe("resume"), t3.flowing = !t3.readableListening, J5(this, t3)), t3[wn] = false, this;
  };
  function J5(t3, e2) {
    e2.resumeScheduled || (e2.resumeScheduled = true, Tr.nextTick(Q5, t3, e2));
  }
  function Q5(t3, e2) {
    Pe("resume", e2.reading), e2.reading || t3.read(0), e2.resumeScheduled = false, t3.emit("resume"), ov(t3), e2.flowing && !e2.reading && t3.read(0);
  }
  Le.prototype.pause = function() {
    return Pe("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Pe("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState[wn] = true, this;
  };
  function ov(t3) {
    let e2 = t3._readableState;
    for (Pe("flow", e2.flowing);e2.flowing && t3.read() !== null; )
      ;
  }
  Le.prototype.wrap = function(t3) {
    let e2 = false;
    t3.on("data", (o) => {
      !this.push(o) && t3.pause && (e2 = true, t3.pause());
    }), t3.on("end", () => {
      this.push(null);
    }), t3.on("error", (o) => {
      sf(this, o);
    }), t3.on("close", () => {
      this.destroy();
    }), t3.on("destroy", () => {
      this.destroy();
    }), this._read = () => {
      e2 && t3.resume && (e2 = false, t3.resume());
    };
    let r2 = R5(t3);
    for (let o = 1;o < r2.length; o++) {
      let f = r2[o];
      this[f] === undefined && typeof t3[f] == "function" && (this[f] = t3[f].bind(t3));
    }
    return this;
  };
  Le.prototype[I5] = function() {
    return sv(this);
  };
  Le.prototype.iterator = function(t3) {
    return t3 !== undefined && K5(t3, "options"), sv(this, t3);
  };
  function sv(t3, e2) {
    typeof t3.read != "function" && (t3 = Le.wrap(t3, { objectMode: true }));
    let r2 = ex(t3, e2);
    return r2.stream = t3, r2;
  }
  async function* ex(t3, e2) {
    let r2 = zh;
    function o(m) {
      this === t3 ? (r2(), r2 = zh) : r2 = m;
    }
    t3.on("readable", o);
    let f, p = D5(t3, { writable: false }, (m) => {
      f = m ? Q1(f, m) : null, r2(), r2 = zh;
    });
    try {
      for (;; ) {
        let m = t3.destroyed ? null : t3.read();
        if (m !== null)
          yield m;
        else {
          if (f)
            throw f;
          if (f === null)
            return;
          await new B5(o);
        }
      }
    } catch (m) {
      throw f = Q1(f, m), f;
    } finally {
      (f || e2?.destroyOnReturn !== false) && (f === undefined || t3._readableState.autoDestroy) ? hf.destroyer(t3, null) : (t3.off("readable", o), p());
    }
  }
  tv(Le.prototype, { readable: { __proto__: null, get() {
    let t3 = this._readableState;
    return !!t3 && t3.readable !== false && !t3.destroyed && !t3.errorEmitted && !t3.endEmitted;
  }, set(t3) {
    this._readableState && (this._readableState.readable = !!t3);
  } }, readableDidRead: { __proto__: null, enumerable: false, get: function() {
    return this._readableState.dataEmitted;
  } }, readableAborted: { __proto__: null, enumerable: false, get: function() {
    return !!(this._readableState.readable !== false && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
  } }, readableHighWaterMark: { __proto__: null, enumerable: false, get: function() {
    return this._readableState.highWaterMark;
  } }, readableBuffer: { __proto__: null, enumerable: false, get: function() {
    return this._readableState && this._readableState.buffer;
  } }, readableFlowing: { __proto__: null, enumerable: false, get: function() {
    return this._readableState.flowing;
  }, set: function(t3) {
    this._readableState && (this._readableState.flowing = t3);
  } }, readableLength: { __proto__: null, enumerable: false, get() {
    return this._readableState.length;
  } }, readableObjectMode: { __proto__: null, enumerable: false, get() {
    return this._readableState ? this._readableState.objectMode : false;
  } }, readableEncoding: { __proto__: null, enumerable: false, get() {
    return this._readableState ? this._readableState.encoding : null;
  } }, errored: { __proto__: null, enumerable: false, get() {
    return this._readableState ? this._readableState.errored : null;
  } }, closed: { __proto__: null, get() {
    return this._readableState ? this._readableState.closed : false;
  } }, destroyed: { __proto__: null, enumerable: false, get() {
    return this._readableState ? this._readableState.destroyed : false;
  }, set(t3) {
    !this._readableState || (this._readableState.destroyed = t3);
  } }, readableEnded: { __proto__: null, enumerable: false, get() {
    return this._readableState ? this._readableState.endEmitted : false;
  } } });
  tv(jh.prototype, { pipesCount: { __proto__: null, get() {
    return this.pipes.length;
  } }, paused: { __proto__: null, get() {
    return this[wn] !== false;
  }, set(t3) {
    this[wn] = !!t3;
  } } });
  Le._fromList = hv;
  function hv(t3, e2) {
    if (e2.length === 0)
      return null;
    let r2;
    return e2.objectMode ? r2 = e2.buffer.shift() : !t3 || t3 >= e2.length ? (e2.decoder ? r2 = e2.buffer.join("") : e2.buffer.length === 1 ? r2 = e2.buffer.first() : r2 = e2.buffer.concat(e2.length), e2.buffer.clear()) : r2 = e2.buffer.consume(t3, e2.decoder), r2;
  }
  function Wh(t3) {
    let e2 = t3._readableState;
    Pe("endReadable", e2.endEmitted), e2.endEmitted || (e2.ended = true, Tr.nextTick(tx, e2, t3));
  }
  function tx(t3, e2) {
    if (Pe("endReadableNT", t3.endEmitted, t3.length), !t3.errored && !t3.closeEmitted && !t3.endEmitted && t3.length === 0) {
      if (t3.endEmitted = true, e2.emit("end"), e2.writable && e2.allowHalfOpen === false)
        Tr.nextTick(rx, e2);
      else if (t3.autoDestroy) {
        let r2 = e2._writableState;
        (!r2 || r2.autoDestroy && (r2.finished || r2.writable === false)) && e2.destroy();
      }
    }
  }
  function rx(t3) {
    t3.writable && !t3.writableEnded && !t3.destroyed && t3.end();
  }
  Le.from = function(t3, e2) {
    return j5(Le, t3, e2);
  };
  var Kh;
  function uv() {
    return Kh === undefined && (Kh = {}), Kh;
  }
  Le.fromWeb = function(t3, e2) {
    return uv().newStreamReadableFromReadableStream(t3, e2);
  };
  Le.toWeb = function(t3, e2) {
    return uv().newReadableStreamFromStreamReadable(t3, e2);
  };
  Le.wrap = function(t3, e2) {
    var r2, o;
    return new Le({ objectMode: (r2 = (o = t3.readableObjectMode) !== null && o !== undefined ? o : t3.objectMode) !== null && r2 !== undefined ? r2 : true, ...e2, destroy(f, p) {
      hf.destroyer(t3, f), p(f);
    } }).wrap(t3);
  };
});
var Jh = T((jI, xv) => {
  var Mn = (Oi(), ur(pr)), { ArrayPrototypeSlice: pv, Error: ix, FunctionPrototypeSymbolHasInstance: vv, ObjectDefineProperty: bv, ObjectDefineProperties: nx, ObjectSetPrototypeOf: mv, StringPrototypeToLowerCase: fx, Symbol: ax, SymbolHasInstance: ox } = Tt();
  xv.exports = st;
  st.WritableState = ya;
  var { EventEmitter: sx } = ki(), ma = Vo().Stream, { Buffer: es } = Ut(), is = yn(), { addAbortSignal: hx } = Go(), { getHighWaterMark: ux, getDefaultHighWaterMark: lx } = Xo(), { ERR_INVALID_ARG_TYPE: dx, ERR_METHOD_NOT_IMPLEMENTED: cx, ERR_MULTIPLE_CALLBACK: gv, ERR_STREAM_CANNOT_PIPE: px, ERR_STREAM_DESTROYED: ga, ERR_STREAM_ALREADY_FINISHED: vx, ERR_STREAM_NULL_VALUES: bx, ERR_STREAM_WRITE_AFTER_END: mx, ERR_UNKNOWN_ENCODING: yv } = Jt().codes, { errorOrDestroy: uf } = is;
  mv(st.prototype, ma.prototype);
  mv(st, ma);
  function $h() {
  }
  var lf = ax("kOnFinished");
  function ya(t3, e2, r2) {
    typeof r2 != "boolean" && (r2 = e2 instanceof Qr()), this.objectMode = !!(t3 && t3.objectMode), r2 && (this.objectMode = this.objectMode || !!(t3 && t3.writableObjectMode)), this.highWaterMark = t3 ? ux(this, t3, "writableHighWaterMark", r2) : lx(false), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
    let o = !!(t3 && t3.decodeStrings === false);
    this.decodeStrings = !o, this.defaultEncoding = t3 && t3.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = yx.bind(undefined, e2), this.writecb = null, this.writelen = 0, this.afterWriteTickInfo = null, rs(this), this.pendingcb = 0, this.constructed = true, this.prefinished = false, this.errorEmitted = false, this.emitClose = !t3 || t3.emitClose !== false, this.autoDestroy = !t3 || t3.autoDestroy !== false, this.errored = null, this.closed = false, this.closeEmitted = false, this[lf] = [];
  }
  function rs(t3) {
    t3.buffered = [], t3.bufferedIndex = 0, t3.allBuffers = true, t3.allNoop = true;
  }
  ya.prototype.getBuffer = function() {
    return pv(this.buffered, this.bufferedIndex);
  };
  bv(ya.prototype, "bufferedRequestCount", { __proto__: null, get() {
    return this.buffered.length - this.bufferedIndex;
  } });
  function st(t3) {
    let e2 = this instanceof Qr();
    if (!e2 && !vv(st, this))
      return new st(t3);
    this._writableState = new ya(t3, this, e2), t3 && (typeof t3.write == "function" && (this._write = t3.write), typeof t3.writev == "function" && (this._writev = t3.writev), typeof t3.destroy == "function" && (this._destroy = t3.destroy), typeof t3.final == "function" && (this._final = t3.final), typeof t3.construct == "function" && (this._construct = t3.construct), t3.signal && hx(t3.signal, this)), ma.call(this, t3), is.construct(this, () => {
      let r2 = this._writableState;
      r2.writing || Yh(this, r2), Xh(this, r2);
    });
  }
  bv(st, ox, { __proto__: null, value: function(t3) {
    return vv(this, t3) ? true : this !== st ? false : t3 && t3._writableState instanceof ya;
  } });
  st.prototype.pipe = function() {
    uf(this, new px);
  };
  function wv(t3, e2, r2, o) {
    let f = t3._writableState;
    if (typeof r2 == "function")
      o = r2, r2 = f.defaultEncoding;
    else {
      if (!r2)
        r2 = f.defaultEncoding;
      else if (r2 !== "buffer" && !es.isEncoding(r2))
        throw new yv(r2);
      typeof o != "function" && (o = $h);
    }
    if (e2 === null)
      throw new bx;
    if (!f.objectMode)
      if (typeof e2 == "string")
        f.decodeStrings !== false && (e2 = es.from(e2, r2), r2 = "buffer");
      else if (e2 instanceof es)
        r2 = "buffer";
      else if (ma._isUint8Array(e2))
        e2 = ma._uint8ArrayToBuffer(e2), r2 = "buffer";
      else
        throw new dx("chunk", ["string", "Buffer", "Uint8Array"], e2);
    let p;
    return f.ending ? p = new mx : f.destroyed && (p = new ga("write")), p ? (Mn.nextTick(o, p), uf(t3, p, true), p) : (f.pendingcb++, gx(t3, f, e2, r2, o));
  }
  st.prototype.write = function(t3, e2, r2) {
    return wv(this, t3, e2, r2) === true;
  };
  st.prototype.cork = function() {
    this._writableState.corked++;
  };
  st.prototype.uncork = function() {
    let t3 = this._writableState;
    t3.corked && (t3.corked--, t3.writing || Yh(this, t3));
  };
  st.prototype.setDefaultEncoding = function(e2) {
    if (typeof e2 == "string" && (e2 = fx(e2)), !es.isEncoding(e2))
      throw new yv(e2);
    return this._writableState.defaultEncoding = e2, this;
  };
  function gx(t3, e2, r2, o, f) {
    let p = e2.objectMode ? 1 : r2.length;
    e2.length += p;
    let m = e2.length < e2.highWaterMark;
    return m || (e2.needDrain = true), e2.writing || e2.corked || e2.errored || !e2.constructed ? (e2.buffered.push({ chunk: r2, encoding: o, callback: f }), e2.allBuffers && o !== "buffer" && (e2.allBuffers = false), e2.allNoop && f !== $h && (e2.allNoop = false)) : (e2.writelen = p, e2.writecb = f, e2.writing = true, e2.sync = true, t3._write(r2, o, e2.onwrite), e2.sync = false), m && !e2.errored && !e2.destroyed;
  }
  function dv(t3, e2, r2, o, f, p, m) {
    e2.writelen = o, e2.writecb = m, e2.writing = true, e2.sync = true, e2.destroyed ? e2.onwrite(new ga("write")) : r2 ? t3._writev(f, e2.onwrite) : t3._write(f, p, e2.onwrite), e2.sync = false;
  }
  function cv(t3, e2, r2, o) {
    --e2.pendingcb, o(r2), Gh(e2), uf(t3, r2);
  }
  function yx(t3, e2) {
    let r2 = t3._writableState, o = r2.sync, f = r2.writecb;
    if (typeof f != "function") {
      uf(t3, new gv);
      return;
    }
    r2.writing = false, r2.writecb = null, r2.length -= r2.writelen, r2.writelen = 0, e2 ? (e2.stack, r2.errored || (r2.errored = e2), t3._readableState && !t3._readableState.errored && (t3._readableState.errored = e2), o ? Mn.nextTick(cv, t3, r2, e2, f) : cv(t3, r2, e2, f)) : (r2.buffered.length > r2.bufferedIndex && Yh(t3, r2), o ? r2.afterWriteTickInfo !== null && r2.afterWriteTickInfo.cb === f ? r2.afterWriteTickInfo.count++ : (r2.afterWriteTickInfo = { count: 1, cb: f, stream: t3, state: r2 }, Mn.nextTick(wx, r2.afterWriteTickInfo)) : Mv(t3, r2, 1, f));
  }
  function wx({ stream: t3, state: e2, count: r2, cb: o }) {
    return e2.afterWriteTickInfo = null, Mv(t3, e2, r2, o);
  }
  function Mv(t3, e2, r2, o) {
    for (!e2.ending && !t3.destroyed && e2.length === 0 && e2.needDrain && (e2.needDrain = false, t3.emit("drain"));r2-- > 0; )
      e2.pendingcb--, o();
    e2.destroyed && Gh(e2), Xh(t3, e2);
  }
  function Gh(t3) {
    if (t3.writing)
      return;
    for (let f = t3.bufferedIndex;f < t3.buffered.length; ++f) {
      var e2;
      let { chunk: p, callback: m } = t3.buffered[f], y = t3.objectMode ? 1 : p.length;
      t3.length -= y, m((e2 = t3.errored) !== null && e2 !== undefined ? e2 : new ga("write"));
    }
    let r2 = t3[lf].splice(0);
    for (let f = 0;f < r2.length; f++) {
      var o;
      r2[f]((o = t3.errored) !== null && o !== undefined ? o : new ga("end"));
    }
    rs(t3);
  }
  function Yh(t3, e2) {
    if (e2.corked || e2.bufferProcessing || e2.destroyed || !e2.constructed)
      return;
    let { buffered: r2, bufferedIndex: o, objectMode: f } = e2, p = r2.length - o;
    if (!p)
      return;
    let m = o;
    if (e2.bufferProcessing = true, p > 1 && t3._writev) {
      e2.pendingcb -= p - 1;
      let y = e2.allNoop ? $h : (x) => {
        for (let S = m;S < r2.length; ++S)
          r2[S].callback(x);
      }, M = e2.allNoop && m === 0 ? r2 : pv(r2, m);
      M.allBuffers = e2.allBuffers, dv(t3, e2, true, e2.length, M, "", y), rs(e2);
    } else {
      do {
        let { chunk: y, encoding: M, callback: x } = r2[m];
        r2[m++] = null;
        let S = f ? 1 : y.length;
        dv(t3, e2, false, S, y, M, x);
      } while (m < r2.length && !e2.writing);
      m === r2.length ? rs(e2) : m > 256 ? (r2.splice(0, m), e2.bufferedIndex = 0) : e2.bufferedIndex = m;
    }
    e2.bufferProcessing = false;
  }
  st.prototype._write = function(t3, e2, r2) {
    if (this._writev)
      this._writev([{ chunk: t3, encoding: e2 }], r2);
    else
      throw new cx("_write()");
  };
  st.prototype._writev = null;
  st.prototype.end = function(t3, e2, r2) {
    let o = this._writableState;
    typeof t3 == "function" ? (r2 = t3, t3 = null, e2 = null) : typeof e2 == "function" && (r2 = e2, e2 = null);
    let f;
    if (t3 != null) {
      let p = wv(this, t3, e2);
      p instanceof ix && (f = p);
    }
    return o.corked && (o.corked = 1, this.uncork()), f || (!o.errored && !o.ending ? (o.ending = true, Xh(this, o, true), o.ended = true) : o.finished ? f = new vx("end") : o.destroyed && (f = new ga("end"))), typeof r2 == "function" && (f || o.finished ? Mn.nextTick(r2, f) : o[lf].push(r2)), this;
  };
  function ts(t3) {
    return t3.ending && !t3.destroyed && t3.constructed && t3.length === 0 && !t3.errored && t3.buffered.length === 0 && !t3.finished && !t3.writing && !t3.errorEmitted && !t3.closeEmitted;
  }
  function Mx(t3, e2) {
    let r2 = false;
    function o(f) {
      if (r2) {
        uf(t3, f ?? gv());
        return;
      }
      if (r2 = true, e2.pendingcb--, f) {
        let p = e2[lf].splice(0);
        for (let m = 0;m < p.length; m++)
          p[m](f);
        uf(t3, f, e2.sync);
      } else
        ts(e2) && (e2.prefinished = true, t3.emit("prefinish"), e2.pendingcb++, Mn.nextTick(Vh, t3, e2));
    }
    e2.sync = true, e2.pendingcb++;
    try {
      t3._final(o);
    } catch (f) {
      o(f);
    }
    e2.sync = false;
  }
  function _x(t3, e2) {
    !e2.prefinished && !e2.finalCalled && (typeof t3._final == "function" && !e2.destroyed ? (e2.finalCalled = true, Mx(t3, e2)) : (e2.prefinished = true, t3.emit("prefinish")));
  }
  function Xh(t3, e2, r2) {
    ts(e2) && (_x(t3, e2), e2.pendingcb === 0 && (r2 ? (e2.pendingcb++, Mn.nextTick((o, f) => {
      ts(f) ? Vh(o, f) : f.pendingcb--;
    }, t3, e2)) : ts(e2) && (e2.pendingcb++, Vh(t3, e2))));
  }
  function Vh(t3, e2) {
    e2.pendingcb--, e2.finished = true;
    let r2 = e2[lf].splice(0);
    for (let o = 0;o < r2.length; o++)
      r2[o]();
    if (t3.emit("finish"), e2.autoDestroy) {
      let o = t3._readableState;
      (!o || o.autoDestroy && (o.endEmitted || o.readable === false)) && t3.destroy();
    }
  }
  nx(st.prototype, { closed: { __proto__: null, get() {
    return this._writableState ? this._writableState.closed : false;
  } }, destroyed: { __proto__: null, get() {
    return this._writableState ? this._writableState.destroyed : false;
  }, set(t3) {
    this._writableState && (this._writableState.destroyed = t3);
  } }, writable: { __proto__: null, get() {
    let t3 = this._writableState;
    return !!t3 && t3.writable !== false && !t3.destroyed && !t3.errored && !t3.ending && !t3.ended;
  }, set(t3) {
    this._writableState && (this._writableState.writable = !!t3);
  } }, writableFinished: { __proto__: null, get() {
    return this._writableState ? this._writableState.finished : false;
  } }, writableObjectMode: { __proto__: null, get() {
    return this._writableState ? this._writableState.objectMode : false;
  } }, writableBuffer: { __proto__: null, get() {
    return this._writableState && this._writableState.getBuffer();
  } }, writableEnded: { __proto__: null, get() {
    return this._writableState ? this._writableState.ending : false;
  } }, writableNeedDrain: { __proto__: null, get() {
    let t3 = this._writableState;
    return t3 ? !t3.destroyed && !t3.ending && t3.needDrain : false;
  } }, writableHighWaterMark: { __proto__: null, get() {
    return this._writableState && this._writableState.highWaterMark;
  } }, writableCorked: { __proto__: null, get() {
    return this._writableState ? this._writableState.corked : 0;
  } }, writableLength: { __proto__: null, get() {
    return this._writableState && this._writableState.length;
  } }, errored: { __proto__: null, enumerable: false, get() {
    return this._writableState ? this._writableState.errored : null;
  } }, writableAborted: { __proto__: null, enumerable: false, get: function() {
    return !!(this._writableState.writable !== false && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
  } } });
  var xx = is.destroy;
  st.prototype.destroy = function(t3, e2) {
    let r2 = this._writableState;
    return !r2.destroyed && (r2.bufferedIndex < r2.buffered.length || r2[lf].length) && Mn.nextTick(Gh, r2), xx.call(this, t3, e2), this;
  };
  st.prototype._undestroy = is.undestroy;
  st.prototype._destroy = function(t3, e2) {
    e2(t3);
  };
  st.prototype[sx.captureRejectionSymbol] = function(t3) {
    this.destroy(t3);
  };
  var Zh;
  function _v() {
    return Zh === undefined && (Zh = {}), Zh;
  }
  st.fromWeb = function(t3, e2) {
    return _v().newStreamWritableFromWritableStream(t3, e2);
  };
  st.toWeb = function(t3) {
    return _v().newWritableStreamFromStreamWritable(t3);
  };
});
var Dv = T((ZI, Nv) => {
  var Qh = (Oi(), ur(pr)), Sx = Ut(), { isReadable: Ex, isWritable: Ax, isIterable: Sv, isNodeStream: Rx, isReadableNodeStream: Ev, isWritableNodeStream: Av, isDuplexNodeStream: Bx } = Fi(), Rv = Ui(), { AbortError: Lv, codes: { ERR_INVALID_ARG_TYPE: qx, ERR_INVALID_RETURN_VALUE: Bv } } = Jt(), { destroyer: df } = yn(), Ix = Qr(), Tx = ba(), { createDeferredPromise: qv } = Gr(), Iv = Fh(), Tv = globalThis.Blob || Sx.Blob, kx = typeof Tv < "u" ? function(e2) {
    return e2 instanceof Tv;
  } : function(e2) {
    return false;
  }, Lx = globalThis.AbortController || No().AbortController, { FunctionPrototypeCall: kv } = Tt(), _n = class extends Ix {
    constructor(e2) {
      super(e2), e2?.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), e2?.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true);
    }
  };
  Nv.exports = function t(e2, r2) {
    if (Bx(e2))
      return e2;
    if (Ev(e2))
      return ns({ readable: e2 });
    if (Av(e2))
      return ns({ writable: e2 });
    if (Rx(e2))
      return ns({ writable: false, readable: false });
    if (typeof e2 == "function") {
      let { value: f, write: p, final: m, destroy: y } = Nx(e2);
      if (Sv(f))
        return Iv(_n, f, { objectMode: true, write: p, final: m, destroy: y });
      let M = f?.then;
      if (typeof M == "function") {
        let x, S = kv(M, f, (E) => {
          if (E != null)
            throw new Bv("nully", "body", E);
        }, (E) => {
          df(x, E);
        });
        return x = new _n({ objectMode: true, readable: false, write: p, final(E) {
          m(async () => {
            try {
              await S, Qh.nextTick(E, null);
            } catch (B) {
              Qh.nextTick(E, B);
            }
          });
        }, destroy: y });
      }
      throw new Bv("Iterable, AsyncIterable or AsyncFunction", r2, f);
    }
    if (kx(e2))
      return t(e2.arrayBuffer());
    if (Sv(e2))
      return Iv(_n, e2, { objectMode: true, writable: false });
    if (typeof e2?.writable == "object" || typeof e2?.readable == "object") {
      let f = e2 != null && e2.readable ? Ev(e2?.readable) ? e2?.readable : t(e2.readable) : undefined, p = e2 != null && e2.writable ? Av(e2?.writable) ? e2?.writable : t(e2.writable) : undefined;
      return ns({ readable: f, writable: p });
    }
    let o = e2?.then;
    if (typeof o == "function") {
      let f;
      return kv(o, e2, (p) => {
        p != null && f.push(p), f.push(null);
      }, (p) => {
        df(f, p);
      }), f = new _n({ objectMode: true, writable: false, read() {
      } });
    }
    throw new qx(r2, ["Blob", "ReadableStream", "WritableStream", "Stream", "Iterable", "AsyncIterable", "Function", "{ readable, writable } pair", "Promise"], e2);
  };
  function Nx(t3) {
    let { promise: e2, resolve: r2 } = qv(), o = new Lx, f = o.signal;
    return { value: t3(async function* () {
      for (;; ) {
        let m = e2;
        e2 = null;
        let { chunk: y, done: M, cb: x } = await m;
        if (Qh.nextTick(x), M)
          return;
        if (f.aborted)
          throw new Lv(undefined, { cause: f.reason });
        ({ promise: e2, resolve: r2 } = qv()), yield y;
      }
    }(), { signal: f }), write(m, y, M) {
      let x = r2;
      r2 = null, x({ chunk: m, done: false, cb: M });
    }, final(m) {
      let y = r2;
      r2 = null, y({ done: true, cb: m });
    }, destroy(m, y) {
      o.abort(), y(m);
    } };
  }
  function ns(t3) {
    let e2 = t3.readable && typeof t3.readable.read != "function" ? Tx.wrap(t3.readable) : t3.readable, r2 = t3.writable, o = !!Ex(e2), f = !!Ax(r2), p, m, y, M, x;
    function S(E) {
      let B = M;
      M = null, B ? B(E) : E ? x.destroy(E) : !o && !f && x.destroy();
    }
    return x = new _n({ readableObjectMode: !!(e2 != null && e2.readableObjectMode), writableObjectMode: !!(r2 != null && r2.writableObjectMode), readable: o, writable: f }), f && (Rv(r2, (E) => {
      f = false, E && df(e2, E), S(E);
    }), x._write = function(E, B, q) {
      r2.write(E, B) ? q() : p = q;
    }, x._final = function(E) {
      r2.end(), m = E;
    }, r2.on("drain", function() {
      if (p) {
        let E = p;
        p = null, E();
      }
    }), r2.on("finish", function() {
      if (m) {
        let E = m;
        m = null, E();
      }
    })), o && (Rv(e2, (E) => {
      o = false, E && df(e2, E), S(E);
    }), e2.on("readable", function() {
      if (y) {
        let E = y;
        y = null, E();
      }
    }), e2.on("end", function() {
      x.push(null);
    }), x._read = function() {
      for (;; ) {
        let E = e2.read();
        if (E === null) {
          y = x._read;
          return;
        }
        if (!x.push(E))
          return;
      }
    }), x._destroy = function(E, B) {
      !E && M !== null && (E = new Lv), y = null, p = null, m = null, M === null ? B(E) : (M = B, df(r2, E), df(e2, E));
    }, x;
  }
});
var Qr = T((VI, Ov) => {
  var { ObjectDefineProperties: Dx, ObjectGetOwnPropertyDescriptor: bi, ObjectKeys: Px, ObjectSetPrototypeOf: Pv } = Tt();
  Ov.exports = kr;
  var ru = ba(), vr = Jh();
  Pv(kr.prototype, ru.prototype);
  Pv(kr, ru);
  {
    let t3 = Px(vr.prototype);
    for (let e2 = 0;e2 < t3.length; e2++) {
      let r2 = t3[e2];
      kr.prototype[r2] || (kr.prototype[r2] = vr.prototype[r2]);
    }
  }
  function kr(t3) {
    if (!(this instanceof kr))
      return new kr(t3);
    ru.call(this, t3), vr.call(this, t3), t3 ? (this.allowHalfOpen = t3.allowHalfOpen !== false, t3.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), t3.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true)) : this.allowHalfOpen = true;
  }
  Dx(kr.prototype, { writable: { __proto__: null, ...bi(vr.prototype, "writable") }, writableHighWaterMark: { __proto__: null, ...bi(vr.prototype, "writableHighWaterMark") }, writableObjectMode: { __proto__: null, ...bi(vr.prototype, "writableObjectMode") }, writableBuffer: { __proto__: null, ...bi(vr.prototype, "writableBuffer") }, writableLength: { __proto__: null, ...bi(vr.prototype, "writableLength") }, writableFinished: { __proto__: null, ...bi(vr.prototype, "writableFinished") }, writableCorked: { __proto__: null, ...bi(vr.prototype, "writableCorked") }, writableEnded: { __proto__: null, ...bi(vr.prototype, "writableEnded") }, writableNeedDrain: { __proto__: null, ...bi(vr.prototype, "writableNeedDrain") }, destroyed: { __proto__: null, get() {
    return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
  }, set(t3) {
    this._readableState && this._writableState && (this._readableState.destroyed = t3, this._writableState.destroyed = t3);
  } } });
  var eu;
  function Cv() {
    return eu === undefined && (eu = {}), eu;
  }
  kr.fromWeb = function(t3, e2) {
    return Cv().newStreamDuplexFromReadableWritablePair(t3, e2);
  };
  kr.toWeb = function(t3) {
    return Cv().newReadableWritablePairFromDuplex(t3);
  };
  var tu;
  kr.from = function(t3) {
    return tu || (tu = Dv()), tu(t3, "body");
  };
});
var fu = T(($I, Uv) => {
  var { ObjectSetPrototypeOf: Fv, Symbol: Cx } = Tt();
  Uv.exports = mi;
  var { ERR_METHOD_NOT_IMPLEMENTED: Ox } = Jt().codes, nu = Qr(), { getHighWaterMark: Fx } = Xo();
  Fv(mi.prototype, nu.prototype);
  Fv(mi, nu);
  var wa = Cx("kCallback");
  function mi(t3) {
    if (!(this instanceof mi))
      return new mi(t3);
    let e2 = t3 ? Fx(this, t3, "readableHighWaterMark", true) : null;
    e2 === 0 && (t3 = { ...t3, highWaterMark: null, readableHighWaterMark: e2, writableHighWaterMark: t3.writableHighWaterMark || 0 }), nu.call(this, t3), this._readableState.sync = false, this[wa] = null, t3 && (typeof t3.transform == "function" && (this._transform = t3.transform), typeof t3.flush == "function" && (this._flush = t3.flush)), this.on("prefinish", Ux);
  }
  function iu(t3) {
    typeof this._flush == "function" && !this.destroyed ? this._flush((e2, r2) => {
      if (e2) {
        t3 ? t3(e2) : this.destroy(e2);
        return;
      }
      r2 != null && this.push(r2), this.push(null), t3 && t3();
    }) : (this.push(null), t3 && t3());
  }
  function Ux() {
    this._final !== iu && iu.call(this);
  }
  mi.prototype._final = iu;
  mi.prototype._transform = function(t3, e2, r2) {
    throw new Ox("_transform()");
  };
  mi.prototype._write = function(t3, e2, r2) {
    let o = this._readableState, f = this._writableState, p = o.length;
    this._transform(t3, e2, (m, y) => {
      if (m) {
        r2(m);
        return;
      }
      y != null && this.push(y), f.ended || p === o.length || o.length < o.highWaterMark ? r2() : this[wa] = r2;
    });
  };
  mi.prototype._read = function() {
    if (this[wa]) {
      let t3 = this[wa];
      this[wa] = null, t3();
    }
  };
});
var ou = T((GI, Hv) => {
  var { ObjectSetPrototypeOf: zv } = Tt();
  Hv.exports = cf;
  var au = fu();
  zv(cf.prototype, au.prototype);
  zv(cf, au);
  function cf(t3) {
    if (!(this instanceof cf))
      return new cf(t3);
    au.call(this, t3);
  }
  cf.prototype._transform = function(t3, e2, r2) {
    r2(null, t3);
  };
});
var os = T((YI, Gv) => {
  var fs = (Oi(), ur(pr)), { ArrayIsArray: zx, Promise: Hx, SymbolAsyncIterator: Wx } = Tt(), as = Ui(), { once: Kx } = Gr(), jx = yn(), Wv = Qr(), { aggregateTwoErrors: Zx, codes: { ERR_INVALID_ARG_TYPE: Vv, ERR_INVALID_RETURN_VALUE: su, ERR_MISSING_ARGS: Vx, ERR_STREAM_DESTROYED: $x, ERR_STREAM_PREMATURE_CLOSE: Gx }, AbortError: Yx } = Jt(), { validateFunction: Xx, validateAbortSignal: Jx } = pa(), { isIterable: pf, isReadable: hu, isReadableNodeStream: du, isNodeStream: Kv } = Fi(), Qx = globalThis.AbortController || No().AbortController, uu, lu;
  function jv(t3, e2, r2) {
    let o = false;
    t3.on("close", () => {
      o = true;
    });
    let f = as(t3, { readable: e2, writable: r2 }, (p) => {
      o = !p;
    });
    return { destroy: (p) => {
      o || (o = true, jx.destroyer(t3, p || new $x("pipe")));
    }, cleanup: f };
  }
  function e7(t3) {
    return Xx(t3[t3.length - 1], "streams[stream.length - 1]"), t3.pop();
  }
  function t7(t3) {
    if (pf(t3))
      return t3;
    if (du(t3))
      return r7(t3);
    throw new Vv("val", ["Readable", "Iterable", "AsyncIterable"], t3);
  }
  async function* r7(t3) {
    lu || (lu = ba()), yield* lu.prototype[Wx].call(t3);
  }
  async function Zv(t3, e2, r2, { end: o }) {
    let f, p = null, m = (x) => {
      if (x && (f = x), p) {
        let S = p;
        p = null, S();
      }
    }, y = () => new Hx((x, S) => {
      f ? S(f) : p = () => {
        f ? S(f) : x();
      };
    });
    e2.on("drain", m);
    let M = as(e2, { readable: false }, m);
    try {
      e2.writableNeedDrain && await y();
      for await (let x of t3)
        e2.write(x) || await y();
      o && e2.end(), await y(), r2();
    } catch (x) {
      r2(f !== x ? Zx(f, x) : x);
    } finally {
      M(), e2.off("drain", m);
    }
  }
  function i7(...t3) {
    return $v(t3, Kx(e7(t3)));
  }
  function $v(t3, e2, r2) {
    if (t3.length === 1 && zx(t3[0]) && (t3 = t3[0]), t3.length < 2)
      throw new Vx("streams");
    let o = new Qx, f = o.signal, p = r2?.signal, m = [];
    Jx(p, "options.signal");
    function y() {
      q(new Yx);
    }
    p?.addEventListener("abort", y);
    let M, x, S = [], E = 0;
    function B(N) {
      q(N, --E === 0);
    }
    function q(N, we) {
      if (N && (!M || M.code === "ERR_STREAM_PREMATURE_CLOSE") && (M = N), !(!M && !we)) {
        for (;S.length; )
          S.shift()(M);
        p?.removeEventListener("abort", y), o.abort(), we && (M || m.forEach((ye) => ye()), fs.nextTick(e2, M, x));
      }
    }
    let L;
    for (let N = 0;N < t3.length; N++) {
      let we = t3[N], ye = N < t3.length - 1, xe = N > 0, Re = ye || r2?.end !== false, Ee = N === t3.length - 1;
      if (Kv(we)) {
        let Ae = function(P) {
          P && P.name !== "AbortError" && P.code !== "ERR_STREAM_PREMATURE_CLOSE" && B(P);
        };
        var _e = Ae;
        if (Re) {
          let { destroy: P, cleanup: Se } = jv(we, ye, xe);
          S.push(P), hu(we) && Ee && m.push(Se);
        }
        we.on("error", Ae), hu(we) && Ee && m.push(() => {
          we.removeListener("error", Ae);
        });
      }
      if (N === 0)
        if (typeof we == "function") {
          if (L = we({ signal: f }), !pf(L))
            throw new su("Iterable, AsyncIterable or Stream", "source", L);
        } else
          pf(we) || du(we) ? L = we : L = Wv.from(we);
      else if (typeof we == "function")
        if (L = t7(L), L = we(L, { signal: f }), ye) {
          if (!pf(L, true))
            throw new su("AsyncIterable", `transform[${N - 1}]`, L);
        } else {
          var ge;
          uu || (uu = ou());
          let Ae = new uu({ objectMode: true }), P = (ge = L) === null || ge === undefined ? undefined : ge.then;
          if (typeof P == "function")
            E++, P.call(L, (i) => {
              x = i, i != null && Ae.write(i), Re && Ae.end(), fs.nextTick(B);
            }, (i) => {
              Ae.destroy(i), fs.nextTick(B, i);
            });
          else if (pf(L, true))
            E++, Zv(L, Ae, B, { end: Re });
          else
            throw new su("AsyncIterable or Promise", "destination", L);
          L = Ae;
          let { destroy: Se, cleanup: v } = jv(L, false, true);
          S.push(Se), Ee && m.push(v);
        }
      else if (Kv(we)) {
        if (du(L)) {
          E += 2;
          let Ae = n7(L, we, B, { end: Re });
          hu(we) && Ee && m.push(Ae);
        } else if (pf(L))
          E++, Zv(L, we, B, { end: Re });
        else
          throw new Vv("val", ["Readable", "Iterable", "AsyncIterable"], L);
        L = we;
      } else
        L = Wv.from(we);
    }
    return (f != null && f.aborted || p != null && p.aborted) && fs.nextTick(y), L;
  }
  function n7(t3, e2, r2, { end: o }) {
    let f = false;
    return e2.on("close", () => {
      f || r2(new Gx);
    }), t3.pipe(e2, { end: o }), o ? t3.once("end", () => {
      f = true, e2.end();
    }) : r2(), as(t3, { readable: true, writable: false }, (p) => {
      let m = t3._readableState;
      p && p.code === "ERR_STREAM_PREMATURE_CLOSE" && m && m.ended && !m.errored && !m.errorEmitted ? t3.once("end", r2).once("error", r2) : r2(p);
    }), as(e2, { readable: false, writable: true }, r2);
  }
  Gv.exports = { pipelineImpl: $v, pipeline: i7 };
});
var eb = T((XI, Qv) => {
  var { pipeline: f7 } = os(), ss = Qr(), { destroyer: a7 } = yn(), { isNodeStream: o7, isReadable: Yv, isWritable: Xv } = Fi(), { AbortError: s7, codes: { ERR_INVALID_ARG_VALUE: Jv, ERR_MISSING_ARGS: h7 } } = Jt();
  Qv.exports = function(...e2) {
    if (e2.length === 0)
      throw new h7("streams");
    if (e2.length === 1)
      return ss.from(e2[0]);
    let r2 = [...e2];
    if (typeof e2[0] == "function" && (e2[0] = ss.from(e2[0])), typeof e2[e2.length - 1] == "function") {
      let q = e2.length - 1;
      e2[q] = ss.from(e2[q]);
    }
    for (let q = 0;q < e2.length; ++q)
      if (!!o7(e2[q])) {
        if (q < e2.length - 1 && !Yv(e2[q]))
          throw new Jv(`streams[${q}]`, r2[q], "must be readable");
        if (q > 0 && !Xv(e2[q]))
          throw new Jv(`streams[${q}]`, r2[q], "must be writable");
      }
    let o, f, p, m, y;
    function M(q) {
      let L = m;
      m = null, L ? L(q) : q ? y.destroy(q) : !B && !E && y.destroy();
    }
    let x = e2[0], S = f7(e2, M), E = !!Xv(x), B = !!Yv(S);
    return y = new ss({ writableObjectMode: !!(x != null && x.writableObjectMode), readableObjectMode: !!(S != null && S.writableObjectMode), writable: E, readable: B }), E && (y._write = function(q, L, ge) {
      x.write(q, L) ? ge() : o = ge;
    }, y._final = function(q) {
      x.end(), f = q;
    }, x.on("drain", function() {
      if (o) {
        let q = o;
        o = null, q();
      }
    }), S.on("finish", function() {
      if (f) {
        let q = f;
        f = null, q();
      }
    })), B && (S.on("readable", function() {
      if (p) {
        let q = p;
        p = null, q();
      }
    }), S.on("end", function() {
      y.push(null);
    }), y._read = function() {
      for (;; ) {
        let q = S.read();
        if (q === null) {
          p = y._read;
          return;
        }
        if (!y.push(q))
          return;
      }
    }), y._destroy = function(q, L) {
      !q && m !== null && (q = new s7), p = null, o = null, f = null, m === null ? L(q) : (m = L, a7(S, q));
    }, y;
  };
});
var cu = T((JI, tb) => {
  var { ArrayPrototypePop: u7, Promise: l7 } = Tt(), { isIterable: d7, isNodeStream: c7 } = Fi(), { pipelineImpl: p7 } = os(), { finished: v7 } = Ui();
  function b7(...t3) {
    return new l7((e2, r2) => {
      let o, f, p = t3[t3.length - 1];
      if (p && typeof p == "object" && !c7(p) && !d7(p)) {
        let m = u7(t3);
        o = m.signal, f = m.end;
      }
      p7(t3, (m, y) => {
        m ? r2(m) : e2(y);
      }, { signal: o, end: f });
    });
  }
  tb.exports = { finished: v7, pipeline: b7 };
});
var lb = T((QI, ub) => {
  var { Buffer: m7 } = Ut(), { ObjectDefineProperty: gi, ObjectKeys: nb, ReflectApply: fb } = Tt(), { promisify: { custom: ab } } = Gr(), { streamReturningOperators: rb, promiseReturningOperators: ib } = k1(), { codes: { ERR_ILLEGAL_CONSTRUCTOR: ob } } = Jt(), g7 = eb(), { pipeline: sb } = os(), { destroyer: y7 } = yn(), hb = Ui(), pu = cu(), vu = Fi(), ct = ub.exports = Vo().Stream;
  ct.isDisturbed = vu.isDisturbed;
  ct.isErrored = vu.isErrored;
  ct.isReadable = vu.isReadable;
  ct.Readable = ba();
  for (let t3 of nb(rb)) {
    let r2 = function(...o) {
      if (new.target)
        throw ob();
      return ct.Readable.from(fb(e2, this, o));
    };
    M7 = r2;
    let e2 = rb[t3];
    gi(r2, "name", { __proto__: null, value: e2.name }), gi(r2, "length", { __proto__: null, value: e2.length }), gi(ct.Readable.prototype, t3, { __proto__: null, value: r2, enumerable: false, configurable: true, writable: true });
  }
  var M7;
  for (let t3 of nb(ib)) {
    let r2 = function(...f) {
      if (new.target)
        throw ob();
      return fb(e2, this, f);
    };
    M7 = r2;
    let e2 = ib[t3];
    gi(r2, "name", { __proto__: null, value: e2.name }), gi(r2, "length", { __proto__: null, value: e2.length }), gi(ct.Readable.prototype, t3, { __proto__: null, value: r2, enumerable: false, configurable: true, writable: true });
  }
  var M7;
  ct.Writable = Jh();
  ct.Duplex = Qr();
  ct.Transform = fu();
  ct.PassThrough = ou();
  ct.pipeline = sb;
  var { addAbortSignal: w7 } = Go();
  ct.addAbortSignal = w7;
  ct.finished = hb;
  ct.destroy = y7;
  ct.compose = g7;
  gi(ct, "promises", { __proto__: null, configurable: true, enumerable: true, get() {
    return pu;
  } });
  gi(sb, ab, { __proto__: null, enumerable: true, get() {
    return pu.pipeline;
  } });
  gi(hb, ab, { __proto__: null, enumerable: true, get() {
    return pu.finished;
  } });
  ct.Stream = ct;
  ct._isUint8Array = function(e2) {
    return e2 instanceof Uint8Array;
  };
  ct._uint8ArrayToBuffer = function(e2) {
    return m7.from(e2.buffer, e2.byteOffset, e2.byteLength);
  };
});
var bu = T((eT, pt) => {
  var Lt = lb(), _7 = cu(), x7 = Lt.Readable.destroy;
  pt.exports = Lt.Readable;
  pt.exports._uint8ArrayToBuffer = Lt._uint8ArrayToBuffer;
  pt.exports._isUint8Array = Lt._isUint8Array;
  pt.exports.isDisturbed = Lt.isDisturbed;
  pt.exports.isErrored = Lt.isErrored;
  pt.exports.isReadable = Lt.isReadable;
  pt.exports.Readable = Lt.Readable;
  pt.exports.Writable = Lt.Writable;
  pt.exports.Duplex = Lt.Duplex;
  pt.exports.Transform = Lt.Transform;
  pt.exports.PassThrough = Lt.PassThrough;
  pt.exports.addAbortSignal = Lt.addAbortSignal;
  pt.exports.finished = Lt.finished;
  pt.exports.destroy = Lt.destroy;
  pt.exports.destroy = x7;
  pt.exports.pipeline = Lt.pipeline;
  pt.exports.compose = Lt.compose;
  Object.defineProperty(Lt, "promises", { configurable: true, enumerable: true, get() {
    return _7;
  } });
  pt.exports.Stream = Lt.Stream;
  pt.exports.default = pt.exports;
});
var vf = {};
Ja(vf, { default: () => S7 });
var S7;
var db = R0(() => {
  ot(vf, rn(bu()));
  S7 = rn(bu());
});
var yi = T((rT, vb) => {
  var cb = Te().Buffer, pb = (db(), ur(vf)).Transform, E7 = co().StringDecoder, A7 = Ie();
  function Lr(t3) {
    pb.call(this), this.hashMode = typeof t3 == "string", this.hashMode ? this[t3] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
  }
  A7(Lr, pb);
  Lr.prototype.update = function(t3, e2, r2) {
    typeof t3 == "string" && (t3 = cb.from(t3, e2));
    var o = this._update(t3);
    return this.hashMode ? this : (r2 && (o = this._toString(o, r2)), o);
  };
  Lr.prototype.setAutoPadding = function() {
  };
  Lr.prototype.getAuthTag = function() {
    throw new Error("trying to get auth tag in unsupported state");
  };
  Lr.prototype.setAuthTag = function() {
    throw new Error("trying to set auth tag in unsupported state");
  };
  Lr.prototype.setAAD = function() {
    throw new Error("trying to set aad in unsupported state");
  };
  Lr.prototype._transform = function(t3, e2, r2) {
    var o;
    try {
      this.hashMode ? this._update(t3) : this.push(this._update(t3));
    } catch (f) {
      o = f;
    } finally {
      r2(o);
    }
  };
  Lr.prototype._flush = function(t3) {
    var e2;
    try {
      this.push(this.__final());
    } catch (r2) {
      e2 = r2;
    }
    t3(e2);
  };
  Lr.prototype._finalOrDigest = function(t3) {
    var e2 = this.__final() || cb.alloc(0);
    return t3 && (e2 = this._toString(e2, t3, true)), e2;
  };
  Lr.prototype._toString = function(t3, e2, r2) {
    if (this._decoder || (this._decoder = new E7(e2), this._encoding = e2), this._encoding !== e2)
      throw new Error("can't switch encodings");
    var o = this._decoder.write(t3);
    return r2 && (o += this._decoder.end()), o;
  };
  vb.exports = Lr;
});
var bf = T((iT, mb) => {
  var R7 = Ie(), B7 = Ao(), q7 = Bo(), I7 = ko(), bb = yi();
  function hs(t3) {
    bb.call(this, "digest"), this._hash = t3;
  }
  R7(hs, bb);
  hs.prototype._update = function(t3) {
    this._hash.update(t3);
  };
  hs.prototype._final = function() {
    return this._hash.digest();
  };
  mb.exports = function(e2) {
    return e2 = e2.toLowerCase(), e2 === "md5" ? new B7 : e2 === "rmd160" || e2 === "ripemd160" ? new q7 : new hs(I7(e2));
  };
});
var wb = T((nT, yb) => {
  var T7 = Ie(), xn = Te().Buffer, gb = yi(), k7 = xn.alloc(128), mf = 64;
  function us(t3, e2) {
    gb.call(this, "digest"), typeof e2 == "string" && (e2 = xn.from(e2)), this._alg = t3, this._key = e2, e2.length > mf ? e2 = t3(e2) : e2.length < mf && (e2 = xn.concat([e2, k7], mf));
    for (var r2 = this._ipad = xn.allocUnsafe(mf), o = this._opad = xn.allocUnsafe(mf), f = 0;f < mf; f++)
      r2[f] = e2[f] ^ 54, o[f] = e2[f] ^ 92;
    this._hash = [r2];
  }
  T7(us, gb);
  us.prototype._update = function(t3) {
    this._hash.push(t3);
  };
  us.prototype._final = function() {
    var t3 = this._alg(xn.concat(this._hash));
    return this._alg(xn.concat([this._opad, t3]));
  };
  yb.exports = us;
});
var mu = T((fT, Mb) => {
  var L7 = Ao();
  Mb.exports = function(t3) {
    return new L7().update(t3).digest();
  };
});
var wu = T((aT, xb) => {
  var N7 = Ie(), D7 = wb(), _b = yi(), Ma = Te().Buffer, P7 = mu(), gu = Bo(), yu = ko(), C7 = Ma.alloc(128);
  function _a(t3, e2) {
    _b.call(this, "digest"), typeof e2 == "string" && (e2 = Ma.from(e2));
    var r2 = t3 === "sha512" || t3 === "sha384" ? 128 : 64;
    if (this._alg = t3, this._key = e2, e2.length > r2) {
      var o = t3 === "rmd160" ? new gu : yu(t3);
      e2 = o.update(e2).digest();
    } else
      e2.length < r2 && (e2 = Ma.concat([e2, C7], r2));
    for (var f = this._ipad = Ma.allocUnsafe(r2), p = this._opad = Ma.allocUnsafe(r2), m = 0;m < r2; m++)
      f[m] = e2[m] ^ 54, p[m] = e2[m] ^ 92;
    this._hash = t3 === "rmd160" ? new gu : yu(t3), this._hash.update(f);
  }
  N7(_a, _b);
  _a.prototype._update = function(t3) {
    this._hash.update(t3);
  };
  _a.prototype._final = function() {
    var t3 = this._hash.digest(), e2 = this._alg === "rmd160" ? new gu : yu(this._alg);
    return e2.update(this._opad).update(t3).digest();
  };
  xb.exports = function(e2, r2) {
    return e2 = e2.toLowerCase(), e2 === "rmd160" || e2 === "ripemd160" ? new _a("rmd160", r2) : e2 === "md5" ? new D7(P7, r2) : new _a(e2, r2);
  };
});
var Mu = T((oT, O7) => {
  O7.exports = { sha224WithRSAEncryption: { sign: "rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, "RSA-SHA224": { sign: "ecdsa/rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, sha256WithRSAEncryption: { sign: "rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, "RSA-SHA256": { sign: "ecdsa/rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, sha384WithRSAEncryption: { sign: "rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, "RSA-SHA384": { sign: "ecdsa/rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, sha512WithRSAEncryption: { sign: "rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA512": { sign: "ecdsa/rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA1": { sign: "rsa", hash: "sha1", id: "3021300906052b0e03021a05000414" }, "ecdsa-with-SHA1": { sign: "ecdsa", hash: "sha1", id: "" }, sha256: { sign: "ecdsa", hash: "sha256", id: "" }, sha224: { sign: "ecdsa", hash: "sha224", id: "" }, sha384: { sign: "ecdsa", hash: "sha384", id: "" }, sha512: { sign: "ecdsa", hash: "sha512", id: "" }, "DSA-SHA": { sign: "dsa", hash: "sha1", id: "" }, "DSA-SHA1": { sign: "dsa", hash: "sha1", id: "" }, DSA: { sign: "dsa", hash: "sha1", id: "" }, "DSA-WITH-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-WITH-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-WITH-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-WITH-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-RIPEMD160": { sign: "dsa", hash: "rmd160", id: "" }, ripemd160WithRSA: { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, "RSA-RIPEMD160": { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, md5WithRSAEncryption: { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" }, "RSA-MD5": { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" } };
});
var Eb = T((sT, Sb) => {
  Sb.exports = Mu();
});
var _u = T((hT, Ab) => {
  var F7 = Math.pow(2, 30) - 1;
  Ab.exports = function(t3, e2) {
    if (typeof t3 != "number")
      throw new TypeError("Iterations not a number");
    if (t3 < 0)
      throw new TypeError("Bad iterations");
    if (typeof e2 != "number")
      throw new TypeError("Key length not a number");
    if (e2 < 0 || e2 > F7 || e2 !== e2)
      throw new TypeError("Bad key length");
  };
});
var xu = T((uT, Bb) => {
  var ls;
  global.process && global.process.browser ? ls = "utf-8" : global.process && global.process.version ? (Rb = parseInt(process.version.split(".")[0].slice(1), 10), ls = Rb >= 6 ? "utf-8" : "binary") : ls = "utf-8";
  var Rb;
  Bb.exports = ls;
});
var Eu = T((lT, qb) => {
  var Su = Te().Buffer;
  qb.exports = function(t3, e2, r2) {
    if (Su.isBuffer(t3))
      return t3;
    if (typeof t3 == "string")
      return Su.from(t3, e2);
    if (ArrayBuffer.isView(t3))
      return Su.from(t3.buffer);
    throw new TypeError(r2 + " must be a string, a Buffer, a typed array or a DataView");
  };
});
var Au = T((dT, Lb) => {
  var U7 = mu(), z7 = Bo(), H7 = ko(), Sn = Te().Buffer, W7 = _u(), Ib = xu(), Tb = Eu(), K7 = Sn.alloc(128), ds = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
  function kb(t3, e2, r2) {
    var o = j7(t3), f = t3 === "sha512" || t3 === "sha384" ? 128 : 64;
    e2.length > f ? e2 = o(e2) : e2.length < f && (e2 = Sn.concat([e2, K7], f));
    for (var p = Sn.allocUnsafe(f + ds[t3]), m = Sn.allocUnsafe(f + ds[t3]), y = 0;y < f; y++)
      p[y] = e2[y] ^ 54, m[y] = e2[y] ^ 92;
    var M = Sn.allocUnsafe(f + r2 + 4);
    p.copy(M, 0, 0, f), this.ipad1 = M, this.ipad2 = p, this.opad = m, this.alg = t3, this.blocksize = f, this.hash = o, this.size = ds[t3];
  }
  kb.prototype.run = function(t3, e2) {
    t3.copy(e2, this.blocksize);
    var r2 = this.hash(e2);
    return r2.copy(this.opad, this.blocksize), this.hash(this.opad);
  };
  function j7(t3) {
    function e2(o) {
      return H7(t3).update(o).digest();
    }
    function r2(o) {
      return new z7().update(o).digest();
    }
    return t3 === "rmd160" || t3 === "ripemd160" ? r2 : t3 === "md5" ? U7 : e2;
  }
  function Z7(t3, e2, r2, o, f) {
    W7(r2, o), t3 = Tb(t3, Ib, "Password"), e2 = Tb(e2, Ib, "Salt"), f = f || "sha1";
    var p = new kb(f, t3, e2.length), m = Sn.allocUnsafe(o), y = Sn.allocUnsafe(e2.length + 4);
    e2.copy(y, 0, 0, e2.length);
    for (var M = 0, x = ds[f], S = Math.ceil(o / x), E = 1;E <= S; E++) {
      y.writeUInt32BE(E, e2.length);
      for (var B = p.run(y, p.ipad1), q = B, L = 1;L < r2; L++) {
        q = p.run(q, p.ipad2);
        for (var ge = 0;ge < x; ge++)
          B[ge] ^= q[ge];
      }
      B.copy(m, M), M += x;
    }
    return m;
  }
  Lb.exports = Z7;
});
var Ub = T((cT, Fb) => {
  var Cb = Te().Buffer, V7 = _u(), Nb = xu(), Db = Au(), Pb = Eu(), cs, xa = global.crypto && global.crypto.subtle, $7 = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, Ru = [];
  function G7(t3) {
    if (global.process && !global.process.browser || !xa || !xa.importKey || !xa.deriveBits)
      return Promise.resolve(false);
    if (Ru[t3] !== undefined)
      return Ru[t3];
    cs = cs || Cb.alloc(8);
    var e2 = Ob(cs, cs, 10, 128, t3).then(function() {
      return true;
    }).catch(function() {
      return false;
    });
    return Ru[t3] = e2, e2;
  }
  var En;
  function Bu() {
    return En || (global.process && global.process.nextTick ? En = global.process.nextTick : global.queueMicrotask ? En = global.queueMicrotask : global.setImmediate ? En = global.setImmediate : En = global.setTimeout, En);
  }
  function Ob(t3, e2, r2, o, f) {
    return xa.importKey("raw", t3, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(p) {
      return xa.deriveBits({ name: "PBKDF2", salt: e2, iterations: r2, hash: { name: f } }, p, o << 3);
    }).then(function(p) {
      return Cb.from(p);
    });
  }
  function Y7(t3, e2) {
    t3.then(function(r2) {
      Bu()(function() {
        e2(null, r2);
      });
    }, function(r2) {
      Bu()(function() {
        e2(r2);
      });
    });
  }
  Fb.exports = function(t3, e2, r2, o, f, p) {
    typeof f == "function" && (p = f, f = undefined), f = f || "sha1";
    var m = $7[f.toLowerCase()];
    if (!m || typeof global.Promise != "function") {
      Bu()(function() {
        var y;
        try {
          y = Db(t3, e2, r2, o, f);
        } catch (M) {
          return p(M);
        }
        p(null, y);
      });
      return;
    }
    if (V7(r2, o), t3 = Pb(t3, Nb, "Password"), e2 = Pb(e2, Nb, "Salt"), typeof p != "function")
      throw new Error("No callback provided to pbkdf2");
    Y7(G7(m).then(function(y) {
      return y ? Ob(t3, e2, r2, o, m) : Db(t3, e2, r2, o, f);
    }), p);
  };
});
var Iu = T((qu) => {
  qu.pbkdf2 = Ub();
  qu.pbkdf2Sync = Au();
});
var Tu = T((br) => {
  br.readUInt32BE = function(e2, r2) {
    var o = e2[0 + r2] << 24 | e2[1 + r2] << 16 | e2[2 + r2] << 8 | e2[3 + r2];
    return o >>> 0;
  };
  br.writeUInt32BE = function(e2, r2, o) {
    e2[0 + o] = r2 >>> 24, e2[1 + o] = r2 >>> 16 & 255, e2[2 + o] = r2 >>> 8 & 255, e2[3 + o] = r2 & 255;
  };
  br.ip = function(e2, r2, o, f) {
    for (var p = 0, m = 0, y = 6;y >= 0; y -= 2) {
      for (var M = 0;M <= 24; M += 8)
        p <<= 1, p |= r2 >>> M + y & 1;
      for (var M = 0;M <= 24; M += 8)
        p <<= 1, p |= e2 >>> M + y & 1;
    }
    for (var y = 6;y >= 0; y -= 2) {
      for (var M = 1;M <= 25; M += 8)
        m <<= 1, m |= r2 >>> M + y & 1;
      for (var M = 1;M <= 25; M += 8)
        m <<= 1, m |= e2 >>> M + y & 1;
    }
    o[f + 0] = p >>> 0, o[f + 1] = m >>> 0;
  };
  br.rip = function(e2, r2, o, f) {
    for (var p = 0, m = 0, y = 0;y < 4; y++)
      for (var M = 24;M >= 0; M -= 8)
        p <<= 1, p |= r2 >>> M + y & 1, p <<= 1, p |= e2 >>> M + y & 1;
    for (var y = 4;y < 8; y++)
      for (var M = 24;M >= 0; M -= 8)
        m <<= 1, m |= r2 >>> M + y & 1, m <<= 1, m |= e2 >>> M + y & 1;
    o[f + 0] = p >>> 0, o[f + 1] = m >>> 0;
  };
  br.pc1 = function(e2, r2, o, f) {
    for (var p = 0, m = 0, y = 7;y >= 5; y--) {
      for (var M = 0;M <= 24; M += 8)
        p <<= 1, p |= r2 >> M + y & 1;
      for (var M = 0;M <= 24; M += 8)
        p <<= 1, p |= e2 >> M + y & 1;
    }
    for (var M = 0;M <= 24; M += 8)
      p <<= 1, p |= r2 >> M + y & 1;
    for (var y = 1;y <= 3; y++) {
      for (var M = 0;M <= 24; M += 8)
        m <<= 1, m |= r2 >> M + y & 1;
      for (var M = 0;M <= 24; M += 8)
        m <<= 1, m |= e2 >> M + y & 1;
    }
    for (var M = 0;M <= 24; M += 8)
      m <<= 1, m |= e2 >> M + y & 1;
    o[f + 0] = p >>> 0, o[f + 1] = m >>> 0;
  };
  br.r28shl = function(e2, r2) {
    return e2 << r2 & 268435455 | e2 >>> 28 - r2;
  };
  var ps = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
  br.pc2 = function(e2, r2, o, f) {
    for (var p = 0, m = 0, y = ps.length >>> 1, M = 0;M < y; M++)
      p <<= 1, p |= e2 >>> ps[M] & 1;
    for (var M = y;M < ps.length; M++)
      m <<= 1, m |= r2 >>> ps[M] & 1;
    o[f + 0] = p >>> 0, o[f + 1] = m >>> 0;
  };
  br.expand = function(e2, r2, o) {
    var f = 0, p = 0;
    f = (e2 & 1) << 5 | e2 >>> 27;
    for (var m = 23;m >= 15; m -= 4)
      f <<= 6, f |= e2 >>> m & 63;
    for (var m = 11;m >= 3; m -= 4)
      p |= e2 >>> m & 63, p <<= 6;
    p |= (e2 & 31) << 1 | e2 >>> 31, r2[o + 0] = f >>> 0, r2[o + 1] = p >>> 0;
  };
  var zb = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
  br.substitute = function(e2, r2) {
    for (var o = 0, f = 0;f < 4; f++) {
      var p = e2 >>> 18 - f * 6 & 63, m = zb[f * 64 + p];
      o <<= 4, o |= m;
    }
    for (var f = 0;f < 4; f++) {
      var p = r2 >>> 18 - f * 6 & 63, m = zb[4 * 64 + f * 64 + p];
      o <<= 4, o |= m;
    }
    return o >>> 0;
  };
  var Hb = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
  br.permute = function(e2) {
    for (var r2 = 0, o = 0;o < Hb.length; o++)
      r2 <<= 1, r2 |= e2 >>> Hb[o] & 1;
    return r2 >>> 0;
  };
  br.padSplit = function(e2, r2, o) {
    for (var f = e2.toString(2);f.length < r2; )
      f = "0" + f;
    for (var p = [], m = 0;m < r2; m += o)
      p.push(f.slice(m, m + o));
    return p.join(" ");
  };
});
var ar = T((bT, Kb) => {
  Kb.exports = Wb;
  function Wb(t3, e2) {
    if (!t3)
      throw new Error(e2 || "Assertion failed");
  }
  Wb.equal = function(e2, r2, o) {
    if (e2 != r2)
      throw new Error(o || "Assertion failed: " + e2 + " != " + r2);
  };
});
var vs = T((mT, jb) => {
  var X7 = ar();
  function mr(t3) {
    this.options = t3, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
  }
  jb.exports = mr;
  mr.prototype._init = function() {
  };
  mr.prototype.update = function(e2) {
    return e2.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(e2) : this._updateEncrypt(e2);
  };
  mr.prototype._buffer = function(e2, r2) {
    for (var o = Math.min(this.buffer.length - this.bufferOff, e2.length - r2), f = 0;f < o; f++)
      this.buffer[this.bufferOff + f] = e2[r2 + f];
    return this.bufferOff += o, o;
  };
  mr.prototype._flushBuffer = function(e2, r2) {
    return this._update(this.buffer, 0, e2, r2), this.bufferOff = 0, this.blockSize;
  };
  mr.prototype._updateEncrypt = function(e2) {
    var r2 = 0, o = 0, f = (this.bufferOff + e2.length) / this.blockSize | 0, p = new Array(f * this.blockSize);
    this.bufferOff !== 0 && (r2 += this._buffer(e2, r2), this.bufferOff === this.buffer.length && (o += this._flushBuffer(p, o)));
    for (var m = e2.length - (e2.length - r2) % this.blockSize;r2 < m; r2 += this.blockSize)
      this._update(e2, r2, p, o), o += this.blockSize;
    for (;r2 < e2.length; r2++, this.bufferOff++)
      this.buffer[this.bufferOff] = e2[r2];
    return p;
  };
  mr.prototype._updateDecrypt = function(e2) {
    for (var r2 = 0, o = 0, f = Math.ceil((this.bufferOff + e2.length) / this.blockSize) - 1, p = new Array(f * this.blockSize);f > 0; f--)
      r2 += this._buffer(e2, r2), o += this._flushBuffer(p, o);
    return r2 += this._buffer(e2, r2), p;
  };
  mr.prototype.final = function(e2) {
    var r2;
    e2 && (r2 = this.update(e2));
    var o;
    return this.type === "encrypt" ? o = this._finalEncrypt() : o = this._finalDecrypt(), r2 ? r2.concat(o) : o;
  };
  mr.prototype._pad = function(e2, r2) {
    if (r2 === 0)
      return false;
    for (;r2 < e2.length; )
      e2[r2++] = 0;
    return true;
  };
  mr.prototype._finalEncrypt = function() {
    if (!this._pad(this.buffer, this.bufferOff))
      return [];
    var e2 = new Array(this.blockSize);
    return this._update(this.buffer, 0, e2, 0), e2;
  };
  mr.prototype._unpad = function(e2) {
    return e2;
  };
  mr.prototype._finalDecrypt = function() {
    X7.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
    var e2 = new Array(this.blockSize);
    return this._flushBuffer(e2, 0), this._unpad(e2);
  };
});
var ku = T((gT, $b) => {
  var Zb = ar(), J7 = Ie(), Nt = Tu(), Vb = vs();
  function Q7() {
    this.tmp = new Array(2), this.keys = null;
  }
  function ei(t3) {
    Vb.call(this, t3);
    var e2 = new Q7;
    this._desState = e2, this.deriveKeys(e2, t3.key);
  }
  J7(ei, Vb);
  $b.exports = ei;
  ei.create = function(e2) {
    return new ei(e2);
  };
  var e9 = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
  ei.prototype.deriveKeys = function(e2, r2) {
    e2.keys = new Array(16 * 2), Zb.equal(r2.length, this.blockSize, "Invalid key length");
    var o = Nt.readUInt32BE(r2, 0), f = Nt.readUInt32BE(r2, 4);
    Nt.pc1(o, f, e2.tmp, 0), o = e2.tmp[0], f = e2.tmp[1];
    for (var p = 0;p < e2.keys.length; p += 2) {
      var m = e9[p >>> 1];
      o = Nt.r28shl(o, m), f = Nt.r28shl(f, m), Nt.pc2(o, f, e2.keys, p);
    }
  };
  ei.prototype._update = function(e2, r2, o, f) {
    var p = this._desState, m = Nt.readUInt32BE(e2, r2), y = Nt.readUInt32BE(e2, r2 + 4);
    Nt.ip(m, y, p.tmp, 0), m = p.tmp[0], y = p.tmp[1], this.type === "encrypt" ? this._encrypt(p, m, y, p.tmp, 0) : this._decrypt(p, m, y, p.tmp, 0), m = p.tmp[0], y = p.tmp[1], Nt.writeUInt32BE(o, m, f), Nt.writeUInt32BE(o, y, f + 4);
  };
  ei.prototype._pad = function(e2, r2) {
    for (var o = e2.length - r2, f = r2;f < e2.length; f++)
      e2[f] = o;
    return true;
  };
  ei.prototype._unpad = function(e2) {
    for (var r2 = e2[e2.length - 1], o = e2.length - r2;o < e2.length; o++)
      Zb.equal(e2[o], r2);
    return e2.slice(0, e2.length - r2);
  };
  ei.prototype._encrypt = function(e2, r2, o, f, p) {
    for (var m = r2, y = o, M = 0;M < e2.keys.length; M += 2) {
      var x = e2.keys[M], S = e2.keys[M + 1];
      Nt.expand(y, e2.tmp, 0), x ^= e2.tmp[0], S ^= e2.tmp[1];
      var E = Nt.substitute(x, S), B = Nt.permute(E), q = y;
      y = (m ^ B) >>> 0, m = q;
    }
    Nt.rip(y, m, f, p);
  };
  ei.prototype._decrypt = function(e2, r2, o, f, p) {
    for (var m = o, y = r2, M = e2.keys.length - 2;M >= 0; M -= 2) {
      var x = e2.keys[M], S = e2.keys[M + 1];
      Nt.expand(m, e2.tmp, 0), x ^= e2.tmp[0], S ^= e2.tmp[1];
      var E = Nt.substitute(x, S), B = Nt.permute(E), q = m;
      m = (y ^ B) >>> 0, y = q;
    }
    Nt.rip(m, y, f, p);
  };
});
var Yb = T((Gb) => {
  var t9 = ar(), r9 = Ie(), bs = {};
  function i9(t3) {
    t9.equal(t3.length, 8, "Invalid IV length"), this.iv = new Array(8);
    for (var e2 = 0;e2 < this.iv.length; e2++)
      this.iv[e2] = t3[e2];
  }
  function n9(t3) {
    function e2(p) {
      t3.call(this, p), this._cbcInit();
    }
    r9(e2, t3);
    for (var r2 = Object.keys(bs), o = 0;o < r2.length; o++) {
      var f = r2[o];
      e2.prototype[f] = bs[f];
    }
    return e2.create = function(m) {
      return new e2(m);
    }, e2;
  }
  Gb.instantiate = n9;
  bs._cbcInit = function() {
    var e2 = new i9(this.options.iv);
    this._cbcState = e2;
  };
  bs._update = function(e2, r2, o, f) {
    var p = this._cbcState, m = this.constructor.super_.prototype, y = p.iv;
    if (this.type === "encrypt") {
      for (var M = 0;M < this.blockSize; M++)
        y[M] ^= e2[r2 + M];
      m._update.call(this, y, 0, o, f);
      for (var M = 0;M < this.blockSize; M++)
        y[M] = o[f + M];
    } else {
      m._update.call(this, e2, r2, o, f);
      for (var M = 0;M < this.blockSize; M++)
        o[f + M] ^= y[M];
      for (var M = 0;M < this.blockSize; M++)
        y[M] = e2[r2 + M];
    }
  };
});
var Qb = T((wT, Jb) => {
  var f9 = ar(), a9 = Ie(), Xb = vs(), Wi = ku();
  function o9(t3, e2) {
    f9.equal(e2.length, 24, "Invalid key length");
    var r2 = e2.slice(0, 8), o = e2.slice(8, 16), f = e2.slice(16, 24);
    t3 === "encrypt" ? this.ciphers = [Wi.create({ type: "encrypt", key: r2 }), Wi.create({ type: "decrypt", key: o }), Wi.create({ type: "encrypt", key: f })] : this.ciphers = [Wi.create({ type: "decrypt", key: f }), Wi.create({ type: "encrypt", key: o }), Wi.create({ type: "decrypt", key: r2 })];
  }
  function An(t3) {
    Xb.call(this, t3);
    var e2 = new o9(this.type, this.options.key);
    this._edeState = e2;
  }
  a9(An, Xb);
  Jb.exports = An;
  An.create = function(e2) {
    return new An(e2);
  };
  An.prototype._update = function(e2, r2, o, f) {
    var p = this._edeState;
    p.ciphers[0]._update(e2, r2, o, f), p.ciphers[1]._update(o, f, o, f), p.ciphers[2]._update(o, f, o, f);
  };
  An.prototype._pad = Wi.prototype._pad;
  An.prototype._unpad = Wi.prototype._unpad;
});
var em = T((gf) => {
  gf.utils = Tu();
  gf.Cipher = vs();
  gf.DES = ku();
  gf.CBC = Yb();
  gf.EDE = Qb();
});
var im = T((_T, rm) => {
  var tm = yi(), wi = em(), s9 = Ie(), Rn = Te().Buffer, Sa = { "des-ede3-cbc": wi.CBC.instantiate(wi.EDE), "des-ede3": wi.EDE, "des-ede-cbc": wi.CBC.instantiate(wi.EDE), "des-ede": wi.EDE, "des-cbc": wi.CBC.instantiate(wi.DES), "des-ecb": wi.DES };
  Sa.des = Sa["des-cbc"];
  Sa.des3 = Sa["des-ede3-cbc"];
  rm.exports = ms;
  s9(ms, tm);
  function ms(t3) {
    tm.call(this);
    var e2 = t3.mode.toLowerCase(), r2 = Sa[e2], o;
    t3.decrypt ? o = "decrypt" : o = "encrypt";
    var f = t3.key;
    Rn.isBuffer(f) || (f = Rn.from(f)), (e2 === "des-ede" || e2 === "des-ede-cbc") && (f = Rn.concat([f, f.slice(0, 8)]));
    var p = t3.iv;
    Rn.isBuffer(p) || (p = Rn.from(p)), this._des = r2.create({ key: f, iv: p, type: o });
  }
  ms.prototype._update = function(t3) {
    return Rn.from(this._des.update(t3));
  };
  ms.prototype._final = function() {
    return Rn.from(this._des.final());
  };
});
var nm = T((Lu) => {
  Lu.encrypt = function(t3, e2) {
    return t3._cipher.encryptBlock(e2);
  };
  Lu.decrypt = function(t3, e2) {
    return t3._cipher.decryptBlock(e2);
  };
});
var yf = T((ST, fm) => {
  fm.exports = function(e2, r2) {
    for (var o = Math.min(e2.length, r2.length), f = new Buffer(o), p = 0;p < o; ++p)
      f[p] = e2[p] ^ r2[p];
    return f;
  };
});
var om = T((Nu) => {
  var am = yf();
  Nu.encrypt = function(t3, e2) {
    var r2 = am(e2, t3._prev);
    return t3._prev = t3._cipher.encryptBlock(r2), t3._prev;
  };
  Nu.decrypt = function(t3, e2) {
    var r2 = t3._prev;
    t3._prev = e2;
    var o = t3._cipher.decryptBlock(e2);
    return am(o, r2);
  };
});
var um = T((hm) => {
  var Ea = Te().Buffer, h9 = yf();
  function sm(t3, e2, r2) {
    var o = e2.length, f = h9(e2, t3._cache);
    return t3._cache = t3._cache.slice(o), t3._prev = Ea.concat([t3._prev, r2 ? e2 : f]), f;
  }
  hm.encrypt = function(t3, e2, r2) {
    for (var o = Ea.allocUnsafe(0), f;e2.length; )
      if (t3._cache.length === 0 && (t3._cache = t3._cipher.encryptBlock(t3._prev), t3._prev = Ea.allocUnsafe(0)), t3._cache.length <= e2.length)
        f = t3._cache.length, o = Ea.concat([o, sm(t3, e2.slice(0, f), r2)]), e2 = e2.slice(f);
      else {
        o = Ea.concat([o, sm(t3, e2, r2)]);
        break;
      }
    return o;
  };
});
var dm = T((lm) => {
  var Du = Te().Buffer;
  function u9(t3, e2, r2) {
    var o = t3._cipher.encryptBlock(t3._prev), f = o[0] ^ e2;
    return t3._prev = Du.concat([t3._prev.slice(1), Du.from([r2 ? e2 : f])]), f;
  }
  lm.encrypt = function(t3, e2, r2) {
    for (var o = e2.length, f = Du.allocUnsafe(o), p = -1;++p < o; )
      f[p] = u9(t3, e2[p], r2);
    return f;
  };
});
var pm = T((cm) => {
  var gs = Te().Buffer;
  function l9(t3, e2, r2) {
    for (var o, f = -1, p = 8, m = 0, y, M;++f < p; )
      o = t3._cipher.encryptBlock(t3._prev), y = e2 & 1 << 7 - f ? 128 : 0, M = o[0] ^ y, m += (M & 128) >> f % 8, t3._prev = d9(t3._prev, r2 ? y : M);
    return m;
  }
  function d9(t3, e2) {
    var r2 = t3.length, o = -1, f = gs.allocUnsafe(t3.length);
    for (t3 = gs.concat([t3, gs.from([e2])]);++o < r2; )
      f[o] = t3[o] << 1 | t3[o + 1] >> 7;
    return f;
  }
  cm.encrypt = function(t3, e2, r2) {
    for (var o = e2.length, f = gs.allocUnsafe(o), p = -1;++p < o; )
      f[p] = l9(t3, e2[p], r2);
    return f;
  };
});
var bm = T((vm) => {
  var c9 = yf();
  function p9(t3) {
    return t3._prev = t3._cipher.encryptBlock(t3._prev), t3._prev;
  }
  vm.encrypt = function(t3, e2) {
    for (;t3._cache.length < e2.length; )
      t3._cache = Buffer.concat([t3._cache, p9(t3)]);
    var r2 = t3._cache.slice(0, e2.length);
    return t3._cache = t3._cache.slice(e2.length), c9(e2, r2);
  };
});
var Pu = T((IT, mm) => {
  function v9(t3) {
    for (var e2 = t3.length, r2;e2--; )
      if (r2 = t3.readUInt8(e2), r2 === 255)
        t3.writeUInt8(0, e2);
      else {
        r2++, t3.writeUInt8(r2, e2);
        break;
      }
  }
  mm.exports = v9;
});
var Ou = T((ym) => {
  var b9 = yf(), gm = Te().Buffer, m9 = Pu();
  function g9(t3) {
    var e2 = t3._cipher.encryptBlockRaw(t3._prev);
    return m9(t3._prev), e2;
  }
  var Cu = 16;
  ym.encrypt = function(t3, e2) {
    var r2 = Math.ceil(e2.length / Cu), o = t3._cache.length;
    t3._cache = gm.concat([t3._cache, gm.allocUnsafe(r2 * Cu)]);
    for (var f = 0;f < r2; f++) {
      var p = g9(t3), m = o + f * Cu;
      t3._cache.writeUInt32BE(p[0], m + 0), t3._cache.writeUInt32BE(p[1], m + 4), t3._cache.writeUInt32BE(p[2], m + 8), t3._cache.writeUInt32BE(p[3], m + 12);
    }
    var y = t3._cache.slice(0, e2.length);
    return t3._cache = t3._cache.slice(e2.length), b9(e2, y);
  };
});
var Fu = T((kT, y9) => {
  y9.exports = { "aes-128-ecb": { cipher: "AES", key: 128, iv: 0, mode: "ECB", type: "block" }, "aes-192-ecb": { cipher: "AES", key: 192, iv: 0, mode: "ECB", type: "block" }, "aes-256-ecb": { cipher: "AES", key: 256, iv: 0, mode: "ECB", type: "block" }, "aes-128-cbc": { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, "aes-192-cbc": { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, "aes-256-cbc": { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, aes128: { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, aes192: { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, aes256: { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, "aes-128-cfb": { cipher: "AES", key: 128, iv: 16, mode: "CFB", type: "stream" }, "aes-192-cfb": { cipher: "AES", key: 192, iv: 16, mode: "CFB", type: "stream" }, "aes-256-cfb": { cipher: "AES", key: 256, iv: 16, mode: "CFB", type: "stream" }, "aes-128-cfb8": { cipher: "AES", key: 128, iv: 16, mode: "CFB8", type: "stream" }, "aes-192-cfb8": { cipher: "AES", key: 192, iv: 16, mode: "CFB8", type: "stream" }, "aes-256-cfb8": { cipher: "AES", key: 256, iv: 16, mode: "CFB8", type: "stream" }, "aes-128-cfb1": { cipher: "AES", key: 128, iv: 16, mode: "CFB1", type: "stream" }, "aes-192-cfb1": { cipher: "AES", key: 192, iv: 16, mode: "CFB1", type: "stream" }, "aes-256-cfb1": { cipher: "AES", key: 256, iv: 16, mode: "CFB1", type: "stream" }, "aes-128-ofb": { cipher: "AES", key: 128, iv: 16, mode: "OFB", type: "stream" }, "aes-192-ofb": { cipher: "AES", key: 192, iv: 16, mode: "OFB", type: "stream" }, "aes-256-ofb": { cipher: "AES", key: 256, iv: 16, mode: "OFB", type: "stream" }, "aes-128-ctr": { cipher: "AES", key: 128, iv: 16, mode: "CTR", type: "stream" }, "aes-192-ctr": { cipher: "AES", key: 192, iv: 16, mode: "CTR", type: "stream" }, "aes-256-ctr": { cipher: "AES", key: 256, iv: 16, mode: "CTR", type: "stream" }, "aes-128-gcm": { cipher: "AES", key: 128, iv: 12, mode: "GCM", type: "auth" }, "aes-192-gcm": { cipher: "AES", key: 192, iv: 12, mode: "GCM", type: "auth" }, "aes-256-gcm": { cipher: "AES", key: 256, iv: 12, mode: "GCM", type: "auth" } };
});
var ws = T((LT, wm) => {
  var w9 = { ECB: nm(), CBC: om(), CFB: um(), CFB8: dm(), CFB1: pm(), OFB: bm(), CTR: Ou(), GCM: Ou() }, ys = Fu();
  for (Uu in ys)
    ys[Uu].module = w9[ys[Uu].mode];
  var Uu;
  wm.exports = ys;
});
var Aa = T((NT, _m) => {
  var Ms = Te().Buffer;
  function Hu(t3) {
    Ms.isBuffer(t3) || (t3 = Ms.from(t3));
    for (var e2 = t3.length / 4 | 0, r2 = new Array(e2), o = 0;o < e2; o++)
      r2[o] = t3.readUInt32BE(o * 4);
    return r2;
  }
  function zu(t3) {
    for (var e2 = 0;e2 < t3.length; t3++)
      t3[e2] = 0;
  }
  function Mm(t3, e2, r2, o, f) {
    for (var p = r2[0], m = r2[1], y = r2[2], M = r2[3], x = t3[0] ^ e2[0], S = t3[1] ^ e2[1], E = t3[2] ^ e2[2], B = t3[3] ^ e2[3], q, L, ge, _e, N = 4, we = 1;we < f; we++)
      q = p[x >>> 24] ^ m[S >>> 16 & 255] ^ y[E >>> 8 & 255] ^ M[B & 255] ^ e2[N++], L = p[S >>> 24] ^ m[E >>> 16 & 255] ^ y[B >>> 8 & 255] ^ M[x & 255] ^ e2[N++], ge = p[E >>> 24] ^ m[B >>> 16 & 255] ^ y[x >>> 8 & 255] ^ M[S & 255] ^ e2[N++], _e = p[B >>> 24] ^ m[x >>> 16 & 255] ^ y[S >>> 8 & 255] ^ M[E & 255] ^ e2[N++], x = q, S = L, E = ge, B = _e;
    return q = (o[x >>> 24] << 24 | o[S >>> 16 & 255] << 16 | o[E >>> 8 & 255] << 8 | o[B & 255]) ^ e2[N++], L = (o[S >>> 24] << 24 | o[E >>> 16 & 255] << 16 | o[B >>> 8 & 255] << 8 | o[x & 255]) ^ e2[N++], ge = (o[E >>> 24] << 24 | o[B >>> 16 & 255] << 16 | o[x >>> 8 & 255] << 8 | o[S & 255]) ^ e2[N++], _e = (o[B >>> 24] << 24 | o[x >>> 16 & 255] << 16 | o[S >>> 8 & 255] << 8 | o[E & 255]) ^ e2[N++], q = q >>> 0, L = L >>> 0, ge = ge >>> 0, _e = _e >>> 0, [q, L, ge, _e];
  }
  var M9 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], kt = function() {
    for (var t3 = new Array(256), e2 = 0;e2 < 256; e2++)
      e2 < 128 ? t3[e2] = e2 << 1 : t3[e2] = e2 << 1 ^ 283;
    for (var r2 = [], o = [], f = [[], [], [], []], p = [[], [], [], []], m = 0, y = 0, M = 0;M < 256; ++M) {
      var x = y ^ y << 1 ^ y << 2 ^ y << 3 ^ y << 4;
      x = x >>> 8 ^ x & 255 ^ 99, r2[m] = x, o[x] = m;
      var S = t3[m], E = t3[S], B = t3[E], q = t3[x] * 257 ^ x * 16843008;
      f[0][m] = q << 24 | q >>> 8, f[1][m] = q << 16 | q >>> 16, f[2][m] = q << 8 | q >>> 24, f[3][m] = q, q = B * 16843009 ^ E * 65537 ^ S * 257 ^ m * 16843008, p[0][x] = q << 24 | q >>> 8, p[1][x] = q << 16 | q >>> 16, p[2][x] = q << 8 | q >>> 24, p[3][x] = q, m === 0 ? m = y = 1 : (m = S ^ t3[t3[t3[B ^ S]]], y ^= t3[t3[y]]);
    }
    return { SBOX: r2, INV_SBOX: o, SUB_MIX: f, INV_SUB_MIX: p };
  }();
  function gr(t3) {
    this._key = Hu(t3), this._reset();
  }
  gr.blockSize = 4 * 4;
  gr.keySize = 256 / 8;
  gr.prototype.blockSize = gr.blockSize;
  gr.prototype.keySize = gr.keySize;
  gr.prototype._reset = function() {
    for (var t3 = this._key, e2 = t3.length, r2 = e2 + 6, o = (r2 + 1) * 4, f = [], p = 0;p < e2; p++)
      f[p] = t3[p];
    for (p = e2;p < o; p++) {
      var m = f[p - 1];
      p % e2 === 0 ? (m = m << 8 | m >>> 24, m = kt.SBOX[m >>> 24] << 24 | kt.SBOX[m >>> 16 & 255] << 16 | kt.SBOX[m >>> 8 & 255] << 8 | kt.SBOX[m & 255], m ^= M9[p / e2 | 0] << 24) : e2 > 6 && p % e2 === 4 && (m = kt.SBOX[m >>> 24] << 24 | kt.SBOX[m >>> 16 & 255] << 16 | kt.SBOX[m >>> 8 & 255] << 8 | kt.SBOX[m & 255]), f[p] = f[p - e2] ^ m;
    }
    for (var y = [], M = 0;M < o; M++) {
      var x = o - M, S = f[x - (M % 4 ? 0 : 4)];
      M < 4 || x <= 4 ? y[M] = S : y[M] = kt.INV_SUB_MIX[0][kt.SBOX[S >>> 24]] ^ kt.INV_SUB_MIX[1][kt.SBOX[S >>> 16 & 255]] ^ kt.INV_SUB_MIX[2][kt.SBOX[S >>> 8 & 255]] ^ kt.INV_SUB_MIX[3][kt.SBOX[S & 255]];
    }
    this._nRounds = r2, this._keySchedule = f, this._invKeySchedule = y;
  };
  gr.prototype.encryptBlockRaw = function(t3) {
    return t3 = Hu(t3), Mm(t3, this._keySchedule, kt.SUB_MIX, kt.SBOX, this._nRounds);
  };
  gr.prototype.encryptBlock = function(t3) {
    var e2 = this.encryptBlockRaw(t3), r2 = Ms.allocUnsafe(16);
    return r2.writeUInt32BE(e2[0], 0), r2.writeUInt32BE(e2[1], 4), r2.writeUInt32BE(e2[2], 8), r2.writeUInt32BE(e2[3], 12), r2;
  };
  gr.prototype.decryptBlock = function(t3) {
    t3 = Hu(t3);
    var e2 = t3[1];
    t3[1] = t3[3], t3[3] = e2;
    var r2 = Mm(t3, this._invKeySchedule, kt.INV_SUB_MIX, kt.INV_SBOX, this._nRounds), o = Ms.allocUnsafe(16);
    return o.writeUInt32BE(r2[0], 0), o.writeUInt32BE(r2[3], 4), o.writeUInt32BE(r2[2], 8), o.writeUInt32BE(r2[1], 12), o;
  };
  gr.prototype.scrub = function() {
    zu(this._keySchedule), zu(this._invKeySchedule), zu(this._key);
  };
  _m.exports.AES = gr;
});
var Em = T((DT, Sm) => {
  var wf = Te().Buffer, _9 = wf.alloc(16, 0);
  function x9(t3) {
    return [t3.readUInt32BE(0), t3.readUInt32BE(4), t3.readUInt32BE(8), t3.readUInt32BE(12)];
  }
  function xm(t3) {
    var e2 = wf.allocUnsafe(16);
    return e2.writeUInt32BE(t3[0] >>> 0, 0), e2.writeUInt32BE(t3[1] >>> 0, 4), e2.writeUInt32BE(t3[2] >>> 0, 8), e2.writeUInt32BE(t3[3] >>> 0, 12), e2;
  }
  function Ra(t3) {
    this.h = t3, this.state = wf.alloc(16, 0), this.cache = wf.allocUnsafe(0);
  }
  Ra.prototype.ghash = function(t3) {
    for (var e2 = -1;++e2 < t3.length; )
      this.state[e2] ^= t3[e2];
    this._multiply();
  };
  Ra.prototype._multiply = function() {
    for (var t3 = x9(this.h), e2 = [0, 0, 0, 0], r2, o, f, p = -1;++p < 128; ) {
      for (o = (this.state[~~(p / 8)] & 1 << 7 - p % 8) !== 0, o && (e2[0] ^= t3[0], e2[1] ^= t3[1], e2[2] ^= t3[2], e2[3] ^= t3[3]), f = (t3[3] & 1) !== 0, r2 = 3;r2 > 0; r2--)
        t3[r2] = t3[r2] >>> 1 | (t3[r2 - 1] & 1) << 31;
      t3[0] = t3[0] >>> 1, f && (t3[0] = t3[0] ^ 225 << 24);
    }
    this.state = xm(e2);
  };
  Ra.prototype.update = function(t3) {
    this.cache = wf.concat([this.cache, t3]);
    for (var e2;this.cache.length >= 16; )
      e2 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e2);
  };
  Ra.prototype.final = function(t3, e2) {
    return this.cache.length && this.ghash(wf.concat([this.cache, _9], 16)), this.ghash(xm([0, t3, 0, e2])), this.state;
  };
  Sm.exports = Ra;
});
var Wu = T((PT, Bm) => {
  var S9 = Aa(), rr = Te().Buffer, Am = yi(), E9 = Ie(), Rm = Em(), A9 = yf(), R9 = Pu();
  function B9(t3, e2) {
    var r2 = 0;
    t3.length !== e2.length && r2++;
    for (var o = Math.min(t3.length, e2.length), f = 0;f < o; ++f)
      r2 += t3[f] ^ e2[f];
    return r2;
  }
  function q9(t3, e2, r2) {
    if (e2.length === 12)
      return t3._finID = rr.concat([e2, rr.from([0, 0, 0, 1])]), rr.concat([e2, rr.from([0, 0, 0, 2])]);
    var o = new Rm(r2), f = e2.length, p = f % 16;
    o.update(e2), p && (p = 16 - p, o.update(rr.alloc(p, 0))), o.update(rr.alloc(8, 0));
    var m = f * 8, y = rr.alloc(8);
    y.writeUIntBE(m, 0, 8), o.update(y), t3._finID = o.state;
    var M = rr.from(t3._finID);
    return R9(M), M;
  }
  function Bn(t3, e2, r2, o) {
    Am.call(this);
    var f = rr.alloc(4, 0);
    this._cipher = new S9.AES(e2);
    var p = this._cipher.encryptBlock(f);
    this._ghash = new Rm(p), r2 = q9(this, r2, p), this._prev = rr.from(r2), this._cache = rr.allocUnsafe(0), this._secCache = rr.allocUnsafe(0), this._decrypt = o, this._alen = 0, this._len = 0, this._mode = t3, this._authTag = null, this._called = false;
  }
  E9(Bn, Am);
  Bn.prototype._update = function(t3) {
    if (!this._called && this._alen) {
      var e2 = 16 - this._alen % 16;
      e2 < 16 && (e2 = rr.alloc(e2, 0), this._ghash.update(e2));
    }
    this._called = true;
    var r2 = this._mode.encrypt(this, t3);
    return this._decrypt ? this._ghash.update(t3) : this._ghash.update(r2), this._len += t3.length, r2;
  };
  Bn.prototype._final = function() {
    if (this._decrypt && !this._authTag)
      throw new Error("Unsupported state or unable to authenticate data");
    var t3 = A9(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
    if (this._decrypt && B9(t3, this._authTag))
      throw new Error("Unsupported state or unable to authenticate data");
    this._authTag = t3, this._cipher.scrub();
  };
  Bn.prototype.getAuthTag = function() {
    if (this._decrypt || !rr.isBuffer(this._authTag))
      throw new Error("Attempting to get auth tag in unsupported state");
    return this._authTag;
  };
  Bn.prototype.setAuthTag = function(e2) {
    if (!this._decrypt)
      throw new Error("Attempting to set auth tag in unsupported state");
    this._authTag = e2;
  };
  Bn.prototype.setAAD = function(e2) {
    if (this._called)
      throw new Error("Attempting to set AAD in unsupported state");
    this._ghash.update(e2), this._alen += e2.length;
  };
  Bm.exports = Bn;
});
var ju = T((CT, Im) => {
  var I9 = Aa(), Ku = Te().Buffer, qm = yi(), T9 = Ie();
  function _s(t3, e2, r2, o) {
    qm.call(this), this._cipher = new I9.AES(e2), this._prev = Ku.from(r2), this._cache = Ku.allocUnsafe(0), this._secCache = Ku.allocUnsafe(0), this._decrypt = o, this._mode = t3;
  }
  T9(_s, qm);
  _s.prototype._update = function(t3) {
    return this._mode.encrypt(this, t3, this._decrypt);
  };
  _s.prototype._final = function() {
    this._cipher.scrub();
  };
  Im.exports = _s;
});
var Ba = T((OT, Tm) => {
  var qn = Te().Buffer, k9 = Ao();
  function L9(t3, e2, r2, o) {
    if (qn.isBuffer(t3) || (t3 = qn.from(t3, "binary")), e2 && (qn.isBuffer(e2) || (e2 = qn.from(e2, "binary")), e2.length !== 8))
      throw new RangeError("salt should be Buffer with 8 byte length");
    for (var f = r2 / 8, p = qn.alloc(f), m = qn.alloc(o || 0), y = qn.alloc(0);f > 0 || o > 0; ) {
      var M = new k9;
      M.update(y), M.update(t3), e2 && M.update(e2), y = M.digest();
      var x = 0;
      if (f > 0) {
        var S = p.length - f;
        x = Math.min(f, y.length), y.copy(p, S, 0, x), f -= x;
      }
      if (x < y.length && o > 0) {
        var E = m.length - o, B = Math.min(o, y.length - x);
        y.copy(m, E, x, x + B), o -= B;
      }
    }
    return y.fill(0), { key: p, iv: m };
  }
  Tm.exports = L9;
});
var Dm = T((Zu) => {
  var km = ws(), N9 = Wu(), Mi = Te().Buffer, D9 = ju(), Lm = yi(), P9 = Aa(), C9 = Ba(), O9 = Ie();
  function qa(t3, e2, r2) {
    Lm.call(this), this._cache = new xs, this._cipher = new P9.AES(e2), this._prev = Mi.from(r2), this._mode = t3, this._autopadding = true;
  }
  O9(qa, Lm);
  qa.prototype._update = function(t3) {
    this._cache.add(t3);
    for (var e2, r2, o = [];e2 = this._cache.get(); )
      r2 = this._mode.encrypt(this, e2), o.push(r2);
    return Mi.concat(o);
  };
  var F9 = Mi.alloc(16, 16);
  qa.prototype._final = function() {
    var t3 = this._cache.flush();
    if (this._autopadding)
      return t3 = this._mode.encrypt(this, t3), this._cipher.scrub(), t3;
    if (!t3.equals(F9))
      throw this._cipher.scrub(), new Error("data not multiple of block length");
  };
  qa.prototype.setAutoPadding = function(t3) {
    return this._autopadding = !!t3, this;
  };
  function xs() {
    this.cache = Mi.allocUnsafe(0);
  }
  xs.prototype.add = function(t3) {
    this.cache = Mi.concat([this.cache, t3]);
  };
  xs.prototype.get = function() {
    if (this.cache.length > 15) {
      var t3 = this.cache.slice(0, 16);
      return this.cache = this.cache.slice(16), t3;
    }
    return null;
  };
  xs.prototype.flush = function() {
    for (var t3 = 16 - this.cache.length, e2 = Mi.allocUnsafe(t3), r2 = -1;++r2 < t3; )
      e2.writeUInt8(t3, r2);
    return Mi.concat([this.cache, e2]);
  };
  function Nm(t3, e2, r2) {
    var o = km[t3.toLowerCase()];
    if (!o)
      throw new TypeError("invalid suite type");
    if (typeof e2 == "string" && (e2 = Mi.from(e2)), e2.length !== o.key / 8)
      throw new TypeError("invalid key length " + e2.length);
    if (typeof r2 == "string" && (r2 = Mi.from(r2)), o.mode !== "GCM" && r2.length !== o.iv)
      throw new TypeError("invalid iv length " + r2.length);
    return o.type === "stream" ? new D9(o.module, e2, r2) : o.type === "auth" ? new N9(o.module, e2, r2) : new qa(o.module, e2, r2);
  }
  function U9(t3, e2) {
    var r2 = km[t3.toLowerCase()];
    if (!r2)
      throw new TypeError("invalid suite type");
    var o = C9(e2, false, r2.key, r2.iv);
    return Nm(t3, o.key, o.iv);
  }
  Zu.createCipheriv = Nm;
  Zu.createCipher = U9;
});
var Fm = T((Vu) => {
  var z9 = Wu(), Mf = Te().Buffer, Pm = ws(), H9 = ju(), Cm = yi(), W9 = Aa(), K9 = Ba(), j9 = Ie();
  function Ia(t3, e2, r2) {
    Cm.call(this), this._cache = new Ss, this._last = undefined, this._cipher = new W9.AES(e2), this._prev = Mf.from(r2), this._mode = t3, this._autopadding = true;
  }
  j9(Ia, Cm);
  Ia.prototype._update = function(t3) {
    this._cache.add(t3);
    for (var e2, r2, o = [];e2 = this._cache.get(this._autopadding); )
      r2 = this._mode.decrypt(this, e2), o.push(r2);
    return Mf.concat(o);
  };
  Ia.prototype._final = function() {
    var t3 = this._cache.flush();
    if (this._autopadding)
      return Z9(this._mode.decrypt(this, t3));
    if (t3)
      throw new Error("data not multiple of block length");
  };
  Ia.prototype.setAutoPadding = function(t3) {
    return this._autopadding = !!t3, this;
  };
  function Ss() {
    this.cache = Mf.allocUnsafe(0);
  }
  Ss.prototype.add = function(t3) {
    this.cache = Mf.concat([this.cache, t3]);
  };
  Ss.prototype.get = function(t3) {
    var e2;
    if (t3) {
      if (this.cache.length > 16)
        return e2 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e2;
    } else if (this.cache.length >= 16)
      return e2 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e2;
    return null;
  };
  Ss.prototype.flush = function() {
    if (this.cache.length)
      return this.cache;
  };
  function Z9(t3) {
    var e2 = t3[15];
    if (e2 < 1 || e2 > 16)
      throw new Error("unable to decrypt data");
    for (var r2 = -1;++r2 < e2; )
      if (t3[r2 + (16 - e2)] !== e2)
        throw new Error("unable to decrypt data");
    if (e2 !== 16)
      return t3.slice(0, 16 - e2);
  }
  function Om(t3, e2, r2) {
    var o = Pm[t3.toLowerCase()];
    if (!o)
      throw new TypeError("invalid suite type");
    if (typeof r2 == "string" && (r2 = Mf.from(r2)), o.mode !== "GCM" && r2.length !== o.iv)
      throw new TypeError("invalid iv length " + r2.length);
    if (typeof e2 == "string" && (e2 = Mf.from(e2)), e2.length !== o.key / 8)
      throw new TypeError("invalid key length " + e2.length);
    return o.type === "stream" ? new H9(o.module, e2, r2, true) : o.type === "auth" ? new z9(o.module, e2, r2, true) : new Ia(o.module, e2, r2);
  }
  function V9(t3, e2) {
    var r2 = Pm[t3.toLowerCase()];
    if (!r2)
      throw new TypeError("invalid suite type");
    var o = K9(e2, false, r2.key, r2.iv);
    return Om(t3, o.key, o.iv);
  }
  Vu.createDecipher = V9;
  Vu.createDecipheriv = Om;
});
var Es = T((Nr) => {
  var Um = Dm(), zm = Fm(), $9 = Fu();
  function G9() {
    return Object.keys($9);
  }
  Nr.createCipher = Nr.Cipher = Um.createCipher;
  Nr.createCipheriv = Nr.Cipheriv = Um.createCipheriv;
  Nr.createDecipher = Nr.Decipher = zm.createDecipher;
  Nr.createDecipheriv = Nr.Decipheriv = zm.createDecipheriv;
  Nr.listCiphers = Nr.getCiphers = G9;
});
var Hm = T((_i) => {
  _i["des-ecb"] = { key: 8, iv: 0 };
  _i["des-cbc"] = _i.des = { key: 8, iv: 8 };
  _i["des-ede3-cbc"] = _i.des3 = { key: 24, iv: 8 };
  _i["des-ede3"] = { key: 24, iv: 0 };
  _i["des-ede-cbc"] = { key: 16, iv: 8 };
  _i["des-ede"] = { key: 16, iv: 0 };
});
var Vm = T((Dr) => {
  var Wm = im(), $u = Es(), Ki = ws(), xi = Hm(), Km = Ba();
  function Y9(t3, e2) {
    t3 = t3.toLowerCase();
    var r2, o;
    if (Ki[t3])
      r2 = Ki[t3].key, o = Ki[t3].iv;
    else if (xi[t3])
      r2 = xi[t3].key * 8, o = xi[t3].iv;
    else
      throw new TypeError("invalid suite type");
    var f = Km(e2, false, r2, o);
    return jm(t3, f.key, f.iv);
  }
  function X9(t3, e2) {
    t3 = t3.toLowerCase();
    var r2, o;
    if (Ki[t3])
      r2 = Ki[t3].key, o = Ki[t3].iv;
    else if (xi[t3])
      r2 = xi[t3].key * 8, o = xi[t3].iv;
    else
      throw new TypeError("invalid suite type");
    var f = Km(e2, false, r2, o);
    return Zm(t3, f.key, f.iv);
  }
  function jm(t3, e2, r2) {
    if (t3 = t3.toLowerCase(), Ki[t3])
      return $u.createCipheriv(t3, e2, r2);
    if (xi[t3])
      return new Wm({ key: e2, iv: r2, mode: t3 });
    throw new TypeError("invalid suite type");
  }
  function Zm(t3, e2, r2) {
    if (t3 = t3.toLowerCase(), Ki[t3])
      return $u.createDecipheriv(t3, e2, r2);
    if (xi[t3])
      return new Wm({ key: e2, iv: r2, mode: t3, decrypt: true });
    throw new TypeError("invalid suite type");
  }
  function J9() {
    return Object.keys(xi).concat($u.getCiphers());
  }
  Dr.createCipher = Dr.Cipher = Y9;
  Dr.createCipheriv = Dr.Cipheriv = jm;
  Dr.createDecipher = Dr.Decipher = X9;
  Dr.createDecipheriv = Dr.Decipheriv = Zm;
  Dr.listCiphers = Dr.getCiphers = J9;
});
var ji = T(() => {
});
var Yu = T(($m, Gu) => {
  (function(t3, e2) {
    function r2(v, i) {
      if (!v)
        throw new Error(i || "Assertion failed");
    }
    function o(v, i) {
      v.super_ = i;
      var a2 = function() {
      };
      a2.prototype = i.prototype, v.prototype = new a2, v.prototype.constructor = v;
    }
    function f(v, i, a2) {
      if (f.isBN(v))
        return v;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i === "le" || i === "be") && (a2 = i, i = 10), this._init(v || 0, i || 10, a2 || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(i) {
      return i instanceof f ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f.wordSize && Array.isArray(i.words);
    }, f.max = function(i, a2) {
      return i.cmp(a2) > 0 ? i : a2;
    }, f.min = function(i, a2) {
      return i.cmp(a2) < 0 ? i : a2;
    }, f.prototype._init = function(i, a2, h) {
      if (typeof i == "number")
        return this._initNumber(i, a2, h);
      if (typeof i == "object")
        return this._initArray(i, a2, h);
      a2 === "hex" && (a2 = 16), r2(a2 === (a2 | 0) && a2 >= 2 && a2 <= 36), i = i.toString().replace(/\s+/g, "");
      var s = 0;
      i[0] === "-" && (s++, this.negative = 1), s < i.length && (a2 === 16 ? this._parseHex(i, s, h) : (this._parseBase(i, a2, s), h === "le" && this._initArray(this.toArray(), a2, h)));
    }, f.prototype._initNumber = function(i, a2, h) {
      i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r2(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h === "le" && this._initArray(this.toArray(), a2, h);
    }, f.prototype._initArray = function(i, a2, h) {
      if (r2(typeof i.length == "number"), i.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u, c, b = 0;
      if (h === "be")
        for (s = i.length - 1, u = 0;s >= 0; s -= 3)
          c = i[s] | i[s - 1] << 8 | i[s - 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      else if (h === "le")
        for (s = 0, u = 0;s < i.length; s += 3)
          c = i[s] | i[s + 1] << 8 | i[s + 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      return this.strip();
    };
    function m(v, i) {
      var a2 = v.charCodeAt(i);
      return a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : a2 - 48 & 15;
    }
    function y(v, i, a2) {
      var h = m(v, a2);
      return a2 - 1 >= i && (h |= m(v, a2 - 1) << 4), h;
    }
    f.prototype._parseHex = function(i, a2, h) {
      this.length = Math.ceil((i.length - a2) / 6), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u = 0, c = 0, b;
      if (h === "be")
        for (s = i.length - 1;s >= a2; s -= 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      else {
        var l = i.length - a2;
        for (s = l % 2 === 0 ? a2 + 1 : a2;s < i.length; s += 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      }
      this.strip();
    };
    function M(v, i, a2, h) {
      for (var s = 0, u = Math.min(v.length, a2), c = i;c < u; c++) {
        var b = v.charCodeAt(c) - 48;
        s *= h, b >= 49 ? s += b - 49 + 10 : b >= 17 ? s += b - 17 + 10 : s += b;
      }
      return s;
    }
    f.prototype._parseBase = function(i, a2, h) {
      this.words = [0], this.length = 1;
      for (var s = 0, u = 1;u <= 67108863; u *= a2)
        s++;
      s--, u = u / a2 | 0;
      for (var c = i.length - h, b = c % s, l = Math.min(c, c - b) + h, n = 0, d = h;d < l; d += s)
        n = M(i, d, d + s, a2), this.imuln(u), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      if (b !== 0) {
        var w = 1;
        for (n = M(i, d, i.length, a2), d = 0;d < b; d++)
          w *= a2;
        this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      }
      this.strip();
    }, f.prototype.copy = function(i) {
      i.words = new Array(this.length);
      for (var a2 = 0;a2 < this.length; a2++)
        i.words[a2] = this.words[a2];
      i.length = this.length, i.negative = this.negative, i.red = this.red;
    }, f.prototype.clone = function() {
      var i = new f(null);
      return this.copy(i), i;
    }, f.prototype._expand = function(i) {
      for (;this.length < i; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype.strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, f.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(i, a2) {
      i = i || 10, a2 = a2 | 0 || 1;
      var h;
      if (i === 16 || i === "hex") {
        h = "";
        for (var s = 0, u = 0, c = 0;c < this.length; c++) {
          var b = this.words[c], l = ((b << s | u) & 16777215).toString(16);
          u = b >>> 24 - s & 16777215, u !== 0 || c !== this.length - 1 ? h = x[6 - l.length] + l + h : h = l + h, s += 2, s >= 26 && (s -= 26, c--);
        }
        for (u !== 0 && (h = u.toString(16) + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      if (i === (i | 0) && i >= 2 && i <= 36) {
        var n = S[i], d = E[i];
        h = "";
        var w = this.clone();
        for (w.negative = 0;!w.isZero(); ) {
          var g = w.modn(d).toString(i);
          w = w.idivn(d), w.isZero() ? h = g + h : h = x[n - g.length] + g + h;
        }
        for (this.isZero() && (h = "0" + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var i = this.words[0];
      return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
    }, f.prototype.toJSON = function() {
      return this.toString(16);
    }, f.prototype.toBuffer = function(i, a2) {
      return r2(typeof p < "u"), this.toArrayLike(p, i, a2);
    }, f.prototype.toArray = function(i, a2) {
      return this.toArrayLike(Array, i, a2);
    }, f.prototype.toArrayLike = function(i, a2, h) {
      var s = this.byteLength(), u = h || Math.max(1, s);
      r2(s <= u, "byte array longer than desired length"), r2(u > 0, "Requested array length <= 0"), this.strip();
      var c = a2 === "le", b = new i(u), l, n, d = this.clone();
      if (c) {
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[n] = l;
        for (;n < u; n++)
          b[n] = 0;
      } else {
        for (n = 0;n < u - s; n++)
          b[n] = 0;
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[u - n - 1] = l;
      }
      return b;
    }, Math.clz32 ? f.prototype._countBits = function(i) {
      return 32 - Math.clz32(i);
    } : f.prototype._countBits = function(i) {
      var a2 = i, h = 0;
      return a2 >= 4096 && (h += 13, a2 >>>= 13), a2 >= 64 && (h += 7, a2 >>>= 7), a2 >= 8 && (h += 4, a2 >>>= 4), a2 >= 2 && (h += 2, a2 >>>= 2), h + a2;
    }, f.prototype._zeroBits = function(i) {
      if (i === 0)
        return 26;
      var a2 = i, h = 0;
      return (a2 & 8191) === 0 && (h += 13, a2 >>>= 13), (a2 & 127) === 0 && (h += 7, a2 >>>= 7), (a2 & 15) === 0 && (h += 4, a2 >>>= 4), (a2 & 3) === 0 && (h += 2, a2 >>>= 2), (a2 & 1) === 0 && h++, h;
    }, f.prototype.bitLength = function() {
      var i = this.words[this.length - 1], a2 = this._countBits(i);
      return (this.length - 1) * 26 + a2;
    };
    function B(v) {
      for (var i = new Array(v.bitLength()), a2 = 0;a2 < i.length; a2++) {
        var h = a2 / 26 | 0, s = a2 % 26;
        i[a2] = (v.words[h] & 1 << s) >>> s;
      }
      return i;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var i = 0, a2 = 0;a2 < this.length; a2++) {
        var h = this._zeroBits(this.words[a2]);
        if (i += h, h !== 26)
          break;
      }
      return i;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(i) {
      return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(i) {
      return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(i) {
      for (;this.length < i.length; )
        this.words[this.length++] = 0;
      for (var a2 = 0;a2 < i.length; a2++)
        this.words[a2] = this.words[a2] | i.words[a2];
      return this.strip();
    }, f.prototype.ior = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuor(i);
    }, f.prototype.or = function(i) {
      return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
    }, f.prototype.uor = function(i) {
      return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
    }, f.prototype.iuand = function(i) {
      var a2;
      this.length > i.length ? a2 = i : a2 = this;
      for (var h = 0;h < a2.length; h++)
        this.words[h] = this.words[h] & i.words[h];
      return this.length = a2.length, this.strip();
    }, f.prototype.iand = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuand(i);
    }, f.prototype.and = function(i) {
      return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
    }, f.prototype.uand = function(i) {
      return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
    }, f.prototype.iuxor = function(i) {
      var a2, h;
      this.length > i.length ? (a2 = this, h = i) : (a2 = i, h = this);
      for (var s = 0;s < h.length; s++)
        this.words[s] = a2.words[s] ^ h.words[s];
      if (this !== a2)
        for (;s < a2.length; s++)
          this.words[s] = a2.words[s];
      return this.length = a2.length, this.strip();
    }, f.prototype.ixor = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuxor(i);
    }, f.prototype.xor = function(i) {
      return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
    }, f.prototype.uxor = function(i) {
      return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
    }, f.prototype.inotn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = Math.ceil(i / 26) | 0, h = i % 26;
      this._expand(a2), h > 0 && a2--;
      for (var s = 0;s < a2; s++)
        this.words[s] = ~this.words[s] & 67108863;
      return h > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - h), this.strip();
    }, f.prototype.notn = function(i) {
      return this.clone().inotn(i);
    }, f.prototype.setn = function(i, a2) {
      r2(typeof i == "number" && i >= 0);
      var h = i / 26 | 0, s = i % 26;
      return this._expand(h + 1), a2 ? this.words[h] = this.words[h] | 1 << s : this.words[h] = this.words[h] & ~(1 << s), this.strip();
    }, f.prototype.iadd = function(i) {
      var a2;
      if (this.negative !== 0 && i.negative === 0)
        return this.negative = 0, a2 = this.isub(i), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && i.negative !== 0)
        return i.negative = 0, a2 = this.isub(i), i.negative = 1, a2._normSign();
      var h, s;
      this.length > i.length ? (h = this, s = i) : (h = i, s = this);
      for (var u = 0, c = 0;c < s.length; c++)
        a2 = (h.words[c] | 0) + (s.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      for (;u !== 0 && c < h.length; c++)
        a2 = (h.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      if (this.length = h.length, u !== 0)
        this.words[this.length] = u, this.length++;
      else if (h !== this)
        for (;c < h.length; c++)
          this.words[c] = h.words[c];
      return this;
    }, f.prototype.add = function(i) {
      var a2;
      return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a2 = this.sub(i), i.negative ^= 1, a2) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a2 = i.sub(this), this.negative = 1, a2) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
    }, f.prototype.isub = function(i) {
      if (i.negative !== 0) {
        i.negative = 0;
        var a2 = this.iadd(i);
        return i.negative = 1, a2._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
      var h = this.cmp(i);
      if (h === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var s, u;
      h > 0 ? (s = this, u = i) : (s = i, u = this);
      for (var c = 0, b = 0;b < u.length; b++)
        a2 = (s.words[b] | 0) - (u.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      for (;c !== 0 && b < s.length; b++)
        a2 = (s.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      if (c === 0 && b < s.length && s !== this)
        for (;b < s.length; b++)
          this.words[b] = s.words[b];
      return this.length = Math.max(this.length, b), s !== this && (this.negative = 1), this.strip();
    }, f.prototype.sub = function(i) {
      return this.clone().isub(i);
    };
    function q(v, i, a2) {
      a2.negative = i.negative ^ v.negative;
      var h = v.length + i.length | 0;
      a2.length = h, h = h - 1 | 0;
      var s = v.words[0] | 0, u = i.words[0] | 0, c = s * u, b = c & 67108863, l = c / 67108864 | 0;
      a2.words[0] = b;
      for (var n = 1;n < h; n++) {
        for (var d = l >>> 26, w = l & 67108863, g = Math.min(n, i.length - 1), _ = Math.max(0, n - v.length + 1);_ <= g; _++) {
          var A = n - _ | 0;
          s = v.words[A] | 0, u = i.words[_] | 0, c = s * u + w, d += c / 67108864 | 0, w = c & 67108863;
        }
        a2.words[n] = w | 0, l = d | 0;
      }
      return l !== 0 ? a2.words[n] = l | 0 : a2.length--, a2.strip();
    }
    var L = function(i, a2, h) {
      var s = i.words, u = a2.words, c = h.words, b = 0, l, n, d, w = s[0] | 0, g = w & 8191, _ = w >>> 13, A = s[1] | 0, R = A & 8191, I = A >>> 13, Me = s[2] | 0, k = Me & 8191, D = Me >>> 13, nt = s[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s[8] | 0, V = yt & 8191, $ = yt >>> 13, wt = s[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u[2] | 0, te = xt & 8191, re = xt >>> 13, St = u[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u[9] | 0, ve = It & 8191, be = It >>> 13;
      h.negative = i.negative ^ a2.negative, h.length = 19, l = Math.imul(g, X), n = Math.imul(g, J), n = n + Math.imul(_, X) | 0, d = Math.imul(_, J);
      var ft = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n = Math.imul(R, J), n = n + Math.imul(I, X) | 0, d = Math.imul(I, J), l = l + Math.imul(g, Q) | 0, n = n + Math.imul(g, ee) | 0, n = n + Math.imul(_, Q) | 0, d = d + Math.imul(_, ee) | 0;
      var Be = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k, X), n = Math.imul(k, J), n = n + Math.imul(D, X) | 0, d = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n = n + Math.imul(R, ee) | 0, n = n + Math.imul(I, Q) | 0, d = d + Math.imul(I, ee) | 0, l = l + Math.imul(g, te) | 0, n = n + Math.imul(g, re) | 0, n = n + Math.imul(_, te) | 0, d = d + Math.imul(_, re) | 0;
      var qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n = Math.imul(C, J), n = n + Math.imul(O, X) | 0, d = Math.imul(O, J), l = l + Math.imul(k, Q) | 0, n = n + Math.imul(k, ee) | 0, n = n + Math.imul(D, Q) | 0, d = d + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n = n + Math.imul(R, re) | 0, n = n + Math.imul(I, te) | 0, d = d + Math.imul(I, re) | 0, l = l + Math.imul(g, ie) | 0, n = n + Math.imul(g, ne) | 0, n = n + Math.imul(_, ie) | 0, d = d + Math.imul(_, ne) | 0;
      var ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n = Math.imul(F, J), n = n + Math.imul(U, X) | 0, d = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O, Q) | 0, d = d + Math.imul(O, ee) | 0, l = l + Math.imul(k, te) | 0, n = n + Math.imul(k, re) | 0, n = n + Math.imul(D, te) | 0, d = d + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n = n + Math.imul(R, ne) | 0, n = n + Math.imul(I, ie) | 0, d = d + Math.imul(I, ne) | 0, l = l + Math.imul(g, fe) | 0, n = n + Math.imul(g, ae) | 0, n = n + Math.imul(_, fe) | 0, d = d + Math.imul(_, ae) | 0;
      var He = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n = Math.imul(z, J), n = n + Math.imul(H, X) | 0, d = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U, Q) | 0, d = d + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O, te) | 0, d = d + Math.imul(O, re) | 0, l = l + Math.imul(k, ie) | 0, n = n + Math.imul(k, ne) | 0, n = n + Math.imul(D, ie) | 0, d = d + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n = n + Math.imul(R, ae) | 0, n = n + Math.imul(I, fe) | 0, d = d + Math.imul(I, ae) | 0, l = l + Math.imul(g, oe) | 0, n = n + Math.imul(g, se) | 0, n = n + Math.imul(_, oe) | 0, d = d + Math.imul(_, se) | 0;
      var We = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n = Math.imul(W, J), n = n + Math.imul(K, X) | 0, d = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H, Q) | 0, d = d + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U, te) | 0, d = d + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n = n + Math.imul(C, ne) | 0, n = n + Math.imul(O, ie) | 0, d = d + Math.imul(O, ne) | 0, l = l + Math.imul(k, fe) | 0, n = n + Math.imul(k, ae) | 0, n = n + Math.imul(D, fe) | 0, d = d + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n = n + Math.imul(R, se) | 0, n = n + Math.imul(I, oe) | 0, d = d + Math.imul(I, se) | 0, l = l + Math.imul(g, he) | 0, n = n + Math.imul(g, ue) | 0, n = n + Math.imul(_, he) | 0, d = d + Math.imul(_, ue) | 0;
      var Ke = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n = Math.imul(j, J), n = n + Math.imul(Z, X) | 0, d = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K, Q) | 0, d = d + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H, te) | 0, d = d + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n = n + Math.imul(F, ne) | 0, n = n + Math.imul(U, ie) | 0, d = d + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O, fe) | 0, d = d + Math.imul(O, ae) | 0, l = l + Math.imul(k, oe) | 0, n = n + Math.imul(k, se) | 0, n = n + Math.imul(D, oe) | 0, d = d + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n = n + Math.imul(R, ue) | 0, n = n + Math.imul(I, he) | 0, d = d + Math.imul(I, ue) | 0, l = l + Math.imul(g, le) | 0, n = n + Math.imul(g, de) | 0, n = n + Math.imul(_, le) | 0, d = d + Math.imul(_, de) | 0;
      var je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n = Math.imul(V, J), n = n + Math.imul($, X) | 0, d = Math.imul($, J), l = l + Math.imul(j, Q) | 0, n = n + Math.imul(j, ee) | 0, n = n + Math.imul(Z, Q) | 0, d = d + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K, te) | 0, d = d + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n = n + Math.imul(z, ne) | 0, n = n + Math.imul(H, ie) | 0, d = d + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U, fe) | 0, d = d + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O, oe) | 0, d = d + Math.imul(O, se) | 0, l = l + Math.imul(k, he) | 0, n = n + Math.imul(k, ue) | 0, n = n + Math.imul(D, he) | 0, d = d + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n = n + Math.imul(R, de) | 0, n = n + Math.imul(I, le) | 0, d = d + Math.imul(I, de) | 0, l = l + Math.imul(g, ce) | 0, n = n + Math.imul(g, pe) | 0, n = n + Math.imul(_, ce) | 0, d = d + Math.imul(_, pe) | 0;
      var Ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n = Math.imul(G, J), n = n + Math.imul(Y, X) | 0, d = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n = n + Math.imul(V, ee) | 0, n = n + Math.imul($, Q) | 0, d = d + Math.imul($, ee) | 0, l = l + Math.imul(j, te) | 0, n = n + Math.imul(j, re) | 0, n = n + Math.imul(Z, te) | 0, d = d + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n = n + Math.imul(W, ne) | 0, n = n + Math.imul(K, ie) | 0, d = d + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H, fe) | 0, d = d + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U, oe) | 0, d = d + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O, he) | 0, d = d + Math.imul(O, ue) | 0, l = l + Math.imul(k, le) | 0, n = n + Math.imul(k, de) | 0, n = n + Math.imul(D, le) | 0, d = d + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n = n + Math.imul(R, pe) | 0, n = n + Math.imul(I, ce) | 0, d = d + Math.imul(I, pe) | 0, l = l + Math.imul(g, ve) | 0, n = n + Math.imul(g, be) | 0, n = n + Math.imul(_, ve) | 0, d = d + Math.imul(_, be) | 0;
      var Ve = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n = Math.imul(G, ee), n = n + Math.imul(Y, Q) | 0, d = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n = n + Math.imul(V, re) | 0, n = n + Math.imul($, te) | 0, d = d + Math.imul($, re) | 0, l = l + Math.imul(j, ie) | 0, n = n + Math.imul(j, ne) | 0, n = n + Math.imul(Z, ie) | 0, d = d + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K, fe) | 0, d = d + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H, oe) | 0, d = d + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U, he) | 0, d = d + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O, le) | 0, d = d + Math.imul(O, de) | 0, l = l + Math.imul(k, ce) | 0, n = n + Math.imul(k, pe) | 0, n = n + Math.imul(D, ce) | 0, d = d + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n = n + Math.imul(R, be) | 0, n = n + Math.imul(I, ve) | 0, d = d + Math.imul(I, be) | 0;
      var $e = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n = Math.imul(G, re), n = n + Math.imul(Y, te) | 0, d = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n = n + Math.imul(V, ne) | 0, n = n + Math.imul($, ie) | 0, d = d + Math.imul($, ne) | 0, l = l + Math.imul(j, fe) | 0, n = n + Math.imul(j, ae) | 0, n = n + Math.imul(Z, fe) | 0, d = d + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K, oe) | 0, d = d + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H, he) | 0, d = d + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U, le) | 0, d = d + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O, ce) | 0, d = d + Math.imul(O, pe) | 0, l = l + Math.imul(k, ve) | 0, n = n + Math.imul(k, be) | 0, n = n + Math.imul(D, ve) | 0, d = d + Math.imul(D, be) | 0;
      var Ge = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n = Math.imul(G, ne), n = n + Math.imul(Y, ie) | 0, d = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n = n + Math.imul(V, ae) | 0, n = n + Math.imul($, fe) | 0, d = d + Math.imul($, ae) | 0, l = l + Math.imul(j, oe) | 0, n = n + Math.imul(j, se) | 0, n = n + Math.imul(Z, oe) | 0, d = d + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K, he) | 0, d = d + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H, le) | 0, d = d + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U, ce) | 0, d = d + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n = n + Math.imul(C, be) | 0, n = n + Math.imul(O, ve) | 0, d = d + Math.imul(O, be) | 0;
      var Ye = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n = Math.imul(G, ae), n = n + Math.imul(Y, fe) | 0, d = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n = n + Math.imul(V, se) | 0, n = n + Math.imul($, oe) | 0, d = d + Math.imul($, se) | 0, l = l + Math.imul(j, he) | 0, n = n + Math.imul(j, ue) | 0, n = n + Math.imul(Z, he) | 0, d = d + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K, le) | 0, d = d + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H, ce) | 0, d = d + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n = n + Math.imul(F, be) | 0, n = n + Math.imul(U, ve) | 0, d = d + Math.imul(U, be) | 0;
      var Xe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n = Math.imul(G, se), n = n + Math.imul(Y, oe) | 0, d = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n = n + Math.imul(V, ue) | 0, n = n + Math.imul($, he) | 0, d = d + Math.imul($, ue) | 0, l = l + Math.imul(j, le) | 0, n = n + Math.imul(j, de) | 0, n = n + Math.imul(Z, le) | 0, d = d + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K, ce) | 0, d = d + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n = n + Math.imul(z, be) | 0, n = n + Math.imul(H, ve) | 0, d = d + Math.imul(H, be) | 0;
      var Je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n = Math.imul(G, ue), n = n + Math.imul(Y, he) | 0, d = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n = n + Math.imul(V, de) | 0, n = n + Math.imul($, le) | 0, d = d + Math.imul($, de) | 0, l = l + Math.imul(j, ce) | 0, n = n + Math.imul(j, pe) | 0, n = n + Math.imul(Z, ce) | 0, d = d + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n = n + Math.imul(W, be) | 0, n = n + Math.imul(K, ve) | 0, d = d + Math.imul(K, be) | 0;
      var Qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n = Math.imul(G, de), n = n + Math.imul(Y, le) | 0, d = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n = n + Math.imul(V, pe) | 0, n = n + Math.imul($, ce) | 0, d = d + Math.imul($, pe) | 0, l = l + Math.imul(j, ve) | 0, n = n + Math.imul(j, be) | 0, n = n + Math.imul(Z, ve) | 0, d = d + Math.imul(Z, be) | 0;
      var et = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n = Math.imul(G, pe), n = n + Math.imul(Y, ce) | 0, d = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n = n + Math.imul(V, be) | 0, n = n + Math.imul($, ve) | 0, d = d + Math.imul($, be) | 0;
      var tt = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n = Math.imul(G, be), n = n + Math.imul(Y, ve) | 0, d = Math.imul(Y, be);
      var rt = (b + l | 0) + ((n & 8191) << 13) | 0;
      return b = (d + (n >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b !== 0 && (c[19] = b, h.length++), h;
    };
    Math.imul || (L = q);
    function ge(v, i, a2) {
      a2.negative = i.negative ^ v.negative, a2.length = v.length + i.length;
      for (var h = 0, s = 0, u = 0;u < a2.length - 1; u++) {
        var c = s;
        s = 0;
        for (var b = h & 67108863, l = Math.min(u, i.length - 1), n = Math.max(0, u - v.length + 1);n <= l; n++) {
          var d = u - n, w = v.words[d] | 0, g = i.words[n] | 0, _ = w * g, A = _ & 67108863;
          c = c + (_ / 67108864 | 0) | 0, A = A + b | 0, b = A & 67108863, c = c + (A >>> 26) | 0, s += c >>> 26, c &= 67108863;
        }
        a2.words[u] = b, h = c, c = s;
      }
      return h !== 0 ? a2.words[u] = h : a2.length--, a2.strip();
    }
    function _e(v, i, a2) {
      var h = new N;
      return h.mulp(v, i, a2);
    }
    f.prototype.mulTo = function(i, a2) {
      var h, s = this.length + i.length;
      return this.length === 10 && i.length === 10 ? h = L(this, i, a2) : s < 63 ? h = q(this, i, a2) : s < 1024 ? h = ge(this, i, a2) : h = _e(this, i, a2), h;
    };
    function N(v, i) {
      this.x = v, this.y = i;
    }
    N.prototype.makeRBT = function(i) {
      for (var a2 = new Array(i), h = f.prototype._countBits(i) - 1, s = 0;s < i; s++)
        a2[s] = this.revBin(s, h, i);
      return a2;
    }, N.prototype.revBin = function(i, a2, h) {
      if (i === 0 || i === h - 1)
        return i;
      for (var s = 0, u = 0;u < a2; u++)
        s |= (i & 1) << a2 - u - 1, i >>= 1;
      return s;
    }, N.prototype.permute = function(i, a2, h, s, u, c) {
      for (var b = 0;b < c; b++)
        s[b] = a2[i[b]], u[b] = h[i[b]];
    }, N.prototype.transform = function(i, a2, h, s, u, c) {
      this.permute(c, i, a2, h, s, u);
      for (var b = 1;b < u; b <<= 1)
        for (var l = b << 1, n = Math.cos(2 * Math.PI / l), d = Math.sin(2 * Math.PI / l), w = 0;w < u; w += l)
          for (var g = n, _ = d, A = 0;A < b; A++) {
            var R = h[w + A], I = s[w + A], Me = h[w + A + b], k = s[w + A + b], D = g * Me - _ * k;
            k = g * k + _ * Me, Me = D, h[w + A] = R + Me, s[w + A] = I + k, h[w + A + b] = R - Me, s[w + A + b] = I - k, A !== l && (D = n * g - d * _, _ = n * _ + d * g, g = D);
          }
    }, N.prototype.guessLen13b = function(i, a2) {
      var h = Math.max(a2, i) | 1, s = h & 1, u = 0;
      for (h = h / 2 | 0;h; h = h >>> 1)
        u++;
      return 1 << u + 1 + s;
    }, N.prototype.conjugate = function(i, a2, h) {
      if (!(h <= 1))
        for (var s = 0;s < h / 2; s++) {
          var u = i[s];
          i[s] = i[h - s - 1], i[h - s - 1] = u, u = a2[s], a2[s] = -a2[h - s - 1], a2[h - s - 1] = -u;
        }
    }, N.prototype.normalize13b = function(i, a2) {
      for (var h = 0, s = 0;s < a2 / 2; s++) {
        var u = Math.round(i[2 * s + 1] / a2) * 8192 + Math.round(i[2 * s] / a2) + h;
        i[s] = u & 67108863, u < 67108864 ? h = 0 : h = u / 67108864 | 0;
      }
      return i;
    }, N.prototype.convert13b = function(i, a2, h, s) {
      for (var u = 0, c = 0;c < a2; c++)
        u = u + (i[c] | 0), h[2 * c] = u & 8191, u = u >>> 13, h[2 * c + 1] = u & 8191, u = u >>> 13;
      for (c = 2 * a2;c < s; ++c)
        h[c] = 0;
      r2(u === 0), r2((u & -8192) === 0);
    }, N.prototype.stub = function(i) {
      for (var a2 = new Array(i), h = 0;h < i; h++)
        a2[h] = 0;
      return a2;
    }, N.prototype.mulp = function(i, a2, h) {
      var s = 2 * this.guessLen13b(i.length, a2.length), u = this.makeRBT(s), c = this.stub(s), b = new Array(s), l = new Array(s), n = new Array(s), d = new Array(s), w = new Array(s), g = new Array(s), _ = h.words;
      _.length = s, this.convert13b(i.words, i.length, b, s), this.convert13b(a2.words, a2.length, d, s), this.transform(b, c, l, n, s, u), this.transform(d, c, w, g, s, u);
      for (var A = 0;A < s; A++) {
        var R = l[A] * w[A] - n[A] * g[A];
        n[A] = l[A] * g[A] + n[A] * w[A], l[A] = R;
      }
      return this.conjugate(l, n, s), this.transform(l, n, _, c, s, u), this.conjugate(_, c, s), this.normalize13b(_, s), h.negative = i.negative ^ a2.negative, h.length = i.length + a2.length, h.strip();
    }, f.prototype.mul = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), this.mulTo(i, a2);
    }, f.prototype.mulf = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), _e(this, i, a2);
    }, f.prototype.imul = function(i) {
      return this.clone().mulTo(i, this);
    }, f.prototype.imuln = function(i) {
      r2(typeof i == "number"), r2(i < 67108864);
      for (var a2 = 0, h = 0;h < this.length; h++) {
        var s = (this.words[h] | 0) * i, u = (s & 67108863) + (a2 & 67108863);
        a2 >>= 26, a2 += s / 67108864 | 0, a2 += u >>> 26, this.words[h] = u & 67108863;
      }
      return a2 !== 0 && (this.words[h] = a2, this.length++), this;
    }, f.prototype.muln = function(i) {
      return this.clone().imuln(i);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(i) {
      var a2 = B(i);
      if (a2.length === 0)
        return new f(1);
      for (var h = this, s = 0;s < a2.length && a2[s] === 0; s++, h = h.sqr())
        ;
      if (++s < a2.length)
        for (var u = h.sqr();s < a2.length; s++, u = u.sqr())
          a2[s] !== 0 && (h = h.mul(u));
      return h;
    }, f.prototype.iushln = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 67108863 >>> 26 - a2 << 26 - a2, u;
      if (a2 !== 0) {
        var c = 0;
        for (u = 0;u < this.length; u++) {
          var b = this.words[u] & s, l = (this.words[u] | 0) - b << a2;
          this.words[u] = l | c, c = b >>> 26 - a2;
        }
        c && (this.words[u] = c, this.length++);
      }
      if (h !== 0) {
        for (u = this.length - 1;u >= 0; u--)
          this.words[u + h] = this.words[u];
        for (u = 0;u < h; u++)
          this.words[u] = 0;
        this.length += h;
      }
      return this.strip();
    }, f.prototype.ishln = function(i) {
      return r2(this.negative === 0), this.iushln(i);
    }, f.prototype.iushrn = function(i, a2, h) {
      r2(typeof i == "number" && i >= 0);
      var s;
      a2 ? s = (a2 - a2 % 26) / 26 : s = 0;
      var u = i % 26, c = Math.min((i - u) / 26, this.length), b = 67108863 ^ 67108863 >>> u << u, l = h;
      if (s -= c, s = Math.max(0, s), l) {
        for (var n = 0;n < c; n++)
          l.words[n] = this.words[n];
        l.length = c;
      }
      if (c !== 0)
        if (this.length > c)
          for (this.length -= c, n = 0;n < this.length; n++)
            this.words[n] = this.words[n + c];
        else
          this.words[0] = 0, this.length = 1;
      var d = 0;
      for (n = this.length - 1;n >= 0 && (d !== 0 || n >= s); n--) {
        var w = this.words[n] | 0;
        this.words[n] = d << 26 - u | w >>> u, d = w & b;
      }
      return l && d !== 0 && (l.words[l.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, f.prototype.ishrn = function(i, a2, h) {
      return r2(this.negative === 0), this.iushrn(i, a2, h);
    }, f.prototype.shln = function(i) {
      return this.clone().ishln(i);
    }, f.prototype.ushln = function(i) {
      return this.clone().iushln(i);
    }, f.prototype.shrn = function(i) {
      return this.clone().ishrn(i);
    }, f.prototype.ushrn = function(i) {
      return this.clone().iushrn(i);
    }, f.prototype.testn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return false;
      var u = this.words[h];
      return !!(u & s);
    }, f.prototype.imaskn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h)
        return this;
      if (a2 !== 0 && h++, this.length = Math.min(h, this.length), a2 !== 0) {
        var s = 67108863 ^ 67108863 >>> a2 << a2;
        this.words[this.length - 1] &= s;
      }
      return this.strip();
    }, f.prototype.maskn = function(i) {
      return this.clone().imaskn(i);
    }, f.prototype.iaddn = function(i) {
      return r2(typeof i == "number"), r2(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
    }, f.prototype._iaddn = function(i) {
      this.words[0] += i;
      for (var a2 = 0;a2 < this.length && this.words[a2] >= 67108864; a2++)
        this.words[a2] -= 67108864, a2 === this.length - 1 ? this.words[a2 + 1] = 1 : this.words[a2 + 1]++;
      return this.length = Math.max(this.length, a2 + 1), this;
    }, f.prototype.isubn = function(i) {
      if (r2(typeof i == "number"), r2(i < 67108864), i < 0)
        return this.iaddn(-i);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(i), this.negative = 1, this;
      if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var a2 = 0;a2 < this.length && this.words[a2] < 0; a2++)
          this.words[a2] += 67108864, this.words[a2 + 1] -= 1;
      return this.strip();
    }, f.prototype.addn = function(i) {
      return this.clone().iaddn(i);
    }, f.prototype.subn = function(i) {
      return this.clone().isubn(i);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(i, a2, h) {
      var s = i.length + h, u;
      this._expand(s);
      var c, b = 0;
      for (u = 0;u < i.length; u++) {
        c = (this.words[u + h] | 0) + b;
        var l = (i.words[u] | 0) * a2;
        c -= l & 67108863, b = (c >> 26) - (l / 67108864 | 0), this.words[u + h] = c & 67108863;
      }
      for (;u < this.length - h; u++)
        c = (this.words[u + h] | 0) + b, b = c >> 26, this.words[u + h] = c & 67108863;
      if (b === 0)
        return this.strip();
      for (r2(b === -1), b = 0, u = 0;u < this.length; u++)
        c = -(this.words[u] | 0) + b, b = c >> 26, this.words[u] = c & 67108863;
      return this.negative = 1, this.strip();
    }, f.prototype._wordDiv = function(i, a2) {
      var h = this.length - i.length, s = this.clone(), u = i, c = u.words[u.length - 1] | 0, b = this._countBits(c);
      h = 26 - b, h !== 0 && (u = u.ushln(h), s.iushln(h), c = u.words[u.length - 1] | 0);
      var l = s.length - u.length, n;
      if (a2 !== "mod") {
        n = new f(null), n.length = l + 1, n.words = new Array(n.length);
        for (var d = 0;d < n.length; d++)
          n.words[d] = 0;
      }
      var w = s.clone()._ishlnsubmul(u, 1, l);
      w.negative === 0 && (s = w, n && (n.words[l] = 1));
      for (var g = l - 1;g >= 0; g--) {
        var _ = (s.words[u.length + g] | 0) * 67108864 + (s.words[u.length + g - 1] | 0);
        for (_ = Math.min(_ / c | 0, 67108863), s._ishlnsubmul(u, _, g);s.negative !== 0; )
          _--, s.negative = 0, s._ishlnsubmul(u, 1, g), s.isZero() || (s.negative ^= 1);
        n && (n.words[g] = _);
      }
      return n && n.strip(), s.strip(), a2 !== "div" && h !== 0 && s.iushrn(h), { div: n || null, mod: s };
    }, f.prototype.divmod = function(i, a2, h) {
      if (r2(!i.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var s, u, c;
      return this.negative !== 0 && i.negative === 0 ? (c = this.neg().divmod(i, a2), a2 !== "mod" && (s = c.div.neg()), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.iadd(i)), { div: s, mod: u }) : this.negative === 0 && i.negative !== 0 ? (c = this.divmod(i.neg(), a2), a2 !== "mod" && (s = c.div.neg()), { div: s, mod: c.mod }) : (this.negative & i.negative) !== 0 ? (c = this.neg().divmod(i.neg(), a2), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.isub(i)), { div: c.div, mod: u }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f(0), mod: this } : i.length === 1 ? a2 === "div" ? { div: this.divn(i.words[0]), mod: null } : a2 === "mod" ? { div: null, mod: new f(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f(this.modn(i.words[0])) } : this._wordDiv(i, a2);
    }, f.prototype.div = function(i) {
      return this.divmod(i, "div", false).div;
    }, f.prototype.mod = function(i) {
      return this.divmod(i, "mod", false).mod;
    }, f.prototype.umod = function(i) {
      return this.divmod(i, "mod", true).mod;
    }, f.prototype.divRound = function(i) {
      var a2 = this.divmod(i);
      if (a2.mod.isZero())
        return a2.div;
      var h = a2.div.negative !== 0 ? a2.mod.isub(i) : a2.mod, s = i.ushrn(1), u = i.andln(1), c = h.cmp(s);
      return c < 0 || u === 1 && c === 0 ? a2.div : a2.div.negative !== 0 ? a2.div.isubn(1) : a2.div.iaddn(1);
    }, f.prototype.modn = function(i) {
      r2(i <= 67108863);
      for (var a2 = (1 << 26) % i, h = 0, s = this.length - 1;s >= 0; s--)
        h = (a2 * h + (this.words[s] | 0)) % i;
      return h;
    }, f.prototype.idivn = function(i) {
      r2(i <= 67108863);
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = (this.words[h] | 0) + a2 * 67108864;
        this.words[h] = s / i | 0, a2 = s % i;
      }
      return this.strip();
    }, f.prototype.divn = function(i) {
      return this.clone().idivn(i);
    }, f.prototype.egcd = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = new f(0), b = new f(1), l = 0;a2.isEven() && h.isEven(); )
        a2.iushrn(1), h.iushrn(1), ++l;
      for (var n = h.clone(), d = a2.clone();!a2.isZero(); ) {
        for (var w = 0, g = 1;(a2.words[0] & g) === 0 && w < 26; ++w, g <<= 1)
          ;
        if (w > 0)
          for (a2.iushrn(w);w-- > 0; )
            (s.isOdd() || u.isOdd()) && (s.iadd(n), u.isub(d)), s.iushrn(1), u.iushrn(1);
        for (var _ = 0, A = 1;(h.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
          ;
        if (_ > 0)
          for (h.iushrn(_);_-- > 0; )
            (c.isOdd() || b.isOdd()) && (c.iadd(n), b.isub(d)), c.iushrn(1), b.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(c), u.isub(b)) : (h.isub(a2), c.isub(s), b.isub(u));
      }
      return { a: c, b, gcd: h.iushln(l) };
    }, f.prototype._invmp = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = h.clone();a2.cmpn(1) > 0 && h.cmpn(1) > 0; ) {
        for (var b = 0, l = 1;(a2.words[0] & l) === 0 && b < 26; ++b, l <<= 1)
          ;
        if (b > 0)
          for (a2.iushrn(b);b-- > 0; )
            s.isOdd() && s.iadd(c), s.iushrn(1);
        for (var n = 0, d = 1;(h.words[0] & d) === 0 && n < 26; ++n, d <<= 1)
          ;
        if (n > 0)
          for (h.iushrn(n);n-- > 0; )
            u.isOdd() && u.iadd(c), u.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(u)) : (h.isub(a2), u.isub(s));
      }
      var w;
      return a2.cmpn(1) === 0 ? w = s : w = u, w.cmpn(0) < 0 && w.iadd(i), w;
    }, f.prototype.gcd = function(i) {
      if (this.isZero())
        return i.abs();
      if (i.isZero())
        return this.abs();
      var a2 = this.clone(), h = i.clone();
      a2.negative = 0, h.negative = 0;
      for (var s = 0;a2.isEven() && h.isEven(); s++)
        a2.iushrn(1), h.iushrn(1);
      do {
        for (;a2.isEven(); )
          a2.iushrn(1);
        for (;h.isEven(); )
          h.iushrn(1);
        var u = a2.cmp(h);
        if (u < 0) {
          var c = a2;
          a2 = h, h = c;
        } else if (u === 0 || h.cmpn(1) === 0)
          break;
        a2.isub(h);
      } while (true);
      return h.iushln(s);
    }, f.prototype.invm = function(i) {
      return this.egcd(i).a.umod(i);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(i) {
      return this.words[0] & i;
    }, f.prototype.bincn = function(i) {
      r2(typeof i == "number");
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return this._expand(h + 1), this.words[h] |= s, this;
      for (var u = s, c = h;u !== 0 && c < this.length; c++) {
        var b = this.words[c] | 0;
        b += u, u = b >>> 26, b &= 67108863, this.words[c] = b;
      }
      return u !== 0 && (this.words[c] = u, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(i) {
      var a2 = i < 0;
      if (this.negative !== 0 && !a2)
        return -1;
      if (this.negative === 0 && a2)
        return 1;
      this.strip();
      var h;
      if (this.length > 1)
        h = 1;
      else {
        a2 && (i = -i), r2(i <= 67108863, "Number is too big");
        var s = this.words[0] | 0;
        h = s === i ? 0 : s < i ? -1 : 1;
      }
      return this.negative !== 0 ? -h | 0 : h;
    }, f.prototype.cmp = function(i) {
      if (this.negative !== 0 && i.negative === 0)
        return -1;
      if (this.negative === 0 && i.negative !== 0)
        return 1;
      var a2 = this.ucmp(i);
      return this.negative !== 0 ? -a2 | 0 : a2;
    }, f.prototype.ucmp = function(i) {
      if (this.length > i.length)
        return 1;
      if (this.length < i.length)
        return -1;
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = this.words[h] | 0, u = i.words[h] | 0;
        if (s !== u) {
          s < u ? a2 = -1 : s > u && (a2 = 1);
          break;
        }
      }
      return a2;
    }, f.prototype.gtn = function(i) {
      return this.cmpn(i) === 1;
    }, f.prototype.gt = function(i) {
      return this.cmp(i) === 1;
    }, f.prototype.gten = function(i) {
      return this.cmpn(i) >= 0;
    }, f.prototype.gte = function(i) {
      return this.cmp(i) >= 0;
    }, f.prototype.ltn = function(i) {
      return this.cmpn(i) === -1;
    }, f.prototype.lt = function(i) {
      return this.cmp(i) === -1;
    }, f.prototype.lten = function(i) {
      return this.cmpn(i) <= 0;
    }, f.prototype.lte = function(i) {
      return this.cmp(i) <= 0;
    }, f.prototype.eqn = function(i) {
      return this.cmpn(i) === 0;
    }, f.prototype.eq = function(i) {
      return this.cmp(i) === 0;
    }, f.red = function(i) {
      return new P(i);
    }, f.prototype.toRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(i) {
      return this.red = i, this;
    }, f.prototype.forceRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(i);
    }, f.prototype.redAdd = function(i) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
    }, f.prototype.redIAdd = function(i) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
    }, f.prototype.redSub = function(i) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
    }, f.prototype.redISub = function(i) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
    }, f.prototype.redShl = function(i) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
    }, f.prototype.redMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
    }, f.prototype.redIMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(i) {
      return r2(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
    };
    var we = { k256: null, p224: null, p192: null, p25519: null };
    function ye(v, i) {
      this.name = v, this.p = new f(i, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    ye.prototype._tmp = function() {
      var i = new f(null);
      return i.words = new Array(Math.ceil(this.n / 13)), i;
    }, ye.prototype.ireduce = function(i) {
      var a2 = i, h;
      do
        this.split(a2, this.tmp), a2 = this.imulK(a2), a2 = a2.iadd(this.tmp), h = a2.bitLength();
      while (h > this.n);
      var s = h < this.n ? -1 : a2.ucmp(this.p);
      return s === 0 ? (a2.words[0] = 0, a2.length = 1) : s > 0 ? a2.isub(this.p) : a2.strip !== undefined ? a2.strip() : a2._strip(), a2;
    }, ye.prototype.split = function(i, a2) {
      i.iushrn(this.n, 0, a2);
    }, ye.prototype.imulK = function(i) {
      return i.imul(this.k);
    };
    function xe() {
      ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(xe, ye), xe.prototype.split = function(i, a2) {
      for (var h = 4194303, s = Math.min(i.length, 9), u = 0;u < s; u++)
        a2.words[u] = i.words[u];
      if (a2.length = s, i.length <= 9) {
        i.words[0] = 0, i.length = 1;
        return;
      }
      var c = i.words[9];
      for (a2.words[a2.length++] = c & h, u = 10;u < i.length; u++) {
        var b = i.words[u] | 0;
        i.words[u - 10] = (b & h) << 4 | c >>> 22, c = b;
      }
      c >>>= 22, i.words[u - 10] = c, c === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
    }, xe.prototype.imulK = function(i) {
      i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = i.words[h] | 0;
        a2 += s * 977, i.words[h] = a2 & 67108863, a2 = s * 64 + (a2 / 67108864 | 0);
      }
      return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
    };
    function Re() {
      ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(Re, ye);
    function Ee() {
      ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Ee, ye);
    function Ae() {
      ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(Ae, ye), Ae.prototype.imulK = function(i) {
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = (i.words[h] | 0) * 19 + a2, u = s & 67108863;
        s >>>= 26, i.words[h] = u, a2 = s;
      }
      return a2 !== 0 && (i.words[i.length++] = a2), i;
    }, f._prime = function(i) {
      if (we[i])
        return we[i];
      var a2;
      if (i === "k256")
        a2 = new xe;
      else if (i === "p224")
        a2 = new Re;
      else if (i === "p192")
        a2 = new Ee;
      else if (i === "p25519")
        a2 = new Ae;
      else
        throw new Error("Unknown prime " + i);
      return we[i] = a2, a2;
    };
    function P(v) {
      if (typeof v == "string") {
        var i = f._prime(v);
        this.m = i.p, this.prime = i;
      } else
        r2(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
    }
    P.prototype._verify1 = function(i) {
      r2(i.negative === 0, "red works only with positives"), r2(i.red, "red works only with red numbers");
    }, P.prototype._verify2 = function(i, a2) {
      r2((i.negative | a2.negative) === 0, "red works only with positives"), r2(i.red && i.red === a2.red, "red works only with red numbers");
    }, P.prototype.imod = function(i) {
      return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
    }, P.prototype.neg = function(i) {
      return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
    }, P.prototype.add = function(i, a2) {
      this._verify2(i, a2);
      var h = i.add(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h._forceRed(this);
    }, P.prototype.iadd = function(i, a2) {
      this._verify2(i, a2);
      var h = i.iadd(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h;
    }, P.prototype.sub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.sub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h._forceRed(this);
    }, P.prototype.isub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.isub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h;
    }, P.prototype.shl = function(i, a2) {
      return this._verify1(i), this.imod(i.ushln(a2));
    }, P.prototype.imul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.imul(a2));
    }, P.prototype.mul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.mul(a2));
    }, P.prototype.isqr = function(i) {
      return this.imul(i, i.clone());
    }, P.prototype.sqr = function(i) {
      return this.mul(i, i);
    }, P.prototype.sqrt = function(i) {
      if (i.isZero())
        return i.clone();
      var a2 = this.m.andln(3);
      if (r2(a2 % 2 === 1), a2 === 3) {
        var h = this.m.add(new f(1)).iushrn(2);
        return this.pow(i, h);
      }
      for (var s = this.m.subn(1), u = 0;!s.isZero() && s.andln(1) === 0; )
        u++, s.iushrn(1);
      r2(!s.isZero());
      var c = new f(1).toRed(this), b = c.redNeg(), l = this.m.subn(1).iushrn(1), n = this.m.bitLength();
      for (n = new f(2 * n * n).toRed(this);this.pow(n, l).cmp(b) !== 0; )
        n.redIAdd(b);
      for (var d = this.pow(n, s), w = this.pow(i, s.addn(1).iushrn(1)), g = this.pow(i, s), _ = u;g.cmp(c) !== 0; ) {
        for (var A = g, R = 0;A.cmp(c) !== 0; R++)
          A = A.redSqr();
        r2(R < _);
        var I = this.pow(d, new f(1).iushln(_ - R - 1));
        w = w.redMul(I), d = I.redSqr(), g = g.redMul(d), _ = R;
      }
      return w;
    }, P.prototype.invm = function(i) {
      var a2 = i._invmp(this.m);
      return a2.negative !== 0 ? (a2.negative = 0, this.imod(a2).redNeg()) : this.imod(a2);
    }, P.prototype.pow = function(i, a2) {
      if (a2.isZero())
        return new f(1).toRed(this);
      if (a2.cmpn(1) === 0)
        return i.clone();
      var h = 4, s = new Array(1 << h);
      s[0] = new f(1).toRed(this), s[1] = i;
      for (var u = 2;u < s.length; u++)
        s[u] = this.mul(s[u - 1], i);
      var c = s[0], b = 0, l = 0, n = a2.bitLength() % 26;
      for (n === 0 && (n = 26), u = a2.length - 1;u >= 0; u--) {
        for (var d = a2.words[u], w = n - 1;w >= 0; w--) {
          var g = d >> w & 1;
          if (c !== s[0] && (c = this.sqr(c)), g === 0 && b === 0) {
            l = 0;
            continue;
          }
          b <<= 1, b |= g, l++, !(l !== h && (u !== 0 || w !== 0)) && (c = this.mul(c, s[b]), l = 0, b = 0);
        }
        n = 26;
      }
      return c;
    }, P.prototype.convertTo = function(i) {
      var a2 = i.umod(this.m);
      return a2 === i ? a2.clone() : a2;
    }, P.prototype.convertFrom = function(i) {
      var a2 = i.clone();
      return a2.red = null, a2;
    }, f.mont = function(i) {
      return new Se(i);
    };
    function Se(v) {
      P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(Se, P), Se.prototype.convertTo = function(i) {
      return this.imod(i.ushln(this.shift));
    }, Se.prototype.convertFrom = function(i) {
      var a2 = this.imod(i.mul(this.rinv));
      return a2.red = null, a2;
    }, Se.prototype.imul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return i.words[0] = 0, i.length = 1, i;
      var h = i.imul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.mul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return new f(0)._forceRed(this);
      var h = i.mul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.invm = function(i) {
      var a2 = this.imod(i._invmp(this.m).mul(this.r2));
      return a2._forceRed(this);
    };
  })(typeof Gu > "u" || Gu, $m);
});
var Ym = T((Gm, Xu) => {
  (function(t3, e2) {
    function r2(v, i) {
      if (!v)
        throw new Error(i || "Assertion failed");
    }
    function o(v, i) {
      v.super_ = i;
      var a2 = function() {
      };
      a2.prototype = i.prototype, v.prototype = new a2, v.prototype.constructor = v;
    }
    function f(v, i, a2) {
      if (f.isBN(v))
        return v;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i === "le" || i === "be") && (a2 = i, i = 10), this._init(v || 0, i || 10, a2 || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(i) {
      return i instanceof f ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f.wordSize && Array.isArray(i.words);
    }, f.max = function(i, a2) {
      return i.cmp(a2) > 0 ? i : a2;
    }, f.min = function(i, a2) {
      return i.cmp(a2) < 0 ? i : a2;
    }, f.prototype._init = function(i, a2, h) {
      if (typeof i == "number")
        return this._initNumber(i, a2, h);
      if (typeof i == "object")
        return this._initArray(i, a2, h);
      a2 === "hex" && (a2 = 16), r2(a2 === (a2 | 0) && a2 >= 2 && a2 <= 36), i = i.toString().replace(/\s+/g, "");
      var s = 0;
      i[0] === "-" && (s++, this.negative = 1), s < i.length && (a2 === 16 ? this._parseHex(i, s, h) : (this._parseBase(i, a2, s), h === "le" && this._initArray(this.toArray(), a2, h)));
    }, f.prototype._initNumber = function(i, a2, h) {
      i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r2(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h === "le" && this._initArray(this.toArray(), a2, h);
    }, f.prototype._initArray = function(i, a2, h) {
      if (r2(typeof i.length == "number"), i.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u, c, b = 0;
      if (h === "be")
        for (s = i.length - 1, u = 0;s >= 0; s -= 3)
          c = i[s] | i[s - 1] << 8 | i[s - 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      else if (h === "le")
        for (s = 0, u = 0;s < i.length; s += 3)
          c = i[s] | i[s + 1] << 8 | i[s + 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      return this.strip();
    };
    function m(v, i) {
      var a2 = v.charCodeAt(i);
      return a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : a2 - 48 & 15;
    }
    function y(v, i, a2) {
      var h = m(v, a2);
      return a2 - 1 >= i && (h |= m(v, a2 - 1) << 4), h;
    }
    f.prototype._parseHex = function(i, a2, h) {
      this.length = Math.ceil((i.length - a2) / 6), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u = 0, c = 0, b;
      if (h === "be")
        for (s = i.length - 1;s >= a2; s -= 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      else {
        var l = i.length - a2;
        for (s = l % 2 === 0 ? a2 + 1 : a2;s < i.length; s += 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      }
      this.strip();
    };
    function M(v, i, a2, h) {
      for (var s = 0, u = Math.min(v.length, a2), c = i;c < u; c++) {
        var b = v.charCodeAt(c) - 48;
        s *= h, b >= 49 ? s += b - 49 + 10 : b >= 17 ? s += b - 17 + 10 : s += b;
      }
      return s;
    }
    f.prototype._parseBase = function(i, a2, h) {
      this.words = [0], this.length = 1;
      for (var s = 0, u = 1;u <= 67108863; u *= a2)
        s++;
      s--, u = u / a2 | 0;
      for (var c = i.length - h, b = c % s, l = Math.min(c, c - b) + h, n = 0, d = h;d < l; d += s)
        n = M(i, d, d + s, a2), this.imuln(u), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      if (b !== 0) {
        var w = 1;
        for (n = M(i, d, i.length, a2), d = 0;d < b; d++)
          w *= a2;
        this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      }
      this.strip();
    }, f.prototype.copy = function(i) {
      i.words = new Array(this.length);
      for (var a2 = 0;a2 < this.length; a2++)
        i.words[a2] = this.words[a2];
      i.length = this.length, i.negative = this.negative, i.red = this.red;
    }, f.prototype.clone = function() {
      var i = new f(null);
      return this.copy(i), i;
    }, f.prototype._expand = function(i) {
      for (;this.length < i; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype.strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, f.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(i, a2) {
      i = i || 10, a2 = a2 | 0 || 1;
      var h;
      if (i === 16 || i === "hex") {
        h = "";
        for (var s = 0, u = 0, c = 0;c < this.length; c++) {
          var b = this.words[c], l = ((b << s | u) & 16777215).toString(16);
          u = b >>> 24 - s & 16777215, u !== 0 || c !== this.length - 1 ? h = x[6 - l.length] + l + h : h = l + h, s += 2, s >= 26 && (s -= 26, c--);
        }
        for (u !== 0 && (h = u.toString(16) + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      if (i === (i | 0) && i >= 2 && i <= 36) {
        var n = S[i], d = E[i];
        h = "";
        var w = this.clone();
        for (w.negative = 0;!w.isZero(); ) {
          var g = w.modn(d).toString(i);
          w = w.idivn(d), w.isZero() ? h = g + h : h = x[n - g.length] + g + h;
        }
        for (this.isZero() && (h = "0" + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var i = this.words[0];
      return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
    }, f.prototype.toJSON = function() {
      return this.toString(16);
    }, f.prototype.toBuffer = function(i, a2) {
      return r2(typeof p < "u"), this.toArrayLike(p, i, a2);
    }, f.prototype.toArray = function(i, a2) {
      return this.toArrayLike(Array, i, a2);
    }, f.prototype.toArrayLike = function(i, a2, h) {
      var s = this.byteLength(), u = h || Math.max(1, s);
      r2(s <= u, "byte array longer than desired length"), r2(u > 0, "Requested array length <= 0"), this.strip();
      var c = a2 === "le", b = new i(u), l, n, d = this.clone();
      if (c) {
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[n] = l;
        for (;n < u; n++)
          b[n] = 0;
      } else {
        for (n = 0;n < u - s; n++)
          b[n] = 0;
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[u - n - 1] = l;
      }
      return b;
    }, Math.clz32 ? f.prototype._countBits = function(i) {
      return 32 - Math.clz32(i);
    } : f.prototype._countBits = function(i) {
      var a2 = i, h = 0;
      return a2 >= 4096 && (h += 13, a2 >>>= 13), a2 >= 64 && (h += 7, a2 >>>= 7), a2 >= 8 && (h += 4, a2 >>>= 4), a2 >= 2 && (h += 2, a2 >>>= 2), h + a2;
    }, f.prototype._zeroBits = function(i) {
      if (i === 0)
        return 26;
      var a2 = i, h = 0;
      return (a2 & 8191) === 0 && (h += 13, a2 >>>= 13), (a2 & 127) === 0 && (h += 7, a2 >>>= 7), (a2 & 15) === 0 && (h += 4, a2 >>>= 4), (a2 & 3) === 0 && (h += 2, a2 >>>= 2), (a2 & 1) === 0 && h++, h;
    }, f.prototype.bitLength = function() {
      var i = this.words[this.length - 1], a2 = this._countBits(i);
      return (this.length - 1) * 26 + a2;
    };
    function B(v) {
      for (var i = new Array(v.bitLength()), a2 = 0;a2 < i.length; a2++) {
        var h = a2 / 26 | 0, s = a2 % 26;
        i[a2] = (v.words[h] & 1 << s) >>> s;
      }
      return i;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var i = 0, a2 = 0;a2 < this.length; a2++) {
        var h = this._zeroBits(this.words[a2]);
        if (i += h, h !== 26)
          break;
      }
      return i;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(i) {
      return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(i) {
      return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(i) {
      for (;this.length < i.length; )
        this.words[this.length++] = 0;
      for (var a2 = 0;a2 < i.length; a2++)
        this.words[a2] = this.words[a2] | i.words[a2];
      return this.strip();
    }, f.prototype.ior = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuor(i);
    }, f.prototype.or = function(i) {
      return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
    }, f.prototype.uor = function(i) {
      return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
    }, f.prototype.iuand = function(i) {
      var a2;
      this.length > i.length ? a2 = i : a2 = this;
      for (var h = 0;h < a2.length; h++)
        this.words[h] = this.words[h] & i.words[h];
      return this.length = a2.length, this.strip();
    }, f.prototype.iand = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuand(i);
    }, f.prototype.and = function(i) {
      return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
    }, f.prototype.uand = function(i) {
      return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
    }, f.prototype.iuxor = function(i) {
      var a2, h;
      this.length > i.length ? (a2 = this, h = i) : (a2 = i, h = this);
      for (var s = 0;s < h.length; s++)
        this.words[s] = a2.words[s] ^ h.words[s];
      if (this !== a2)
        for (;s < a2.length; s++)
          this.words[s] = a2.words[s];
      return this.length = a2.length, this.strip();
    }, f.prototype.ixor = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuxor(i);
    }, f.prototype.xor = function(i) {
      return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
    }, f.prototype.uxor = function(i) {
      return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
    }, f.prototype.inotn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = Math.ceil(i / 26) | 0, h = i % 26;
      this._expand(a2), h > 0 && a2--;
      for (var s = 0;s < a2; s++)
        this.words[s] = ~this.words[s] & 67108863;
      return h > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - h), this.strip();
    }, f.prototype.notn = function(i) {
      return this.clone().inotn(i);
    }, f.prototype.setn = function(i, a2) {
      r2(typeof i == "number" && i >= 0);
      var h = i / 26 | 0, s = i % 26;
      return this._expand(h + 1), a2 ? this.words[h] = this.words[h] | 1 << s : this.words[h] = this.words[h] & ~(1 << s), this.strip();
    }, f.prototype.iadd = function(i) {
      var a2;
      if (this.negative !== 0 && i.negative === 0)
        return this.negative = 0, a2 = this.isub(i), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && i.negative !== 0)
        return i.negative = 0, a2 = this.isub(i), i.negative = 1, a2._normSign();
      var h, s;
      this.length > i.length ? (h = this, s = i) : (h = i, s = this);
      for (var u = 0, c = 0;c < s.length; c++)
        a2 = (h.words[c] | 0) + (s.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      for (;u !== 0 && c < h.length; c++)
        a2 = (h.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      if (this.length = h.length, u !== 0)
        this.words[this.length] = u, this.length++;
      else if (h !== this)
        for (;c < h.length; c++)
          this.words[c] = h.words[c];
      return this;
    }, f.prototype.add = function(i) {
      var a2;
      return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a2 = this.sub(i), i.negative ^= 1, a2) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a2 = i.sub(this), this.negative = 1, a2) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
    }, f.prototype.isub = function(i) {
      if (i.negative !== 0) {
        i.negative = 0;
        var a2 = this.iadd(i);
        return i.negative = 1, a2._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
      var h = this.cmp(i);
      if (h === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var s, u;
      h > 0 ? (s = this, u = i) : (s = i, u = this);
      for (var c = 0, b = 0;b < u.length; b++)
        a2 = (s.words[b] | 0) - (u.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      for (;c !== 0 && b < s.length; b++)
        a2 = (s.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      if (c === 0 && b < s.length && s !== this)
        for (;b < s.length; b++)
          this.words[b] = s.words[b];
      return this.length = Math.max(this.length, b), s !== this && (this.negative = 1), this.strip();
    }, f.prototype.sub = function(i) {
      return this.clone().isub(i);
    };
    function q(v, i, a2) {
      a2.negative = i.negative ^ v.negative;
      var h = v.length + i.length | 0;
      a2.length = h, h = h - 1 | 0;
      var s = v.words[0] | 0, u = i.words[0] | 0, c = s * u, b = c & 67108863, l = c / 67108864 | 0;
      a2.words[0] = b;
      for (var n = 1;n < h; n++) {
        for (var d = l >>> 26, w = l & 67108863, g = Math.min(n, i.length - 1), _ = Math.max(0, n - v.length + 1);_ <= g; _++) {
          var A = n - _ | 0;
          s = v.words[A] | 0, u = i.words[_] | 0, c = s * u + w, d += c / 67108864 | 0, w = c & 67108863;
        }
        a2.words[n] = w | 0, l = d | 0;
      }
      return l !== 0 ? a2.words[n] = l | 0 : a2.length--, a2.strip();
    }
    var L = function(i, a2, h) {
      var s = i.words, u = a2.words, c = h.words, b = 0, l, n, d, w = s[0] | 0, g = w & 8191, _ = w >>> 13, A = s[1] | 0, R = A & 8191, I = A >>> 13, Me = s[2] | 0, k = Me & 8191, D = Me >>> 13, nt = s[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s[8] | 0, V = yt & 8191, $ = yt >>> 13, wt = s[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u[2] | 0, te = xt & 8191, re = xt >>> 13, St = u[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u[9] | 0, ve = It & 8191, be = It >>> 13;
      h.negative = i.negative ^ a2.negative, h.length = 19, l = Math.imul(g, X), n = Math.imul(g, J), n = n + Math.imul(_, X) | 0, d = Math.imul(_, J);
      var ft = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n = Math.imul(R, J), n = n + Math.imul(I, X) | 0, d = Math.imul(I, J), l = l + Math.imul(g, Q) | 0, n = n + Math.imul(g, ee) | 0, n = n + Math.imul(_, Q) | 0, d = d + Math.imul(_, ee) | 0;
      var Be = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k, X), n = Math.imul(k, J), n = n + Math.imul(D, X) | 0, d = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n = n + Math.imul(R, ee) | 0, n = n + Math.imul(I, Q) | 0, d = d + Math.imul(I, ee) | 0, l = l + Math.imul(g, te) | 0, n = n + Math.imul(g, re) | 0, n = n + Math.imul(_, te) | 0, d = d + Math.imul(_, re) | 0;
      var qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n = Math.imul(C, J), n = n + Math.imul(O, X) | 0, d = Math.imul(O, J), l = l + Math.imul(k, Q) | 0, n = n + Math.imul(k, ee) | 0, n = n + Math.imul(D, Q) | 0, d = d + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n = n + Math.imul(R, re) | 0, n = n + Math.imul(I, te) | 0, d = d + Math.imul(I, re) | 0, l = l + Math.imul(g, ie) | 0, n = n + Math.imul(g, ne) | 0, n = n + Math.imul(_, ie) | 0, d = d + Math.imul(_, ne) | 0;
      var ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n = Math.imul(F, J), n = n + Math.imul(U, X) | 0, d = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O, Q) | 0, d = d + Math.imul(O, ee) | 0, l = l + Math.imul(k, te) | 0, n = n + Math.imul(k, re) | 0, n = n + Math.imul(D, te) | 0, d = d + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n = n + Math.imul(R, ne) | 0, n = n + Math.imul(I, ie) | 0, d = d + Math.imul(I, ne) | 0, l = l + Math.imul(g, fe) | 0, n = n + Math.imul(g, ae) | 0, n = n + Math.imul(_, fe) | 0, d = d + Math.imul(_, ae) | 0;
      var He = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n = Math.imul(z, J), n = n + Math.imul(H, X) | 0, d = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U, Q) | 0, d = d + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O, te) | 0, d = d + Math.imul(O, re) | 0, l = l + Math.imul(k, ie) | 0, n = n + Math.imul(k, ne) | 0, n = n + Math.imul(D, ie) | 0, d = d + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n = n + Math.imul(R, ae) | 0, n = n + Math.imul(I, fe) | 0, d = d + Math.imul(I, ae) | 0, l = l + Math.imul(g, oe) | 0, n = n + Math.imul(g, se) | 0, n = n + Math.imul(_, oe) | 0, d = d + Math.imul(_, se) | 0;
      var We = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n = Math.imul(W, J), n = n + Math.imul(K, X) | 0, d = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H, Q) | 0, d = d + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U, te) | 0, d = d + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n = n + Math.imul(C, ne) | 0, n = n + Math.imul(O, ie) | 0, d = d + Math.imul(O, ne) | 0, l = l + Math.imul(k, fe) | 0, n = n + Math.imul(k, ae) | 0, n = n + Math.imul(D, fe) | 0, d = d + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n = n + Math.imul(R, se) | 0, n = n + Math.imul(I, oe) | 0, d = d + Math.imul(I, se) | 0, l = l + Math.imul(g, he) | 0, n = n + Math.imul(g, ue) | 0, n = n + Math.imul(_, he) | 0, d = d + Math.imul(_, ue) | 0;
      var Ke = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n = Math.imul(j, J), n = n + Math.imul(Z, X) | 0, d = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K, Q) | 0, d = d + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H, te) | 0, d = d + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n = n + Math.imul(F, ne) | 0, n = n + Math.imul(U, ie) | 0, d = d + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O, fe) | 0, d = d + Math.imul(O, ae) | 0, l = l + Math.imul(k, oe) | 0, n = n + Math.imul(k, se) | 0, n = n + Math.imul(D, oe) | 0, d = d + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n = n + Math.imul(R, ue) | 0, n = n + Math.imul(I, he) | 0, d = d + Math.imul(I, ue) | 0, l = l + Math.imul(g, le) | 0, n = n + Math.imul(g, de) | 0, n = n + Math.imul(_, le) | 0, d = d + Math.imul(_, de) | 0;
      var je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n = Math.imul(V, J), n = n + Math.imul($, X) | 0, d = Math.imul($, J), l = l + Math.imul(j, Q) | 0, n = n + Math.imul(j, ee) | 0, n = n + Math.imul(Z, Q) | 0, d = d + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K, te) | 0, d = d + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n = n + Math.imul(z, ne) | 0, n = n + Math.imul(H, ie) | 0, d = d + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U, fe) | 0, d = d + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O, oe) | 0, d = d + Math.imul(O, se) | 0, l = l + Math.imul(k, he) | 0, n = n + Math.imul(k, ue) | 0, n = n + Math.imul(D, he) | 0, d = d + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n = n + Math.imul(R, de) | 0, n = n + Math.imul(I, le) | 0, d = d + Math.imul(I, de) | 0, l = l + Math.imul(g, ce) | 0, n = n + Math.imul(g, pe) | 0, n = n + Math.imul(_, ce) | 0, d = d + Math.imul(_, pe) | 0;
      var Ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n = Math.imul(G, J), n = n + Math.imul(Y, X) | 0, d = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n = n + Math.imul(V, ee) | 0, n = n + Math.imul($, Q) | 0, d = d + Math.imul($, ee) | 0, l = l + Math.imul(j, te) | 0, n = n + Math.imul(j, re) | 0, n = n + Math.imul(Z, te) | 0, d = d + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n = n + Math.imul(W, ne) | 0, n = n + Math.imul(K, ie) | 0, d = d + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H, fe) | 0, d = d + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U, oe) | 0, d = d + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O, he) | 0, d = d + Math.imul(O, ue) | 0, l = l + Math.imul(k, le) | 0, n = n + Math.imul(k, de) | 0, n = n + Math.imul(D, le) | 0, d = d + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n = n + Math.imul(R, pe) | 0, n = n + Math.imul(I, ce) | 0, d = d + Math.imul(I, pe) | 0, l = l + Math.imul(g, ve) | 0, n = n + Math.imul(g, be) | 0, n = n + Math.imul(_, ve) | 0, d = d + Math.imul(_, be) | 0;
      var Ve = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n = Math.imul(G, ee), n = n + Math.imul(Y, Q) | 0, d = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n = n + Math.imul(V, re) | 0, n = n + Math.imul($, te) | 0, d = d + Math.imul($, re) | 0, l = l + Math.imul(j, ie) | 0, n = n + Math.imul(j, ne) | 0, n = n + Math.imul(Z, ie) | 0, d = d + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K, fe) | 0, d = d + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H, oe) | 0, d = d + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U, he) | 0, d = d + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O, le) | 0, d = d + Math.imul(O, de) | 0, l = l + Math.imul(k, ce) | 0, n = n + Math.imul(k, pe) | 0, n = n + Math.imul(D, ce) | 0, d = d + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n = n + Math.imul(R, be) | 0, n = n + Math.imul(I, ve) | 0, d = d + Math.imul(I, be) | 0;
      var $e = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n = Math.imul(G, re), n = n + Math.imul(Y, te) | 0, d = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n = n + Math.imul(V, ne) | 0, n = n + Math.imul($, ie) | 0, d = d + Math.imul($, ne) | 0, l = l + Math.imul(j, fe) | 0, n = n + Math.imul(j, ae) | 0, n = n + Math.imul(Z, fe) | 0, d = d + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K, oe) | 0, d = d + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H, he) | 0, d = d + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U, le) | 0, d = d + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O, ce) | 0, d = d + Math.imul(O, pe) | 0, l = l + Math.imul(k, ve) | 0, n = n + Math.imul(k, be) | 0, n = n + Math.imul(D, ve) | 0, d = d + Math.imul(D, be) | 0;
      var Ge = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n = Math.imul(G, ne), n = n + Math.imul(Y, ie) | 0, d = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n = n + Math.imul(V, ae) | 0, n = n + Math.imul($, fe) | 0, d = d + Math.imul($, ae) | 0, l = l + Math.imul(j, oe) | 0, n = n + Math.imul(j, se) | 0, n = n + Math.imul(Z, oe) | 0, d = d + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K, he) | 0, d = d + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H, le) | 0, d = d + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U, ce) | 0, d = d + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n = n + Math.imul(C, be) | 0, n = n + Math.imul(O, ve) | 0, d = d + Math.imul(O, be) | 0;
      var Ye = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n = Math.imul(G, ae), n = n + Math.imul(Y, fe) | 0, d = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n = n + Math.imul(V, se) | 0, n = n + Math.imul($, oe) | 0, d = d + Math.imul($, se) | 0, l = l + Math.imul(j, he) | 0, n = n + Math.imul(j, ue) | 0, n = n + Math.imul(Z, he) | 0, d = d + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K, le) | 0, d = d + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H, ce) | 0, d = d + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n = n + Math.imul(F, be) | 0, n = n + Math.imul(U, ve) | 0, d = d + Math.imul(U, be) | 0;
      var Xe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n = Math.imul(G, se), n = n + Math.imul(Y, oe) | 0, d = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n = n + Math.imul(V, ue) | 0, n = n + Math.imul($, he) | 0, d = d + Math.imul($, ue) | 0, l = l + Math.imul(j, le) | 0, n = n + Math.imul(j, de) | 0, n = n + Math.imul(Z, le) | 0, d = d + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K, ce) | 0, d = d + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n = n + Math.imul(z, be) | 0, n = n + Math.imul(H, ve) | 0, d = d + Math.imul(H, be) | 0;
      var Je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n = Math.imul(G, ue), n = n + Math.imul(Y, he) | 0, d = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n = n + Math.imul(V, de) | 0, n = n + Math.imul($, le) | 0, d = d + Math.imul($, de) | 0, l = l + Math.imul(j, ce) | 0, n = n + Math.imul(j, pe) | 0, n = n + Math.imul(Z, ce) | 0, d = d + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n = n + Math.imul(W, be) | 0, n = n + Math.imul(K, ve) | 0, d = d + Math.imul(K, be) | 0;
      var Qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n = Math.imul(G, de), n = n + Math.imul(Y, le) | 0, d = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n = n + Math.imul(V, pe) | 0, n = n + Math.imul($, ce) | 0, d = d + Math.imul($, pe) | 0, l = l + Math.imul(j, ve) | 0, n = n + Math.imul(j, be) | 0, n = n + Math.imul(Z, ve) | 0, d = d + Math.imul(Z, be) | 0;
      var et = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n = Math.imul(G, pe), n = n + Math.imul(Y, ce) | 0, d = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n = n + Math.imul(V, be) | 0, n = n + Math.imul($, ve) | 0, d = d + Math.imul($, be) | 0;
      var tt = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n = Math.imul(G, be), n = n + Math.imul(Y, ve) | 0, d = Math.imul(Y, be);
      var rt = (b + l | 0) + ((n & 8191) << 13) | 0;
      return b = (d + (n >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b !== 0 && (c[19] = b, h.length++), h;
    };
    Math.imul || (L = q);
    function ge(v, i, a2) {
      a2.negative = i.negative ^ v.negative, a2.length = v.length + i.length;
      for (var h = 0, s = 0, u = 0;u < a2.length - 1; u++) {
        var c = s;
        s = 0;
        for (var b = h & 67108863, l = Math.min(u, i.length - 1), n = Math.max(0, u - v.length + 1);n <= l; n++) {
          var d = u - n, w = v.words[d] | 0, g = i.words[n] | 0, _ = w * g, A = _ & 67108863;
          c = c + (_ / 67108864 | 0) | 0, A = A + b | 0, b = A & 67108863, c = c + (A >>> 26) | 0, s += c >>> 26, c &= 67108863;
        }
        a2.words[u] = b, h = c, c = s;
      }
      return h !== 0 ? a2.words[u] = h : a2.length--, a2.strip();
    }
    function _e(v, i, a2) {
      var h = new N;
      return h.mulp(v, i, a2);
    }
    f.prototype.mulTo = function(i, a2) {
      var h, s = this.length + i.length;
      return this.length === 10 && i.length === 10 ? h = L(this, i, a2) : s < 63 ? h = q(this, i, a2) : s < 1024 ? h = ge(this, i, a2) : h = _e(this, i, a2), h;
    };
    function N(v, i) {
      this.x = v, this.y = i;
    }
    N.prototype.makeRBT = function(i) {
      for (var a2 = new Array(i), h = f.prototype._countBits(i) - 1, s = 0;s < i; s++)
        a2[s] = this.revBin(s, h, i);
      return a2;
    }, N.prototype.revBin = function(i, a2, h) {
      if (i === 0 || i === h - 1)
        return i;
      for (var s = 0, u = 0;u < a2; u++)
        s |= (i & 1) << a2 - u - 1, i >>= 1;
      return s;
    }, N.prototype.permute = function(i, a2, h, s, u, c) {
      for (var b = 0;b < c; b++)
        s[b] = a2[i[b]], u[b] = h[i[b]];
    }, N.prototype.transform = function(i, a2, h, s, u, c) {
      this.permute(c, i, a2, h, s, u);
      for (var b = 1;b < u; b <<= 1)
        for (var l = b << 1, n = Math.cos(2 * Math.PI / l), d = Math.sin(2 * Math.PI / l), w = 0;w < u; w += l)
          for (var g = n, _ = d, A = 0;A < b; A++) {
            var R = h[w + A], I = s[w + A], Me = h[w + A + b], k = s[w + A + b], D = g * Me - _ * k;
            k = g * k + _ * Me, Me = D, h[w + A] = R + Me, s[w + A] = I + k, h[w + A + b] = R - Me, s[w + A + b] = I - k, A !== l && (D = n * g - d * _, _ = n * _ + d * g, g = D);
          }
    }, N.prototype.guessLen13b = function(i, a2) {
      var h = Math.max(a2, i) | 1, s = h & 1, u = 0;
      for (h = h / 2 | 0;h; h = h >>> 1)
        u++;
      return 1 << u + 1 + s;
    }, N.prototype.conjugate = function(i, a2, h) {
      if (!(h <= 1))
        for (var s = 0;s < h / 2; s++) {
          var u = i[s];
          i[s] = i[h - s - 1], i[h - s - 1] = u, u = a2[s], a2[s] = -a2[h - s - 1], a2[h - s - 1] = -u;
        }
    }, N.prototype.normalize13b = function(i, a2) {
      for (var h = 0, s = 0;s < a2 / 2; s++) {
        var u = Math.round(i[2 * s + 1] / a2) * 8192 + Math.round(i[2 * s] / a2) + h;
        i[s] = u & 67108863, u < 67108864 ? h = 0 : h = u / 67108864 | 0;
      }
      return i;
    }, N.prototype.convert13b = function(i, a2, h, s) {
      for (var u = 0, c = 0;c < a2; c++)
        u = u + (i[c] | 0), h[2 * c] = u & 8191, u = u >>> 13, h[2 * c + 1] = u & 8191, u = u >>> 13;
      for (c = 2 * a2;c < s; ++c)
        h[c] = 0;
      r2(u === 0), r2((u & -8192) === 0);
    }, N.prototype.stub = function(i) {
      for (var a2 = new Array(i), h = 0;h < i; h++)
        a2[h] = 0;
      return a2;
    }, N.prototype.mulp = function(i, a2, h) {
      var s = 2 * this.guessLen13b(i.length, a2.length), u = this.makeRBT(s), c = this.stub(s), b = new Array(s), l = new Array(s), n = new Array(s), d = new Array(s), w = new Array(s), g = new Array(s), _ = h.words;
      _.length = s, this.convert13b(i.words, i.length, b, s), this.convert13b(a2.words, a2.length, d, s), this.transform(b, c, l, n, s, u), this.transform(d, c, w, g, s, u);
      for (var A = 0;A < s; A++) {
        var R = l[A] * w[A] - n[A] * g[A];
        n[A] = l[A] * g[A] + n[A] * w[A], l[A] = R;
      }
      return this.conjugate(l, n, s), this.transform(l, n, _, c, s, u), this.conjugate(_, c, s), this.normalize13b(_, s), h.negative = i.negative ^ a2.negative, h.length = i.length + a2.length, h.strip();
    }, f.prototype.mul = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), this.mulTo(i, a2);
    }, f.prototype.mulf = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), _e(this, i, a2);
    }, f.prototype.imul = function(i) {
      return this.clone().mulTo(i, this);
    }, f.prototype.imuln = function(i) {
      r2(typeof i == "number"), r2(i < 67108864);
      for (var a2 = 0, h = 0;h < this.length; h++) {
        var s = (this.words[h] | 0) * i, u = (s & 67108863) + (a2 & 67108863);
        a2 >>= 26, a2 += s / 67108864 | 0, a2 += u >>> 26, this.words[h] = u & 67108863;
      }
      return a2 !== 0 && (this.words[h] = a2, this.length++), this;
    }, f.prototype.muln = function(i) {
      return this.clone().imuln(i);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(i) {
      var a2 = B(i);
      if (a2.length === 0)
        return new f(1);
      for (var h = this, s = 0;s < a2.length && a2[s] === 0; s++, h = h.sqr())
        ;
      if (++s < a2.length)
        for (var u = h.sqr();s < a2.length; s++, u = u.sqr())
          a2[s] !== 0 && (h = h.mul(u));
      return h;
    }, f.prototype.iushln = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 67108863 >>> 26 - a2 << 26 - a2, u;
      if (a2 !== 0) {
        var c = 0;
        for (u = 0;u < this.length; u++) {
          var b = this.words[u] & s, l = (this.words[u] | 0) - b << a2;
          this.words[u] = l | c, c = b >>> 26 - a2;
        }
        c && (this.words[u] = c, this.length++);
      }
      if (h !== 0) {
        for (u = this.length - 1;u >= 0; u--)
          this.words[u + h] = this.words[u];
        for (u = 0;u < h; u++)
          this.words[u] = 0;
        this.length += h;
      }
      return this.strip();
    }, f.prototype.ishln = function(i) {
      return r2(this.negative === 0), this.iushln(i);
    }, f.prototype.iushrn = function(i, a2, h) {
      r2(typeof i == "number" && i >= 0);
      var s;
      a2 ? s = (a2 - a2 % 26) / 26 : s = 0;
      var u = i % 26, c = Math.min((i - u) / 26, this.length), b = 67108863 ^ 67108863 >>> u << u, l = h;
      if (s -= c, s = Math.max(0, s), l) {
        for (var n = 0;n < c; n++)
          l.words[n] = this.words[n];
        l.length = c;
      }
      if (c !== 0)
        if (this.length > c)
          for (this.length -= c, n = 0;n < this.length; n++)
            this.words[n] = this.words[n + c];
        else
          this.words[0] = 0, this.length = 1;
      var d = 0;
      for (n = this.length - 1;n >= 0 && (d !== 0 || n >= s); n--) {
        var w = this.words[n] | 0;
        this.words[n] = d << 26 - u | w >>> u, d = w & b;
      }
      return l && d !== 0 && (l.words[l.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, f.prototype.ishrn = function(i, a2, h) {
      return r2(this.negative === 0), this.iushrn(i, a2, h);
    }, f.prototype.shln = function(i) {
      return this.clone().ishln(i);
    }, f.prototype.ushln = function(i) {
      return this.clone().iushln(i);
    }, f.prototype.shrn = function(i) {
      return this.clone().ishrn(i);
    }, f.prototype.ushrn = function(i) {
      return this.clone().iushrn(i);
    }, f.prototype.testn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return false;
      var u = this.words[h];
      return !!(u & s);
    }, f.prototype.imaskn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h)
        return this;
      if (a2 !== 0 && h++, this.length = Math.min(h, this.length), a2 !== 0) {
        var s = 67108863 ^ 67108863 >>> a2 << a2;
        this.words[this.length - 1] &= s;
      }
      return this.strip();
    }, f.prototype.maskn = function(i) {
      return this.clone().imaskn(i);
    }, f.prototype.iaddn = function(i) {
      return r2(typeof i == "number"), r2(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
    }, f.prototype._iaddn = function(i) {
      this.words[0] += i;
      for (var a2 = 0;a2 < this.length && this.words[a2] >= 67108864; a2++)
        this.words[a2] -= 67108864, a2 === this.length - 1 ? this.words[a2 + 1] = 1 : this.words[a2 + 1]++;
      return this.length = Math.max(this.length, a2 + 1), this;
    }, f.prototype.isubn = function(i) {
      if (r2(typeof i == "number"), r2(i < 67108864), i < 0)
        return this.iaddn(-i);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(i), this.negative = 1, this;
      if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var a2 = 0;a2 < this.length && this.words[a2] < 0; a2++)
          this.words[a2] += 67108864, this.words[a2 + 1] -= 1;
      return this.strip();
    }, f.prototype.addn = function(i) {
      return this.clone().iaddn(i);
    }, f.prototype.subn = function(i) {
      return this.clone().isubn(i);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(i, a2, h) {
      var s = i.length + h, u;
      this._expand(s);
      var c, b = 0;
      for (u = 0;u < i.length; u++) {
        c = (this.words[u + h] | 0) + b;
        var l = (i.words[u] | 0) * a2;
        c -= l & 67108863, b = (c >> 26) - (l / 67108864 | 0), this.words[u + h] = c & 67108863;
      }
      for (;u < this.length - h; u++)
        c = (this.words[u + h] | 0) + b, b = c >> 26, this.words[u + h] = c & 67108863;
      if (b === 0)
        return this.strip();
      for (r2(b === -1), b = 0, u = 0;u < this.length; u++)
        c = -(this.words[u] | 0) + b, b = c >> 26, this.words[u] = c & 67108863;
      return this.negative = 1, this.strip();
    }, f.prototype._wordDiv = function(i, a2) {
      var h = this.length - i.length, s = this.clone(), u = i, c = u.words[u.length - 1] | 0, b = this._countBits(c);
      h = 26 - b, h !== 0 && (u = u.ushln(h), s.iushln(h), c = u.words[u.length - 1] | 0);
      var l = s.length - u.length, n;
      if (a2 !== "mod") {
        n = new f(null), n.length = l + 1, n.words = new Array(n.length);
        for (var d = 0;d < n.length; d++)
          n.words[d] = 0;
      }
      var w = s.clone()._ishlnsubmul(u, 1, l);
      w.negative === 0 && (s = w, n && (n.words[l] = 1));
      for (var g = l - 1;g >= 0; g--) {
        var _ = (s.words[u.length + g] | 0) * 67108864 + (s.words[u.length + g - 1] | 0);
        for (_ = Math.min(_ / c | 0, 67108863), s._ishlnsubmul(u, _, g);s.negative !== 0; )
          _--, s.negative = 0, s._ishlnsubmul(u, 1, g), s.isZero() || (s.negative ^= 1);
        n && (n.words[g] = _);
      }
      return n && n.strip(), s.strip(), a2 !== "div" && h !== 0 && s.iushrn(h), { div: n || null, mod: s };
    }, f.prototype.divmod = function(i, a2, h) {
      if (r2(!i.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var s, u, c;
      return this.negative !== 0 && i.negative === 0 ? (c = this.neg().divmod(i, a2), a2 !== "mod" && (s = c.div.neg()), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.iadd(i)), { div: s, mod: u }) : this.negative === 0 && i.negative !== 0 ? (c = this.divmod(i.neg(), a2), a2 !== "mod" && (s = c.div.neg()), { div: s, mod: c.mod }) : (this.negative & i.negative) !== 0 ? (c = this.neg().divmod(i.neg(), a2), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.isub(i)), { div: c.div, mod: u }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f(0), mod: this } : i.length === 1 ? a2 === "div" ? { div: this.divn(i.words[0]), mod: null } : a2 === "mod" ? { div: null, mod: new f(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f(this.modn(i.words[0])) } : this._wordDiv(i, a2);
    }, f.prototype.div = function(i) {
      return this.divmod(i, "div", false).div;
    }, f.prototype.mod = function(i) {
      return this.divmod(i, "mod", false).mod;
    }, f.prototype.umod = function(i) {
      return this.divmod(i, "mod", true).mod;
    }, f.prototype.divRound = function(i) {
      var a2 = this.divmod(i);
      if (a2.mod.isZero())
        return a2.div;
      var h = a2.div.negative !== 0 ? a2.mod.isub(i) : a2.mod, s = i.ushrn(1), u = i.andln(1), c = h.cmp(s);
      return c < 0 || u === 1 && c === 0 ? a2.div : a2.div.negative !== 0 ? a2.div.isubn(1) : a2.div.iaddn(1);
    }, f.prototype.modn = function(i) {
      r2(i <= 67108863);
      for (var a2 = (1 << 26) % i, h = 0, s = this.length - 1;s >= 0; s--)
        h = (a2 * h + (this.words[s] | 0)) % i;
      return h;
    }, f.prototype.idivn = function(i) {
      r2(i <= 67108863);
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = (this.words[h] | 0) + a2 * 67108864;
        this.words[h] = s / i | 0, a2 = s % i;
      }
      return this.strip();
    }, f.prototype.divn = function(i) {
      return this.clone().idivn(i);
    }, f.prototype.egcd = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = new f(0), b = new f(1), l = 0;a2.isEven() && h.isEven(); )
        a2.iushrn(1), h.iushrn(1), ++l;
      for (var n = h.clone(), d = a2.clone();!a2.isZero(); ) {
        for (var w = 0, g = 1;(a2.words[0] & g) === 0 && w < 26; ++w, g <<= 1)
          ;
        if (w > 0)
          for (a2.iushrn(w);w-- > 0; )
            (s.isOdd() || u.isOdd()) && (s.iadd(n), u.isub(d)), s.iushrn(1), u.iushrn(1);
        for (var _ = 0, A = 1;(h.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
          ;
        if (_ > 0)
          for (h.iushrn(_);_-- > 0; )
            (c.isOdd() || b.isOdd()) && (c.iadd(n), b.isub(d)), c.iushrn(1), b.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(c), u.isub(b)) : (h.isub(a2), c.isub(s), b.isub(u));
      }
      return { a: c, b, gcd: h.iushln(l) };
    }, f.prototype._invmp = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = h.clone();a2.cmpn(1) > 0 && h.cmpn(1) > 0; ) {
        for (var b = 0, l = 1;(a2.words[0] & l) === 0 && b < 26; ++b, l <<= 1)
          ;
        if (b > 0)
          for (a2.iushrn(b);b-- > 0; )
            s.isOdd() && s.iadd(c), s.iushrn(1);
        for (var n = 0, d = 1;(h.words[0] & d) === 0 && n < 26; ++n, d <<= 1)
          ;
        if (n > 0)
          for (h.iushrn(n);n-- > 0; )
            u.isOdd() && u.iadd(c), u.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(u)) : (h.isub(a2), u.isub(s));
      }
      var w;
      return a2.cmpn(1) === 0 ? w = s : w = u, w.cmpn(0) < 0 && w.iadd(i), w;
    }, f.prototype.gcd = function(i) {
      if (this.isZero())
        return i.abs();
      if (i.isZero())
        return this.abs();
      var a2 = this.clone(), h = i.clone();
      a2.negative = 0, h.negative = 0;
      for (var s = 0;a2.isEven() && h.isEven(); s++)
        a2.iushrn(1), h.iushrn(1);
      do {
        for (;a2.isEven(); )
          a2.iushrn(1);
        for (;h.isEven(); )
          h.iushrn(1);
        var u = a2.cmp(h);
        if (u < 0) {
          var c = a2;
          a2 = h, h = c;
        } else if (u === 0 || h.cmpn(1) === 0)
          break;
        a2.isub(h);
      } while (true);
      return h.iushln(s);
    }, f.prototype.invm = function(i) {
      return this.egcd(i).a.umod(i);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(i) {
      return this.words[0] & i;
    }, f.prototype.bincn = function(i) {
      r2(typeof i == "number");
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return this._expand(h + 1), this.words[h] |= s, this;
      for (var u = s, c = h;u !== 0 && c < this.length; c++) {
        var b = this.words[c] | 0;
        b += u, u = b >>> 26, b &= 67108863, this.words[c] = b;
      }
      return u !== 0 && (this.words[c] = u, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(i) {
      var a2 = i < 0;
      if (this.negative !== 0 && !a2)
        return -1;
      if (this.negative === 0 && a2)
        return 1;
      this.strip();
      var h;
      if (this.length > 1)
        h = 1;
      else {
        a2 && (i = -i), r2(i <= 67108863, "Number is too big");
        var s = this.words[0] | 0;
        h = s === i ? 0 : s < i ? -1 : 1;
      }
      return this.negative !== 0 ? -h | 0 : h;
    }, f.prototype.cmp = function(i) {
      if (this.negative !== 0 && i.negative === 0)
        return -1;
      if (this.negative === 0 && i.negative !== 0)
        return 1;
      var a2 = this.ucmp(i);
      return this.negative !== 0 ? -a2 | 0 : a2;
    }, f.prototype.ucmp = function(i) {
      if (this.length > i.length)
        return 1;
      if (this.length < i.length)
        return -1;
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = this.words[h] | 0, u = i.words[h] | 0;
        if (s !== u) {
          s < u ? a2 = -1 : s > u && (a2 = 1);
          break;
        }
      }
      return a2;
    }, f.prototype.gtn = function(i) {
      return this.cmpn(i) === 1;
    }, f.prototype.gt = function(i) {
      return this.cmp(i) === 1;
    }, f.prototype.gten = function(i) {
      return this.cmpn(i) >= 0;
    }, f.prototype.gte = function(i) {
      return this.cmp(i) >= 0;
    }, f.prototype.ltn = function(i) {
      return this.cmpn(i) === -1;
    }, f.prototype.lt = function(i) {
      return this.cmp(i) === -1;
    }, f.prototype.lten = function(i) {
      return this.cmpn(i) <= 0;
    }, f.prototype.lte = function(i) {
      return this.cmp(i) <= 0;
    }, f.prototype.eqn = function(i) {
      return this.cmpn(i) === 0;
    }, f.prototype.eq = function(i) {
      return this.cmp(i) === 0;
    }, f.red = function(i) {
      return new P(i);
    }, f.prototype.toRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(i) {
      return this.red = i, this;
    }, f.prototype.forceRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(i);
    }, f.prototype.redAdd = function(i) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
    }, f.prototype.redIAdd = function(i) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
    }, f.prototype.redSub = function(i) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
    }, f.prototype.redISub = function(i) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
    }, f.prototype.redShl = function(i) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
    }, f.prototype.redMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
    }, f.prototype.redIMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(i) {
      return r2(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
    };
    var we = { k256: null, p224: null, p192: null, p25519: null };
    function ye(v, i) {
      this.name = v, this.p = new f(i, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    ye.prototype._tmp = function() {
      var i = new f(null);
      return i.words = new Array(Math.ceil(this.n / 13)), i;
    }, ye.prototype.ireduce = function(i) {
      var a2 = i, h;
      do
        this.split(a2, this.tmp), a2 = this.imulK(a2), a2 = a2.iadd(this.tmp), h = a2.bitLength();
      while (h > this.n);
      var s = h < this.n ? -1 : a2.ucmp(this.p);
      return s === 0 ? (a2.words[0] = 0, a2.length = 1) : s > 0 ? a2.isub(this.p) : a2.strip !== undefined ? a2.strip() : a2._strip(), a2;
    }, ye.prototype.split = function(i, a2) {
      i.iushrn(this.n, 0, a2);
    }, ye.prototype.imulK = function(i) {
      return i.imul(this.k);
    };
    function xe() {
      ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(xe, ye), xe.prototype.split = function(i, a2) {
      for (var h = 4194303, s = Math.min(i.length, 9), u = 0;u < s; u++)
        a2.words[u] = i.words[u];
      if (a2.length = s, i.length <= 9) {
        i.words[0] = 0, i.length = 1;
        return;
      }
      var c = i.words[9];
      for (a2.words[a2.length++] = c & h, u = 10;u < i.length; u++) {
        var b = i.words[u] | 0;
        i.words[u - 10] = (b & h) << 4 | c >>> 22, c = b;
      }
      c >>>= 22, i.words[u - 10] = c, c === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
    }, xe.prototype.imulK = function(i) {
      i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = i.words[h] | 0;
        a2 += s * 977, i.words[h] = a2 & 67108863, a2 = s * 64 + (a2 / 67108864 | 0);
      }
      return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
    };
    function Re() {
      ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(Re, ye);
    function Ee() {
      ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Ee, ye);
    function Ae() {
      ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(Ae, ye), Ae.prototype.imulK = function(i) {
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = (i.words[h] | 0) * 19 + a2, u = s & 67108863;
        s >>>= 26, i.words[h] = u, a2 = s;
      }
      return a2 !== 0 && (i.words[i.length++] = a2), i;
    }, f._prime = function(i) {
      if (we[i])
        return we[i];
      var a2;
      if (i === "k256")
        a2 = new xe;
      else if (i === "p224")
        a2 = new Re;
      else if (i === "p192")
        a2 = new Ee;
      else if (i === "p25519")
        a2 = new Ae;
      else
        throw new Error("Unknown prime " + i);
      return we[i] = a2, a2;
    };
    function P(v) {
      if (typeof v == "string") {
        var i = f._prime(v);
        this.m = i.p, this.prime = i;
      } else
        r2(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
    }
    P.prototype._verify1 = function(i) {
      r2(i.negative === 0, "red works only with positives"), r2(i.red, "red works only with red numbers");
    }, P.prototype._verify2 = function(i, a2) {
      r2((i.negative | a2.negative) === 0, "red works only with positives"), r2(i.red && i.red === a2.red, "red works only with red numbers");
    }, P.prototype.imod = function(i) {
      return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
    }, P.prototype.neg = function(i) {
      return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
    }, P.prototype.add = function(i, a2) {
      this._verify2(i, a2);
      var h = i.add(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h._forceRed(this);
    }, P.prototype.iadd = function(i, a2) {
      this._verify2(i, a2);
      var h = i.iadd(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h;
    }, P.prototype.sub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.sub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h._forceRed(this);
    }, P.prototype.isub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.isub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h;
    }, P.prototype.shl = function(i, a2) {
      return this._verify1(i), this.imod(i.ushln(a2));
    }, P.prototype.imul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.imul(a2));
    }, P.prototype.mul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.mul(a2));
    }, P.prototype.isqr = function(i) {
      return this.imul(i, i.clone());
    }, P.prototype.sqr = function(i) {
      return this.mul(i, i);
    }, P.prototype.sqrt = function(i) {
      if (i.isZero())
        return i.clone();
      var a2 = this.m.andln(3);
      if (r2(a2 % 2 === 1), a2 === 3) {
        var h = this.m.add(new f(1)).iushrn(2);
        return this.pow(i, h);
      }
      for (var s = this.m.subn(1), u = 0;!s.isZero() && s.andln(1) === 0; )
        u++, s.iushrn(1);
      r2(!s.isZero());
      var c = new f(1).toRed(this), b = c.redNeg(), l = this.m.subn(1).iushrn(1), n = this.m.bitLength();
      for (n = new f(2 * n * n).toRed(this);this.pow(n, l).cmp(b) !== 0; )
        n.redIAdd(b);
      for (var d = this.pow(n, s), w = this.pow(i, s.addn(1).iushrn(1)), g = this.pow(i, s), _ = u;g.cmp(c) !== 0; ) {
        for (var A = g, R = 0;A.cmp(c) !== 0; R++)
          A = A.redSqr();
        r2(R < _);
        var I = this.pow(d, new f(1).iushln(_ - R - 1));
        w = w.redMul(I), d = I.redSqr(), g = g.redMul(d), _ = R;
      }
      return w;
    }, P.prototype.invm = function(i) {
      var a2 = i._invmp(this.m);
      return a2.negative !== 0 ? (a2.negative = 0, this.imod(a2).redNeg()) : this.imod(a2);
    }, P.prototype.pow = function(i, a2) {
      if (a2.isZero())
        return new f(1).toRed(this);
      if (a2.cmpn(1) === 0)
        return i.clone();
      var h = 4, s = new Array(1 << h);
      s[0] = new f(1).toRed(this), s[1] = i;
      for (var u = 2;u < s.length; u++)
        s[u] = this.mul(s[u - 1], i);
      var c = s[0], b = 0, l = 0, n = a2.bitLength() % 26;
      for (n === 0 && (n = 26), u = a2.length - 1;u >= 0; u--) {
        for (var d = a2.words[u], w = n - 1;w >= 0; w--) {
          var g = d >> w & 1;
          if (c !== s[0] && (c = this.sqr(c)), g === 0 && b === 0) {
            l = 0;
            continue;
          }
          b <<= 1, b |= g, l++, !(l !== h && (u !== 0 || w !== 0)) && (c = this.mul(c, s[b]), l = 0, b = 0);
        }
        n = 26;
      }
      return c;
    }, P.prototype.convertTo = function(i) {
      var a2 = i.umod(this.m);
      return a2 === i ? a2.clone() : a2;
    }, P.prototype.convertFrom = function(i) {
      var a2 = i.clone();
      return a2.red = null, a2;
    }, f.mont = function(i) {
      return new Se(i);
    };
    function Se(v) {
      P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(Se, P), Se.prototype.convertTo = function(i) {
      return this.imod(i.ushln(this.shift));
    }, Se.prototype.convertFrom = function(i) {
      var a2 = this.imod(i.mul(this.rinv));
      return a2.red = null, a2;
    }, Se.prototype.imul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return i.words[0] = 0, i.length = 1, i;
      var h = i.imul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.mul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return new f(0)._forceRed(this);
      var h = i.mul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.invm = function(i) {
      var a2 = this.imod(i._invmp(this.m).mul(this.r2));
      return a2._forceRed(this);
    };
  })(typeof Xu > "u" || Xu, Gm);
});
var Xm = T(() => {
});
var As = T(($T, el) => {
  var Ju;
  el.exports = function(e2) {
    return Ju || (Ju = new Zi(null)), Ju.generate(e2);
  };
  function Zi(t3) {
    this.rand = t3;
  }
  el.exports.Rand = Zi;
  Zi.prototype.generate = function(e2) {
    return this._rand(e2);
  };
  Zi.prototype._rand = function(e2) {
    if (this.rand.getBytes)
      return this.rand.getBytes(e2);
    for (var r2 = new Uint8Array(e2), o = 0;o < r2.length; o++)
      r2[o] = this.rand.getByte();
    return r2;
  };
  if (typeof self == "object")
    self.crypto && self.crypto.getRandomValues ? Zi.prototype._rand = function(e2) {
      var r2 = new Uint8Array(e2);
      return self.crypto.getRandomValues(r2), r2;
    } : self.msCrypto && self.msCrypto.getRandomValues ? Zi.prototype._rand = function(e2) {
      var r2 = new Uint8Array(e2);
      return self.msCrypto.getRandomValues(r2), r2;
    } : typeof window == "object" && (Zi.prototype._rand = function() {
      throw new Error("Not implemented yet");
    });
  else
    try {
      if (Qu = Xm(), typeof Qu.randomBytes != "function")
        throw new Error("Not supported");
      Zi.prototype._rand = function(e2) {
        return Qu.randomBytes(e2);
      };
    } catch {
    }
  var Qu;
});
var tl = T((GT, Jm) => {
  var In = Ym(), Q9 = As();
  function Tn(t3) {
    this.rand = t3 || new Q9.Rand;
  }
  Jm.exports = Tn;
  Tn.create = function(e2) {
    return new Tn(e2);
  };
  Tn.prototype._randbelow = function(e2) {
    var r2 = e2.bitLength(), o = Math.ceil(r2 / 8);
    do
      var f = new In(this.rand.generate(o));
    while (f.cmp(e2) >= 0);
    return f;
  };
  Tn.prototype._randrange = function(e2, r2) {
    var o = r2.sub(e2);
    return e2.add(this._randbelow(o));
  };
  Tn.prototype.test = function(e2, r2, o) {
    var f = e2.bitLength(), p = In.mont(e2), m = new In(1).toRed(p);
    r2 || (r2 = Math.max(1, f / 48 | 0));
    for (var y = e2.subn(1), M = 0;!y.testn(M); M++)
      ;
    for (var x = e2.shrn(M), S = y.toRed(p), E = true;r2 > 0; r2--) {
      var B = this._randrange(new In(2), y);
      o && o(B);
      var q = B.toRed(p).redPow(x);
      if (!(q.cmp(m) === 0 || q.cmp(S) === 0)) {
        for (var L = 1;L < M; L++) {
          if (q = q.redSqr(), q.cmp(m) === 0)
            return false;
          if (q.cmp(S) === 0)
            break;
        }
        if (L === M)
          return false;
      }
    }
    return E;
  };
  Tn.prototype.getDivisor = function(e2, r2) {
    var o = e2.bitLength(), f = In.mont(e2), p = new In(1).toRed(f);
    r2 || (r2 = Math.max(1, o / 48 | 0));
    for (var m = e2.subn(1), y = 0;!m.testn(y); y++)
      ;
    for (var M = e2.shrn(y), x = m.toRed(f);r2 > 0; r2--) {
      var S = this._randrange(new In(2), m), E = e2.gcd(S);
      if (E.cmpn(1) !== 0)
        return E;
      var B = S.toRed(f).redPow(M);
      if (!(B.cmp(p) === 0 || B.cmp(x) === 0)) {
        for (var q = 1;q < y; q++) {
          if (B = B.redSqr(), B.cmp(p) === 0)
            return B.fromRed().subn(1).gcd(e2);
          if (B.cmp(x) === 0)
            break;
        }
        if (q === y)
          return B = B.redSqr(), B.fromRed().subn(1).gcd(e2);
      }
    }
    return false;
  };
});
var ol = T((ek, tg) => {
  var eS = on();
  tg.exports = al;
  al.simpleSieve = nl;
  al.fermatTest = fl;
  var Ht = Yu(), tS = new Ht(24), rS = tl(), Qm = new rS, iS = new Ht(1), il = new Ht(2), nS = new Ht(5), YT = new Ht(16), XT = new Ht(8), fS = new Ht(10), aS = new Ht(3), JT = new Ht(7), oS = new Ht(11), eg = new Ht(4), QT = new Ht(12), rl = null;
  function sS() {
    if (rl !== null)
      return rl;
    var t3 = 1048576, e2 = [];
    e2[0] = 2;
    for (var r2 = 1, o = 3;o < t3; o += 2) {
      for (var f = Math.ceil(Math.sqrt(o)), p = 0;p < r2 && e2[p] <= f && o % e2[p] !== 0; p++)
        ;
      r2 !== p && e2[p] <= f || (e2[r2++] = o);
    }
    return rl = e2, e2;
  }
  function nl(t3) {
    for (var e2 = sS(), r2 = 0;r2 < e2.length; r2++)
      if (t3.modn(e2[r2]) === 0)
        return t3.cmpn(e2[r2]) === 0;
    return true;
  }
  function fl(t3) {
    var e2 = Ht.mont(t3);
    return il.toRed(e2).redPow(t3.subn(1)).fromRed().cmpn(1) === 0;
  }
  function al(t3, e2) {
    if (t3 < 16)
      return e2 === 2 || e2 === 5 ? new Ht([140, 123]) : new Ht([140, 39]);
    e2 = new Ht(e2);
    for (var r2, o;; ) {
      for (r2 = new Ht(eS(Math.ceil(t3 / 8)));r2.bitLength() > t3; )
        r2.ishrn(1);
      if (r2.isEven() && r2.iadd(iS), r2.testn(1) || r2.iadd(il), e2.cmp(il)) {
        if (!e2.cmp(nS))
          for (;r2.mod(fS).cmp(aS); )
            r2.iadd(eg);
      } else
        for (;r2.mod(tS).cmp(oS); )
          r2.iadd(eg);
      if (o = r2.shrn(1), nl(o) && nl(r2) && fl(o) && fl(r2) && Qm.test(o) && Qm.test(r2))
        return r2;
    }
  }
});
var rg = T((tk, hS) => {
  hS.exports = { modp1: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff" }, modp2: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff" }, modp5: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff" }, modp14: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff" }, modp15: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff" }, modp16: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff" }, modp17: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff" }, modp18: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff" } };
});
var ag = T((rk, fg) => {
  var yr = Yu(), uS = tl(), ig = new uS, lS = new yr(24), dS = new yr(11), cS = new yr(10), pS = new yr(3), vS = new yr(7), ng = ol(), bS = on();
  fg.exports = Si;
  function mS(t3, e2) {
    return e2 = e2 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2)), this._pub = new yr(t3), this;
  }
  function gS(t3, e2) {
    return e2 = e2 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2)), this._priv = new yr(t3), this;
  }
  var Rs = {};
  function yS(t3, e2) {
    var r2 = e2.toString("hex"), o = [r2, t3.toString(16)].join("_");
    if (o in Rs)
      return Rs[o];
    var f = 0;
    if (t3.isEven() || !ng.simpleSieve || !ng.fermatTest(t3) || !ig.test(t3))
      return f += 1, r2 === "02" || r2 === "05" ? f += 8 : f += 4, Rs[o] = f, f;
    ig.test(t3.shrn(1)) || (f += 2);
    var p;
    switch (r2) {
      case "02":
        t3.mod(lS).cmp(dS) && (f += 8);
        break;
      case "05":
        p = t3.mod(cS), p.cmp(pS) && p.cmp(vS) && (f += 8);
        break;
      default:
        f += 4;
    }
    return Rs[o] = f, f;
  }
  function Si(t3, e2, r2) {
    this.setGenerator(e2), this.__prime = new yr(t3), this._prime = yr.mont(this.__prime), this._primeLen = t3.length, this._pub = undefined, this._priv = undefined, this._primeCode = undefined, r2 ? (this.setPublicKey = mS, this.setPrivateKey = gS) : this._primeCode = 8;
  }
  Object.defineProperty(Si.prototype, "verifyError", { enumerable: true, get: function() {
    return typeof this._primeCode != "number" && (this._primeCode = yS(this.__prime, this.__gen)), this._primeCode;
  } });
  Si.prototype.generateKeys = function() {
    return this._priv || (this._priv = new yr(bS(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
  };
  Si.prototype.computeSecret = function(t3) {
    t3 = new yr(t3), t3 = t3.toRed(this._prime);
    var e2 = t3.redPow(this._priv).fromRed(), r2 = new Buffer(e2.toArray()), o = this.getPrime();
    if (r2.length < o.length) {
      var f = new Buffer(o.length - r2.length);
      f.fill(0), r2 = Buffer.concat([f, r2]);
    }
    return r2;
  };
  Si.prototype.getPublicKey = function(e2) {
    return Bs(this._pub, e2);
  };
  Si.prototype.getPrivateKey = function(e2) {
    return Bs(this._priv, e2);
  };
  Si.prototype.getPrime = function(t3) {
    return Bs(this.__prime, t3);
  };
  Si.prototype.getGenerator = function(t3) {
    return Bs(this._gen, t3);
  };
  Si.prototype.setGenerator = function(t3, e2) {
    return e2 = e2 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2)), this.__gen = t3, this._gen = new yr(t3), this;
  };
  function Bs(t3, e2) {
    var r2 = new Buffer(t3.toArray());
    return e2 ? r2.toString(e2) : r2;
  }
});
var hg = T((_f) => {
  var wS = ol(), og = rg(), sl = ag();
  function MS(t3) {
    var e2 = new Buffer(og[t3].prime, "hex"), r2 = new Buffer(og[t3].gen, "hex");
    return new sl(e2, r2);
  }
  var _S = { binary: true, hex: true, base64: true };
  function sg(t3, e2, r2, o) {
    return Buffer.isBuffer(e2) || _S[e2] === undefined ? sg(t3, "binary", e2, r2) : (e2 = e2 || "binary", o = o || "binary", r2 = r2 || new Buffer([2]), Buffer.isBuffer(r2) || (r2 = new Buffer(r2, o)), typeof t3 == "number" ? new sl(wS(t3, r2), r2, true) : (Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2)), new sl(t3, r2, true)));
  }
  _f.DiffieHellmanGroup = _f.createDiffieHellmanGroup = _f.getDiffieHellman = MS;
  _f.createDiffieHellman = _f.DiffieHellman = sg;
});
var hl = T((nk, ug) => {
  ug.exports = ki().EventEmitter;
});
var pg = T((fk, cg) => {
  function lg(t3, e2) {
    var r2 = Object.keys(t3);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(t3);
      e2 && (o = o.filter(function(f) {
        return Object.getOwnPropertyDescriptor(t3, f).enumerable;
      })), r2.push.apply(r2, o);
    }
    return r2;
  }
  function xS(t3) {
    for (var e2 = 1;e2 < arguments.length; e2++) {
      var r2 = arguments[e2] != null ? arguments[e2] : {};
      e2 % 2 ? lg(Object(r2), true).forEach(function(o) {
        SS(t3, o, r2[o]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(r2)) : lg(Object(r2)).forEach(function(o) {
        Object.defineProperty(t3, o, Object.getOwnPropertyDescriptor(r2, o));
      });
    }
    return t3;
  }
  function SS(t3, e2, r2) {
    return e2 in t3 ? Object.defineProperty(t3, e2, { value: r2, enumerable: true, configurable: true, writable: true }) : t3[e2] = r2, t3;
  }
  function ES(t3, e2) {
    if (!(t3 instanceof e2))
      throw new TypeError("Cannot call a class as a function");
  }
  function dg(t3, e2) {
    for (var r2 = 0;r2 < e2.length; r2++) {
      var o = e2[r2];
      o.enumerable = o.enumerable || false, o.configurable = true, "value" in o && (o.writable = true), Object.defineProperty(t3, o.key, o);
    }
  }
  function AS(t3, e2, r2) {
    return e2 && dg(t3.prototype, e2), r2 && dg(t3, r2), t3;
  }
  var RS = Ut(), qs = RS.Buffer, BS = $f(), ul = BS.inspect, qS = ul && ul.custom || "inspect";
  function IS(t3, e2, r2) {
    qs.prototype.copy.call(t3, e2, r2);
  }
  cg.exports = function() {
    function t3() {
      ES(this, t3), this.head = null, this.tail = null, this.length = 0;
    }
    return AS(t3, [{ key: "push", value: function(r2) {
      var o = { data: r2, next: null };
      this.length > 0 ? this.tail.next = o : this.head = o, this.tail = o, ++this.length;
    } }, { key: "unshift", value: function(r2) {
      var o = { data: r2, next: this.head };
      this.length === 0 && (this.tail = o), this.head = o, ++this.length;
    } }, { key: "shift", value: function() {
      if (this.length !== 0) {
        var r2 = this.head.data;
        return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r2;
      }
    } }, { key: "clear", value: function() {
      this.head = this.tail = null, this.length = 0;
    } }, { key: "join", value: function(r2) {
      if (this.length === 0)
        return "";
      for (var o = this.head, f = "" + o.data;o = o.next; )
        f += r2 + o.data;
      return f;
    } }, { key: "concat", value: function(r2) {
      if (this.length === 0)
        return qs.alloc(0);
      for (var o = qs.allocUnsafe(r2 >>> 0), f = this.head, p = 0;f; )
        IS(f.data, o, p), p += f.data.length, f = f.next;
      return o;
    } }, { key: "consume", value: function(r2, o) {
      var f;
      return r2 < this.head.data.length ? (f = this.head.data.slice(0, r2), this.head.data = this.head.data.slice(r2)) : r2 === this.head.data.length ? f = this.shift() : f = o ? this._getString(r2) : this._getBuffer(r2), f;
    } }, { key: "first", value: function() {
      return this.head.data;
    } }, { key: "_getString", value: function(r2) {
      var o = this.head, f = 1, p = o.data;
      for (r2 -= p.length;o = o.next; ) {
        var m = o.data, y = r2 > m.length ? m.length : r2;
        if (y === m.length ? p += m : p += m.slice(0, r2), r2 -= y, r2 === 0) {
          y === m.length ? (++f, o.next ? this.head = o.next : this.head = this.tail = null) : (this.head = o, o.data = m.slice(y));
          break;
        }
        ++f;
      }
      return this.length -= f, p;
    } }, { key: "_getBuffer", value: function(r2) {
      var o = qs.allocUnsafe(r2), f = this.head, p = 1;
      for (f.data.copy(o), r2 -= f.data.length;f = f.next; ) {
        var m = f.data, y = r2 > m.length ? m.length : r2;
        if (m.copy(o, o.length - r2, 0, y), r2 -= y, r2 === 0) {
          y === m.length ? (++p, f.next ? this.head = f.next : this.head = this.tail = null) : (this.head = f, f.data = m.slice(y));
          break;
        }
        ++p;
      }
      return this.length -= p, o;
    } }, { key: qS, value: function(r2, o) {
      return ul(this, xS({}, o, { depth: 0, customInspect: false }));
    } }]), t3;
  }();
});
var dl = T((ak, bg) => {
  function TS(t3, e2) {
    var r2 = this, o = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
    return o || f ? (e2 ? e2(t3) : t3 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(ll, this, t3)) : process.nextTick(ll, this, t3)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t3 || null, function(p) {
      !e2 && p ? r2._writableState ? r2._writableState.errorEmitted ? process.nextTick(Is, r2) : (r2._writableState.errorEmitted = true, process.nextTick(vg, r2, p)) : process.nextTick(vg, r2, p) : e2 ? (process.nextTick(Is, r2), e2(p)) : process.nextTick(Is, r2);
    }), this);
  }
  function vg(t3, e2) {
    ll(t3, e2), Is(t3);
  }
  function Is(t3) {
    t3._writableState && !t3._writableState.emitClose || t3._readableState && !t3._readableState.emitClose || t3.emit("close");
  }
  function kS() {
    this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
  }
  function ll(t3, e2) {
    t3.emit("error", e2);
  }
  function LS(t3, e2) {
    var { _readableState: r2, _writableState: o } = t3;
    r2 && r2.autoDestroy || o && o.autoDestroy ? t3.destroy(e2) : t3.emit("error", e2);
  }
  bg.exports = { destroy: TS, undestroy: kS, errorOrDestroy: LS };
});
var kn = T((ok, yg) => {
  function NS(t3, e2) {
    t3.prototype = Object.create(e2.prototype), t3.prototype.constructor = t3, t3.__proto__ = e2;
  }
  var gg = {};
  function wr(t3, e2, r2) {
    r2 || (r2 = Error);
    function o(p, m, y) {
      return typeof e2 == "string" ? e2 : e2(p, m, y);
    }
    var f = function(p) {
      NS(m, p);
      function m(y, M, x) {
        return p.call(this, o(y, M, x)) || this;
      }
      return m;
    }(r2);
    f.prototype.name = r2.name, f.prototype.code = t3, gg[t3] = f;
  }
  function mg(t3, e2) {
    if (Array.isArray(t3)) {
      var r2 = t3.length;
      return t3 = t3.map(function(o) {
        return String(o);
      }), r2 > 2 ? "one of ".concat(e2, " ").concat(t3.slice(0, r2 - 1).join(", "), ", or ") + t3[r2 - 1] : r2 === 2 ? "one of ".concat(e2, " ").concat(t3[0], " or ").concat(t3[1]) : "of ".concat(e2, " ").concat(t3[0]);
    } else
      return "of ".concat(e2, " ").concat(String(t3));
  }
  function DS(t3, e2, r2) {
    return t3.substr(!r2 || r2 < 0 ? 0 : +r2, e2.length) === e2;
  }
  function PS(t3, e2, r2) {
    return (r2 === undefined || r2 > t3.length) && (r2 = t3.length), t3.substring(r2 - e2.length, r2) === e2;
  }
  function CS(t3, e2, r2) {
    return typeof r2 != "number" && (r2 = 0), r2 + e2.length > t3.length ? false : t3.indexOf(e2, r2) !== -1;
  }
  wr("ERR_INVALID_OPT_VALUE", function(t3, e2) {
    return 'The value "' + e2 + '" is invalid for option "' + t3 + '"';
  }, TypeError);
  wr("ERR_INVALID_ARG_TYPE", function(t3, e2, r2) {
    var o;
    typeof e2 == "string" && DS(e2, "not ") ? (o = "must not be", e2 = e2.replace(/^not /, "")) : o = "must be";
    var f;
    if (PS(t3, " argument"))
      f = "The ".concat(t3, " ").concat(o, " ").concat(mg(e2, "type"));
    else {
      var p = CS(t3, ".") ? "property" : "argument";
      f = 'The "'.concat(t3, '" ').concat(p, " ").concat(o, " ").concat(mg(e2, "type"));
    }
    return f += ". Received type ".concat(typeof r2), f;
  }, TypeError);
  wr("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
  wr("ERR_METHOD_NOT_IMPLEMENTED", function(t3) {
    return "The " + t3 + " method is not implemented";
  });
  wr("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
  wr("ERR_STREAM_DESTROYED", function(t3) {
    return "Cannot call " + t3 + " after a stream was destroyed";
  });
  wr("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
  wr("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
  wr("ERR_STREAM_WRITE_AFTER_END", "write after end");
  wr("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
  wr("ERR_UNKNOWN_ENCODING", function(t3) {
    return "Unknown encoding: " + t3;
  }, TypeError);
  wr("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
  yg.exports.codes = gg;
});
var cl = T((sk, wg) => {
  var OS = kn().codes.ERR_INVALID_OPT_VALUE;
  function FS(t3, e2, r2) {
    return t3.highWaterMark != null ? t3.highWaterMark : e2 ? t3[r2] : null;
  }
  function US(t3, e2, r2, o) {
    var f = FS(e2, o, r2);
    if (f != null) {
      if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
        var p = o ? r2 : "highWaterMark";
        throw new OS(p, f);
      }
      return Math.floor(f);
    }
    return t3.objectMode ? 16 : 16 * 1024;
  }
  wg.exports = { getHighWaterMark: US };
});
var bl = T((hk, Ag) => {
  Ag.exports = ut;
  function _g(t3) {
    var e2 = this;
    this.next = null, this.entry = null, this.finish = function() {
      cE(e2, t3);
    };
  }
  var xf;
  ut.WritableState = ka;
  var zS = { deprecate: G0() }, xg = hl(), ks = Ut().Buffer, HS = global.Uint8Array || function() {
  };
  function WS(t3) {
    return ks.from(t3);
  }
  function KS(t3) {
    return ks.isBuffer(t3) || t3 instanceof HS;
  }
  var vl = dl(), jS = cl(), ZS = jS.getHighWaterMark, Vi = kn().codes, VS = Vi.ERR_INVALID_ARG_TYPE, $S = Vi.ERR_METHOD_NOT_IMPLEMENTED, GS = Vi.ERR_MULTIPLE_CALLBACK, YS = Vi.ERR_STREAM_CANNOT_PIPE, XS = Vi.ERR_STREAM_DESTROYED, JS = Vi.ERR_STREAM_NULL_VALUES, QS = Vi.ERR_STREAM_WRITE_AFTER_END, eE = Vi.ERR_UNKNOWN_ENCODING, Sf = vl.errorOrDestroy;
  Ie()(ut, xg);
  function tE() {
  }
  function ka(t3, e2, r2) {
    xf = xf || Ln(), t3 = t3 || {}, typeof r2 != "boolean" && (r2 = e2 instanceof xf), this.objectMode = !!t3.objectMode, r2 && (this.objectMode = this.objectMode || !!t3.writableObjectMode), this.highWaterMark = ZS(this, t3, "writableHighWaterMark", r2), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
    var o = t3.decodeStrings === false;
    this.decodeStrings = !o, this.defaultEncoding = t3.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(f) {
      sE(e2, f);
    }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t3.emitClose !== false, this.autoDestroy = !!t3.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new _g(this);
  }
  ka.prototype.getBuffer = function() {
    for (var e2 = this.bufferedRequest, r2 = [];e2; )
      r2.push(e2), e2 = e2.next;
    return r2;
  };
  (function() {
    try {
      Object.defineProperty(ka.prototype, "buffer", { get: zS.deprecate(function() {
        return this.getBuffer();
      }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
    } catch {
    }
  })();
  var Ts;
  typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (Ts = Function.prototype[Symbol.hasInstance], Object.defineProperty(ut, Symbol.hasInstance, { value: function(e2) {
    return Ts.call(this, e2) ? true : this !== ut ? false : e2 && e2._writableState instanceof ka;
  } })) : Ts = function(e2) {
    return e2 instanceof this;
  };
  function ut(t3) {
    xf = xf || Ln();
    var e2 = this instanceof xf;
    if (!e2 && !Ts.call(ut, this))
      return new ut(t3);
    this._writableState = new ka(t3, this, e2), this.writable = true, t3 && (typeof t3.write == "function" && (this._write = t3.write), typeof t3.writev == "function" && (this._writev = t3.writev), typeof t3.destroy == "function" && (this._destroy = t3.destroy), typeof t3.final == "function" && (this._final = t3.final)), xg.call(this);
  }
  ut.prototype.pipe = function() {
    Sf(this, new YS);
  };
  function rE(t3, e2) {
    var r2 = new QS;
    Sf(t3, r2), process.nextTick(e2, r2);
  }
  function iE(t3, e2, r2, o) {
    var f;
    return r2 === null ? f = new JS : typeof r2 != "string" && !e2.objectMode && (f = new VS("chunk", ["string", "Buffer"], r2)), f ? (Sf(t3, f), process.nextTick(o, f), false) : true;
  }
  ut.prototype.write = function(t3, e2, r2) {
    var o = this._writableState, f = false, p = !o.objectMode && KS(t3);
    return p && !ks.isBuffer(t3) && (t3 = WS(t3)), typeof e2 == "function" && (r2 = e2, e2 = null), p ? e2 = "buffer" : e2 || (e2 = o.defaultEncoding), typeof r2 != "function" && (r2 = tE), o.ending ? rE(this, r2) : (p || iE(this, o, t3, r2)) && (o.pendingcb++, f = fE(this, o, p, t3, e2, r2)), f;
  };
  ut.prototype.cork = function() {
    this._writableState.corked++;
  };
  ut.prototype.uncork = function() {
    var t3 = this._writableState;
    t3.corked && (t3.corked--, !t3.writing && !t3.corked && !t3.bufferProcessing && t3.bufferedRequest && Sg(this, t3));
  };
  ut.prototype.setDefaultEncoding = function(e2) {
    if (typeof e2 == "string" && (e2 = e2.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e2 + "").toLowerCase()) > -1))
      throw new eE(e2);
    return this._writableState.defaultEncoding = e2, this;
  };
  Object.defineProperty(ut.prototype, "writableBuffer", { enumerable: false, get: function() {
    return this._writableState && this._writableState.getBuffer();
  } });
  function nE(t3, e2, r2) {
    return !t3.objectMode && t3.decodeStrings !== false && typeof e2 == "string" && (e2 = ks.from(e2, r2)), e2;
  }
  Object.defineProperty(ut.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
    return this._writableState.highWaterMark;
  } });
  function fE(t3, e2, r2, o, f, p) {
    if (!r2) {
      var m = nE(e2, o, f);
      o !== m && (r2 = true, f = "buffer", o = m);
    }
    var y = e2.objectMode ? 1 : o.length;
    e2.length += y;
    var M = e2.length < e2.highWaterMark;
    if (M || (e2.needDrain = true), e2.writing || e2.corked) {
      var x = e2.lastBufferedRequest;
      e2.lastBufferedRequest = { chunk: o, encoding: f, isBuf: r2, callback: p, next: null }, x ? x.next = e2.lastBufferedRequest : e2.bufferedRequest = e2.lastBufferedRequest, e2.bufferedRequestCount += 1;
    } else
      pl(t3, e2, false, y, o, f, p);
    return M;
  }
  function pl(t3, e2, r2, o, f, p, m) {
    e2.writelen = o, e2.writecb = m, e2.writing = true, e2.sync = true, e2.destroyed ? e2.onwrite(new XS("write")) : r2 ? t3._writev(f, e2.onwrite) : t3._write(f, p, e2.onwrite), e2.sync = false;
  }
  function aE(t3, e2, r2, o, f) {
    --e2.pendingcb, r2 ? (process.nextTick(f, o), process.nextTick(Ta, t3, e2), t3._writableState.errorEmitted = true, Sf(t3, o)) : (f(o), t3._writableState.errorEmitted = true, Sf(t3, o), Ta(t3, e2));
  }
  function oE(t3) {
    t3.writing = false, t3.writecb = null, t3.length -= t3.writelen, t3.writelen = 0;
  }
  function sE(t3, e2) {
    var r2 = t3._writableState, o = r2.sync, f = r2.writecb;
    if (typeof f != "function")
      throw new GS;
    if (oE(r2), e2)
      aE(t3, r2, o, e2, f);
    else {
      var p = Eg(r2) || t3.destroyed;
      !p && !r2.corked && !r2.bufferProcessing && r2.bufferedRequest && Sg(t3, r2), o ? process.nextTick(Mg, t3, r2, p, f) : Mg(t3, r2, p, f);
    }
  }
  function Mg(t3, e2, r2, o) {
    r2 || hE(t3, e2), e2.pendingcb--, o(), Ta(t3, e2);
  }
  function hE(t3, e2) {
    e2.length === 0 && e2.needDrain && (e2.needDrain = false, t3.emit("drain"));
  }
  function Sg(t3, e2) {
    e2.bufferProcessing = true;
    var r2 = e2.bufferedRequest;
    if (t3._writev && r2 && r2.next) {
      var o = e2.bufferedRequestCount, f = new Array(o), p = e2.corkedRequestsFree;
      p.entry = r2;
      for (var m = 0, y = true;r2; )
        f[m] = r2, r2.isBuf || (y = false), r2 = r2.next, m += 1;
      f.allBuffers = y, pl(t3, e2, true, e2.length, f, "", p.finish), e2.pendingcb++, e2.lastBufferedRequest = null, p.next ? (e2.corkedRequestsFree = p.next, p.next = null) : e2.corkedRequestsFree = new _g(e2), e2.bufferedRequestCount = 0;
    } else {
      for (;r2; ) {
        var { chunk: M, encoding: x, callback: S } = r2, E = e2.objectMode ? 1 : M.length;
        if (pl(t3, e2, false, E, M, x, S), r2 = r2.next, e2.bufferedRequestCount--, e2.writing)
          break;
      }
      r2 === null && (e2.lastBufferedRequest = null);
    }
    e2.bufferedRequest = r2, e2.bufferProcessing = false;
  }
  ut.prototype._write = function(t3, e2, r2) {
    r2(new $S("_write()"));
  };
  ut.prototype._writev = null;
  ut.prototype.end = function(t3, e2, r2) {
    var o = this._writableState;
    return typeof t3 == "function" ? (r2 = t3, t3 = null, e2 = null) : typeof e2 == "function" && (r2 = e2, e2 = null), t3 != null && this.write(t3, e2), o.corked && (o.corked = 1, this.uncork()), o.ending || dE(this, o, r2), this;
  };
  Object.defineProperty(ut.prototype, "writableLength", { enumerable: false, get: function() {
    return this._writableState.length;
  } });
  function Eg(t3) {
    return t3.ending && t3.length === 0 && t3.bufferedRequest === null && !t3.finished && !t3.writing;
  }
  function uE(t3, e2) {
    t3._final(function(r2) {
      e2.pendingcb--, r2 && Sf(t3, r2), e2.prefinished = true, t3.emit("prefinish"), Ta(t3, e2);
    });
  }
  function lE(t3, e2) {
    !e2.prefinished && !e2.finalCalled && (typeof t3._final == "function" && !e2.destroyed ? (e2.pendingcb++, e2.finalCalled = true, process.nextTick(uE, t3, e2)) : (e2.prefinished = true, t3.emit("prefinish")));
  }
  function Ta(t3, e2) {
    var r2 = Eg(e2);
    if (r2 && (lE(t3, e2), e2.pendingcb === 0 && (e2.finished = true, t3.emit("finish"), e2.autoDestroy))) {
      var o = t3._readableState;
      (!o || o.autoDestroy && o.endEmitted) && t3.destroy();
    }
    return r2;
  }
  function dE(t3, e2, r2) {
    e2.ending = true, Ta(t3, e2), r2 && (e2.finished ? process.nextTick(r2) : t3.once("finish", r2)), e2.ended = true, t3.writable = false;
  }
  function cE(t3, e2, r2) {
    var o = t3.entry;
    for (t3.entry = null;o; ) {
      var f = o.callback;
      e2.pendingcb--, f(r2), o = o.next;
    }
    e2.corkedRequestsFree.next = t3;
  }
  Object.defineProperty(ut.prototype, "destroyed", { enumerable: false, get: function() {
    return this._writableState === undefined ? false : this._writableState.destroyed;
  }, set: function(e2) {
    !this._writableState || (this._writableState.destroyed = e2);
  } });
  ut.prototype.destroy = vl.destroy;
  ut.prototype._undestroy = vl.undestroy;
  ut.prototype._destroy = function(t3, e2) {
    e2(t3);
  };
});
var Ln = T((uk, Bg) => {
  var pE = Object.keys || function(t3) {
    var e2 = [];
    for (var r2 in t3)
      e2.push(r2);
    return e2;
  };
  Bg.exports = ti;
  var Rg = yl(), gl = bl();
  Ie()(ti, Rg);
  for (ml = pE(gl.prototype), Ls = 0;Ls < ml.length; Ls++)
    Ns = ml[Ls], ti.prototype[Ns] || (ti.prototype[Ns] = gl.prototype[Ns]);
  var ml, Ns, Ls;
  function ti(t3) {
    if (!(this instanceof ti))
      return new ti(t3);
    Rg.call(this, t3), gl.call(this, t3), this.allowHalfOpen = true, t3 && (t3.readable === false && (this.readable = false), t3.writable === false && (this.writable = false), t3.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", vE)));
  }
  Object.defineProperty(ti.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
    return this._writableState.highWaterMark;
  } });
  Object.defineProperty(ti.prototype, "writableBuffer", { enumerable: false, get: function() {
    return this._writableState && this._writableState.getBuffer();
  } });
  Object.defineProperty(ti.prototype, "writableLength", { enumerable: false, get: function() {
    return this._writableState.length;
  } });
  function vE() {
    this._writableState.ended || process.nextTick(bE, this);
  }
  function bE(t3) {
    t3.end();
  }
  Object.defineProperty(ti.prototype, "destroyed", { enumerable: false, get: function() {
    return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
  }, set: function(e2) {
    this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = e2, this._writableState.destroyed = e2);
  } });
});
var Ds = T((lk, Tg) => {
  var qg = kn().codes.ERR_STREAM_PREMATURE_CLOSE;
  function mE(t3) {
    var e2 = false;
    return function() {
      if (!e2) {
        e2 = true;
        for (var r2 = arguments.length, o = new Array(r2), f = 0;f < r2; f++)
          o[f] = arguments[f];
        t3.apply(this, o);
      }
    };
  }
  function gE() {
  }
  function yE(t3) {
    return t3.setHeader && typeof t3.abort == "function";
  }
  function Ig(t3, e2, r2) {
    if (typeof e2 == "function")
      return Ig(t3, null, e2);
    e2 || (e2 = {}), r2 = mE(r2 || gE);
    var o = e2.readable || e2.readable !== false && t3.readable, f = e2.writable || e2.writable !== false && t3.writable, p = function() {
      t3.writable || y();
    }, m = t3._writableState && t3._writableState.finished, y = function() {
      f = false, m = true, o || r2.call(t3);
    }, M = t3._readableState && t3._readableState.endEmitted, x = function() {
      o = false, M = true, f || r2.call(t3);
    }, S = function(L) {
      r2.call(t3, L);
    }, E = function() {
      var L;
      if (o && !M)
        return (!t3._readableState || !t3._readableState.ended) && (L = new qg), r2.call(t3, L);
      if (f && !m)
        return (!t3._writableState || !t3._writableState.ended) && (L = new qg), r2.call(t3, L);
    }, B = function() {
      t3.req.on("finish", y);
    };
    return yE(t3) ? (t3.on("complete", y), t3.on("abort", E), t3.req ? B() : t3.on("request", B)) : f && !t3._writableState && (t3.on("end", p), t3.on("close", p)), t3.on("end", x), t3.on("finish", y), e2.error !== false && t3.on("error", S), t3.on("close", E), function() {
      t3.removeListener("complete", y), t3.removeListener("abort", E), t3.removeListener("request", B), t3.req && t3.req.removeListener("finish", y), t3.removeListener("end", p), t3.removeListener("close", p), t3.removeListener("finish", y), t3.removeListener("end", x), t3.removeListener("error", S), t3.removeListener("close", E);
    };
  }
  Tg.exports = Ig;
});
var Lg = T((dk, kg) => {
  var Ps;
  function $i(t3, e2, r2) {
    return e2 in t3 ? Object.defineProperty(t3, e2, { value: r2, enumerable: true, configurable: true, writable: true }) : t3[e2] = r2, t3;
  }
  var wE = Ds(), Gi = Symbol("lastResolve"), Nn = Symbol("lastReject"), La = Symbol("error"), Cs = Symbol("ended"), Dn = Symbol("lastPromise"), wl = Symbol("handlePromise"), Pn = Symbol("stream");
  function Yi(t3, e2) {
    return { value: t3, done: e2 };
  }
  function ME(t3) {
    var e2 = t3[Gi];
    if (e2 !== null) {
      var r2 = t3[Pn].read();
      r2 !== null && (t3[Dn] = null, t3[Gi] = null, t3[Nn] = null, e2(Yi(r2, false)));
    }
  }
  function _E(t3) {
    process.nextTick(ME, t3);
  }
  function xE(t3, e2) {
    return function(r2, o) {
      t3.then(function() {
        if (e2[Cs]) {
          r2(Yi(undefined, true));
          return;
        }
        e2[wl](r2, o);
      }, o);
    };
  }
  var SE = Object.getPrototypeOf(function() {
  }), EE = Object.setPrototypeOf((Ps = { get stream() {
    return this[Pn];
  }, next: function() {
    var e2 = this, r2 = this[La];
    if (r2 !== null)
      return Promise.reject(r2);
    if (this[Cs])
      return Promise.resolve(Yi(undefined, true));
    if (this[Pn].destroyed)
      return new Promise(function(m, y) {
        process.nextTick(function() {
          e2[La] ? y(e2[La]) : m(Yi(undefined, true));
        });
      });
    var o = this[Dn], f;
    if (o)
      f = new Promise(xE(o, this));
    else {
      var p = this[Pn].read();
      if (p !== null)
        return Promise.resolve(Yi(p, false));
      f = new Promise(this[wl]);
    }
    return this[Dn] = f, f;
  } }, $i(Ps, Symbol.asyncIterator, function() {
    return this;
  }), $i(Ps, "return", function() {
    var e2 = this;
    return new Promise(function(r2, o) {
      e2[Pn].destroy(null, function(f) {
        if (f) {
          o(f);
          return;
        }
        r2(Yi(undefined, true));
      });
    });
  }), Ps), SE), AE = function(e2) {
    var r2, o = Object.create(EE, (r2 = {}, $i(r2, Pn, { value: e2, writable: true }), $i(r2, Gi, { value: null, writable: true }), $i(r2, Nn, { value: null, writable: true }), $i(r2, La, { value: null, writable: true }), $i(r2, Cs, { value: e2._readableState.endEmitted, writable: true }), $i(r2, wl, { value: function(p, m) {
      var y = o[Pn].read();
      y ? (o[Dn] = null, o[Gi] = null, o[Nn] = null, p(Yi(y, false))) : (o[Gi] = p, o[Nn] = m);
    }, writable: true }), r2));
    return o[Dn] = null, wE(e2, function(f) {
      if (f && f.code !== "ERR_STREAM_PREMATURE_CLOSE") {
        var p = o[Nn];
        p !== null && (o[Dn] = null, o[Gi] = null, o[Nn] = null, p(f)), o[La] = f;
        return;
      }
      var m = o[Gi];
      m !== null && (o[Dn] = null, o[Gi] = null, o[Nn] = null, m(Yi(undefined, true))), o[Cs] = true;
    }), e2.on("readable", _E.bind(null, o)), o;
  };
  kg.exports = AE;
});
var Dg = T((ck, Ng) => {
  Ng.exports = function() {
    throw new Error("Readable.from is not available in the browser");
  };
});
var yl = T((vk, jg) => {
  jg.exports = Oe;
  var Ef;
  Oe.ReadableState = Fg;
  var pk = ki().EventEmitter, Og = function(e2, r2) {
    return e2.listeners(r2).length;
  }, Da = hl(), Os = Ut().Buffer, RE = global.Uint8Array || function() {
  };
  function BE(t3) {
    return Os.from(t3);
  }
  function qE(t3) {
    return Os.isBuffer(t3) || t3 instanceof RE;
  }
  var Ml = $f(), De;
  Ml && Ml.debuglog ? De = Ml.debuglog("stream") : De = function() {
  };
  var IE = pg(), Bl = dl(), TE = cl(), kE = TE.getHighWaterMark, Fs = kn().codes, LE = Fs.ERR_INVALID_ARG_TYPE, NE = Fs.ERR_STREAM_PUSH_AFTER_EOF, DE = Fs.ERR_METHOD_NOT_IMPLEMENTED, PE = Fs.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, Af, _l, xl;
  Ie()(Oe, Da);
  var Na = Bl.errorOrDestroy, Sl = ["error", "close", "destroy", "pause", "resume"];
  function CE(t3, e2, r2) {
    if (typeof t3.prependListener == "function")
      return t3.prependListener(e2, r2);
    !t3._events || !t3._events[e2] ? t3.on(e2, r2) : Array.isArray(t3._events[e2]) ? t3._events[e2].unshift(r2) : t3._events[e2] = [r2, t3._events[e2]];
  }
  function Fg(t3, e2, r2) {
    Ef = Ef || Ln(), t3 = t3 || {}, typeof r2 != "boolean" && (r2 = e2 instanceof Ef), this.objectMode = !!t3.objectMode, r2 && (this.objectMode = this.objectMode || !!t3.readableObjectMode), this.highWaterMark = kE(this, t3, "readableHighWaterMark", r2), this.buffer = new IE, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t3.emitClose !== false, this.autoDestroy = !!t3.autoDestroy, this.destroyed = false, this.defaultEncoding = t3.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t3.encoding && (Af || (Af = (Qf(), ur(Jf)).StringDecoder), this.decoder = new Af(t3.encoding), this.encoding = t3.encoding);
  }
  function Oe(t3) {
    if (Ef = Ef || Ln(), !(this instanceof Oe))
      return new Oe(t3);
    var e2 = this instanceof Ef;
    this._readableState = new Fg(t3, this, e2), this.readable = true, t3 && (typeof t3.read == "function" && (this._read = t3.read), typeof t3.destroy == "function" && (this._destroy = t3.destroy)), Da.call(this);
  }
  Object.defineProperty(Oe.prototype, "destroyed", { enumerable: false, get: function() {
    return this._readableState === undefined ? false : this._readableState.destroyed;
  }, set: function(e2) {
    !this._readableState || (this._readableState.destroyed = e2);
  } });
  Oe.prototype.destroy = Bl.destroy;
  Oe.prototype._undestroy = Bl.undestroy;
  Oe.prototype._destroy = function(t3, e2) {
    e2(t3);
  };
  Oe.prototype.push = function(t3, e2) {
    var r2 = this._readableState, o;
    return r2.objectMode ? o = true : typeof t3 == "string" && (e2 = e2 || r2.defaultEncoding, e2 !== r2.encoding && (t3 = Os.from(t3, e2), e2 = ""), o = true), Ug(this, t3, e2, false, o);
  };
  Oe.prototype.unshift = function(t3) {
    return Ug(this, t3, null, true, false);
  };
  function Ug(t3, e2, r2, o, f) {
    De("readableAddChunk", e2);
    var p = t3._readableState;
    if (e2 === null)
      p.reading = false, UE(t3, p);
    else {
      var m;
      if (f || (m = OE(p, e2)), m)
        Na(t3, m);
      else if (p.objectMode || e2 && e2.length > 0)
        if (typeof e2 != "string" && !p.objectMode && Object.getPrototypeOf(e2) !== Os.prototype && (e2 = BE(e2)), o)
          p.endEmitted ? Na(t3, new PE) : El(t3, p, e2, true);
        else if (p.ended)
          Na(t3, new NE);
        else {
          if (p.destroyed)
            return false;
          p.reading = false, p.decoder && !r2 ? (e2 = p.decoder.write(e2), p.objectMode || e2.length !== 0 ? El(t3, p, e2, false) : Rl(t3, p)) : El(t3, p, e2, false);
        }
      else
        o || (p.reading = false, Rl(t3, p));
    }
    return !p.ended && (p.length < p.highWaterMark || p.length === 0);
  }
  function El(t3, e2, r2, o) {
    e2.flowing && e2.length === 0 && !e2.sync ? (e2.awaitDrain = 0, t3.emit("data", r2)) : (e2.length += e2.objectMode ? 1 : r2.length, o ? e2.buffer.unshift(r2) : e2.buffer.push(r2), e2.needReadable && Us(t3)), Rl(t3, e2);
  }
  function OE(t3, e2) {
    var r2;
    return !qE(e2) && typeof e2 != "string" && e2 !== undefined && !t3.objectMode && (r2 = new LE("chunk", ["string", "Buffer", "Uint8Array"], e2)), r2;
  }
  Oe.prototype.isPaused = function() {
    return this._readableState.flowing === false;
  };
  Oe.prototype.setEncoding = function(t3) {
    Af || (Af = (Qf(), ur(Jf)).StringDecoder);
    var e2 = new Af(t3);
    this._readableState.decoder = e2, this._readableState.encoding = this._readableState.decoder.encoding;
    for (var r2 = this._readableState.buffer.head, o = "";r2 !== null; )
      o += e2.write(r2.data), r2 = r2.next;
    return this._readableState.buffer.clear(), o !== "" && this._readableState.buffer.push(o), this._readableState.length = o.length, this;
  };
  var Pg = 1073741824;
  function FE(t3) {
    return t3 >= Pg ? t3 = Pg : (t3--, t3 |= t3 >>> 1, t3 |= t3 >>> 2, t3 |= t3 >>> 4, t3 |= t3 >>> 8, t3 |= t3 >>> 16, t3++), t3;
  }
  function Cg(t3, e2) {
    return t3 <= 0 || e2.length === 0 && e2.ended ? 0 : e2.objectMode ? 1 : t3 !== t3 ? e2.flowing && e2.length ? e2.buffer.head.data.length : e2.length : (t3 > e2.highWaterMark && (e2.highWaterMark = FE(t3)), t3 <= e2.length ? t3 : e2.ended ? e2.length : (e2.needReadable = true, 0));
  }
  Oe.prototype.read = function(t3) {
    De("read", t3), t3 = parseInt(t3, 10);
    var e2 = this._readableState, r2 = t3;
    if (t3 !== 0 && (e2.emittedReadable = false), t3 === 0 && e2.needReadable && ((e2.highWaterMark !== 0 ? e2.length >= e2.highWaterMark : e2.length > 0) || e2.ended))
      return De("read: emitReadable", e2.length, e2.ended), e2.length === 0 && e2.ended ? Al(this) : Us(this), null;
    if (t3 = Cg(t3, e2), t3 === 0 && e2.ended)
      return e2.length === 0 && Al(this), null;
    var o = e2.needReadable;
    De("need readable", o), (e2.length === 0 || e2.length - t3 < e2.highWaterMark) && (o = true, De("length less than watermark", o)), e2.ended || e2.reading ? (o = false, De("reading or ended", o)) : o && (De("do read"), e2.reading = true, e2.sync = true, e2.length === 0 && (e2.needReadable = true), this._read(e2.highWaterMark), e2.sync = false, e2.reading || (t3 = Cg(r2, e2)));
    var f;
    return t3 > 0 ? f = Wg(t3, e2) : f = null, f === null ? (e2.needReadable = e2.length <= e2.highWaterMark, t3 = 0) : (e2.length -= t3, e2.awaitDrain = 0), e2.length === 0 && (e2.ended || (e2.needReadable = true), r2 !== t3 && e2.ended && Al(this)), f !== null && this.emit("data", f), f;
  };
  function UE(t3, e2) {
    if (De("onEofChunk"), !e2.ended) {
      if (e2.decoder) {
        var r2 = e2.decoder.end();
        r2 && r2.length && (e2.buffer.push(r2), e2.length += e2.objectMode ? 1 : r2.length);
      }
      e2.ended = true, e2.sync ? Us(t3) : (e2.needReadable = false, e2.emittedReadable || (e2.emittedReadable = true, zg(t3)));
    }
  }
  function Us(t3) {
    var e2 = t3._readableState;
    De("emitReadable", e2.needReadable, e2.emittedReadable), e2.needReadable = false, e2.emittedReadable || (De("emitReadable", e2.flowing), e2.emittedReadable = true, process.nextTick(zg, t3));
  }
  function zg(t3) {
    var e2 = t3._readableState;
    De("emitReadable_", e2.destroyed, e2.length, e2.ended), !e2.destroyed && (e2.length || e2.ended) && (t3.emit("readable"), e2.emittedReadable = false), e2.needReadable = !e2.flowing && !e2.ended && e2.length <= e2.highWaterMark, ql(t3);
  }
  function Rl(t3, e2) {
    e2.readingMore || (e2.readingMore = true, process.nextTick(zE, t3, e2));
  }
  function zE(t3, e2) {
    for (;!e2.reading && !e2.ended && (e2.length < e2.highWaterMark || e2.flowing && e2.length === 0); ) {
      var r2 = e2.length;
      if (De("maybeReadMore read 0"), t3.read(0), r2 === e2.length)
        break;
    }
    e2.readingMore = false;
  }
  Oe.prototype._read = function(t3) {
    Na(this, new DE("_read()"));
  };
  Oe.prototype.pipe = function(t3, e2) {
    var r2 = this, o = this._readableState;
    switch (o.pipesCount) {
      case 0:
        o.pipes = t3;
        break;
      case 1:
        o.pipes = [o.pipes, t3];
        break;
      default:
        o.pipes.push(t3);
        break;
    }
    o.pipesCount += 1, De("pipe count=%d opts=%j", o.pipesCount, e2);
    var f = (!e2 || e2.end !== false) && t3 !== process.stdout && t3 !== process.stderr, p = f ? y : ge;
    o.endEmitted ? process.nextTick(p) : r2.once("end", p), t3.on("unpipe", m);
    function m(_e, N) {
      De("onunpipe"), _e === r2 && N && N.hasUnpiped === false && (N.hasUnpiped = true, S());
    }
    function y() {
      De("onend"), t3.end();
    }
    var M = HE(r2);
    t3.on("drain", M);
    var x = false;
    function S() {
      De("cleanup"), t3.removeListener("close", q), t3.removeListener("finish", L), t3.removeListener("drain", M), t3.removeListener("error", B), t3.removeListener("unpipe", m), r2.removeListener("end", y), r2.removeListener("end", ge), r2.removeListener("data", E), x = true, o.awaitDrain && (!t3._writableState || t3._writableState.needDrain) && M();
    }
    r2.on("data", E);
    function E(_e) {
      De("ondata");
      var N = t3.write(_e);
      De("dest.write", N), N === false && ((o.pipesCount === 1 && o.pipes === t3 || o.pipesCount > 1 && Kg(o.pipes, t3) !== -1) && !x && (De("false write response, pause", o.awaitDrain), o.awaitDrain++), r2.pause());
    }
    function B(_e) {
      De("onerror", _e), ge(), t3.removeListener("error", B), Og(t3, "error") === 0 && Na(t3, _e);
    }
    CE(t3, "error", B);
    function q() {
      t3.removeListener("finish", L), ge();
    }
    t3.once("close", q);
    function L() {
      De("onfinish"), t3.removeListener("close", q), ge();
    }
    t3.once("finish", L);
    function ge() {
      De("unpipe"), r2.unpipe(t3);
    }
    return t3.emit("pipe", r2), o.flowing || (De("pipe resume"), r2.resume()), t3;
  };
  function HE(t3) {
    return function() {
      var r2 = t3._readableState;
      De("pipeOnDrain", r2.awaitDrain), r2.awaitDrain && r2.awaitDrain--, r2.awaitDrain === 0 && Og(t3, "data") && (r2.flowing = true, ql(t3));
    };
  }
  Oe.prototype.unpipe = function(t3) {
    var e2 = this._readableState, r2 = { hasUnpiped: false };
    if (e2.pipesCount === 0)
      return this;
    if (e2.pipesCount === 1)
      return t3 && t3 !== e2.pipes ? this : (t3 || (t3 = e2.pipes), e2.pipes = null, e2.pipesCount = 0, e2.flowing = false, t3 && t3.emit("unpipe", this, r2), this);
    if (!t3) {
      var { pipes: o, pipesCount: f } = e2;
      e2.pipes = null, e2.pipesCount = 0, e2.flowing = false;
      for (var p = 0;p < f; p++)
        o[p].emit("unpipe", this, { hasUnpiped: false });
      return this;
    }
    var m = Kg(e2.pipes, t3);
    return m === -1 ? this : (e2.pipes.splice(m, 1), e2.pipesCount -= 1, e2.pipesCount === 1 && (e2.pipes = e2.pipes[0]), t3.emit("unpipe", this, r2), this);
  };
  Oe.prototype.on = function(t3, e2) {
    var r2 = Da.prototype.on.call(this, t3, e2), o = this._readableState;
    return t3 === "data" ? (o.readableListening = this.listenerCount("readable") > 0, o.flowing !== false && this.resume()) : t3 === "readable" && !o.endEmitted && !o.readableListening && (o.readableListening = o.needReadable = true, o.flowing = false, o.emittedReadable = false, De("on readable", o.length, o.reading), o.length ? Us(this) : o.reading || process.nextTick(WE, this)), r2;
  };
  Oe.prototype.addListener = Oe.prototype.on;
  Oe.prototype.removeListener = function(t3, e2) {
    var r2 = Da.prototype.removeListener.call(this, t3, e2);
    return t3 === "readable" && process.nextTick(Hg, this), r2;
  };
  Oe.prototype.removeAllListeners = function(t3) {
    var e2 = Da.prototype.removeAllListeners.apply(this, arguments);
    return (t3 === "readable" || t3 === undefined) && process.nextTick(Hg, this), e2;
  };
  function Hg(t3) {
    var e2 = t3._readableState;
    e2.readableListening = t3.listenerCount("readable") > 0, e2.resumeScheduled && !e2.paused ? e2.flowing = true : t3.listenerCount("data") > 0 && t3.resume();
  }
  function WE(t3) {
    De("readable nexttick read 0"), t3.read(0);
  }
  Oe.prototype.resume = function() {
    var t3 = this._readableState;
    return t3.flowing || (De("resume"), t3.flowing = !t3.readableListening, KE(this, t3)), t3.paused = false, this;
  };
  function KE(t3, e2) {
    e2.resumeScheduled || (e2.resumeScheduled = true, process.nextTick(jE, t3, e2));
  }
  function jE(t3, e2) {
    De("resume", e2.reading), e2.reading || t3.read(0), e2.resumeScheduled = false, t3.emit("resume"), ql(t3), e2.flowing && !e2.reading && t3.read(0);
  }
  Oe.prototype.pause = function() {
    return De("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (De("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
  };
  function ql(t3) {
    var e2 = t3._readableState;
    for (De("flow", e2.flowing);e2.flowing && t3.read() !== null; )
      ;
  }
  Oe.prototype.wrap = function(t3) {
    var e2 = this, r2 = this._readableState, o = false;
    t3.on("end", function() {
      if (De("wrapped end"), r2.decoder && !r2.ended) {
        var m = r2.decoder.end();
        m && m.length && e2.push(m);
      }
      e2.push(null);
    }), t3.on("data", function(m) {
      if (De("wrapped data"), r2.decoder && (m = r2.decoder.write(m)), !(r2.objectMode && m == null) && !(!r2.objectMode && (!m || !m.length))) {
        var y = e2.push(m);
        y || (o = true, t3.pause());
      }
    });
    for (var f in t3)
      this[f] === undefined && typeof t3[f] == "function" && (this[f] = function(y) {
        return function() {
          return t3[y].apply(t3, arguments);
        };
      }(f));
    for (var p = 0;p < Sl.length; p++)
      t3.on(Sl[p], this.emit.bind(this, Sl[p]));
    return this._read = function(m) {
      De("wrapped _read", m), o && (o = false, t3.resume());
    }, this;
  };
  typeof Symbol == "function" && (Oe.prototype[Symbol.asyncIterator] = function() {
    return _l === undefined && (_l = Lg()), _l(this);
  });
  Object.defineProperty(Oe.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
    return this._readableState.highWaterMark;
  } });
  Object.defineProperty(Oe.prototype, "readableBuffer", { enumerable: false, get: function() {
    return this._readableState && this._readableState.buffer;
  } });
  Object.defineProperty(Oe.prototype, "readableFlowing", { enumerable: false, get: function() {
    return this._readableState.flowing;
  }, set: function(e2) {
    this._readableState && (this._readableState.flowing = e2);
  } });
  Oe._fromList = Wg;
  Object.defineProperty(Oe.prototype, "readableLength", { enumerable: false, get: function() {
    return this._readableState.length;
  } });
  function Wg(t3, e2) {
    if (e2.length === 0)
      return null;
    var r2;
    return e2.objectMode ? r2 = e2.buffer.shift() : !t3 || t3 >= e2.length ? (e2.decoder ? r2 = e2.buffer.join("") : e2.buffer.length === 1 ? r2 = e2.buffer.first() : r2 = e2.buffer.concat(e2.length), e2.buffer.clear()) : r2 = e2.buffer.consume(t3, e2.decoder), r2;
  }
  function Al(t3) {
    var e2 = t3._readableState;
    De("endReadable", e2.endEmitted), e2.endEmitted || (e2.ended = true, process.nextTick(ZE, e2, t3));
  }
  function ZE(t3, e2) {
    if (De("endReadableNT", t3.endEmitted, t3.length), !t3.endEmitted && t3.length === 0 && (t3.endEmitted = true, e2.readable = false, e2.emit("end"), t3.autoDestroy)) {
      var r2 = e2._writableState;
      (!r2 || r2.autoDestroy && r2.finished) && e2.destroy();
    }
  }
  typeof Symbol == "function" && (Oe.from = function(t3, e2) {
    return xl === undefined && (xl = Dg()), xl(Oe, t3, e2);
  });
  function Kg(t3, e2) {
    for (var r2 = 0, o = t3.length;r2 < o; r2++)
      if (t3[r2] === e2)
        return r2;
    return -1;
  }
});
var Il = T((bk, Vg) => {
  Vg.exports = Ei;
  var zs = kn().codes, VE = zs.ERR_METHOD_NOT_IMPLEMENTED, $E = zs.ERR_MULTIPLE_CALLBACK, GE = zs.ERR_TRANSFORM_ALREADY_TRANSFORMING, YE = zs.ERR_TRANSFORM_WITH_LENGTH_0, Hs = Ln();
  Ie()(Ei, Hs);
  function XE(t3, e2) {
    var r2 = this._transformState;
    r2.transforming = false;
    var o = r2.writecb;
    if (o === null)
      return this.emit("error", new $E);
    r2.writechunk = null, r2.writecb = null, e2 != null && this.push(e2), o(t3);
    var f = this._readableState;
    f.reading = false, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
  }
  function Ei(t3) {
    if (!(this instanceof Ei))
      return new Ei(t3);
    Hs.call(this, t3), this._transformState = { afterTransform: XE.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t3 && (typeof t3.transform == "function" && (this._transform = t3.transform), typeof t3.flush == "function" && (this._flush = t3.flush)), this.on("prefinish", JE);
  }
  function JE() {
    var t3 = this;
    typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(e2, r2) {
      Zg(t3, e2, r2);
    }) : Zg(this, null, null);
  }
  Ei.prototype.push = function(t3, e2) {
    return this._transformState.needTransform = false, Hs.prototype.push.call(this, t3, e2);
  };
  Ei.prototype._transform = function(t3, e2, r2) {
    r2(new VE("_transform()"));
  };
  Ei.prototype._write = function(t3, e2, r2) {
    var o = this._transformState;
    if (o.writecb = r2, o.writechunk = t3, o.writeencoding = e2, !o.transforming) {
      var f = this._readableState;
      (o.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
    }
  };
  Ei.prototype._read = function(t3) {
    var e2 = this._transformState;
    e2.writechunk !== null && !e2.transforming ? (e2.transforming = true, this._transform(e2.writechunk, e2.writeencoding, e2.afterTransform)) : e2.needTransform = true;
  };
  Ei.prototype._destroy = function(t3, e2) {
    Hs.prototype._destroy.call(this, t3, function(r2) {
      e2(r2);
    });
  };
  function Zg(t3, e2, r2) {
    if (e2)
      return t3.emit("error", e2);
    if (r2 != null && t3.push(r2), t3._writableState.length)
      throw new YE;
    if (t3._transformState.transforming)
      throw new GE;
    return t3.push(null);
  }
});
var Yg = T((mk, Gg) => {
  Gg.exports = Pa;
  var $g = Il();
  Ie()(Pa, $g);
  function Pa(t3) {
    if (!(this instanceof Pa))
      return new Pa(t3);
    $g.call(this, t3);
  }
  Pa.prototype._transform = function(t3, e2, r2) {
    r2(null, t3);
  };
});
var t22 = T((gk, e2) => {
  var Tl;
  function QE(t3) {
    var e3 = false;
    return function() {
      e3 || (e3 = true, t3.apply(undefined, arguments));
    };
  }
  var Qg = kn().codes, eA = Qg.ERR_MISSING_ARGS, tA = Qg.ERR_STREAM_DESTROYED;
  function Xg(t3) {
    if (t3)
      throw t3;
  }
  function rA(t3) {
    return t3.setHeader && typeof t3.abort == "function";
  }
  function iA(t3, e3, r2, o) {
    o = QE(o);
    var f = false;
    t3.on("close", function() {
      f = true;
    }), Tl === undefined && (Tl = Ds()), Tl(t3, { readable: e3, writable: r2 }, function(m) {
      if (m)
        return o(m);
      f = true, o();
    });
    var p = false;
    return function(m) {
      if (!f && !p) {
        if (p = true, rA(t3))
          return t3.abort();
        if (typeof t3.destroy == "function")
          return t3.destroy();
        o(m || new tA("pipe"));
      }
    };
  }
  function Jg(t3) {
    t3();
  }
  function nA(t3, e3) {
    return t3.pipe(e3);
  }
  function fA(t3) {
    return !t3.length || typeof t3[t3.length - 1] != "function" ? Xg : t3.pop();
  }
  function aA() {
    for (var t3 = arguments.length, e3 = new Array(t3), r2 = 0;r2 < t3; r2++)
      e3[r2] = arguments[r2];
    var o = fA(e3);
    if (Array.isArray(e3[0]) && (e3 = e3[0]), e3.length < 2)
      throw new eA("streams");
    var f, p = e3.map(function(m, y) {
      var M = y < e3.length - 1, x = y > 0;
      return iA(m, M, x, function(S) {
        f || (f = S), S && p.forEach(Jg), !M && (p.forEach(Jg), o(f));
      });
    });
    return e3.reduce(nA);
  }
  e2.exports = aA;
});
var i2 = T((Mr, r2) => {
  Mr = r2.exports = yl();
  Mr.Stream = Mr;
  Mr.Readable = Mr;
  Mr.Writable = bl();
  Mr.Duplex = Ln();
  Mr.Transform = Il();
  Mr.PassThrough = Yg();
  Mr.finished = Ds();
  Mr.pipeline = t22();
});
var Ws = T((n2, kl) => {
  (function(t3, e2) {
    function r2(h, s) {
      if (!h)
        throw new Error(s || "Assertion failed");
    }
    function o(h, s) {
      h.super_ = s;
      var u = function() {
      };
      u.prototype = s.prototype, h.prototype = new u, h.prototype.constructor = h;
    }
    function f(h, s, u) {
      if (f.isBN(h))
        return h;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, h !== null && ((s === "le" || s === "be") && (u = s, s = 10), this._init(h || 0, s || 10, u || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(s) {
      return s instanceof f ? true : s !== null && typeof s == "object" && s.constructor.wordSize === f.wordSize && Array.isArray(s.words);
    }, f.max = function(s, u) {
      return s.cmp(u) > 0 ? s : u;
    }, f.min = function(s, u) {
      return s.cmp(u) < 0 ? s : u;
    }, f.prototype._init = function(s, u, c) {
      if (typeof s == "number")
        return this._initNumber(s, u, c);
      if (typeof s == "object")
        return this._initArray(s, u, c);
      u === "hex" && (u = 16), r2(u === (u | 0) && u >= 2 && u <= 36), s = s.toString().replace(/\s+/g, "");
      var b = 0;
      s[0] === "-" && (b++, this.negative = 1), b < s.length && (u === 16 ? this._parseHex(s, b, c) : (this._parseBase(s, u, b), c === "le" && this._initArray(this.toArray(), u, c)));
    }, f.prototype._initNumber = function(s, u, c) {
      s < 0 && (this.negative = 1, s = -s), s < 67108864 ? (this.words = [s & 67108863], this.length = 1) : s < 4503599627370496 ? (this.words = [s & 67108863, s / 67108864 & 67108863], this.length = 2) : (r2(s < 9007199254740992), this.words = [s & 67108863, s / 67108864 & 67108863, 1], this.length = 3), c === "le" && this._initArray(this.toArray(), u, c);
    }, f.prototype._initArray = function(s, u, c) {
      if (r2(typeof s.length == "number"), s.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(s.length / 3), this.words = new Array(this.length);
      for (var b = 0;b < this.length; b++)
        this.words[b] = 0;
      var l, n, d = 0;
      if (c === "be")
        for (b = s.length - 1, l = 0;b >= 0; b -= 3)
          n = s[b] | s[b - 1] << 8 | s[b - 2] << 16, this.words[l] |= n << d & 67108863, this.words[l + 1] = n >>> 26 - d & 67108863, d += 24, d >= 26 && (d -= 26, l++);
      else if (c === "le")
        for (b = 0, l = 0;b < s.length; b += 3)
          n = s[b] | s[b + 1] << 8 | s[b + 2] << 16, this.words[l] |= n << d & 67108863, this.words[l + 1] = n >>> 26 - d & 67108863, d += 24, d >= 26 && (d -= 26, l++);
      return this._strip();
    };
    function m(h, s) {
      var u = h.charCodeAt(s);
      if (u >= 48 && u <= 57)
        return u - 48;
      if (u >= 65 && u <= 70)
        return u - 55;
      if (u >= 97 && u <= 102)
        return u - 87;
      r2(false, "Invalid character in " + h);
    }
    function y(h, s, u) {
      var c = m(h, u);
      return u - 1 >= s && (c |= m(h, u - 1) << 4), c;
    }
    f.prototype._parseHex = function(s, u, c) {
      this.length = Math.ceil((s.length - u) / 6), this.words = new Array(this.length);
      for (var b = 0;b < this.length; b++)
        this.words[b] = 0;
      var l = 0, n = 0, d;
      if (c === "be")
        for (b = s.length - 1;b >= u; b -= 2)
          d = y(s, u, b) << l, this.words[n] |= d & 67108863, l >= 18 ? (l -= 18, n += 1, this.words[n] |= d >>> 26) : l += 8;
      else {
        var w = s.length - u;
        for (b = w % 2 === 0 ? u + 1 : u;b < s.length; b += 2)
          d = y(s, u, b) << l, this.words[n] |= d & 67108863, l >= 18 ? (l -= 18, n += 1, this.words[n] |= d >>> 26) : l += 8;
      }
      this._strip();
    };
    function M(h, s, u, c) {
      for (var b = 0, l = 0, n = Math.min(h.length, u), d = s;d < n; d++) {
        var w = h.charCodeAt(d) - 48;
        b *= c, w >= 49 ? l = w - 49 + 10 : w >= 17 ? l = w - 17 + 10 : l = w, r2(w >= 0 && l < c, "Invalid character"), b += l;
      }
      return b;
    }
    f.prototype._parseBase = function(s, u, c) {
      this.words = [0], this.length = 1;
      for (var b = 0, l = 1;l <= 67108863; l *= u)
        b++;
      b--, l = l / u | 0;
      for (var n = s.length - c, d = n % b, w = Math.min(n, n - d) + c, g = 0, _ = c;_ < w; _ += b)
        g = M(s, _, _ + b, u), this.imuln(l), this.words[0] + g < 67108864 ? this.words[0] += g : this._iaddn(g);
      if (d !== 0) {
        var A = 1;
        for (g = M(s, _, s.length, u), _ = 0;_ < d; _++)
          A *= u;
        this.imuln(A), this.words[0] + g < 67108864 ? this.words[0] += g : this._iaddn(g);
      }
      this._strip();
    }, f.prototype.copy = function(s) {
      s.words = new Array(this.length);
      for (var u = 0;u < this.length; u++)
        s.words[u] = this.words[u];
      s.length = this.length, s.negative = this.negative, s.red = this.red;
    };
    function x(h, s) {
      h.words = s.words, h.length = s.length, h.negative = s.negative, h.red = s.red;
    }
    if (f.prototype._move = function(s) {
      x(s, this);
    }, f.prototype.clone = function() {
      var s = new f(null);
      return this.copy(s), s;
    }, f.prototype._expand = function(s) {
      for (;this.length < s; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype._strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function")
      try {
        f.prototype[Symbol.for("nodejs.util.inspect.custom")] = S;
      } catch {
        f.prototype.inspect = S;
      }
    else
      f.prototype.inspect = S;
    function S() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var E = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], B = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], q = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(s, u) {
      s = s || 10, u = u | 0 || 1;
      var c;
      if (s === 16 || s === "hex") {
        c = "";
        for (var b = 0, l = 0, n = 0;n < this.length; n++) {
          var d = this.words[n], w = ((d << b | l) & 16777215).toString(16);
          l = d >>> 24 - b & 16777215, b += 2, b >= 26 && (b -= 26, n--), l !== 0 || n !== this.length - 1 ? c = E[6 - w.length] + w + c : c = w + c;
        }
        for (l !== 0 && (c = l.toString(16) + c);c.length % u !== 0; )
          c = "0" + c;
        return this.negative !== 0 && (c = "-" + c), c;
      }
      if (s === (s | 0) && s >= 2 && s <= 36) {
        var g = B[s], _ = q[s];
        c = "";
        var A = this.clone();
        for (A.negative = 0;!A.isZero(); ) {
          var R = A.modrn(_).toString(s);
          A = A.idivn(_), A.isZero() ? c = R + c : c = E[g - R.length] + R + c;
        }
        for (this.isZero() && (c = "0" + c);c.length % u !== 0; )
          c = "0" + c;
        return this.negative !== 0 && (c = "-" + c), c;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var s = this.words[0];
      return this.length === 2 ? s += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? s += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -s : s;
    }, f.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, p && (f.prototype.toBuffer = function(s, u) {
      return this.toArrayLike(p, s, u);
    }), f.prototype.toArray = function(s, u) {
      return this.toArrayLike(Array, s, u);
    };
    var L = function(s, u) {
      return s.allocUnsafe ? s.allocUnsafe(u) : new s(u);
    };
    f.prototype.toArrayLike = function(s, u, c) {
      this._strip();
      var b = this.byteLength(), l = c || Math.max(1, b);
      r2(b <= l, "byte array longer than desired length"), r2(l > 0, "Requested array length <= 0");
      var n = L(s, l), d = u === "le" ? "LE" : "BE";
      return this["_toArrayLike" + d](n, b), n;
    }, f.prototype._toArrayLikeLE = function(s, u) {
      for (var c = 0, b = 0, l = 0, n = 0;l < this.length; l++) {
        var d = this.words[l] << n | b;
        s[c++] = d & 255, c < s.length && (s[c++] = d >> 8 & 255), c < s.length && (s[c++] = d >> 16 & 255), n === 6 ? (c < s.length && (s[c++] = d >> 24 & 255), b = 0, n = 0) : (b = d >>> 24, n += 2);
      }
      if (c < s.length)
        for (s[c++] = b;c < s.length; )
          s[c++] = 0;
    }, f.prototype._toArrayLikeBE = function(s, u) {
      for (var c = s.length - 1, b = 0, l = 0, n = 0;l < this.length; l++) {
        var d = this.words[l] << n | b;
        s[c--] = d & 255, c >= 0 && (s[c--] = d >> 8 & 255), c >= 0 && (s[c--] = d >> 16 & 255), n === 6 ? (c >= 0 && (s[c--] = d >> 24 & 255), b = 0, n = 0) : (b = d >>> 24, n += 2);
      }
      if (c >= 0)
        for (s[c--] = b;c >= 0; )
          s[c--] = 0;
    }, Math.clz32 ? f.prototype._countBits = function(s) {
      return 32 - Math.clz32(s);
    } : f.prototype._countBits = function(s) {
      var u = s, c = 0;
      return u >= 4096 && (c += 13, u >>>= 13), u >= 64 && (c += 7, u >>>= 7), u >= 8 && (c += 4, u >>>= 4), u >= 2 && (c += 2, u >>>= 2), c + u;
    }, f.prototype._zeroBits = function(s) {
      if (s === 0)
        return 26;
      var u = s, c = 0;
      return (u & 8191) === 0 && (c += 13, u >>>= 13), (u & 127) === 0 && (c += 7, u >>>= 7), (u & 15) === 0 && (c += 4, u >>>= 4), (u & 3) === 0 && (c += 2, u >>>= 2), (u & 1) === 0 && c++, c;
    }, f.prototype.bitLength = function() {
      var s = this.words[this.length - 1], u = this._countBits(s);
      return (this.length - 1) * 26 + u;
    };
    function ge(h) {
      for (var s = new Array(h.bitLength()), u = 0;u < s.length; u++) {
        var c = u / 26 | 0, b = u % 26;
        s[u] = h.words[c] >>> b & 1;
      }
      return s;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var s = 0, u = 0;u < this.length; u++) {
        var c = this._zeroBits(this.words[u]);
        if (s += c, c !== 26)
          break;
      }
      return s;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(s) {
      return this.negative !== 0 ? this.abs().inotn(s).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(s) {
      return this.testn(s - 1) ? this.notn(s).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(s) {
      for (;this.length < s.length; )
        this.words[this.length++] = 0;
      for (var u = 0;u < s.length; u++)
        this.words[u] = this.words[u] | s.words[u];
      return this._strip();
    }, f.prototype.ior = function(s) {
      return r2((this.negative | s.negative) === 0), this.iuor(s);
    }, f.prototype.or = function(s) {
      return this.length > s.length ? this.clone().ior(s) : s.clone().ior(this);
    }, f.prototype.uor = function(s) {
      return this.length > s.length ? this.clone().iuor(s) : s.clone().iuor(this);
    }, f.prototype.iuand = function(s) {
      var u;
      this.length > s.length ? u = s : u = this;
      for (var c = 0;c < u.length; c++)
        this.words[c] = this.words[c] & s.words[c];
      return this.length = u.length, this._strip();
    }, f.prototype.iand = function(s) {
      return r2((this.negative | s.negative) === 0), this.iuand(s);
    }, f.prototype.and = function(s) {
      return this.length > s.length ? this.clone().iand(s) : s.clone().iand(this);
    }, f.prototype.uand = function(s) {
      return this.length > s.length ? this.clone().iuand(s) : s.clone().iuand(this);
    }, f.prototype.iuxor = function(s) {
      var u, c;
      this.length > s.length ? (u = this, c = s) : (u = s, c = this);
      for (var b = 0;b < c.length; b++)
        this.words[b] = u.words[b] ^ c.words[b];
      if (this !== u)
        for (;b < u.length; b++)
          this.words[b] = u.words[b];
      return this.length = u.length, this._strip();
    }, f.prototype.ixor = function(s) {
      return r2((this.negative | s.negative) === 0), this.iuxor(s);
    }, f.prototype.xor = function(s) {
      return this.length > s.length ? this.clone().ixor(s) : s.clone().ixor(this);
    }, f.prototype.uxor = function(s) {
      return this.length > s.length ? this.clone().iuxor(s) : s.clone().iuxor(this);
    }, f.prototype.inotn = function(s) {
      r2(typeof s == "number" && s >= 0);
      var u = Math.ceil(s / 26) | 0, c = s % 26;
      this._expand(u), c > 0 && u--;
      for (var b = 0;b < u; b++)
        this.words[b] = ~this.words[b] & 67108863;
      return c > 0 && (this.words[b] = ~this.words[b] & 67108863 >> 26 - c), this._strip();
    }, f.prototype.notn = function(s) {
      return this.clone().inotn(s);
    }, f.prototype.setn = function(s, u) {
      r2(typeof s == "number" && s >= 0);
      var c = s / 26 | 0, b = s % 26;
      return this._expand(c + 1), u ? this.words[c] = this.words[c] | 1 << b : this.words[c] = this.words[c] & ~(1 << b), this._strip();
    }, f.prototype.iadd = function(s) {
      var u;
      if (this.negative !== 0 && s.negative === 0)
        return this.negative = 0, u = this.isub(s), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && s.negative !== 0)
        return s.negative = 0, u = this.isub(s), s.negative = 1, u._normSign();
      var c, b;
      this.length > s.length ? (c = this, b = s) : (c = s, b = this);
      for (var l = 0, n = 0;n < b.length; n++)
        u = (c.words[n] | 0) + (b.words[n] | 0) + l, this.words[n] = u & 67108863, l = u >>> 26;
      for (;l !== 0 && n < c.length; n++)
        u = (c.words[n] | 0) + l, this.words[n] = u & 67108863, l = u >>> 26;
      if (this.length = c.length, l !== 0)
        this.words[this.length] = l, this.length++;
      else if (c !== this)
        for (;n < c.length; n++)
          this.words[n] = c.words[n];
      return this;
    }, f.prototype.add = function(s) {
      var u;
      return s.negative !== 0 && this.negative === 0 ? (s.negative = 0, u = this.sub(s), s.negative ^= 1, u) : s.negative === 0 && this.negative !== 0 ? (this.negative = 0, u = s.sub(this), this.negative = 1, u) : this.length > s.length ? this.clone().iadd(s) : s.clone().iadd(this);
    }, f.prototype.isub = function(s) {
      if (s.negative !== 0) {
        s.negative = 0;
        var u = this.iadd(s);
        return s.negative = 1, u._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(s), this.negative = 1, this._normSign();
      var c = this.cmp(s);
      if (c === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var b, l;
      c > 0 ? (b = this, l = s) : (b = s, l = this);
      for (var n = 0, d = 0;d < l.length; d++)
        u = (b.words[d] | 0) - (l.words[d] | 0) + n, n = u >> 26, this.words[d] = u & 67108863;
      for (;n !== 0 && d < b.length; d++)
        u = (b.words[d] | 0) + n, n = u >> 26, this.words[d] = u & 67108863;
      if (n === 0 && d < b.length && b !== this)
        for (;d < b.length; d++)
          this.words[d] = b.words[d];
      return this.length = Math.max(this.length, d), b !== this && (this.negative = 1), this._strip();
    }, f.prototype.sub = function(s) {
      return this.clone().isub(s);
    };
    function _e(h, s, u) {
      u.negative = s.negative ^ h.negative;
      var c = h.length + s.length | 0;
      u.length = c, c = c - 1 | 0;
      var b = h.words[0] | 0, l = s.words[0] | 0, n = b * l, d = n & 67108863, w = n / 67108864 | 0;
      u.words[0] = d;
      for (var g = 1;g < c; g++) {
        for (var _ = w >>> 26, A = w & 67108863, R = Math.min(g, s.length - 1), I = Math.max(0, g - h.length + 1);I <= R; I++) {
          var Me = g - I | 0;
          b = h.words[Me] | 0, l = s.words[I] | 0, n = b * l + A, _ += n / 67108864 | 0, A = n & 67108863;
        }
        u.words[g] = A | 0, w = _ | 0;
      }
      return w !== 0 ? u.words[g] = w | 0 : u.length--, u._strip();
    }
    var N = function(s, u, c) {
      var b = s.words, l = u.words, n = c.words, d = 0, w, g, _, A = b[0] | 0, R = A & 8191, I = A >>> 13, Me = b[1] | 0, k = Me & 8191, D = Me >>> 13, nt = b[2] | 0, C = nt & 8191, O = nt >>> 13, vt = b[3] | 0, F = vt & 8191, U = vt >>> 13, bt = b[4] | 0, z = bt & 8191, H = bt >>> 13, mt = b[5] | 0, W = mt & 8191, K = mt >>> 13, gt = b[6] | 0, j = gt & 8191, Z = gt >>> 13, yt = b[7] | 0, V = yt & 8191, $ = yt >>> 13, wt = b[8] | 0, G = wt & 8191, Y = wt >>> 13, Mt = b[9] | 0, X = Mt & 8191, J = Mt >>> 13, _t = l[0] | 0, Q = _t & 8191, ee = _t >>> 13, xt = l[1] | 0, te = xt & 8191, re = xt >>> 13, St = l[2] | 0, ie = St & 8191, ne = St >>> 13, Et = l[3] | 0, fe = Et & 8191, ae = Et >>> 13, At = l[4] | 0, oe = At & 8191, se = At >>> 13, Rt = l[5] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = l[6] | 0, le = Bt & 8191, de = Bt >>> 13, qt = l[7] | 0, ce = qt & 8191, pe = qt >>> 13, It = l[8] | 0, ve = It & 8191, be = It >>> 13, ft = l[9] | 0, Be = ft & 8191, qe = ft >>> 13;
      c.negative = s.negative ^ u.negative, c.length = 19, w = Math.imul(R, Q), g = Math.imul(R, ee), g = g + Math.imul(I, Q) | 0, _ = Math.imul(I, ee);
      var ze = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, w = Math.imul(k, Q), g = Math.imul(k, ee), g = g + Math.imul(D, Q) | 0, _ = Math.imul(D, ee), w = w + Math.imul(R, te) | 0, g = g + Math.imul(R, re) | 0, g = g + Math.imul(I, te) | 0, _ = _ + Math.imul(I, re) | 0;
      var He = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, w = Math.imul(C, Q), g = Math.imul(C, ee), g = g + Math.imul(O, Q) | 0, _ = Math.imul(O, ee), w = w + Math.imul(k, te) | 0, g = g + Math.imul(k, re) | 0, g = g + Math.imul(D, te) | 0, _ = _ + Math.imul(D, re) | 0, w = w + Math.imul(R, ie) | 0, g = g + Math.imul(R, ne) | 0, g = g + Math.imul(I, ie) | 0, _ = _ + Math.imul(I, ne) | 0;
      var We = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, w = Math.imul(F, Q), g = Math.imul(F, ee), g = g + Math.imul(U, Q) | 0, _ = Math.imul(U, ee), w = w + Math.imul(C, te) | 0, g = g + Math.imul(C, re) | 0, g = g + Math.imul(O, te) | 0, _ = _ + Math.imul(O, re) | 0, w = w + Math.imul(k, ie) | 0, g = g + Math.imul(k, ne) | 0, g = g + Math.imul(D, ie) | 0, _ = _ + Math.imul(D, ne) | 0, w = w + Math.imul(R, fe) | 0, g = g + Math.imul(R, ae) | 0, g = g + Math.imul(I, fe) | 0, _ = _ + Math.imul(I, ae) | 0;
      var Ke = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, w = Math.imul(z, Q), g = Math.imul(z, ee), g = g + Math.imul(H, Q) | 0, _ = Math.imul(H, ee), w = w + Math.imul(F, te) | 0, g = g + Math.imul(F, re) | 0, g = g + Math.imul(U, te) | 0, _ = _ + Math.imul(U, re) | 0, w = w + Math.imul(C, ie) | 0, g = g + Math.imul(C, ne) | 0, g = g + Math.imul(O, ie) | 0, _ = _ + Math.imul(O, ne) | 0, w = w + Math.imul(k, fe) | 0, g = g + Math.imul(k, ae) | 0, g = g + Math.imul(D, fe) | 0, _ = _ + Math.imul(D, ae) | 0, w = w + Math.imul(R, oe) | 0, g = g + Math.imul(R, se) | 0, g = g + Math.imul(I, oe) | 0, _ = _ + Math.imul(I, se) | 0;
      var je = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, w = Math.imul(W, Q), g = Math.imul(W, ee), g = g + Math.imul(K, Q) | 0, _ = Math.imul(K, ee), w = w + Math.imul(z, te) | 0, g = g + Math.imul(z, re) | 0, g = g + Math.imul(H, te) | 0, _ = _ + Math.imul(H, re) | 0, w = w + Math.imul(F, ie) | 0, g = g + Math.imul(F, ne) | 0, g = g + Math.imul(U, ie) | 0, _ = _ + Math.imul(U, ne) | 0, w = w + Math.imul(C, fe) | 0, g = g + Math.imul(C, ae) | 0, g = g + Math.imul(O, fe) | 0, _ = _ + Math.imul(O, ae) | 0, w = w + Math.imul(k, oe) | 0, g = g + Math.imul(k, se) | 0, g = g + Math.imul(D, oe) | 0, _ = _ + Math.imul(D, se) | 0, w = w + Math.imul(R, he) | 0, g = g + Math.imul(R, ue) | 0, g = g + Math.imul(I, he) | 0, _ = _ + Math.imul(I, ue) | 0;
      var Ze = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, w = Math.imul(j, Q), g = Math.imul(j, ee), g = g + Math.imul(Z, Q) | 0, _ = Math.imul(Z, ee), w = w + Math.imul(W, te) | 0, g = g + Math.imul(W, re) | 0, g = g + Math.imul(K, te) | 0, _ = _ + Math.imul(K, re) | 0, w = w + Math.imul(z, ie) | 0, g = g + Math.imul(z, ne) | 0, g = g + Math.imul(H, ie) | 0, _ = _ + Math.imul(H, ne) | 0, w = w + Math.imul(F, fe) | 0, g = g + Math.imul(F, ae) | 0, g = g + Math.imul(U, fe) | 0, _ = _ + Math.imul(U, ae) | 0, w = w + Math.imul(C, oe) | 0, g = g + Math.imul(C, se) | 0, g = g + Math.imul(O, oe) | 0, _ = _ + Math.imul(O, se) | 0, w = w + Math.imul(k, he) | 0, g = g + Math.imul(k, ue) | 0, g = g + Math.imul(D, he) | 0, _ = _ + Math.imul(D, ue) | 0, w = w + Math.imul(R, le) | 0, g = g + Math.imul(R, de) | 0, g = g + Math.imul(I, le) | 0, _ = _ + Math.imul(I, de) | 0;
      var Ve = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, w = Math.imul(V, Q), g = Math.imul(V, ee), g = g + Math.imul($, Q) | 0, _ = Math.imul($, ee), w = w + Math.imul(j, te) | 0, g = g + Math.imul(j, re) | 0, g = g + Math.imul(Z, te) | 0, _ = _ + Math.imul(Z, re) | 0, w = w + Math.imul(W, ie) | 0, g = g + Math.imul(W, ne) | 0, g = g + Math.imul(K, ie) | 0, _ = _ + Math.imul(K, ne) | 0, w = w + Math.imul(z, fe) | 0, g = g + Math.imul(z, ae) | 0, g = g + Math.imul(H, fe) | 0, _ = _ + Math.imul(H, ae) | 0, w = w + Math.imul(F, oe) | 0, g = g + Math.imul(F, se) | 0, g = g + Math.imul(U, oe) | 0, _ = _ + Math.imul(U, se) | 0, w = w + Math.imul(C, he) | 0, g = g + Math.imul(C, ue) | 0, g = g + Math.imul(O, he) | 0, _ = _ + Math.imul(O, ue) | 0, w = w + Math.imul(k, le) | 0, g = g + Math.imul(k, de) | 0, g = g + Math.imul(D, le) | 0, _ = _ + Math.imul(D, de) | 0, w = w + Math.imul(R, ce) | 0, g = g + Math.imul(R, pe) | 0, g = g + Math.imul(I, ce) | 0, _ = _ + Math.imul(I, pe) | 0;
      var $e = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, w = Math.imul(G, Q), g = Math.imul(G, ee), g = g + Math.imul(Y, Q) | 0, _ = Math.imul(Y, ee), w = w + Math.imul(V, te) | 0, g = g + Math.imul(V, re) | 0, g = g + Math.imul($, te) | 0, _ = _ + Math.imul($, re) | 0, w = w + Math.imul(j, ie) | 0, g = g + Math.imul(j, ne) | 0, g = g + Math.imul(Z, ie) | 0, _ = _ + Math.imul(Z, ne) | 0, w = w + Math.imul(W, fe) | 0, g = g + Math.imul(W, ae) | 0, g = g + Math.imul(K, fe) | 0, _ = _ + Math.imul(K, ae) | 0, w = w + Math.imul(z, oe) | 0, g = g + Math.imul(z, se) | 0, g = g + Math.imul(H, oe) | 0, _ = _ + Math.imul(H, se) | 0, w = w + Math.imul(F, he) | 0, g = g + Math.imul(F, ue) | 0, g = g + Math.imul(U, he) | 0, _ = _ + Math.imul(U, ue) | 0, w = w + Math.imul(C, le) | 0, g = g + Math.imul(C, de) | 0, g = g + Math.imul(O, le) | 0, _ = _ + Math.imul(O, de) | 0, w = w + Math.imul(k, ce) | 0, g = g + Math.imul(k, pe) | 0, g = g + Math.imul(D, ce) | 0, _ = _ + Math.imul(D, pe) | 0, w = w + Math.imul(R, ve) | 0, g = g + Math.imul(R, be) | 0, g = g + Math.imul(I, ve) | 0, _ = _ + Math.imul(I, be) | 0;
      var Ge = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, w = Math.imul(X, Q), g = Math.imul(X, ee), g = g + Math.imul(J, Q) | 0, _ = Math.imul(J, ee), w = w + Math.imul(G, te) | 0, g = g + Math.imul(G, re) | 0, g = g + Math.imul(Y, te) | 0, _ = _ + Math.imul(Y, re) | 0, w = w + Math.imul(V, ie) | 0, g = g + Math.imul(V, ne) | 0, g = g + Math.imul($, ie) | 0, _ = _ + Math.imul($, ne) | 0, w = w + Math.imul(j, fe) | 0, g = g + Math.imul(j, ae) | 0, g = g + Math.imul(Z, fe) | 0, _ = _ + Math.imul(Z, ae) | 0, w = w + Math.imul(W, oe) | 0, g = g + Math.imul(W, se) | 0, g = g + Math.imul(K, oe) | 0, _ = _ + Math.imul(K, se) | 0, w = w + Math.imul(z, he) | 0, g = g + Math.imul(z, ue) | 0, g = g + Math.imul(H, he) | 0, _ = _ + Math.imul(H, ue) | 0, w = w + Math.imul(F, le) | 0, g = g + Math.imul(F, de) | 0, g = g + Math.imul(U, le) | 0, _ = _ + Math.imul(U, de) | 0, w = w + Math.imul(C, ce) | 0, g = g + Math.imul(C, pe) | 0, g = g + Math.imul(O, ce) | 0, _ = _ + Math.imul(O, pe) | 0, w = w + Math.imul(k, ve) | 0, g = g + Math.imul(k, be) | 0, g = g + Math.imul(D, ve) | 0, _ = _ + Math.imul(D, be) | 0, w = w + Math.imul(R, Be) | 0, g = g + Math.imul(R, qe) | 0, g = g + Math.imul(I, Be) | 0, _ = _ + Math.imul(I, qe) | 0;
      var Ye = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, w = Math.imul(X, te), g = Math.imul(X, re), g = g + Math.imul(J, te) | 0, _ = Math.imul(J, re), w = w + Math.imul(G, ie) | 0, g = g + Math.imul(G, ne) | 0, g = g + Math.imul(Y, ie) | 0, _ = _ + Math.imul(Y, ne) | 0, w = w + Math.imul(V, fe) | 0, g = g + Math.imul(V, ae) | 0, g = g + Math.imul($, fe) | 0, _ = _ + Math.imul($, ae) | 0, w = w + Math.imul(j, oe) | 0, g = g + Math.imul(j, se) | 0, g = g + Math.imul(Z, oe) | 0, _ = _ + Math.imul(Z, se) | 0, w = w + Math.imul(W, he) | 0, g = g + Math.imul(W, ue) | 0, g = g + Math.imul(K, he) | 0, _ = _ + Math.imul(K, ue) | 0, w = w + Math.imul(z, le) | 0, g = g + Math.imul(z, de) | 0, g = g + Math.imul(H, le) | 0, _ = _ + Math.imul(H, de) | 0, w = w + Math.imul(F, ce) | 0, g = g + Math.imul(F, pe) | 0, g = g + Math.imul(U, ce) | 0, _ = _ + Math.imul(U, pe) | 0, w = w + Math.imul(C, ve) | 0, g = g + Math.imul(C, be) | 0, g = g + Math.imul(O, ve) | 0, _ = _ + Math.imul(O, be) | 0, w = w + Math.imul(k, Be) | 0, g = g + Math.imul(k, qe) | 0, g = g + Math.imul(D, Be) | 0, _ = _ + Math.imul(D, qe) | 0;
      var Xe = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, w = Math.imul(X, ie), g = Math.imul(X, ne), g = g + Math.imul(J, ie) | 0, _ = Math.imul(J, ne), w = w + Math.imul(G, fe) | 0, g = g + Math.imul(G, ae) | 0, g = g + Math.imul(Y, fe) | 0, _ = _ + Math.imul(Y, ae) | 0, w = w + Math.imul(V, oe) | 0, g = g + Math.imul(V, se) | 0, g = g + Math.imul($, oe) | 0, _ = _ + Math.imul($, se) | 0, w = w + Math.imul(j, he) | 0, g = g + Math.imul(j, ue) | 0, g = g + Math.imul(Z, he) | 0, _ = _ + Math.imul(Z, ue) | 0, w = w + Math.imul(W, le) | 0, g = g + Math.imul(W, de) | 0, g = g + Math.imul(K, le) | 0, _ = _ + Math.imul(K, de) | 0, w = w + Math.imul(z, ce) | 0, g = g + Math.imul(z, pe) | 0, g = g + Math.imul(H, ce) | 0, _ = _ + Math.imul(H, pe) | 0, w = w + Math.imul(F, ve) | 0, g = g + Math.imul(F, be) | 0, g = g + Math.imul(U, ve) | 0, _ = _ + Math.imul(U, be) | 0, w = w + Math.imul(C, Be) | 0, g = g + Math.imul(C, qe) | 0, g = g + Math.imul(O, Be) | 0, _ = _ + Math.imul(O, qe) | 0;
      var Je = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, w = Math.imul(X, fe), g = Math.imul(X, ae), g = g + Math.imul(J, fe) | 0, _ = Math.imul(J, ae), w = w + Math.imul(G, oe) | 0, g = g + Math.imul(G, se) | 0, g = g + Math.imul(Y, oe) | 0, _ = _ + Math.imul(Y, se) | 0, w = w + Math.imul(V, he) | 0, g = g + Math.imul(V, ue) | 0, g = g + Math.imul($, he) | 0, _ = _ + Math.imul($, ue) | 0, w = w + Math.imul(j, le) | 0, g = g + Math.imul(j, de) | 0, g = g + Math.imul(Z, le) | 0, _ = _ + Math.imul(Z, de) | 0, w = w + Math.imul(W, ce) | 0, g = g + Math.imul(W, pe) | 0, g = g + Math.imul(K, ce) | 0, _ = _ + Math.imul(K, pe) | 0, w = w + Math.imul(z, ve) | 0, g = g + Math.imul(z, be) | 0, g = g + Math.imul(H, ve) | 0, _ = _ + Math.imul(H, be) | 0, w = w + Math.imul(F, Be) | 0, g = g + Math.imul(F, qe) | 0, g = g + Math.imul(U, Be) | 0, _ = _ + Math.imul(U, qe) | 0;
      var Qe = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, w = Math.imul(X, oe), g = Math.imul(X, se), g = g + Math.imul(J, oe) | 0, _ = Math.imul(J, se), w = w + Math.imul(G, he) | 0, g = g + Math.imul(G, ue) | 0, g = g + Math.imul(Y, he) | 0, _ = _ + Math.imul(Y, ue) | 0, w = w + Math.imul(V, le) | 0, g = g + Math.imul(V, de) | 0, g = g + Math.imul($, le) | 0, _ = _ + Math.imul($, de) | 0, w = w + Math.imul(j, ce) | 0, g = g + Math.imul(j, pe) | 0, g = g + Math.imul(Z, ce) | 0, _ = _ + Math.imul(Z, pe) | 0, w = w + Math.imul(W, ve) | 0, g = g + Math.imul(W, be) | 0, g = g + Math.imul(K, ve) | 0, _ = _ + Math.imul(K, be) | 0, w = w + Math.imul(z, Be) | 0, g = g + Math.imul(z, qe) | 0, g = g + Math.imul(H, Be) | 0, _ = _ + Math.imul(H, qe) | 0;
      var et = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, w = Math.imul(X, he), g = Math.imul(X, ue), g = g + Math.imul(J, he) | 0, _ = Math.imul(J, ue), w = w + Math.imul(G, le) | 0, g = g + Math.imul(G, de) | 0, g = g + Math.imul(Y, le) | 0, _ = _ + Math.imul(Y, de) | 0, w = w + Math.imul(V, ce) | 0, g = g + Math.imul(V, pe) | 0, g = g + Math.imul($, ce) | 0, _ = _ + Math.imul($, pe) | 0, w = w + Math.imul(j, ve) | 0, g = g + Math.imul(j, be) | 0, g = g + Math.imul(Z, ve) | 0, _ = _ + Math.imul(Z, be) | 0, w = w + Math.imul(W, Be) | 0, g = g + Math.imul(W, qe) | 0, g = g + Math.imul(K, Be) | 0, _ = _ + Math.imul(K, qe) | 0;
      var tt = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, w = Math.imul(X, le), g = Math.imul(X, de), g = g + Math.imul(J, le) | 0, _ = Math.imul(J, de), w = w + Math.imul(G, ce) | 0, g = g + Math.imul(G, pe) | 0, g = g + Math.imul(Y, ce) | 0, _ = _ + Math.imul(Y, pe) | 0, w = w + Math.imul(V, ve) | 0, g = g + Math.imul(V, be) | 0, g = g + Math.imul($, ve) | 0, _ = _ + Math.imul($, be) | 0, w = w + Math.imul(j, Be) | 0, g = g + Math.imul(j, qe) | 0, g = g + Math.imul(Z, Be) | 0, _ = _ + Math.imul(Z, qe) | 0;
      var rt = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, w = Math.imul(X, ce), g = Math.imul(X, pe), g = g + Math.imul(J, ce) | 0, _ = Math.imul(J, pe), w = w + Math.imul(G, ve) | 0, g = g + Math.imul(G, be) | 0, g = g + Math.imul(Y, ve) | 0, _ = _ + Math.imul(Y, be) | 0, w = w + Math.imul(V, Be) | 0, g = g + Math.imul(V, qe) | 0, g = g + Math.imul($, Be) | 0, _ = _ + Math.imul($, qe) | 0;
      var S0 = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (S0 >>> 26) | 0, S0 &= 67108863, w = Math.imul(X, ve), g = Math.imul(X, be), g = g + Math.imul(J, ve) | 0, _ = Math.imul(J, be), w = w + Math.imul(G, Be) | 0, g = g + Math.imul(G, qe) | 0, g = g + Math.imul(Y, Be) | 0, _ = _ + Math.imul(Y, qe) | 0;
      var E0 = (d + w | 0) + ((g & 8191) << 13) | 0;
      d = (_ + (g >>> 13) | 0) + (E0 >>> 26) | 0, E0 &= 67108863, w = Math.imul(X, Be), g = Math.imul(X, qe), g = g + Math.imul(J, Be) | 0, _ = Math.imul(J, qe);
      var A0 = (d + w | 0) + ((g & 8191) << 13) | 0;
      return d = (_ + (g >>> 13) | 0) + (A0 >>> 26) | 0, A0 &= 67108863, n[0] = ze, n[1] = He, n[2] = We, n[3] = Ke, n[4] = je, n[5] = Ze, n[6] = Ve, n[7] = $e, n[8] = Ge, n[9] = Ye, n[10] = Xe, n[11] = Je, n[12] = Qe, n[13] = et, n[14] = tt, n[15] = rt, n[16] = S0, n[17] = E0, n[18] = A0, d !== 0 && (n[19] = d, c.length++), c;
    };
    Math.imul || (N = _e);
    function we(h, s, u) {
      u.negative = s.negative ^ h.negative, u.length = h.length + s.length;
      for (var c = 0, b = 0, l = 0;l < u.length - 1; l++) {
        var n = b;
        b = 0;
        for (var d = c & 67108863, w = Math.min(l, s.length - 1), g = Math.max(0, l - h.length + 1);g <= w; g++) {
          var _ = l - g, A = h.words[_] | 0, R = s.words[g] | 0, I = A * R, Me = I & 67108863;
          n = n + (I / 67108864 | 0) | 0, Me = Me + d | 0, d = Me & 67108863, n = n + (Me >>> 26) | 0, b += n >>> 26, n &= 67108863;
        }
        u.words[l] = d, c = n, n = b;
      }
      return c !== 0 ? u.words[l] = c : u.length--, u._strip();
    }
    function ye(h, s, u) {
      return we(h, s, u);
    }
    f.prototype.mulTo = function(s, u) {
      var c, b = this.length + s.length;
      return this.length === 10 && s.length === 10 ? c = N(this, s, u) : b < 63 ? c = _e(this, s, u) : b < 1024 ? c = we(this, s, u) : c = ye(this, s, u), c;
    };
    function xe(h, s) {
      this.x = h, this.y = s;
    }
    xe.prototype.makeRBT = function(s) {
      for (var u = new Array(s), c = f.prototype._countBits(s) - 1, b = 0;b < s; b++)
        u[b] = this.revBin(b, c, s);
      return u;
    }, xe.prototype.revBin = function(s, u, c) {
      if (s === 0 || s === c - 1)
        return s;
      for (var b = 0, l = 0;l < u; l++)
        b |= (s & 1) << u - l - 1, s >>= 1;
      return b;
    }, xe.prototype.permute = function(s, u, c, b, l, n) {
      for (var d = 0;d < n; d++)
        b[d] = u[s[d]], l[d] = c[s[d]];
    }, xe.prototype.transform = function(s, u, c, b, l, n) {
      this.permute(n, s, u, c, b, l);
      for (var d = 1;d < l; d <<= 1)
        for (var w = d << 1, g = Math.cos(2 * Math.PI / w), _ = Math.sin(2 * Math.PI / w), A = 0;A < l; A += w)
          for (var R = g, I = _, Me = 0;Me < d; Me++) {
            var k = c[A + Me], D = b[A + Me], nt = c[A + Me + d], C = b[A + Me + d], O = R * nt - I * C;
            C = R * C + I * nt, nt = O, c[A + Me] = k + nt, b[A + Me] = D + C, c[A + Me + d] = k - nt, b[A + Me + d] = D - C, Me !== w && (O = g * R - _ * I, I = g * I + _ * R, R = O);
          }
    }, xe.prototype.guessLen13b = function(s, u) {
      var c = Math.max(u, s) | 1, b = c & 1, l = 0;
      for (c = c / 2 | 0;c; c = c >>> 1)
        l++;
      return 1 << l + 1 + b;
    }, xe.prototype.conjugate = function(s, u, c) {
      if (!(c <= 1))
        for (var b = 0;b < c / 2; b++) {
          var l = s[b];
          s[b] = s[c - b - 1], s[c - b - 1] = l, l = u[b], u[b] = -u[c - b - 1], u[c - b - 1] = -l;
        }
    }, xe.prototype.normalize13b = function(s, u) {
      for (var c = 0, b = 0;b < u / 2; b++) {
        var l = Math.round(s[2 * b + 1] / u) * 8192 + Math.round(s[2 * b] / u) + c;
        s[b] = l & 67108863, l < 67108864 ? c = 0 : c = l / 67108864 | 0;
      }
      return s;
    }, xe.prototype.convert13b = function(s, u, c, b) {
      for (var l = 0, n = 0;n < u; n++)
        l = l + (s[n] | 0), c[2 * n] = l & 8191, l = l >>> 13, c[2 * n + 1] = l & 8191, l = l >>> 13;
      for (n = 2 * u;n < b; ++n)
        c[n] = 0;
      r2(l === 0), r2((l & -8192) === 0);
    }, xe.prototype.stub = function(s) {
      for (var u = new Array(s), c = 0;c < s; c++)
        u[c] = 0;
      return u;
    }, xe.prototype.mulp = function(s, u, c) {
      var b = 2 * this.guessLen13b(s.length, u.length), l = this.makeRBT(b), n = this.stub(b), d = new Array(b), w = new Array(b), g = new Array(b), _ = new Array(b), A = new Array(b), R = new Array(b), I = c.words;
      I.length = b, this.convert13b(s.words, s.length, d, b), this.convert13b(u.words, u.length, _, b), this.transform(d, n, w, g, b, l), this.transform(_, n, A, R, b, l);
      for (var Me = 0;Me < b; Me++) {
        var k = w[Me] * A[Me] - g[Me] * R[Me];
        g[Me] = w[Me] * R[Me] + g[Me] * A[Me], w[Me] = k;
      }
      return this.conjugate(w, g, b), this.transform(w, g, I, n, b, l), this.conjugate(I, n, b), this.normalize13b(I, b), c.negative = s.negative ^ u.negative, c.length = s.length + u.length, c._strip();
    }, f.prototype.mul = function(s) {
      var u = new f(null);
      return u.words = new Array(this.length + s.length), this.mulTo(s, u);
    }, f.prototype.mulf = function(s) {
      var u = new f(null);
      return u.words = new Array(this.length + s.length), ye(this, s, u);
    }, f.prototype.imul = function(s) {
      return this.clone().mulTo(s, this);
    }, f.prototype.imuln = function(s) {
      var u = s < 0;
      u && (s = -s), r2(typeof s == "number"), r2(s < 67108864);
      for (var c = 0, b = 0;b < this.length; b++) {
        var l = (this.words[b] | 0) * s, n = (l & 67108863) + (c & 67108863);
        c >>= 26, c += l / 67108864 | 0, c += n >>> 26, this.words[b] = n & 67108863;
      }
      return c !== 0 && (this.words[b] = c, this.length++), u ? this.ineg() : this;
    }, f.prototype.muln = function(s) {
      return this.clone().imuln(s);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(s) {
      var u = ge(s);
      if (u.length === 0)
        return new f(1);
      for (var c = this, b = 0;b < u.length && u[b] === 0; b++, c = c.sqr())
        ;
      if (++b < u.length)
        for (var l = c.sqr();b < u.length; b++, l = l.sqr())
          u[b] !== 0 && (c = c.mul(l));
      return c;
    }, f.prototype.iushln = function(s) {
      r2(typeof s == "number" && s >= 0);
      var u = s % 26, c = (s - u) / 26, b = 67108863 >>> 26 - u << 26 - u, l;
      if (u !== 0) {
        var n = 0;
        for (l = 0;l < this.length; l++) {
          var d = this.words[l] & b, w = (this.words[l] | 0) - d << u;
          this.words[l] = w | n, n = d >>> 26 - u;
        }
        n && (this.words[l] = n, this.length++);
      }
      if (c !== 0) {
        for (l = this.length - 1;l >= 0; l--)
          this.words[l + c] = this.words[l];
        for (l = 0;l < c; l++)
          this.words[l] = 0;
        this.length += c;
      }
      return this._strip();
    }, f.prototype.ishln = function(s) {
      return r2(this.negative === 0), this.iushln(s);
    }, f.prototype.iushrn = function(s, u, c) {
      r2(typeof s == "number" && s >= 0);
      var b;
      u ? b = (u - u % 26) / 26 : b = 0;
      var l = s % 26, n = Math.min((s - l) / 26, this.length), d = 67108863 ^ 67108863 >>> l << l, w = c;
      if (b -= n, b = Math.max(0, b), w) {
        for (var g = 0;g < n; g++)
          w.words[g] = this.words[g];
        w.length = n;
      }
      if (n !== 0)
        if (this.length > n)
          for (this.length -= n, g = 0;g < this.length; g++)
            this.words[g] = this.words[g + n];
        else
          this.words[0] = 0, this.length = 1;
      var _ = 0;
      for (g = this.length - 1;g >= 0 && (_ !== 0 || g >= b); g--) {
        var A = this.words[g] | 0;
        this.words[g] = _ << 26 - l | A >>> l, _ = A & d;
      }
      return w && _ !== 0 && (w.words[w.length++] = _), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, f.prototype.ishrn = function(s, u, c) {
      return r2(this.negative === 0), this.iushrn(s, u, c);
    }, f.prototype.shln = function(s) {
      return this.clone().ishln(s);
    }, f.prototype.ushln = function(s) {
      return this.clone().iushln(s);
    }, f.prototype.shrn = function(s) {
      return this.clone().ishrn(s);
    }, f.prototype.ushrn = function(s) {
      return this.clone().iushrn(s);
    }, f.prototype.testn = function(s) {
      r2(typeof s == "number" && s >= 0);
      var u = s % 26, c = (s - u) / 26, b = 1 << u;
      if (this.length <= c)
        return false;
      var l = this.words[c];
      return !!(l & b);
    }, f.prototype.imaskn = function(s) {
      r2(typeof s == "number" && s >= 0);
      var u = s % 26, c = (s - u) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c)
        return this;
      if (u !== 0 && c++, this.length = Math.min(c, this.length), u !== 0) {
        var b = 67108863 ^ 67108863 >>> u << u;
        this.words[this.length - 1] &= b;
      }
      return this._strip();
    }, f.prototype.maskn = function(s) {
      return this.clone().imaskn(s);
    }, f.prototype.iaddn = function(s) {
      return r2(typeof s == "number"), r2(s < 67108864), s < 0 ? this.isubn(-s) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= s ? (this.words[0] = s - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(s), this.negative = 1, this) : this._iaddn(s);
    }, f.prototype._iaddn = function(s) {
      this.words[0] += s;
      for (var u = 0;u < this.length && this.words[u] >= 67108864; u++)
        this.words[u] -= 67108864, u === this.length - 1 ? this.words[u + 1] = 1 : this.words[u + 1]++;
      return this.length = Math.max(this.length, u + 1), this;
    }, f.prototype.isubn = function(s) {
      if (r2(typeof s == "number"), r2(s < 67108864), s < 0)
        return this.iaddn(-s);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(s), this.negative = 1, this;
      if (this.words[0] -= s, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var u = 0;u < this.length && this.words[u] < 0; u++)
          this.words[u] += 67108864, this.words[u + 1] -= 1;
      return this._strip();
    }, f.prototype.addn = function(s) {
      return this.clone().iaddn(s);
    }, f.prototype.subn = function(s) {
      return this.clone().isubn(s);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(s, u, c) {
      var b = s.length + c, l;
      this._expand(b);
      var n, d = 0;
      for (l = 0;l < s.length; l++) {
        n = (this.words[l + c] | 0) + d;
        var w = (s.words[l] | 0) * u;
        n -= w & 67108863, d = (n >> 26) - (w / 67108864 | 0), this.words[l + c] = n & 67108863;
      }
      for (;l < this.length - c; l++)
        n = (this.words[l + c] | 0) + d, d = n >> 26, this.words[l + c] = n & 67108863;
      if (d === 0)
        return this._strip();
      for (r2(d === -1), d = 0, l = 0;l < this.length; l++)
        n = -(this.words[l] | 0) + d, d = n >> 26, this.words[l] = n & 67108863;
      return this.negative = 1, this._strip();
    }, f.prototype._wordDiv = function(s, u) {
      var c = this.length - s.length, b = this.clone(), l = s, n = l.words[l.length - 1] | 0, d = this._countBits(n);
      c = 26 - d, c !== 0 && (l = l.ushln(c), b.iushln(c), n = l.words[l.length - 1] | 0);
      var w = b.length - l.length, g;
      if (u !== "mod") {
        g = new f(null), g.length = w + 1, g.words = new Array(g.length);
        for (var _ = 0;_ < g.length; _++)
          g.words[_] = 0;
      }
      var A = b.clone()._ishlnsubmul(l, 1, w);
      A.negative === 0 && (b = A, g && (g.words[w] = 1));
      for (var R = w - 1;R >= 0; R--) {
        var I = (b.words[l.length + R] | 0) * 67108864 + (b.words[l.length + R - 1] | 0);
        for (I = Math.min(I / n | 0, 67108863), b._ishlnsubmul(l, I, R);b.negative !== 0; )
          I--, b.negative = 0, b._ishlnsubmul(l, 1, R), b.isZero() || (b.negative ^= 1);
        g && (g.words[R] = I);
      }
      return g && g._strip(), b._strip(), u !== "div" && c !== 0 && b.iushrn(c), { div: g || null, mod: b };
    }, f.prototype.divmod = function(s, u, c) {
      if (r2(!s.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var b, l, n;
      return this.negative !== 0 && s.negative === 0 ? (n = this.neg().divmod(s, u), u !== "mod" && (b = n.div.neg()), u !== "div" && (l = n.mod.neg(), c && l.negative !== 0 && l.iadd(s)), { div: b, mod: l }) : this.negative === 0 && s.negative !== 0 ? (n = this.divmod(s.neg(), u), u !== "mod" && (b = n.div.neg()), { div: b, mod: n.mod }) : (this.negative & s.negative) !== 0 ? (n = this.neg().divmod(s.neg(), u), u !== "div" && (l = n.mod.neg(), c && l.negative !== 0 && l.isub(s)), { div: n.div, mod: l }) : s.length > this.length || this.cmp(s) < 0 ? { div: new f(0), mod: this } : s.length === 1 ? u === "div" ? { div: this.divn(s.words[0]), mod: null } : u === "mod" ? { div: null, mod: new f(this.modrn(s.words[0])) } : { div: this.divn(s.words[0]), mod: new f(this.modrn(s.words[0])) } : this._wordDiv(s, u);
    }, f.prototype.div = function(s) {
      return this.divmod(s, "div", false).div;
    }, f.prototype.mod = function(s) {
      return this.divmod(s, "mod", false).mod;
    }, f.prototype.umod = function(s) {
      return this.divmod(s, "mod", true).mod;
    }, f.prototype.divRound = function(s) {
      var u = this.divmod(s);
      if (u.mod.isZero())
        return u.div;
      var c = u.div.negative !== 0 ? u.mod.isub(s) : u.mod, b = s.ushrn(1), l = s.andln(1), n = c.cmp(b);
      return n < 0 || l === 1 && n === 0 ? u.div : u.div.negative !== 0 ? u.div.isubn(1) : u.div.iaddn(1);
    }, f.prototype.modrn = function(s) {
      var u = s < 0;
      u && (s = -s), r2(s <= 67108863);
      for (var c = (1 << 26) % s, b = 0, l = this.length - 1;l >= 0; l--)
        b = (c * b + (this.words[l] | 0)) % s;
      return u ? -b : b;
    }, f.prototype.modn = function(s) {
      return this.modrn(s);
    }, f.prototype.idivn = function(s) {
      var u = s < 0;
      u && (s = -s), r2(s <= 67108863);
      for (var c = 0, b = this.length - 1;b >= 0; b--) {
        var l = (this.words[b] | 0) + c * 67108864;
        this.words[b] = l / s | 0, c = l % s;
      }
      return this._strip(), u ? this.ineg() : this;
    }, f.prototype.divn = function(s) {
      return this.clone().idivn(s);
    }, f.prototype.egcd = function(s) {
      r2(s.negative === 0), r2(!s.isZero());
      var u = this, c = s.clone();
      u.negative !== 0 ? u = u.umod(s) : u = u.clone();
      for (var b = new f(1), l = new f(0), n = new f(0), d = new f(1), w = 0;u.isEven() && c.isEven(); )
        u.iushrn(1), c.iushrn(1), ++w;
      for (var g = c.clone(), _ = u.clone();!u.isZero(); ) {
        for (var A = 0, R = 1;(u.words[0] & R) === 0 && A < 26; ++A, R <<= 1)
          ;
        if (A > 0)
          for (u.iushrn(A);A-- > 0; )
            (b.isOdd() || l.isOdd()) && (b.iadd(g), l.isub(_)), b.iushrn(1), l.iushrn(1);
        for (var I = 0, Me = 1;(c.words[0] & Me) === 0 && I < 26; ++I, Me <<= 1)
          ;
        if (I > 0)
          for (c.iushrn(I);I-- > 0; )
            (n.isOdd() || d.isOdd()) && (n.iadd(g), d.isub(_)), n.iushrn(1), d.iushrn(1);
        u.cmp(c) >= 0 ? (u.isub(c), b.isub(n), l.isub(d)) : (c.isub(u), n.isub(b), d.isub(l));
      }
      return { a: n, b: d, gcd: c.iushln(w) };
    }, f.prototype._invmp = function(s) {
      r2(s.negative === 0), r2(!s.isZero());
      var u = this, c = s.clone();
      u.negative !== 0 ? u = u.umod(s) : u = u.clone();
      for (var b = new f(1), l = new f(0), n = c.clone();u.cmpn(1) > 0 && c.cmpn(1) > 0; ) {
        for (var d = 0, w = 1;(u.words[0] & w) === 0 && d < 26; ++d, w <<= 1)
          ;
        if (d > 0)
          for (u.iushrn(d);d-- > 0; )
            b.isOdd() && b.iadd(n), b.iushrn(1);
        for (var g = 0, _ = 1;(c.words[0] & _) === 0 && g < 26; ++g, _ <<= 1)
          ;
        if (g > 0)
          for (c.iushrn(g);g-- > 0; )
            l.isOdd() && l.iadd(n), l.iushrn(1);
        u.cmp(c) >= 0 ? (u.isub(c), b.isub(l)) : (c.isub(u), l.isub(b));
      }
      var A;
      return u.cmpn(1) === 0 ? A = b : A = l, A.cmpn(0) < 0 && A.iadd(s), A;
    }, f.prototype.gcd = function(s) {
      if (this.isZero())
        return s.abs();
      if (s.isZero())
        return this.abs();
      var u = this.clone(), c = s.clone();
      u.negative = 0, c.negative = 0;
      for (var b = 0;u.isEven() && c.isEven(); b++)
        u.iushrn(1), c.iushrn(1);
      do {
        for (;u.isEven(); )
          u.iushrn(1);
        for (;c.isEven(); )
          c.iushrn(1);
        var l = u.cmp(c);
        if (l < 0) {
          var n = u;
          u = c, c = n;
        } else if (l === 0 || c.cmpn(1) === 0)
          break;
        u.isub(c);
      } while (true);
      return c.iushln(b);
    }, f.prototype.invm = function(s) {
      return this.egcd(s).a.umod(s);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(s) {
      return this.words[0] & s;
    }, f.prototype.bincn = function(s) {
      r2(typeof s == "number");
      var u = s % 26, c = (s - u) / 26, b = 1 << u;
      if (this.length <= c)
        return this._expand(c + 1), this.words[c] |= b, this;
      for (var l = b, n = c;l !== 0 && n < this.length; n++) {
        var d = this.words[n] | 0;
        d += l, l = d >>> 26, d &= 67108863, this.words[n] = d;
      }
      return l !== 0 && (this.words[n] = l, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(s) {
      var u = s < 0;
      if (this.negative !== 0 && !u)
        return -1;
      if (this.negative === 0 && u)
        return 1;
      this._strip();
      var c;
      if (this.length > 1)
        c = 1;
      else {
        u && (s = -s), r2(s <= 67108863, "Number is too big");
        var b = this.words[0] | 0;
        c = b === s ? 0 : b < s ? -1 : 1;
      }
      return this.negative !== 0 ? -c | 0 : c;
    }, f.prototype.cmp = function(s) {
      if (this.negative !== 0 && s.negative === 0)
        return -1;
      if (this.negative === 0 && s.negative !== 0)
        return 1;
      var u = this.ucmp(s);
      return this.negative !== 0 ? -u | 0 : u;
    }, f.prototype.ucmp = function(s) {
      if (this.length > s.length)
        return 1;
      if (this.length < s.length)
        return -1;
      for (var u = 0, c = this.length - 1;c >= 0; c--) {
        var b = this.words[c] | 0, l = s.words[c] | 0;
        if (b !== l) {
          b < l ? u = -1 : b > l && (u = 1);
          break;
        }
      }
      return u;
    }, f.prototype.gtn = function(s) {
      return this.cmpn(s) === 1;
    }, f.prototype.gt = function(s) {
      return this.cmp(s) === 1;
    }, f.prototype.gten = function(s) {
      return this.cmpn(s) >= 0;
    }, f.prototype.gte = function(s) {
      return this.cmp(s) >= 0;
    }, f.prototype.ltn = function(s) {
      return this.cmpn(s) === -1;
    }, f.prototype.lt = function(s) {
      return this.cmp(s) === -1;
    }, f.prototype.lten = function(s) {
      return this.cmpn(s) <= 0;
    }, f.prototype.lte = function(s) {
      return this.cmp(s) <= 0;
    }, f.prototype.eqn = function(s) {
      return this.cmpn(s) === 0;
    }, f.prototype.eq = function(s) {
      return this.cmp(s) === 0;
    }, f.red = function(s) {
      return new i(s);
    }, f.prototype.toRed = function(s) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), s.convertTo(this)._forceRed(s);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(s) {
      return this.red = s, this;
    }, f.prototype.forceRed = function(s) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(s);
    }, f.prototype.redAdd = function(s) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, s);
    }, f.prototype.redIAdd = function(s) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, s);
    }, f.prototype.redSub = function(s) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, s);
    }, f.prototype.redISub = function(s) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, s);
    }, f.prototype.redShl = function(s) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, s);
    }, f.prototype.redMul = function(s) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, s), this.red.mul(this, s);
    }, f.prototype.redIMul = function(s) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, s), this.red.imul(this, s);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(s) {
      return r2(this.red && !s.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, s);
    };
    var Re = { k256: null, p224: null, p192: null, p25519: null };
    function Ee(h, s) {
      this.name = h, this.p = new f(s, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    Ee.prototype._tmp = function() {
      var s = new f(null);
      return s.words = new Array(Math.ceil(this.n / 13)), s;
    }, Ee.prototype.ireduce = function(s) {
      var u = s, c;
      do
        this.split(u, this.tmp), u = this.imulK(u), u = u.iadd(this.tmp), c = u.bitLength();
      while (c > this.n);
      var b = c < this.n ? -1 : u.ucmp(this.p);
      return b === 0 ? (u.words[0] = 0, u.length = 1) : b > 0 ? u.isub(this.p) : u.strip !== undefined ? u.strip() : u._strip(), u;
    }, Ee.prototype.split = function(s, u) {
      s.iushrn(this.n, 0, u);
    }, Ee.prototype.imulK = function(s) {
      return s.imul(this.k);
    };
    function Ae() {
      Ee.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(Ae, Ee), Ae.prototype.split = function(s, u) {
      for (var c = 4194303, b = Math.min(s.length, 9), l = 0;l < b; l++)
        u.words[l] = s.words[l];
      if (u.length = b, s.length <= 9) {
        s.words[0] = 0, s.length = 1;
        return;
      }
      var n = s.words[9];
      for (u.words[u.length++] = n & c, l = 10;l < s.length; l++) {
        var d = s.words[l] | 0;
        s.words[l - 10] = (d & c) << 4 | n >>> 22, n = d;
      }
      n >>>= 22, s.words[l - 10] = n, n === 0 && s.length > 10 ? s.length -= 10 : s.length -= 9;
    }, Ae.prototype.imulK = function(s) {
      s.words[s.length] = 0, s.words[s.length + 1] = 0, s.length += 2;
      for (var u = 0, c = 0;c < s.length; c++) {
        var b = s.words[c] | 0;
        u += b * 977, s.words[c] = u & 67108863, u = b * 64 + (u / 67108864 | 0);
      }
      return s.words[s.length - 1] === 0 && (s.length--, s.words[s.length - 1] === 0 && s.length--), s;
    };
    function P() {
      Ee.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(P, Ee);
    function Se() {
      Ee.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Se, Ee);
    function v() {
      Ee.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(v, Ee), v.prototype.imulK = function(s) {
      for (var u = 0, c = 0;c < s.length; c++) {
        var b = (s.words[c] | 0) * 19 + u, l = b & 67108863;
        b >>>= 26, s.words[c] = l, u = b;
      }
      return u !== 0 && (s.words[s.length++] = u), s;
    }, f._prime = function(s) {
      if (Re[s])
        return Re[s];
      var u;
      if (s === "k256")
        u = new Ae;
      else if (s === "p224")
        u = new P;
      else if (s === "p192")
        u = new Se;
      else if (s === "p25519")
        u = new v;
      else
        throw new Error("Unknown prime " + s);
      return Re[s] = u, u;
    };
    function i(h) {
      if (typeof h == "string") {
        var s = f._prime(h);
        this.m = s.p, this.prime = s;
      } else
        r2(h.gtn(1), "modulus must be greater than 1"), this.m = h, this.prime = null;
    }
    i.prototype._verify1 = function(s) {
      r2(s.negative === 0, "red works only with positives"), r2(s.red, "red works only with red numbers");
    }, i.prototype._verify2 = function(s, u) {
      r2((s.negative | u.negative) === 0, "red works only with positives"), r2(s.red && s.red === u.red, "red works only with red numbers");
    }, i.prototype.imod = function(s) {
      return this.prime ? this.prime.ireduce(s)._forceRed(this) : (x(s, s.umod(this.m)._forceRed(this)), s);
    }, i.prototype.neg = function(s) {
      return s.isZero() ? s.clone() : this.m.sub(s)._forceRed(this);
    }, i.prototype.add = function(s, u) {
      this._verify2(s, u);
      var c = s.add(u);
      return c.cmp(this.m) >= 0 && c.isub(this.m), c._forceRed(this);
    }, i.prototype.iadd = function(s, u) {
      this._verify2(s, u);
      var c = s.iadd(u);
      return c.cmp(this.m) >= 0 && c.isub(this.m), c;
    }, i.prototype.sub = function(s, u) {
      this._verify2(s, u);
      var c = s.sub(u);
      return c.cmpn(0) < 0 && c.iadd(this.m), c._forceRed(this);
    }, i.prototype.isub = function(s, u) {
      this._verify2(s, u);
      var c = s.isub(u);
      return c.cmpn(0) < 0 && c.iadd(this.m), c;
    }, i.prototype.shl = function(s, u) {
      return this._verify1(s), this.imod(s.ushln(u));
    }, i.prototype.imul = function(s, u) {
      return this._verify2(s, u), this.imod(s.imul(u));
    }, i.prototype.mul = function(s, u) {
      return this._verify2(s, u), this.imod(s.mul(u));
    }, i.prototype.isqr = function(s) {
      return this.imul(s, s.clone());
    }, i.prototype.sqr = function(s) {
      return this.mul(s, s);
    }, i.prototype.sqrt = function(s) {
      if (s.isZero())
        return s.clone();
      var u = this.m.andln(3);
      if (r2(u % 2 === 1), u === 3) {
        var c = this.m.add(new f(1)).iushrn(2);
        return this.pow(s, c);
      }
      for (var b = this.m.subn(1), l = 0;!b.isZero() && b.andln(1) === 0; )
        l++, b.iushrn(1);
      r2(!b.isZero());
      var n = new f(1).toRed(this), d = n.redNeg(), w = this.m.subn(1).iushrn(1), g = this.m.bitLength();
      for (g = new f(2 * g * g).toRed(this);this.pow(g, w).cmp(d) !== 0; )
        g.redIAdd(d);
      for (var _ = this.pow(g, b), A = this.pow(s, b.addn(1).iushrn(1)), R = this.pow(s, b), I = l;R.cmp(n) !== 0; ) {
        for (var Me = R, k = 0;Me.cmp(n) !== 0; k++)
          Me = Me.redSqr();
        r2(k < I);
        var D = this.pow(_, new f(1).iushln(I - k - 1));
        A = A.redMul(D), _ = D.redSqr(), R = R.redMul(_), I = k;
      }
      return A;
    }, i.prototype.invm = function(s) {
      var u = s._invmp(this.m);
      return u.negative !== 0 ? (u.negative = 0, this.imod(u).redNeg()) : this.imod(u);
    }, i.prototype.pow = function(s, u) {
      if (u.isZero())
        return new f(1).toRed(this);
      if (u.cmpn(1) === 0)
        return s.clone();
      var c = 4, b = new Array(1 << c);
      b[0] = new f(1).toRed(this), b[1] = s;
      for (var l = 2;l < b.length; l++)
        b[l] = this.mul(b[l - 1], s);
      var n = b[0], d = 0, w = 0, g = u.bitLength() % 26;
      for (g === 0 && (g = 26), l = u.length - 1;l >= 0; l--) {
        for (var _ = u.words[l], A = g - 1;A >= 0; A--) {
          var R = _ >> A & 1;
          if (n !== b[0] && (n = this.sqr(n)), R === 0 && d === 0) {
            w = 0;
            continue;
          }
          d <<= 1, d |= R, w++, !(w !== c && (l !== 0 || A !== 0)) && (n = this.mul(n, b[d]), w = 0, d = 0);
        }
        g = 26;
      }
      return n;
    }, i.prototype.convertTo = function(s) {
      var u = s.umod(this.m);
      return u === s ? u.clone() : u;
    }, i.prototype.convertFrom = function(s) {
      var u = s.clone();
      return u.red = null, u;
    }, f.mont = function(s) {
      return new a2(s);
    };
    function a2(h) {
      i.call(this, h), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(a2, i), a2.prototype.convertTo = function(s) {
      return this.imod(s.ushln(this.shift));
    }, a2.prototype.convertFrom = function(s) {
      var u = this.imod(s.mul(this.rinv));
      return u.red = null, u;
    }, a2.prototype.imul = function(s, u) {
      if (s.isZero() || u.isZero())
        return s.words[0] = 0, s.length = 1, s;
      var c = s.imul(u), b = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), l = c.isub(b).iushrn(this.shift), n = l;
      return l.cmp(this.m) >= 0 ? n = l.isub(this.m) : l.cmpn(0) < 0 && (n = l.iadd(this.m)), n._forceRed(this);
    }, a2.prototype.mul = function(s, u) {
      if (s.isZero() || u.isZero())
        return new f(0)._forceRed(this);
      var c = s.mul(u), b = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), l = c.isub(b).iushrn(this.shift), n = l;
      return l.cmp(this.m) >= 0 ? n = l.isub(this.m) : l.cmpn(0) < 0 && (n = l.iadd(this.m)), n._forceRed(this);
    }, a2.prototype.invm = function(s) {
      var u = this.imod(s._invmp(this.m).mul(this.r2));
      return u._forceRed(this);
    };
  })(typeof kl > "u" || kl, n2);
});
var Ks = T((yk, o2) => {
  var Rf = Ws(), oA = on();
  function sA(t3) {
    var e2 = f2(t3), r2 = e2.toRed(Rf.mont(t3.modulus)).redPow(new Rf(t3.publicExponent)).fromRed();
    return { blinder: r2, unblinder: e2.invm(t3.modulus) };
  }
  function f2(t3) {
    var e2 = t3.modulus.byteLength(), r2;
    do
      r2 = new Rf(oA(e2));
    while (r2.cmp(t3.modulus) >= 0 || !r2.umod(t3.prime1) || !r2.umod(t3.prime2));
    return r2;
  }
  function a2(t3, e2) {
    var r2 = sA(e2), o = e2.modulus.byteLength(), f = new Rf(t3).mul(r2.blinder).umod(e2.modulus), p = f.toRed(Rf.mont(e2.prime1)), m = f.toRed(Rf.mont(e2.prime2)), y = e2.coefficient, M = e2.prime1, x = e2.prime2, S = p.redPow(e2.exponent1).fromRed(), E = m.redPow(e2.exponent2).fromRed(), B = S.isub(E).imul(y).umod(M).imul(x);
    return E.iadd(B).imul(r2.unblinder).umod(e2.modulus).toArrayLike(Buffer, "be", o);
  }
  a2.getr = f2;
  o2.exports = a2;
});
var s2 = T((wk, hA) => {
  hA.exports = { name: "elliptic", version: "6.5.4", description: "EC cryptography", main: "lib/elliptic.js", files: ["lib"], scripts: { lint: "eslint lib test", "lint:fix": "npm run lint -- --fix", unit: "istanbul test _mocha --reporter=spec test/index.js", test: "npm run lint && npm run unit", version: "grunt dist && git add dist/" }, repository: { type: "git", url: "git@github.com:indutny/elliptic" }, keywords: ["EC", "Elliptic", "curve", "Cryptography"], author: "Fedor Indutny <fedor@indutny.com>", license: "MIT", bugs: { url: "https://github.com/indutny/elliptic/issues" }, homepage: "https://github.com/indutny/elliptic", devDependencies: { brfs: "^2.0.2", coveralls: "^3.1.0", eslint: "^7.6.0", grunt: "^1.2.1", "grunt-browserify": "^5.3.0", "grunt-cli": "^1.3.2", "grunt-contrib-connect": "^3.0.0", "grunt-contrib-copy": "^1.0.0", "grunt-contrib-uglify": "^5.0.0", "grunt-mocha-istanbul": "^5.0.2", "grunt-saucelabs": "^9.0.1", istanbul: "^0.4.5", mocha: "^8.0.1" }, dependencies: { "bn.js": "^4.11.9", brorand: "^1.1.0", "hash.js": "^1.0.0", "hmac-drbg": "^1.0.1", inherits: "^2.0.4", "minimalistic-assert": "^1.0.1", "minimalistic-crypto-utils": "^1.0.1" } };
});
var ri = T((h2, Ll) => {
  (function(t3, e2) {
    function r2(v, i) {
      if (!v)
        throw new Error(i || "Assertion failed");
    }
    function o(v, i) {
      v.super_ = i;
      var a2 = function() {
      };
      a2.prototype = i.prototype, v.prototype = new a2, v.prototype.constructor = v;
    }
    function f(v, i, a2) {
      if (f.isBN(v))
        return v;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i === "le" || i === "be") && (a2 = i, i = 10), this._init(v || 0, i || 10, a2 || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(i) {
      return i instanceof f ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f.wordSize && Array.isArray(i.words);
    }, f.max = function(i, a2) {
      return i.cmp(a2) > 0 ? i : a2;
    }, f.min = function(i, a2) {
      return i.cmp(a2) < 0 ? i : a2;
    }, f.prototype._init = function(i, a2, h) {
      if (typeof i == "number")
        return this._initNumber(i, a2, h);
      if (typeof i == "object")
        return this._initArray(i, a2, h);
      a2 === "hex" && (a2 = 16), r2(a2 === (a2 | 0) && a2 >= 2 && a2 <= 36), i = i.toString().replace(/\s+/g, "");
      var s = 0;
      i[0] === "-" && (s++, this.negative = 1), s < i.length && (a2 === 16 ? this._parseHex(i, s, h) : (this._parseBase(i, a2, s), h === "le" && this._initArray(this.toArray(), a2, h)));
    }, f.prototype._initNumber = function(i, a2, h) {
      i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r2(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h === "le" && this._initArray(this.toArray(), a2, h);
    }, f.prototype._initArray = function(i, a2, h) {
      if (r2(typeof i.length == "number"), i.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u, c, b = 0;
      if (h === "be")
        for (s = i.length - 1, u = 0;s >= 0; s -= 3)
          c = i[s] | i[s - 1] << 8 | i[s - 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      else if (h === "le")
        for (s = 0, u = 0;s < i.length; s += 3)
          c = i[s] | i[s + 1] << 8 | i[s + 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      return this.strip();
    };
    function m(v, i) {
      var a2 = v.charCodeAt(i);
      return a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : a2 - 48 & 15;
    }
    function y(v, i, a2) {
      var h = m(v, a2);
      return a2 - 1 >= i && (h |= m(v, a2 - 1) << 4), h;
    }
    f.prototype._parseHex = function(i, a2, h) {
      this.length = Math.ceil((i.length - a2) / 6), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u = 0, c = 0, b;
      if (h === "be")
        for (s = i.length - 1;s >= a2; s -= 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      else {
        var l = i.length - a2;
        for (s = l % 2 === 0 ? a2 + 1 : a2;s < i.length; s += 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      }
      this.strip();
    };
    function M(v, i, a2, h) {
      for (var s = 0, u = Math.min(v.length, a2), c = i;c < u; c++) {
        var b = v.charCodeAt(c) - 48;
        s *= h, b >= 49 ? s += b - 49 + 10 : b >= 17 ? s += b - 17 + 10 : s += b;
      }
      return s;
    }
    f.prototype._parseBase = function(i, a2, h) {
      this.words = [0], this.length = 1;
      for (var s = 0, u = 1;u <= 67108863; u *= a2)
        s++;
      s--, u = u / a2 | 0;
      for (var c = i.length - h, b = c % s, l = Math.min(c, c - b) + h, n = 0, d = h;d < l; d += s)
        n = M(i, d, d + s, a2), this.imuln(u), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      if (b !== 0) {
        var w = 1;
        for (n = M(i, d, i.length, a2), d = 0;d < b; d++)
          w *= a2;
        this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      }
      this.strip();
    }, f.prototype.copy = function(i) {
      i.words = new Array(this.length);
      for (var a2 = 0;a2 < this.length; a2++)
        i.words[a2] = this.words[a2];
      i.length = this.length, i.negative = this.negative, i.red = this.red;
    }, f.prototype.clone = function() {
      var i = new f(null);
      return this.copy(i), i;
    }, f.prototype._expand = function(i) {
      for (;this.length < i; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype.strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, f.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(i, a2) {
      i = i || 10, a2 = a2 | 0 || 1;
      var h;
      if (i === 16 || i === "hex") {
        h = "";
        for (var s = 0, u = 0, c = 0;c < this.length; c++) {
          var b = this.words[c], l = ((b << s | u) & 16777215).toString(16);
          u = b >>> 24 - s & 16777215, u !== 0 || c !== this.length - 1 ? h = x[6 - l.length] + l + h : h = l + h, s += 2, s >= 26 && (s -= 26, c--);
        }
        for (u !== 0 && (h = u.toString(16) + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      if (i === (i | 0) && i >= 2 && i <= 36) {
        var n = S[i], d = E[i];
        h = "";
        var w = this.clone();
        for (w.negative = 0;!w.isZero(); ) {
          var g = w.modn(d).toString(i);
          w = w.idivn(d), w.isZero() ? h = g + h : h = x[n - g.length] + g + h;
        }
        for (this.isZero() && (h = "0" + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var i = this.words[0];
      return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
    }, f.prototype.toJSON = function() {
      return this.toString(16);
    }, f.prototype.toBuffer = function(i, a2) {
      return r2(typeof p < "u"), this.toArrayLike(p, i, a2);
    }, f.prototype.toArray = function(i, a2) {
      return this.toArrayLike(Array, i, a2);
    }, f.prototype.toArrayLike = function(i, a2, h) {
      var s = this.byteLength(), u = h || Math.max(1, s);
      r2(s <= u, "byte array longer than desired length"), r2(u > 0, "Requested array length <= 0"), this.strip();
      var c = a2 === "le", b = new i(u), l, n, d = this.clone();
      if (c) {
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[n] = l;
        for (;n < u; n++)
          b[n] = 0;
      } else {
        for (n = 0;n < u - s; n++)
          b[n] = 0;
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[u - n - 1] = l;
      }
      return b;
    }, Math.clz32 ? f.prototype._countBits = function(i) {
      return 32 - Math.clz32(i);
    } : f.prototype._countBits = function(i) {
      var a2 = i, h = 0;
      return a2 >= 4096 && (h += 13, a2 >>>= 13), a2 >= 64 && (h += 7, a2 >>>= 7), a2 >= 8 && (h += 4, a2 >>>= 4), a2 >= 2 && (h += 2, a2 >>>= 2), h + a2;
    }, f.prototype._zeroBits = function(i) {
      if (i === 0)
        return 26;
      var a2 = i, h = 0;
      return (a2 & 8191) === 0 && (h += 13, a2 >>>= 13), (a2 & 127) === 0 && (h += 7, a2 >>>= 7), (a2 & 15) === 0 && (h += 4, a2 >>>= 4), (a2 & 3) === 0 && (h += 2, a2 >>>= 2), (a2 & 1) === 0 && h++, h;
    }, f.prototype.bitLength = function() {
      var i = this.words[this.length - 1], a2 = this._countBits(i);
      return (this.length - 1) * 26 + a2;
    };
    function B(v) {
      for (var i = new Array(v.bitLength()), a2 = 0;a2 < i.length; a2++) {
        var h = a2 / 26 | 0, s = a2 % 26;
        i[a2] = (v.words[h] & 1 << s) >>> s;
      }
      return i;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var i = 0, a2 = 0;a2 < this.length; a2++) {
        var h = this._zeroBits(this.words[a2]);
        if (i += h, h !== 26)
          break;
      }
      return i;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(i) {
      return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(i) {
      return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(i) {
      for (;this.length < i.length; )
        this.words[this.length++] = 0;
      for (var a2 = 0;a2 < i.length; a2++)
        this.words[a2] = this.words[a2] | i.words[a2];
      return this.strip();
    }, f.prototype.ior = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuor(i);
    }, f.prototype.or = function(i) {
      return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
    }, f.prototype.uor = function(i) {
      return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
    }, f.prototype.iuand = function(i) {
      var a2;
      this.length > i.length ? a2 = i : a2 = this;
      for (var h = 0;h < a2.length; h++)
        this.words[h] = this.words[h] & i.words[h];
      return this.length = a2.length, this.strip();
    }, f.prototype.iand = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuand(i);
    }, f.prototype.and = function(i) {
      return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
    }, f.prototype.uand = function(i) {
      return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
    }, f.prototype.iuxor = function(i) {
      var a2, h;
      this.length > i.length ? (a2 = this, h = i) : (a2 = i, h = this);
      for (var s = 0;s < h.length; s++)
        this.words[s] = a2.words[s] ^ h.words[s];
      if (this !== a2)
        for (;s < a2.length; s++)
          this.words[s] = a2.words[s];
      return this.length = a2.length, this.strip();
    }, f.prototype.ixor = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuxor(i);
    }, f.prototype.xor = function(i) {
      return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
    }, f.prototype.uxor = function(i) {
      return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
    }, f.prototype.inotn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = Math.ceil(i / 26) | 0, h = i % 26;
      this._expand(a2), h > 0 && a2--;
      for (var s = 0;s < a2; s++)
        this.words[s] = ~this.words[s] & 67108863;
      return h > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - h), this.strip();
    }, f.prototype.notn = function(i) {
      return this.clone().inotn(i);
    }, f.prototype.setn = function(i, a2) {
      r2(typeof i == "number" && i >= 0);
      var h = i / 26 | 0, s = i % 26;
      return this._expand(h + 1), a2 ? this.words[h] = this.words[h] | 1 << s : this.words[h] = this.words[h] & ~(1 << s), this.strip();
    }, f.prototype.iadd = function(i) {
      var a2;
      if (this.negative !== 0 && i.negative === 0)
        return this.negative = 0, a2 = this.isub(i), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && i.negative !== 0)
        return i.negative = 0, a2 = this.isub(i), i.negative = 1, a2._normSign();
      var h, s;
      this.length > i.length ? (h = this, s = i) : (h = i, s = this);
      for (var u = 0, c = 0;c < s.length; c++)
        a2 = (h.words[c] | 0) + (s.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      for (;u !== 0 && c < h.length; c++)
        a2 = (h.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      if (this.length = h.length, u !== 0)
        this.words[this.length] = u, this.length++;
      else if (h !== this)
        for (;c < h.length; c++)
          this.words[c] = h.words[c];
      return this;
    }, f.prototype.add = function(i) {
      var a2;
      return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a2 = this.sub(i), i.negative ^= 1, a2) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a2 = i.sub(this), this.negative = 1, a2) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
    }, f.prototype.isub = function(i) {
      if (i.negative !== 0) {
        i.negative = 0;
        var a2 = this.iadd(i);
        return i.negative = 1, a2._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
      var h = this.cmp(i);
      if (h === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var s, u;
      h > 0 ? (s = this, u = i) : (s = i, u = this);
      for (var c = 0, b = 0;b < u.length; b++)
        a2 = (s.words[b] | 0) - (u.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      for (;c !== 0 && b < s.length; b++)
        a2 = (s.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      if (c === 0 && b < s.length && s !== this)
        for (;b < s.length; b++)
          this.words[b] = s.words[b];
      return this.length = Math.max(this.length, b), s !== this && (this.negative = 1), this.strip();
    }, f.prototype.sub = function(i) {
      return this.clone().isub(i);
    };
    function q(v, i, a2) {
      a2.negative = i.negative ^ v.negative;
      var h = v.length + i.length | 0;
      a2.length = h, h = h - 1 | 0;
      var s = v.words[0] | 0, u = i.words[0] | 0, c = s * u, b = c & 67108863, l = c / 67108864 | 0;
      a2.words[0] = b;
      for (var n = 1;n < h; n++) {
        for (var d = l >>> 26, w = l & 67108863, g = Math.min(n, i.length - 1), _ = Math.max(0, n - v.length + 1);_ <= g; _++) {
          var A = n - _ | 0;
          s = v.words[A] | 0, u = i.words[_] | 0, c = s * u + w, d += c / 67108864 | 0, w = c & 67108863;
        }
        a2.words[n] = w | 0, l = d | 0;
      }
      return l !== 0 ? a2.words[n] = l | 0 : a2.length--, a2.strip();
    }
    var L = function(i, a2, h) {
      var s = i.words, u = a2.words, c = h.words, b = 0, l, n, d, w = s[0] | 0, g = w & 8191, _ = w >>> 13, A = s[1] | 0, R = A & 8191, I = A >>> 13, Me = s[2] | 0, k = Me & 8191, D = Me >>> 13, nt = s[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s[8] | 0, V = yt & 8191, $ = yt >>> 13, wt = s[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u[2] | 0, te = xt & 8191, re = xt >>> 13, St = u[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u[9] | 0, ve = It & 8191, be = It >>> 13;
      h.negative = i.negative ^ a2.negative, h.length = 19, l = Math.imul(g, X), n = Math.imul(g, J), n = n + Math.imul(_, X) | 0, d = Math.imul(_, J);
      var ft = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n = Math.imul(R, J), n = n + Math.imul(I, X) | 0, d = Math.imul(I, J), l = l + Math.imul(g, Q) | 0, n = n + Math.imul(g, ee) | 0, n = n + Math.imul(_, Q) | 0, d = d + Math.imul(_, ee) | 0;
      var Be = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k, X), n = Math.imul(k, J), n = n + Math.imul(D, X) | 0, d = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n = n + Math.imul(R, ee) | 0, n = n + Math.imul(I, Q) | 0, d = d + Math.imul(I, ee) | 0, l = l + Math.imul(g, te) | 0, n = n + Math.imul(g, re) | 0, n = n + Math.imul(_, te) | 0, d = d + Math.imul(_, re) | 0;
      var qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n = Math.imul(C, J), n = n + Math.imul(O, X) | 0, d = Math.imul(O, J), l = l + Math.imul(k, Q) | 0, n = n + Math.imul(k, ee) | 0, n = n + Math.imul(D, Q) | 0, d = d + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n = n + Math.imul(R, re) | 0, n = n + Math.imul(I, te) | 0, d = d + Math.imul(I, re) | 0, l = l + Math.imul(g, ie) | 0, n = n + Math.imul(g, ne) | 0, n = n + Math.imul(_, ie) | 0, d = d + Math.imul(_, ne) | 0;
      var ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n = Math.imul(F, J), n = n + Math.imul(U, X) | 0, d = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O, Q) | 0, d = d + Math.imul(O, ee) | 0, l = l + Math.imul(k, te) | 0, n = n + Math.imul(k, re) | 0, n = n + Math.imul(D, te) | 0, d = d + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n = n + Math.imul(R, ne) | 0, n = n + Math.imul(I, ie) | 0, d = d + Math.imul(I, ne) | 0, l = l + Math.imul(g, fe) | 0, n = n + Math.imul(g, ae) | 0, n = n + Math.imul(_, fe) | 0, d = d + Math.imul(_, ae) | 0;
      var He = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n = Math.imul(z, J), n = n + Math.imul(H, X) | 0, d = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U, Q) | 0, d = d + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O, te) | 0, d = d + Math.imul(O, re) | 0, l = l + Math.imul(k, ie) | 0, n = n + Math.imul(k, ne) | 0, n = n + Math.imul(D, ie) | 0, d = d + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n = n + Math.imul(R, ae) | 0, n = n + Math.imul(I, fe) | 0, d = d + Math.imul(I, ae) | 0, l = l + Math.imul(g, oe) | 0, n = n + Math.imul(g, se) | 0, n = n + Math.imul(_, oe) | 0, d = d + Math.imul(_, se) | 0;
      var We = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n = Math.imul(W, J), n = n + Math.imul(K, X) | 0, d = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H, Q) | 0, d = d + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U, te) | 0, d = d + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n = n + Math.imul(C, ne) | 0, n = n + Math.imul(O, ie) | 0, d = d + Math.imul(O, ne) | 0, l = l + Math.imul(k, fe) | 0, n = n + Math.imul(k, ae) | 0, n = n + Math.imul(D, fe) | 0, d = d + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n = n + Math.imul(R, se) | 0, n = n + Math.imul(I, oe) | 0, d = d + Math.imul(I, se) | 0, l = l + Math.imul(g, he) | 0, n = n + Math.imul(g, ue) | 0, n = n + Math.imul(_, he) | 0, d = d + Math.imul(_, ue) | 0;
      var Ke = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n = Math.imul(j, J), n = n + Math.imul(Z, X) | 0, d = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K, Q) | 0, d = d + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H, te) | 0, d = d + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n = n + Math.imul(F, ne) | 0, n = n + Math.imul(U, ie) | 0, d = d + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O, fe) | 0, d = d + Math.imul(O, ae) | 0, l = l + Math.imul(k, oe) | 0, n = n + Math.imul(k, se) | 0, n = n + Math.imul(D, oe) | 0, d = d + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n = n + Math.imul(R, ue) | 0, n = n + Math.imul(I, he) | 0, d = d + Math.imul(I, ue) | 0, l = l + Math.imul(g, le) | 0, n = n + Math.imul(g, de) | 0, n = n + Math.imul(_, le) | 0, d = d + Math.imul(_, de) | 0;
      var je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n = Math.imul(V, J), n = n + Math.imul($, X) | 0, d = Math.imul($, J), l = l + Math.imul(j, Q) | 0, n = n + Math.imul(j, ee) | 0, n = n + Math.imul(Z, Q) | 0, d = d + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K, te) | 0, d = d + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n = n + Math.imul(z, ne) | 0, n = n + Math.imul(H, ie) | 0, d = d + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U, fe) | 0, d = d + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O, oe) | 0, d = d + Math.imul(O, se) | 0, l = l + Math.imul(k, he) | 0, n = n + Math.imul(k, ue) | 0, n = n + Math.imul(D, he) | 0, d = d + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n = n + Math.imul(R, de) | 0, n = n + Math.imul(I, le) | 0, d = d + Math.imul(I, de) | 0, l = l + Math.imul(g, ce) | 0, n = n + Math.imul(g, pe) | 0, n = n + Math.imul(_, ce) | 0, d = d + Math.imul(_, pe) | 0;
      var Ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n = Math.imul(G, J), n = n + Math.imul(Y, X) | 0, d = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n = n + Math.imul(V, ee) | 0, n = n + Math.imul($, Q) | 0, d = d + Math.imul($, ee) | 0, l = l + Math.imul(j, te) | 0, n = n + Math.imul(j, re) | 0, n = n + Math.imul(Z, te) | 0, d = d + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n = n + Math.imul(W, ne) | 0, n = n + Math.imul(K, ie) | 0, d = d + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H, fe) | 0, d = d + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U, oe) | 0, d = d + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O, he) | 0, d = d + Math.imul(O, ue) | 0, l = l + Math.imul(k, le) | 0, n = n + Math.imul(k, de) | 0, n = n + Math.imul(D, le) | 0, d = d + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n = n + Math.imul(R, pe) | 0, n = n + Math.imul(I, ce) | 0, d = d + Math.imul(I, pe) | 0, l = l + Math.imul(g, ve) | 0, n = n + Math.imul(g, be) | 0, n = n + Math.imul(_, ve) | 0, d = d + Math.imul(_, be) | 0;
      var Ve = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n = Math.imul(G, ee), n = n + Math.imul(Y, Q) | 0, d = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n = n + Math.imul(V, re) | 0, n = n + Math.imul($, te) | 0, d = d + Math.imul($, re) | 0, l = l + Math.imul(j, ie) | 0, n = n + Math.imul(j, ne) | 0, n = n + Math.imul(Z, ie) | 0, d = d + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K, fe) | 0, d = d + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H, oe) | 0, d = d + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U, he) | 0, d = d + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O, le) | 0, d = d + Math.imul(O, de) | 0, l = l + Math.imul(k, ce) | 0, n = n + Math.imul(k, pe) | 0, n = n + Math.imul(D, ce) | 0, d = d + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n = n + Math.imul(R, be) | 0, n = n + Math.imul(I, ve) | 0, d = d + Math.imul(I, be) | 0;
      var $e = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n = Math.imul(G, re), n = n + Math.imul(Y, te) | 0, d = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n = n + Math.imul(V, ne) | 0, n = n + Math.imul($, ie) | 0, d = d + Math.imul($, ne) | 0, l = l + Math.imul(j, fe) | 0, n = n + Math.imul(j, ae) | 0, n = n + Math.imul(Z, fe) | 0, d = d + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K, oe) | 0, d = d + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H, he) | 0, d = d + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U, le) | 0, d = d + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O, ce) | 0, d = d + Math.imul(O, pe) | 0, l = l + Math.imul(k, ve) | 0, n = n + Math.imul(k, be) | 0, n = n + Math.imul(D, ve) | 0, d = d + Math.imul(D, be) | 0;
      var Ge = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n = Math.imul(G, ne), n = n + Math.imul(Y, ie) | 0, d = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n = n + Math.imul(V, ae) | 0, n = n + Math.imul($, fe) | 0, d = d + Math.imul($, ae) | 0, l = l + Math.imul(j, oe) | 0, n = n + Math.imul(j, se) | 0, n = n + Math.imul(Z, oe) | 0, d = d + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K, he) | 0, d = d + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H, le) | 0, d = d + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U, ce) | 0, d = d + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n = n + Math.imul(C, be) | 0, n = n + Math.imul(O, ve) | 0, d = d + Math.imul(O, be) | 0;
      var Ye = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n = Math.imul(G, ae), n = n + Math.imul(Y, fe) | 0, d = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n = n + Math.imul(V, se) | 0, n = n + Math.imul($, oe) | 0, d = d + Math.imul($, se) | 0, l = l + Math.imul(j, he) | 0, n = n + Math.imul(j, ue) | 0, n = n + Math.imul(Z, he) | 0, d = d + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K, le) | 0, d = d + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H, ce) | 0, d = d + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n = n + Math.imul(F, be) | 0, n = n + Math.imul(U, ve) | 0, d = d + Math.imul(U, be) | 0;
      var Xe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n = Math.imul(G, se), n = n + Math.imul(Y, oe) | 0, d = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n = n + Math.imul(V, ue) | 0, n = n + Math.imul($, he) | 0, d = d + Math.imul($, ue) | 0, l = l + Math.imul(j, le) | 0, n = n + Math.imul(j, de) | 0, n = n + Math.imul(Z, le) | 0, d = d + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K, ce) | 0, d = d + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n = n + Math.imul(z, be) | 0, n = n + Math.imul(H, ve) | 0, d = d + Math.imul(H, be) | 0;
      var Je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n = Math.imul(G, ue), n = n + Math.imul(Y, he) | 0, d = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n = n + Math.imul(V, de) | 0, n = n + Math.imul($, le) | 0, d = d + Math.imul($, de) | 0, l = l + Math.imul(j, ce) | 0, n = n + Math.imul(j, pe) | 0, n = n + Math.imul(Z, ce) | 0, d = d + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n = n + Math.imul(W, be) | 0, n = n + Math.imul(K, ve) | 0, d = d + Math.imul(K, be) | 0;
      var Qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n = Math.imul(G, de), n = n + Math.imul(Y, le) | 0, d = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n = n + Math.imul(V, pe) | 0, n = n + Math.imul($, ce) | 0, d = d + Math.imul($, pe) | 0, l = l + Math.imul(j, ve) | 0, n = n + Math.imul(j, be) | 0, n = n + Math.imul(Z, ve) | 0, d = d + Math.imul(Z, be) | 0;
      var et = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n = Math.imul(G, pe), n = n + Math.imul(Y, ce) | 0, d = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n = n + Math.imul(V, be) | 0, n = n + Math.imul($, ve) | 0, d = d + Math.imul($, be) | 0;
      var tt = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n = Math.imul(G, be), n = n + Math.imul(Y, ve) | 0, d = Math.imul(Y, be);
      var rt = (b + l | 0) + ((n & 8191) << 13) | 0;
      return b = (d + (n >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b !== 0 && (c[19] = b, h.length++), h;
    };
    Math.imul || (L = q);
    function ge(v, i, a2) {
      a2.negative = i.negative ^ v.negative, a2.length = v.length + i.length;
      for (var h = 0, s = 0, u = 0;u < a2.length - 1; u++) {
        var c = s;
        s = 0;
        for (var b = h & 67108863, l = Math.min(u, i.length - 1), n = Math.max(0, u - v.length + 1);n <= l; n++) {
          var d = u - n, w = v.words[d] | 0, g = i.words[n] | 0, _ = w * g, A = _ & 67108863;
          c = c + (_ / 67108864 | 0) | 0, A = A + b | 0, b = A & 67108863, c = c + (A >>> 26) | 0, s += c >>> 26, c &= 67108863;
        }
        a2.words[u] = b, h = c, c = s;
      }
      return h !== 0 ? a2.words[u] = h : a2.length--, a2.strip();
    }
    function _e(v, i, a2) {
      var h = new N;
      return h.mulp(v, i, a2);
    }
    f.prototype.mulTo = function(i, a2) {
      var h, s = this.length + i.length;
      return this.length === 10 && i.length === 10 ? h = L(this, i, a2) : s < 63 ? h = q(this, i, a2) : s < 1024 ? h = ge(this, i, a2) : h = _e(this, i, a2), h;
    };
    function N(v, i) {
      this.x = v, this.y = i;
    }
    N.prototype.makeRBT = function(i) {
      for (var a2 = new Array(i), h = f.prototype._countBits(i) - 1, s = 0;s < i; s++)
        a2[s] = this.revBin(s, h, i);
      return a2;
    }, N.prototype.revBin = function(i, a2, h) {
      if (i === 0 || i === h - 1)
        return i;
      for (var s = 0, u = 0;u < a2; u++)
        s |= (i & 1) << a2 - u - 1, i >>= 1;
      return s;
    }, N.prototype.permute = function(i, a2, h, s, u, c) {
      for (var b = 0;b < c; b++)
        s[b] = a2[i[b]], u[b] = h[i[b]];
    }, N.prototype.transform = function(i, a2, h, s, u, c) {
      this.permute(c, i, a2, h, s, u);
      for (var b = 1;b < u; b <<= 1)
        for (var l = b << 1, n = Math.cos(2 * Math.PI / l), d = Math.sin(2 * Math.PI / l), w = 0;w < u; w += l)
          for (var g = n, _ = d, A = 0;A < b; A++) {
            var R = h[w + A], I = s[w + A], Me = h[w + A + b], k = s[w + A + b], D = g * Me - _ * k;
            k = g * k + _ * Me, Me = D, h[w + A] = R + Me, s[w + A] = I + k, h[w + A + b] = R - Me, s[w + A + b] = I - k, A !== l && (D = n * g - d * _, _ = n * _ + d * g, g = D);
          }
    }, N.prototype.guessLen13b = function(i, a2) {
      var h = Math.max(a2, i) | 1, s = h & 1, u = 0;
      for (h = h / 2 | 0;h; h = h >>> 1)
        u++;
      return 1 << u + 1 + s;
    }, N.prototype.conjugate = function(i, a2, h) {
      if (!(h <= 1))
        for (var s = 0;s < h / 2; s++) {
          var u = i[s];
          i[s] = i[h - s - 1], i[h - s - 1] = u, u = a2[s], a2[s] = -a2[h - s - 1], a2[h - s - 1] = -u;
        }
    }, N.prototype.normalize13b = function(i, a2) {
      for (var h = 0, s = 0;s < a2 / 2; s++) {
        var u = Math.round(i[2 * s + 1] / a2) * 8192 + Math.round(i[2 * s] / a2) + h;
        i[s] = u & 67108863, u < 67108864 ? h = 0 : h = u / 67108864 | 0;
      }
      return i;
    }, N.prototype.convert13b = function(i, a2, h, s) {
      for (var u = 0, c = 0;c < a2; c++)
        u = u + (i[c] | 0), h[2 * c] = u & 8191, u = u >>> 13, h[2 * c + 1] = u & 8191, u = u >>> 13;
      for (c = 2 * a2;c < s; ++c)
        h[c] = 0;
      r2(u === 0), r2((u & -8192) === 0);
    }, N.prototype.stub = function(i) {
      for (var a2 = new Array(i), h = 0;h < i; h++)
        a2[h] = 0;
      return a2;
    }, N.prototype.mulp = function(i, a2, h) {
      var s = 2 * this.guessLen13b(i.length, a2.length), u = this.makeRBT(s), c = this.stub(s), b = new Array(s), l = new Array(s), n = new Array(s), d = new Array(s), w = new Array(s), g = new Array(s), _ = h.words;
      _.length = s, this.convert13b(i.words, i.length, b, s), this.convert13b(a2.words, a2.length, d, s), this.transform(b, c, l, n, s, u), this.transform(d, c, w, g, s, u);
      for (var A = 0;A < s; A++) {
        var R = l[A] * w[A] - n[A] * g[A];
        n[A] = l[A] * g[A] + n[A] * w[A], l[A] = R;
      }
      return this.conjugate(l, n, s), this.transform(l, n, _, c, s, u), this.conjugate(_, c, s), this.normalize13b(_, s), h.negative = i.negative ^ a2.negative, h.length = i.length + a2.length, h.strip();
    }, f.prototype.mul = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), this.mulTo(i, a2);
    }, f.prototype.mulf = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), _e(this, i, a2);
    }, f.prototype.imul = function(i) {
      return this.clone().mulTo(i, this);
    }, f.prototype.imuln = function(i) {
      r2(typeof i == "number"), r2(i < 67108864);
      for (var a2 = 0, h = 0;h < this.length; h++) {
        var s = (this.words[h] | 0) * i, u = (s & 67108863) + (a2 & 67108863);
        a2 >>= 26, a2 += s / 67108864 | 0, a2 += u >>> 26, this.words[h] = u & 67108863;
      }
      return a2 !== 0 && (this.words[h] = a2, this.length++), this;
    }, f.prototype.muln = function(i) {
      return this.clone().imuln(i);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(i) {
      var a2 = B(i);
      if (a2.length === 0)
        return new f(1);
      for (var h = this, s = 0;s < a2.length && a2[s] === 0; s++, h = h.sqr())
        ;
      if (++s < a2.length)
        for (var u = h.sqr();s < a2.length; s++, u = u.sqr())
          a2[s] !== 0 && (h = h.mul(u));
      return h;
    }, f.prototype.iushln = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 67108863 >>> 26 - a2 << 26 - a2, u;
      if (a2 !== 0) {
        var c = 0;
        for (u = 0;u < this.length; u++) {
          var b = this.words[u] & s, l = (this.words[u] | 0) - b << a2;
          this.words[u] = l | c, c = b >>> 26 - a2;
        }
        c && (this.words[u] = c, this.length++);
      }
      if (h !== 0) {
        for (u = this.length - 1;u >= 0; u--)
          this.words[u + h] = this.words[u];
        for (u = 0;u < h; u++)
          this.words[u] = 0;
        this.length += h;
      }
      return this.strip();
    }, f.prototype.ishln = function(i) {
      return r2(this.negative === 0), this.iushln(i);
    }, f.prototype.iushrn = function(i, a2, h) {
      r2(typeof i == "number" && i >= 0);
      var s;
      a2 ? s = (a2 - a2 % 26) / 26 : s = 0;
      var u = i % 26, c = Math.min((i - u) / 26, this.length), b = 67108863 ^ 67108863 >>> u << u, l = h;
      if (s -= c, s = Math.max(0, s), l) {
        for (var n = 0;n < c; n++)
          l.words[n] = this.words[n];
        l.length = c;
      }
      if (c !== 0)
        if (this.length > c)
          for (this.length -= c, n = 0;n < this.length; n++)
            this.words[n] = this.words[n + c];
        else
          this.words[0] = 0, this.length = 1;
      var d = 0;
      for (n = this.length - 1;n >= 0 && (d !== 0 || n >= s); n--) {
        var w = this.words[n] | 0;
        this.words[n] = d << 26 - u | w >>> u, d = w & b;
      }
      return l && d !== 0 && (l.words[l.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, f.prototype.ishrn = function(i, a2, h) {
      return r2(this.negative === 0), this.iushrn(i, a2, h);
    }, f.prototype.shln = function(i) {
      return this.clone().ishln(i);
    }, f.prototype.ushln = function(i) {
      return this.clone().iushln(i);
    }, f.prototype.shrn = function(i) {
      return this.clone().ishrn(i);
    }, f.prototype.ushrn = function(i) {
      return this.clone().iushrn(i);
    }, f.prototype.testn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return false;
      var u = this.words[h];
      return !!(u & s);
    }, f.prototype.imaskn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h)
        return this;
      if (a2 !== 0 && h++, this.length = Math.min(h, this.length), a2 !== 0) {
        var s = 67108863 ^ 67108863 >>> a2 << a2;
        this.words[this.length - 1] &= s;
      }
      return this.strip();
    }, f.prototype.maskn = function(i) {
      return this.clone().imaskn(i);
    }, f.prototype.iaddn = function(i) {
      return r2(typeof i == "number"), r2(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
    }, f.prototype._iaddn = function(i) {
      this.words[0] += i;
      for (var a2 = 0;a2 < this.length && this.words[a2] >= 67108864; a2++)
        this.words[a2] -= 67108864, a2 === this.length - 1 ? this.words[a2 + 1] = 1 : this.words[a2 + 1]++;
      return this.length = Math.max(this.length, a2 + 1), this;
    }, f.prototype.isubn = function(i) {
      if (r2(typeof i == "number"), r2(i < 67108864), i < 0)
        return this.iaddn(-i);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(i), this.negative = 1, this;
      if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var a2 = 0;a2 < this.length && this.words[a2] < 0; a2++)
          this.words[a2] += 67108864, this.words[a2 + 1] -= 1;
      return this.strip();
    }, f.prototype.addn = function(i) {
      return this.clone().iaddn(i);
    }, f.prototype.subn = function(i) {
      return this.clone().isubn(i);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(i, a2, h) {
      var s = i.length + h, u;
      this._expand(s);
      var c, b = 0;
      for (u = 0;u < i.length; u++) {
        c = (this.words[u + h] | 0) + b;
        var l = (i.words[u] | 0) * a2;
        c -= l & 67108863, b = (c >> 26) - (l / 67108864 | 0), this.words[u + h] = c & 67108863;
      }
      for (;u < this.length - h; u++)
        c = (this.words[u + h] | 0) + b, b = c >> 26, this.words[u + h] = c & 67108863;
      if (b === 0)
        return this.strip();
      for (r2(b === -1), b = 0, u = 0;u < this.length; u++)
        c = -(this.words[u] | 0) + b, b = c >> 26, this.words[u] = c & 67108863;
      return this.negative = 1, this.strip();
    }, f.prototype._wordDiv = function(i, a2) {
      var h = this.length - i.length, s = this.clone(), u = i, c = u.words[u.length - 1] | 0, b = this._countBits(c);
      h = 26 - b, h !== 0 && (u = u.ushln(h), s.iushln(h), c = u.words[u.length - 1] | 0);
      var l = s.length - u.length, n;
      if (a2 !== "mod") {
        n = new f(null), n.length = l + 1, n.words = new Array(n.length);
        for (var d = 0;d < n.length; d++)
          n.words[d] = 0;
      }
      var w = s.clone()._ishlnsubmul(u, 1, l);
      w.negative === 0 && (s = w, n && (n.words[l] = 1));
      for (var g = l - 1;g >= 0; g--) {
        var _ = (s.words[u.length + g] | 0) * 67108864 + (s.words[u.length + g - 1] | 0);
        for (_ = Math.min(_ / c | 0, 67108863), s._ishlnsubmul(u, _, g);s.negative !== 0; )
          _--, s.negative = 0, s._ishlnsubmul(u, 1, g), s.isZero() || (s.negative ^= 1);
        n && (n.words[g] = _);
      }
      return n && n.strip(), s.strip(), a2 !== "div" && h !== 0 && s.iushrn(h), { div: n || null, mod: s };
    }, f.prototype.divmod = function(i, a2, h) {
      if (r2(!i.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var s, u, c;
      return this.negative !== 0 && i.negative === 0 ? (c = this.neg().divmod(i, a2), a2 !== "mod" && (s = c.div.neg()), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.iadd(i)), { div: s, mod: u }) : this.negative === 0 && i.negative !== 0 ? (c = this.divmod(i.neg(), a2), a2 !== "mod" && (s = c.div.neg()), { div: s, mod: c.mod }) : (this.negative & i.negative) !== 0 ? (c = this.neg().divmod(i.neg(), a2), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.isub(i)), { div: c.div, mod: u }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f(0), mod: this } : i.length === 1 ? a2 === "div" ? { div: this.divn(i.words[0]), mod: null } : a2 === "mod" ? { div: null, mod: new f(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f(this.modn(i.words[0])) } : this._wordDiv(i, a2);
    }, f.prototype.div = function(i) {
      return this.divmod(i, "div", false).div;
    }, f.prototype.mod = function(i) {
      return this.divmod(i, "mod", false).mod;
    }, f.prototype.umod = function(i) {
      return this.divmod(i, "mod", true).mod;
    }, f.prototype.divRound = function(i) {
      var a2 = this.divmod(i);
      if (a2.mod.isZero())
        return a2.div;
      var h = a2.div.negative !== 0 ? a2.mod.isub(i) : a2.mod, s = i.ushrn(1), u = i.andln(1), c = h.cmp(s);
      return c < 0 || u === 1 && c === 0 ? a2.div : a2.div.negative !== 0 ? a2.div.isubn(1) : a2.div.iaddn(1);
    }, f.prototype.modn = function(i) {
      r2(i <= 67108863);
      for (var a2 = (1 << 26) % i, h = 0, s = this.length - 1;s >= 0; s--)
        h = (a2 * h + (this.words[s] | 0)) % i;
      return h;
    }, f.prototype.idivn = function(i) {
      r2(i <= 67108863);
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = (this.words[h] | 0) + a2 * 67108864;
        this.words[h] = s / i | 0, a2 = s % i;
      }
      return this.strip();
    }, f.prototype.divn = function(i) {
      return this.clone().idivn(i);
    }, f.prototype.egcd = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = new f(0), b = new f(1), l = 0;a2.isEven() && h.isEven(); )
        a2.iushrn(1), h.iushrn(1), ++l;
      for (var n = h.clone(), d = a2.clone();!a2.isZero(); ) {
        for (var w = 0, g = 1;(a2.words[0] & g) === 0 && w < 26; ++w, g <<= 1)
          ;
        if (w > 0)
          for (a2.iushrn(w);w-- > 0; )
            (s.isOdd() || u.isOdd()) && (s.iadd(n), u.isub(d)), s.iushrn(1), u.iushrn(1);
        for (var _ = 0, A = 1;(h.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
          ;
        if (_ > 0)
          for (h.iushrn(_);_-- > 0; )
            (c.isOdd() || b.isOdd()) && (c.iadd(n), b.isub(d)), c.iushrn(1), b.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(c), u.isub(b)) : (h.isub(a2), c.isub(s), b.isub(u));
      }
      return { a: c, b, gcd: h.iushln(l) };
    }, f.prototype._invmp = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = h.clone();a2.cmpn(1) > 0 && h.cmpn(1) > 0; ) {
        for (var b = 0, l = 1;(a2.words[0] & l) === 0 && b < 26; ++b, l <<= 1)
          ;
        if (b > 0)
          for (a2.iushrn(b);b-- > 0; )
            s.isOdd() && s.iadd(c), s.iushrn(1);
        for (var n = 0, d = 1;(h.words[0] & d) === 0 && n < 26; ++n, d <<= 1)
          ;
        if (n > 0)
          for (h.iushrn(n);n-- > 0; )
            u.isOdd() && u.iadd(c), u.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(u)) : (h.isub(a2), u.isub(s));
      }
      var w;
      return a2.cmpn(1) === 0 ? w = s : w = u, w.cmpn(0) < 0 && w.iadd(i), w;
    }, f.prototype.gcd = function(i) {
      if (this.isZero())
        return i.abs();
      if (i.isZero())
        return this.abs();
      var a2 = this.clone(), h = i.clone();
      a2.negative = 0, h.negative = 0;
      for (var s = 0;a2.isEven() && h.isEven(); s++)
        a2.iushrn(1), h.iushrn(1);
      do {
        for (;a2.isEven(); )
          a2.iushrn(1);
        for (;h.isEven(); )
          h.iushrn(1);
        var u = a2.cmp(h);
        if (u < 0) {
          var c = a2;
          a2 = h, h = c;
        } else if (u === 0 || h.cmpn(1) === 0)
          break;
        a2.isub(h);
      } while (true);
      return h.iushln(s);
    }, f.prototype.invm = function(i) {
      return this.egcd(i).a.umod(i);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(i) {
      return this.words[0] & i;
    }, f.prototype.bincn = function(i) {
      r2(typeof i == "number");
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return this._expand(h + 1), this.words[h] |= s, this;
      for (var u = s, c = h;u !== 0 && c < this.length; c++) {
        var b = this.words[c] | 0;
        b += u, u = b >>> 26, b &= 67108863, this.words[c] = b;
      }
      return u !== 0 && (this.words[c] = u, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(i) {
      var a2 = i < 0;
      if (this.negative !== 0 && !a2)
        return -1;
      if (this.negative === 0 && a2)
        return 1;
      this.strip();
      var h;
      if (this.length > 1)
        h = 1;
      else {
        a2 && (i = -i), r2(i <= 67108863, "Number is too big");
        var s = this.words[0] | 0;
        h = s === i ? 0 : s < i ? -1 : 1;
      }
      return this.negative !== 0 ? -h | 0 : h;
    }, f.prototype.cmp = function(i) {
      if (this.negative !== 0 && i.negative === 0)
        return -1;
      if (this.negative === 0 && i.negative !== 0)
        return 1;
      var a2 = this.ucmp(i);
      return this.negative !== 0 ? -a2 | 0 : a2;
    }, f.prototype.ucmp = function(i) {
      if (this.length > i.length)
        return 1;
      if (this.length < i.length)
        return -1;
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = this.words[h] | 0, u = i.words[h] | 0;
        if (s !== u) {
          s < u ? a2 = -1 : s > u && (a2 = 1);
          break;
        }
      }
      return a2;
    }, f.prototype.gtn = function(i) {
      return this.cmpn(i) === 1;
    }, f.prototype.gt = function(i) {
      return this.cmp(i) === 1;
    }, f.prototype.gten = function(i) {
      return this.cmpn(i) >= 0;
    }, f.prototype.gte = function(i) {
      return this.cmp(i) >= 0;
    }, f.prototype.ltn = function(i) {
      return this.cmpn(i) === -1;
    }, f.prototype.lt = function(i) {
      return this.cmp(i) === -1;
    }, f.prototype.lten = function(i) {
      return this.cmpn(i) <= 0;
    }, f.prototype.lte = function(i) {
      return this.cmp(i) <= 0;
    }, f.prototype.eqn = function(i) {
      return this.cmpn(i) === 0;
    }, f.prototype.eq = function(i) {
      return this.cmp(i) === 0;
    }, f.red = function(i) {
      return new P(i);
    }, f.prototype.toRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(i) {
      return this.red = i, this;
    }, f.prototype.forceRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(i);
    }, f.prototype.redAdd = function(i) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
    }, f.prototype.redIAdd = function(i) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
    }, f.prototype.redSub = function(i) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
    }, f.prototype.redISub = function(i) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
    }, f.prototype.redShl = function(i) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
    }, f.prototype.redMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
    }, f.prototype.redIMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(i) {
      return r2(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
    };
    var we = { k256: null, p224: null, p192: null, p25519: null };
    function ye(v, i) {
      this.name = v, this.p = new f(i, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    ye.prototype._tmp = function() {
      var i = new f(null);
      return i.words = new Array(Math.ceil(this.n / 13)), i;
    }, ye.prototype.ireduce = function(i) {
      var a2 = i, h;
      do
        this.split(a2, this.tmp), a2 = this.imulK(a2), a2 = a2.iadd(this.tmp), h = a2.bitLength();
      while (h > this.n);
      var s = h < this.n ? -1 : a2.ucmp(this.p);
      return s === 0 ? (a2.words[0] = 0, a2.length = 1) : s > 0 ? a2.isub(this.p) : a2.strip !== undefined ? a2.strip() : a2._strip(), a2;
    }, ye.prototype.split = function(i, a2) {
      i.iushrn(this.n, 0, a2);
    }, ye.prototype.imulK = function(i) {
      return i.imul(this.k);
    };
    function xe() {
      ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(xe, ye), xe.prototype.split = function(i, a2) {
      for (var h = 4194303, s = Math.min(i.length, 9), u = 0;u < s; u++)
        a2.words[u] = i.words[u];
      if (a2.length = s, i.length <= 9) {
        i.words[0] = 0, i.length = 1;
        return;
      }
      var c = i.words[9];
      for (a2.words[a2.length++] = c & h, u = 10;u < i.length; u++) {
        var b = i.words[u] | 0;
        i.words[u - 10] = (b & h) << 4 | c >>> 22, c = b;
      }
      c >>>= 22, i.words[u - 10] = c, c === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
    }, xe.prototype.imulK = function(i) {
      i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = i.words[h] | 0;
        a2 += s * 977, i.words[h] = a2 & 67108863, a2 = s * 64 + (a2 / 67108864 | 0);
      }
      return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
    };
    function Re() {
      ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(Re, ye);
    function Ee() {
      ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Ee, ye);
    function Ae() {
      ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(Ae, ye), Ae.prototype.imulK = function(i) {
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = (i.words[h] | 0) * 19 + a2, u = s & 67108863;
        s >>>= 26, i.words[h] = u, a2 = s;
      }
      return a2 !== 0 && (i.words[i.length++] = a2), i;
    }, f._prime = function(i) {
      if (we[i])
        return we[i];
      var a2;
      if (i === "k256")
        a2 = new xe;
      else if (i === "p224")
        a2 = new Re;
      else if (i === "p192")
        a2 = new Ee;
      else if (i === "p25519")
        a2 = new Ae;
      else
        throw new Error("Unknown prime " + i);
      return we[i] = a2, a2;
    };
    function P(v) {
      if (typeof v == "string") {
        var i = f._prime(v);
        this.m = i.p, this.prime = i;
      } else
        r2(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
    }
    P.prototype._verify1 = function(i) {
      r2(i.negative === 0, "red works only with positives"), r2(i.red, "red works only with red numbers");
    }, P.prototype._verify2 = function(i, a2) {
      r2((i.negative | a2.negative) === 0, "red works only with positives"), r2(i.red && i.red === a2.red, "red works only with red numbers");
    }, P.prototype.imod = function(i) {
      return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
    }, P.prototype.neg = function(i) {
      return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
    }, P.prototype.add = function(i, a2) {
      this._verify2(i, a2);
      var h = i.add(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h._forceRed(this);
    }, P.prototype.iadd = function(i, a2) {
      this._verify2(i, a2);
      var h = i.iadd(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h;
    }, P.prototype.sub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.sub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h._forceRed(this);
    }, P.prototype.isub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.isub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h;
    }, P.prototype.shl = function(i, a2) {
      return this._verify1(i), this.imod(i.ushln(a2));
    }, P.prototype.imul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.imul(a2));
    }, P.prototype.mul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.mul(a2));
    }, P.prototype.isqr = function(i) {
      return this.imul(i, i.clone());
    }, P.prototype.sqr = function(i) {
      return this.mul(i, i);
    }, P.prototype.sqrt = function(i) {
      if (i.isZero())
        return i.clone();
      var a2 = this.m.andln(3);
      if (r2(a2 % 2 === 1), a2 === 3) {
        var h = this.m.add(new f(1)).iushrn(2);
        return this.pow(i, h);
      }
      for (var s = this.m.subn(1), u = 0;!s.isZero() && s.andln(1) === 0; )
        u++, s.iushrn(1);
      r2(!s.isZero());
      var c = new f(1).toRed(this), b = c.redNeg(), l = this.m.subn(1).iushrn(1), n = this.m.bitLength();
      for (n = new f(2 * n * n).toRed(this);this.pow(n, l).cmp(b) !== 0; )
        n.redIAdd(b);
      for (var d = this.pow(n, s), w = this.pow(i, s.addn(1).iushrn(1)), g = this.pow(i, s), _ = u;g.cmp(c) !== 0; ) {
        for (var A = g, R = 0;A.cmp(c) !== 0; R++)
          A = A.redSqr();
        r2(R < _);
        var I = this.pow(d, new f(1).iushln(_ - R - 1));
        w = w.redMul(I), d = I.redSqr(), g = g.redMul(d), _ = R;
      }
      return w;
    }, P.prototype.invm = function(i) {
      var a2 = i._invmp(this.m);
      return a2.negative !== 0 ? (a2.negative = 0, this.imod(a2).redNeg()) : this.imod(a2);
    }, P.prototype.pow = function(i, a2) {
      if (a2.isZero())
        return new f(1).toRed(this);
      if (a2.cmpn(1) === 0)
        return i.clone();
      var h = 4, s = new Array(1 << h);
      s[0] = new f(1).toRed(this), s[1] = i;
      for (var u = 2;u < s.length; u++)
        s[u] = this.mul(s[u - 1], i);
      var c = s[0], b = 0, l = 0, n = a2.bitLength() % 26;
      for (n === 0 && (n = 26), u = a2.length - 1;u >= 0; u--) {
        for (var d = a2.words[u], w = n - 1;w >= 0; w--) {
          var g = d >> w & 1;
          if (c !== s[0] && (c = this.sqr(c)), g === 0 && b === 0) {
            l = 0;
            continue;
          }
          b <<= 1, b |= g, l++, !(l !== h && (u !== 0 || w !== 0)) && (c = this.mul(c, s[b]), l = 0, b = 0);
        }
        n = 26;
      }
      return c;
    }, P.prototype.convertTo = function(i) {
      var a2 = i.umod(this.m);
      return a2 === i ? a2.clone() : a2;
    }, P.prototype.convertFrom = function(i) {
      var a2 = i.clone();
      return a2.red = null, a2;
    }, f.mont = function(i) {
      return new Se(i);
    };
    function Se(v) {
      P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(Se, P), Se.prototype.convertTo = function(i) {
      return this.imod(i.ushln(this.shift));
    }, Se.prototype.convertFrom = function(i) {
      var a2 = this.imod(i.mul(this.rinv));
      return a2.red = null, a2;
    }, Se.prototype.imul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return i.words[0] = 0, i.length = 1, i;
      var h = i.imul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.mul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return new f(0)._forceRed(this);
      var h = i.mul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.invm = function(i) {
      var a2 = this.imod(i._invmp(this.m).mul(this.r2));
      return a2._forceRed(this);
    };
  })(typeof Ll > "u" || Ll, h2);
});
var Nl = T((d2) => {
  var js = d2;
  function uA(t3, e2) {
    if (Array.isArray(t3))
      return t3.slice();
    if (!t3)
      return [];
    var r2 = [];
    if (typeof t3 != "string") {
      for (var o = 0;o < t3.length; o++)
        r2[o] = t3[o] | 0;
      return r2;
    }
    if (e2 === "hex") {
      t3 = t3.replace(/[^a-z0-9]+/ig, ""), t3.length % 2 !== 0 && (t3 = "0" + t3);
      for (var o = 0;o < t3.length; o += 2)
        r2.push(parseInt(t3[o] + t3[o + 1], 16));
    } else
      for (var o = 0;o < t3.length; o++) {
        var f = t3.charCodeAt(o), p = f >> 8, m = f & 255;
        p ? r2.push(p, m) : r2.push(m);
      }
    return r2;
  }
  js.toArray = uA;
  function u2(t3) {
    return t3.length === 1 ? "0" + t3 : t3;
  }
  js.zero2 = u2;
  function l2(t3) {
    for (var e2 = "", r2 = 0;r2 < t3.length; r2++)
      e2 += u2(t3[r2].toString(16));
    return e2;
  }
  js.toHex = l2;
  js.encode = function(e2, r2) {
    return r2 === "hex" ? l2(e2) : e2;
  };
});
var or = T((c2) => {
  var Pr = c2, lA = ri(), dA = ar(), Zs = Nl();
  Pr.assert = dA;
  Pr.toArray = Zs.toArray;
  Pr.zero2 = Zs.zero2;
  Pr.toHex = Zs.toHex;
  Pr.encode = Zs.encode;
  function cA(t3, e2, r2) {
    var o = new Array(Math.max(t3.bitLength(), r2) + 1);
    o.fill(0);
    for (var f = 1 << e2 + 1, p = t3.clone(), m = 0;m < o.length; m++) {
      var y, M = p.andln(f - 1);
      p.isOdd() ? (M > (f >> 1) - 1 ? y = (f >> 1) - M : y = M, p.isubn(y)) : y = 0, o[m] = y, p.iushrn(1);
    }
    return o;
  }
  Pr.getNAF = cA;
  function pA(t3, e2) {
    var r2 = [[], []];
    t3 = t3.clone(), e2 = e2.clone();
    for (var o = 0, f = 0, p;t3.cmpn(-o) > 0 || e2.cmpn(-f) > 0; ) {
      var m = t3.andln(3) + o & 3, y = e2.andln(3) + f & 3;
      m === 3 && (m = -1), y === 3 && (y = -1);
      var M;
      (m & 1) === 0 ? M = 0 : (p = t3.andln(7) + o & 7, (p === 3 || p === 5) && y === 2 ? M = -m : M = m), r2[0].push(M);
      var x;
      (y & 1) === 0 ? x = 0 : (p = e2.andln(7) + f & 7, (p === 3 || p === 5) && m === 2 ? x = -y : x = y), r2[1].push(x), 2 * o === M + 1 && (o = 1 - o), 2 * f === x + 1 && (f = 1 - f), t3.iushrn(1), e2.iushrn(1);
    }
    return r2;
  }
  Pr.getJSF = pA;
  function vA(t3, e2, r2) {
    var o = "_" + e2;
    t3.prototype[e2] = function() {
      return this[o] !== undefined ? this[o] : this[o] = r2.call(this);
    };
  }
  Pr.cachedProperty = vA;
  function bA(t3) {
    return typeof t3 == "string" ? Pr.toArray(t3, "hex") : t3;
  }
  Pr.parseBytes = bA;
  function mA(t3) {
    return new lA(t3, "hex", "le");
  }
  Pr.intFromLE = mA;
});
var Oa = T((xk, p2) => {
  var Cn = ri(), Ca = or(), Vs = Ca.getNAF, gA = Ca.getJSF, $s = Ca.assert;
  function Xi(t3, e2) {
    this.type = t3, this.p = new Cn(e2.p, 16), this.red = e2.prime ? Cn.red(e2.prime) : Cn.mont(this.p), this.zero = new Cn(0).toRed(this.red), this.one = new Cn(1).toRed(this.red), this.two = new Cn(2).toRed(this.red), this.n = e2.n && new Cn(e2.n, 16), this.g = e2.g && this.pointFromJSON(e2.g, e2.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
    var r2 = this.n && this.p.div(this.n);
    !r2 || r2.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
  }
  p2.exports = Xi;
  Xi.prototype.point = function() {
    throw new Error("Not implemented");
  };
  Xi.prototype.validate = function() {
    throw new Error("Not implemented");
  };
  Xi.prototype._fixedNafMul = function(e2, r2) {
    $s(e2.precomputed);
    var o = e2._getDoubles(), f = Vs(r2, 1, this._bitLength), p = (1 << o.step + 1) - (o.step % 2 === 0 ? 2 : 1);
    p /= 3;
    var m = [], y, M;
    for (y = 0;y < f.length; y += o.step) {
      M = 0;
      for (var x = y + o.step - 1;x >= y; x--)
        M = (M << 1) + f[x];
      m.push(M);
    }
    for (var S = this.jpoint(null, null, null), E = this.jpoint(null, null, null), B = p;B > 0; B--) {
      for (y = 0;y < m.length; y++)
        M = m[y], M === B ? E = E.mixedAdd(o.points[y]) : M === -B && (E = E.mixedAdd(o.points[y].neg()));
      S = S.add(E);
    }
    return S.toP();
  };
  Xi.prototype._wnafMul = function(e2, r2) {
    var o = 4, f = e2._getNAFPoints(o);
    o = f.wnd;
    for (var p = f.points, m = Vs(r2, o, this._bitLength), y = this.jpoint(null, null, null), M = m.length - 1;M >= 0; M--) {
      for (var x = 0;M >= 0 && m[M] === 0; M--)
        x++;
      if (M >= 0 && x++, y = y.dblp(x), M < 0)
        break;
      var S = m[M];
      $s(S !== 0), e2.type === "affine" ? S > 0 ? y = y.mixedAdd(p[S - 1 >> 1]) : y = y.mixedAdd(p[-S - 1 >> 1].neg()) : S > 0 ? y = y.add(p[S - 1 >> 1]) : y = y.add(p[-S - 1 >> 1].neg());
    }
    return e2.type === "affine" ? y.toP() : y;
  };
  Xi.prototype._wnafMulAdd = function(e2, r2, o, f, p) {
    var m = this._wnafT1, y = this._wnafT2, M = this._wnafT3, x = 0, S, E, B;
    for (S = 0;S < f; S++) {
      B = r2[S];
      var q = B._getNAFPoints(e2);
      m[S] = q.wnd, y[S] = q.points;
    }
    for (S = f - 1;S >= 1; S -= 2) {
      var L = S - 1, ge = S;
      if (m[L] !== 1 || m[ge] !== 1) {
        M[L] = Vs(o[L], m[L], this._bitLength), M[ge] = Vs(o[ge], m[ge], this._bitLength), x = Math.max(M[L].length, x), x = Math.max(M[ge].length, x);
        continue;
      }
      var _e = [r2[L], null, null, r2[ge]];
      r2[L].y.cmp(r2[ge].y) === 0 ? (_e[1] = r2[L].add(r2[ge]), _e[2] = r2[L].toJ().mixedAdd(r2[ge].neg())) : r2[L].y.cmp(r2[ge].y.redNeg()) === 0 ? (_e[1] = r2[L].toJ().mixedAdd(r2[ge]), _e[2] = r2[L].add(r2[ge].neg())) : (_e[1] = r2[L].toJ().mixedAdd(r2[ge]), _e[2] = r2[L].toJ().mixedAdd(r2[ge].neg()));
      var N = [-3, -1, -5, -7, 0, 7, 5, 1, 3], we = gA(o[L], o[ge]);
      for (x = Math.max(we[0].length, x), M[L] = new Array(x), M[ge] = new Array(x), E = 0;E < x; E++) {
        var ye = we[0][E] | 0, xe = we[1][E] | 0;
        M[L][E] = N[(ye + 1) * 3 + (xe + 1)], M[ge][E] = 0, y[L] = _e;
      }
    }
    var Re = this.jpoint(null, null, null), Ee = this._wnafT4;
    for (S = x;S >= 0; S--) {
      for (var Ae = 0;S >= 0; ) {
        var P = true;
        for (E = 0;E < f; E++)
          Ee[E] = M[E][S] | 0, Ee[E] !== 0 && (P = false);
        if (!P)
          break;
        Ae++, S--;
      }
      if (S >= 0 && Ae++, Re = Re.dblp(Ae), S < 0)
        break;
      for (E = 0;E < f; E++) {
        var Se = Ee[E];
        Se !== 0 && (Se > 0 ? B = y[E][Se - 1 >> 1] : Se < 0 && (B = y[E][-Se - 1 >> 1].neg()), B.type === "affine" ? Re = Re.mixedAdd(B) : Re = Re.add(B));
      }
    }
    for (S = 0;S < f; S++)
      y[S] = null;
    return p ? Re : Re.toP();
  };
  function _r(t3, e2) {
    this.curve = t3, this.type = e2, this.precomputed = null;
  }
  Xi.BasePoint = _r;
  _r.prototype.eq = function() {
    throw new Error("Not implemented");
  };
  _r.prototype.validate = function() {
    return this.curve.validate(this);
  };
  Xi.prototype.decodePoint = function(e2, r2) {
    e2 = Ca.toArray(e2, r2);
    var o = this.p.byteLength();
    if ((e2[0] === 4 || e2[0] === 6 || e2[0] === 7) && e2.length - 1 === 2 * o) {
      e2[0] === 6 ? $s(e2[e2.length - 1] % 2 === 0) : e2[0] === 7 && $s(e2[e2.length - 1] % 2 === 1);
      var f = this.point(e2.slice(1, 1 + o), e2.slice(1 + o, 1 + 2 * o));
      return f;
    } else if ((e2[0] === 2 || e2[0] === 3) && e2.length - 1 === o)
      return this.pointFromX(e2.slice(1, 1 + o), e2[0] === 3);
    throw new Error("Unknown point format");
  };
  _r.prototype.encodeCompressed = function(e2) {
    return this.encode(e2, true);
  };
  _r.prototype._encode = function(e2) {
    var r2 = this.curve.p.byteLength(), o = this.getX().toArray("be", r2);
    return e2 ? [this.getY().isEven() ? 2 : 3].concat(o) : [4].concat(o, this.getY().toArray("be", r2));
  };
  _r.prototype.encode = function(e2, r2) {
    return Ca.encode(this._encode(r2), e2);
  };
  _r.prototype.precompute = function(e2) {
    if (this.precomputed)
      return this;
    var r2 = { doubles: null, naf: null, beta: null };
    return r2.naf = this._getNAFPoints(8), r2.doubles = this._getDoubles(4, e2), r2.beta = this._getBeta(), this.precomputed = r2, this;
  };
  _r.prototype._hasDoubles = function(e2) {
    if (!this.precomputed)
      return false;
    var r2 = this.precomputed.doubles;
    return r2 ? r2.points.length >= Math.ceil((e2.bitLength() + 1) / r2.step) : false;
  };
  _r.prototype._getDoubles = function(e2, r2) {
    if (this.precomputed && this.precomputed.doubles)
      return this.precomputed.doubles;
    for (var o = [this], f = this, p = 0;p < r2; p += e2) {
      for (var m = 0;m < e2; m++)
        f = f.dbl();
      o.push(f);
    }
    return { step: e2, points: o };
  };
  _r.prototype._getNAFPoints = function(e2) {
    if (this.precomputed && this.precomputed.naf)
      return this.precomputed.naf;
    for (var r2 = [this], o = (1 << e2) - 1, f = o === 1 ? null : this.dbl(), p = 1;p < o; p++)
      r2[p] = r2[p - 1].add(f);
    return { wnd: e2, points: r2 };
  };
  _r.prototype._getBeta = function() {
    return null;
  };
  _r.prototype.dblp = function(e2) {
    for (var r2 = this, o = 0;o < e2; o++)
      r2 = r2.dbl();
    return r2;
  };
});
var b2 = T((Sk, v2) => {
  var yA = or(), lt = ri(), Dl = Ie(), Bf = Oa(), wA = yA.assert;
  function xr(t3) {
    Bf.call(this, "short", t3), this.a = new lt(t3.a, 16).toRed(this.red), this.b = new lt(t3.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(t3), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
  }
  Dl(xr, Bf);
  v2.exports = xr;
  xr.prototype._getEndomorphism = function(e2) {
    if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
      var r2, o;
      if (e2.beta)
        r2 = new lt(e2.beta, 16).toRed(this.red);
      else {
        var f = this._getEndoRoots(this.p);
        r2 = f[0].cmp(f[1]) < 0 ? f[0] : f[1], r2 = r2.toRed(this.red);
      }
      if (e2.lambda)
        o = new lt(e2.lambda, 16);
      else {
        var p = this._getEndoRoots(this.n);
        this.g.mul(p[0]).x.cmp(this.g.x.redMul(r2)) === 0 ? o = p[0] : (o = p[1], wA(this.g.mul(o).x.cmp(this.g.x.redMul(r2)) === 0));
      }
      var m;
      return e2.basis ? m = e2.basis.map(function(y) {
        return { a: new lt(y.a, 16), b: new lt(y.b, 16) };
      }) : m = this._getEndoBasis(o), { beta: r2, lambda: o, basis: m };
    }
  };
  xr.prototype._getEndoRoots = function(e2) {
    var r2 = e2 === this.p ? this.red : lt.mont(e2), o = new lt(2).toRed(r2).redInvm(), f = o.redNeg(), p = new lt(3).toRed(r2).redNeg().redSqrt().redMul(o), m = f.redAdd(p).fromRed(), y = f.redSub(p).fromRed();
    return [m, y];
  };
  xr.prototype._getEndoBasis = function(e2) {
    for (var r2 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), o = e2, f = this.n.clone(), p = new lt(1), m = new lt(0), y = new lt(0), M = new lt(1), x, S, E, B, q, L, ge, _e = 0, N, we;o.cmpn(0) !== 0; ) {
      var ye = f.div(o);
      N = f.sub(ye.mul(o)), we = y.sub(ye.mul(p));
      var xe = M.sub(ye.mul(m));
      if (!E && N.cmp(r2) < 0)
        x = ge.neg(), S = p, E = N.neg(), B = we;
      else if (E && ++_e === 2)
        break;
      ge = N, f = o, o = N, y = p, p = we, M = m, m = xe;
    }
    q = N.neg(), L = we;
    var Re = E.sqr().add(B.sqr()), Ee = q.sqr().add(L.sqr());
    return Ee.cmp(Re) >= 0 && (q = x, L = S), E.negative && (E = E.neg(), B = B.neg()), q.negative && (q = q.neg(), L = L.neg()), [{ a: E, b: B }, { a: q, b: L }];
  };
  xr.prototype._endoSplit = function(e2) {
    var r2 = this.endo.basis, o = r2[0], f = r2[1], p = f.b.mul(e2).divRound(this.n), m = o.b.neg().mul(e2).divRound(this.n), y = p.mul(o.a), M = m.mul(f.a), x = p.mul(o.b), S = m.mul(f.b), E = e2.sub(y).sub(M), B = x.add(S).neg();
    return { k1: E, k2: B };
  };
  xr.prototype.pointFromX = function(e2, r2) {
    e2 = new lt(e2, 16), e2.red || (e2 = e2.toRed(this.red));
    var o = e2.redSqr().redMul(e2).redIAdd(e2.redMul(this.a)).redIAdd(this.b), f = o.redSqrt();
    if (f.redSqr().redSub(o).cmp(this.zero) !== 0)
      throw new Error("invalid point");
    var p = f.fromRed().isOdd();
    return (r2 && !p || !r2 && p) && (f = f.redNeg()), this.point(e2, f);
  };
  xr.prototype.validate = function(e2) {
    if (e2.inf)
      return true;
    var { x: r2, y: o } = e2, f = this.a.redMul(r2), p = r2.redSqr().redMul(r2).redIAdd(f).redIAdd(this.b);
    return o.redSqr().redISub(p).cmpn(0) === 0;
  };
  xr.prototype._endoWnafMulAdd = function(e2, r2, o) {
    for (var f = this._endoWnafT1, p = this._endoWnafT2, m = 0;m < e2.length; m++) {
      var y = this._endoSplit(r2[m]), M = e2[m], x = M._getBeta();
      y.k1.negative && (y.k1.ineg(), M = M.neg(true)), y.k2.negative && (y.k2.ineg(), x = x.neg(true)), f[m * 2] = M, f[m * 2 + 1] = x, p[m * 2] = y.k1, p[m * 2 + 1] = y.k2;
    }
    for (var S = this._wnafMulAdd(1, f, p, m * 2, o), E = 0;E < m * 2; E++)
      f[E] = null, p[E] = null;
    return S;
  };
  function Ct(t3, e2, r2, o) {
    Bf.BasePoint.call(this, t3, "affine"), e2 === null && r2 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new lt(e2, 16), this.y = new lt(r2, 16), o && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
  }
  Dl(Ct, Bf.BasePoint);
  xr.prototype.point = function(e2, r2, o) {
    return new Ct(this, e2, r2, o);
  };
  xr.prototype.pointFromJSON = function(e2, r2) {
    return Ct.fromJSON(this, e2, r2);
  };
  Ct.prototype._getBeta = function() {
    if (!!this.curve.endo) {
      var e2 = this.precomputed;
      if (e2 && e2.beta)
        return e2.beta;
      var r2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
      if (e2) {
        var o = this.curve, f = function(p) {
          return o.point(p.x.redMul(o.endo.beta), p.y);
        };
        e2.beta = r2, r2.precomputed = { beta: null, naf: e2.naf && { wnd: e2.naf.wnd, points: e2.naf.points.map(f) }, doubles: e2.doubles && { step: e2.doubles.step, points: e2.doubles.points.map(f) } };
      }
      return r2;
    }
  };
  Ct.prototype.toJSON = function() {
    return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
  };
  Ct.fromJSON = function(e2, r2, o) {
    typeof r2 == "string" && (r2 = JSON.parse(r2));
    var f = e2.point(r2[0], r2[1], o);
    if (!r2[2])
      return f;
    function p(y) {
      return e2.point(y[0], y[1], o);
    }
    var m = r2[2];
    return f.precomputed = { beta: null, doubles: m.doubles && { step: m.doubles.step, points: [f].concat(m.doubles.points.map(p)) }, naf: m.naf && { wnd: m.naf.wnd, points: [f].concat(m.naf.points.map(p)) } }, f;
  };
  Ct.prototype.inspect = function() {
    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
  };
  Ct.prototype.isInfinity = function() {
    return this.inf;
  };
  Ct.prototype.add = function(e2) {
    if (this.inf)
      return e2;
    if (e2.inf)
      return this;
    if (this.eq(e2))
      return this.dbl();
    if (this.neg().eq(e2))
      return this.curve.point(null, null);
    if (this.x.cmp(e2.x) === 0)
      return this.curve.point(null, null);
    var r2 = this.y.redSub(e2.y);
    r2.cmpn(0) !== 0 && (r2 = r2.redMul(this.x.redSub(e2.x).redInvm()));
    var o = r2.redSqr().redISub(this.x).redISub(e2.x), f = r2.redMul(this.x.redSub(o)).redISub(this.y);
    return this.curve.point(o, f);
  };
  Ct.prototype.dbl = function() {
    if (this.inf)
      return this;
    var e2 = this.y.redAdd(this.y);
    if (e2.cmpn(0) === 0)
      return this.curve.point(null, null);
    var r2 = this.curve.a, o = this.x.redSqr(), f = e2.redInvm(), p = o.redAdd(o).redIAdd(o).redIAdd(r2).redMul(f), m = p.redSqr().redISub(this.x.redAdd(this.x)), y = p.redMul(this.x.redSub(m)).redISub(this.y);
    return this.curve.point(m, y);
  };
  Ct.prototype.getX = function() {
    return this.x.fromRed();
  };
  Ct.prototype.getY = function() {
    return this.y.fromRed();
  };
  Ct.prototype.mul = function(e2) {
    return e2 = new lt(e2, 16), this.isInfinity() ? this : this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e2]) : this.curve._wnafMul(this, e2);
  };
  Ct.prototype.mulAdd = function(e2, r2, o) {
    var f = [this, r2], p = [e2, o];
    return this.curve.endo ? this.curve._endoWnafMulAdd(f, p) : this.curve._wnafMulAdd(1, f, p, 2);
  };
  Ct.prototype.jmulAdd = function(e2, r2, o) {
    var f = [this, r2], p = [e2, o];
    return this.curve.endo ? this.curve._endoWnafMulAdd(f, p, true) : this.curve._wnafMulAdd(1, f, p, 2, true);
  };
  Ct.prototype.eq = function(e2) {
    return this === e2 || this.inf === e2.inf && (this.inf || this.x.cmp(e2.x) === 0 && this.y.cmp(e2.y) === 0);
  };
  Ct.prototype.neg = function(e2) {
    if (this.inf)
      return this;
    var r2 = this.curve.point(this.x, this.y.redNeg());
    if (e2 && this.precomputed) {
      var o = this.precomputed, f = function(p) {
        return p.neg();
      };
      r2.precomputed = { naf: o.naf && { wnd: o.naf.wnd, points: o.naf.points.map(f) }, doubles: o.doubles && { step: o.doubles.step, points: o.doubles.points.map(f) } };
    }
    return r2;
  };
  Ct.prototype.toJ = function() {
    if (this.inf)
      return this.curve.jpoint(null, null, null);
    var e2 = this.curve.jpoint(this.x, this.y, this.curve.one);
    return e2;
  };
  function Wt(t3, e2, r2, o) {
    Bf.BasePoint.call(this, t3, "jacobian"), e2 === null && r2 === null && o === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new lt(0)) : (this.x = new lt(e2, 16), this.y = new lt(r2, 16), this.z = new lt(o, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
  }
  Dl(Wt, Bf.BasePoint);
  xr.prototype.jpoint = function(e2, r2, o) {
    return new Wt(this, e2, r2, o);
  };
  Wt.prototype.toP = function() {
    if (this.isInfinity())
      return this.curve.point(null, null);
    var e2 = this.z.redInvm(), r2 = e2.redSqr(), o = this.x.redMul(r2), f = this.y.redMul(r2).redMul(e2);
    return this.curve.point(o, f);
  };
  Wt.prototype.neg = function() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
  };
  Wt.prototype.add = function(e2) {
    if (this.isInfinity())
      return e2;
    if (e2.isInfinity())
      return this;
    var r2 = e2.z.redSqr(), o = this.z.redSqr(), f = this.x.redMul(r2), p = e2.x.redMul(o), m = this.y.redMul(r2.redMul(e2.z)), y = e2.y.redMul(o.redMul(this.z)), M = f.redSub(p), x = m.redSub(y);
    if (M.cmpn(0) === 0)
      return x.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
    var S = M.redSqr(), E = S.redMul(M), B = f.redMul(S), q = x.redSqr().redIAdd(E).redISub(B).redISub(B), L = x.redMul(B.redISub(q)).redISub(m.redMul(E)), ge = this.z.redMul(e2.z).redMul(M);
    return this.curve.jpoint(q, L, ge);
  };
  Wt.prototype.mixedAdd = function(e2) {
    if (this.isInfinity())
      return e2.toJ();
    if (e2.isInfinity())
      return this;
    var r2 = this.z.redSqr(), o = this.x, f = e2.x.redMul(r2), p = this.y, m = e2.y.redMul(r2).redMul(this.z), y = o.redSub(f), M = p.redSub(m);
    if (y.cmpn(0) === 0)
      return M.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
    var x = y.redSqr(), S = x.redMul(y), E = o.redMul(x), B = M.redSqr().redIAdd(S).redISub(E).redISub(E), q = M.redMul(E.redISub(B)).redISub(p.redMul(S)), L = this.z.redMul(y);
    return this.curve.jpoint(B, q, L);
  };
  Wt.prototype.dblp = function(e2) {
    if (e2 === 0)
      return this;
    if (this.isInfinity())
      return this;
    if (!e2)
      return this.dbl();
    var r2;
    if (this.curve.zeroA || this.curve.threeA) {
      var o = this;
      for (r2 = 0;r2 < e2; r2++)
        o = o.dbl();
      return o;
    }
    var f = this.curve.a, p = this.curve.tinv, m = this.x, y = this.y, M = this.z, x = M.redSqr().redSqr(), S = y.redAdd(y);
    for (r2 = 0;r2 < e2; r2++) {
      var E = m.redSqr(), B = S.redSqr(), q = B.redSqr(), L = E.redAdd(E).redIAdd(E).redIAdd(f.redMul(x)), ge = m.redMul(B), _e = L.redSqr().redISub(ge.redAdd(ge)), N = ge.redISub(_e), we = L.redMul(N);
      we = we.redIAdd(we).redISub(q);
      var ye = S.redMul(M);
      r2 + 1 < e2 && (x = x.redMul(q)), m = _e, M = ye, S = we;
    }
    return this.curve.jpoint(m, S.redMul(p), M);
  };
  Wt.prototype.dbl = function() {
    return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
  };
  Wt.prototype._zeroDbl = function() {
    var e2, r2, o;
    if (this.zOne) {
      var f = this.x.redSqr(), p = this.y.redSqr(), m = p.redSqr(), y = this.x.redAdd(p).redSqr().redISub(f).redISub(m);
      y = y.redIAdd(y);
      var M = f.redAdd(f).redIAdd(f), x = M.redSqr().redISub(y).redISub(y), S = m.redIAdd(m);
      S = S.redIAdd(S), S = S.redIAdd(S), e2 = x, r2 = M.redMul(y.redISub(x)).redISub(S), o = this.y.redAdd(this.y);
    } else {
      var E = this.x.redSqr(), B = this.y.redSqr(), q = B.redSqr(), L = this.x.redAdd(B).redSqr().redISub(E).redISub(q);
      L = L.redIAdd(L);
      var ge = E.redAdd(E).redIAdd(E), _e = ge.redSqr(), N = q.redIAdd(q);
      N = N.redIAdd(N), N = N.redIAdd(N), e2 = _e.redISub(L).redISub(L), r2 = ge.redMul(L.redISub(e2)).redISub(N), o = this.y.redMul(this.z), o = o.redIAdd(o);
    }
    return this.curve.jpoint(e2, r2, o);
  };
  Wt.prototype._threeDbl = function() {
    var e2, r2, o;
    if (this.zOne) {
      var f = this.x.redSqr(), p = this.y.redSqr(), m = p.redSqr(), y = this.x.redAdd(p).redSqr().redISub(f).redISub(m);
      y = y.redIAdd(y);
      var M = f.redAdd(f).redIAdd(f).redIAdd(this.curve.a), x = M.redSqr().redISub(y).redISub(y);
      e2 = x;
      var S = m.redIAdd(m);
      S = S.redIAdd(S), S = S.redIAdd(S), r2 = M.redMul(y.redISub(x)).redISub(S), o = this.y.redAdd(this.y);
    } else {
      var E = this.z.redSqr(), B = this.y.redSqr(), q = this.x.redMul(B), L = this.x.redSub(E).redMul(this.x.redAdd(E));
      L = L.redAdd(L).redIAdd(L);
      var ge = q.redIAdd(q);
      ge = ge.redIAdd(ge);
      var _e = ge.redAdd(ge);
      e2 = L.redSqr().redISub(_e), o = this.y.redAdd(this.z).redSqr().redISub(B).redISub(E);
      var N = B.redSqr();
      N = N.redIAdd(N), N = N.redIAdd(N), N = N.redIAdd(N), r2 = L.redMul(ge.redISub(e2)).redISub(N);
    }
    return this.curve.jpoint(e2, r2, o);
  };
  Wt.prototype._dbl = function() {
    var e2 = this.curve.a, r2 = this.x, o = this.y, f = this.z, p = f.redSqr().redSqr(), m = r2.redSqr(), y = o.redSqr(), M = m.redAdd(m).redIAdd(m).redIAdd(e2.redMul(p)), x = r2.redAdd(r2);
    x = x.redIAdd(x);
    var S = x.redMul(y), E = M.redSqr().redISub(S.redAdd(S)), B = S.redISub(E), q = y.redSqr();
    q = q.redIAdd(q), q = q.redIAdd(q), q = q.redIAdd(q);
    var L = M.redMul(B).redISub(q), ge = o.redAdd(o).redMul(f);
    return this.curve.jpoint(E, L, ge);
  };
  Wt.prototype.trpl = function() {
    if (!this.curve.zeroA)
      return this.dbl().add(this);
    var e2 = this.x.redSqr(), r2 = this.y.redSqr(), o = this.z.redSqr(), f = r2.redSqr(), p = e2.redAdd(e2).redIAdd(e2), m = p.redSqr(), y = this.x.redAdd(r2).redSqr().redISub(e2).redISub(f);
    y = y.redIAdd(y), y = y.redAdd(y).redIAdd(y), y = y.redISub(m);
    var M = y.redSqr(), x = f.redIAdd(f);
    x = x.redIAdd(x), x = x.redIAdd(x), x = x.redIAdd(x);
    var S = p.redIAdd(y).redSqr().redISub(m).redISub(M).redISub(x), E = r2.redMul(S);
    E = E.redIAdd(E), E = E.redIAdd(E);
    var B = this.x.redMul(M).redISub(E);
    B = B.redIAdd(B), B = B.redIAdd(B);
    var q = this.y.redMul(S.redMul(x.redISub(S)).redISub(y.redMul(M)));
    q = q.redIAdd(q), q = q.redIAdd(q), q = q.redIAdd(q);
    var L = this.z.redAdd(y).redSqr().redISub(o).redISub(M);
    return this.curve.jpoint(B, q, L);
  };
  Wt.prototype.mul = function(e2, r2) {
    return e2 = new lt(e2, r2), this.curve._wnafMul(this, e2);
  };
  Wt.prototype.eq = function(e2) {
    if (e2.type === "affine")
      return this.eq(e2.toJ());
    if (this === e2)
      return true;
    var r2 = this.z.redSqr(), o = e2.z.redSqr();
    if (this.x.redMul(o).redISub(e2.x.redMul(r2)).cmpn(0) !== 0)
      return false;
    var f = r2.redMul(this.z), p = o.redMul(e2.z);
    return this.y.redMul(p).redISub(e2.y.redMul(f)).cmpn(0) === 0;
  };
  Wt.prototype.eqXToP = function(e2) {
    var r2 = this.z.redSqr(), o = e2.toRed(this.curve.red).redMul(r2);
    if (this.x.cmp(o) === 0)
      return true;
    for (var f = e2.clone(), p = this.curve.redN.redMul(r2);; ) {
      if (f.iadd(this.curve.n), f.cmp(this.curve.p) >= 0)
        return false;
      if (o.redIAdd(p), this.x.cmp(o) === 0)
        return true;
    }
  };
  Wt.prototype.inspect = function() {
    return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
  };
  Wt.prototype.isInfinity = function() {
    return this.z.cmpn(0) === 0;
  };
});
var y2 = T((Ek, g2) => {
  var qf = ri(), m2 = Ie(), Gs = Oa(), MA = or();
  function If(t3) {
    Gs.call(this, "mont", t3), this.a = new qf(t3.a, 16).toRed(this.red), this.b = new qf(t3.b, 16).toRed(this.red), this.i4 = new qf(4).toRed(this.red).redInvm(), this.two = new qf(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
  }
  m2(If, Gs);
  g2.exports = If;
  If.prototype.validate = function(e2) {
    var r2 = e2.normalize().x, o = r2.redSqr(), f = o.redMul(r2).redAdd(o.redMul(this.a)).redAdd(r2), p = f.redSqrt();
    return p.redSqr().cmp(f) === 0;
  };
  function Ot(t3, e2, r2) {
    Gs.BasePoint.call(this, t3, "projective"), e2 === null && r2 === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new qf(e2, 16), this.z = new qf(r2, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
  }
  m2(Ot, Gs.BasePoint);
  If.prototype.decodePoint = function(e2, r2) {
    return this.point(MA.toArray(e2, r2), 1);
  };
  If.prototype.point = function(e2, r2) {
    return new Ot(this, e2, r2);
  };
  If.prototype.pointFromJSON = function(e2) {
    return Ot.fromJSON(this, e2);
  };
  Ot.prototype.precompute = function() {
  };
  Ot.prototype._encode = function() {
    return this.getX().toArray("be", this.curve.p.byteLength());
  };
  Ot.fromJSON = function(e2, r2) {
    return new Ot(e2, r2[0], r2[1] || e2.one);
  };
  Ot.prototype.inspect = function() {
    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
  };
  Ot.prototype.isInfinity = function() {
    return this.z.cmpn(0) === 0;
  };
  Ot.prototype.dbl = function() {
    var e2 = this.x.redAdd(this.z), r2 = e2.redSqr(), o = this.x.redSub(this.z), f = o.redSqr(), p = r2.redSub(f), m = r2.redMul(f), y = p.redMul(f.redAdd(this.curve.a24.redMul(p)));
    return this.curve.point(m, y);
  };
  Ot.prototype.add = function() {
    throw new Error("Not supported on Montgomery curve");
  };
  Ot.prototype.diffAdd = function(e2, r2) {
    var o = this.x.redAdd(this.z), f = this.x.redSub(this.z), p = e2.x.redAdd(e2.z), m = e2.x.redSub(e2.z), y = m.redMul(o), M = p.redMul(f), x = r2.z.redMul(y.redAdd(M).redSqr()), S = r2.x.redMul(y.redISub(M).redSqr());
    return this.curve.point(x, S);
  };
  Ot.prototype.mul = function(e2) {
    for (var r2 = e2.clone(), o = this, f = this.curve.point(null, null), p = this, m = [];r2.cmpn(0) !== 0; r2.iushrn(1))
      m.push(r2.andln(1));
    for (var y = m.length - 1;y >= 0; y--)
      m[y] === 0 ? (o = o.diffAdd(f, p), f = f.dbl()) : (f = o.diffAdd(f, p), o = o.dbl());
    return f;
  };
  Ot.prototype.mulAdd = function() {
    throw new Error("Not supported on Montgomery curve");
  };
  Ot.prototype.jumlAdd = function() {
    throw new Error("Not supported on Montgomery curve");
  };
  Ot.prototype.eq = function(e2) {
    return this.getX().cmp(e2.getX()) === 0;
  };
  Ot.prototype.normalize = function() {
    return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
  };
  Ot.prototype.getX = function() {
    return this.normalize(), this.x.fromRed();
  };
});
var _2 = T((Ak, M2) => {
  var _A = or(), Ai = ri(), w2 = Ie(), Ys = Oa(), xA = _A.assert;
  function ii(t3) {
    this.twisted = (t3.a | 0) !== 1, this.mOneA = this.twisted && (t3.a | 0) === -1, this.extended = this.mOneA, Ys.call(this, "edwards", t3), this.a = new Ai(t3.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new Ai(t3.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new Ai(t3.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), xA(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (t3.c | 0) === 1;
  }
  w2(ii, Ys);
  M2.exports = ii;
  ii.prototype._mulA = function(e2) {
    return this.mOneA ? e2.redNeg() : this.a.redMul(e2);
  };
  ii.prototype._mulC = function(e2) {
    return this.oneC ? e2 : this.c.redMul(e2);
  };
  ii.prototype.jpoint = function(e2, r2, o, f) {
    return this.point(e2, r2, o, f);
  };
  ii.prototype.pointFromX = function(e2, r2) {
    e2 = new Ai(e2, 16), e2.red || (e2 = e2.toRed(this.red));
    var o = e2.redSqr(), f = this.c2.redSub(this.a.redMul(o)), p = this.one.redSub(this.c2.redMul(this.d).redMul(o)), m = f.redMul(p.redInvm()), y = m.redSqrt();
    if (y.redSqr().redSub(m).cmp(this.zero) !== 0)
      throw new Error("invalid point");
    var M = y.fromRed().isOdd();
    return (r2 && !M || !r2 && M) && (y = y.redNeg()), this.point(e2, y);
  };
  ii.prototype.pointFromY = function(e2, r2) {
    e2 = new Ai(e2, 16), e2.red || (e2 = e2.toRed(this.red));
    var o = e2.redSqr(), f = o.redSub(this.c2), p = o.redMul(this.d).redMul(this.c2).redSub(this.a), m = f.redMul(p.redInvm());
    if (m.cmp(this.zero) === 0) {
      if (r2)
        throw new Error("invalid point");
      return this.point(this.zero, e2);
    }
    var y = m.redSqrt();
    if (y.redSqr().redSub(m).cmp(this.zero) !== 0)
      throw new Error("invalid point");
    return y.fromRed().isOdd() !== r2 && (y = y.redNeg()), this.point(y, e2);
  };
  ii.prototype.validate = function(e2) {
    if (e2.isInfinity())
      return true;
    e2.normalize();
    var r2 = e2.x.redSqr(), o = e2.y.redSqr(), f = r2.redMul(this.a).redAdd(o), p = this.c2.redMul(this.one.redAdd(this.d.redMul(r2).redMul(o)));
    return f.cmp(p) === 0;
  };
  function at(t3, e2, r2, o, f) {
    Ys.BasePoint.call(this, t3, "projective"), e2 === null && r2 === null && o === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new Ai(e2, 16), this.y = new Ai(r2, 16), this.z = o ? new Ai(o, 16) : this.curve.one, this.t = f && new Ai(f, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
  }
  w2(at, Ys.BasePoint);
  ii.prototype.pointFromJSON = function(e2) {
    return at.fromJSON(this, e2);
  };
  ii.prototype.point = function(e2, r2, o, f) {
    return new at(this, e2, r2, o, f);
  };
  at.fromJSON = function(e2, r2) {
    return new at(e2, r2[0], r2[1], r2[2]);
  };
  at.prototype.inspect = function() {
    return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
  };
  at.prototype.isInfinity = function() {
    return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
  };
  at.prototype._extDbl = function() {
    var e2 = this.x.redSqr(), r2 = this.y.redSqr(), o = this.z.redSqr();
    o = o.redIAdd(o);
    var f = this.curve._mulA(e2), p = this.x.redAdd(this.y).redSqr().redISub(e2).redISub(r2), m = f.redAdd(r2), y = m.redSub(o), M = f.redSub(r2), x = p.redMul(y), S = m.redMul(M), E = p.redMul(M), B = y.redMul(m);
    return this.curve.point(x, S, B, E);
  };
  at.prototype._projDbl = function() {
    var e2 = this.x.redAdd(this.y).redSqr(), r2 = this.x.redSqr(), o = this.y.redSqr(), f, p, m, y, M, x;
    if (this.curve.twisted) {
      y = this.curve._mulA(r2);
      var S = y.redAdd(o);
      this.zOne ? (f = e2.redSub(r2).redSub(o).redMul(S.redSub(this.curve.two)), p = S.redMul(y.redSub(o)), m = S.redSqr().redSub(S).redSub(S)) : (M = this.z.redSqr(), x = S.redSub(M).redISub(M), f = e2.redSub(r2).redISub(o).redMul(x), p = S.redMul(y.redSub(o)), m = S.redMul(x));
    } else
      y = r2.redAdd(o), M = this.curve._mulC(this.z).redSqr(), x = y.redSub(M).redSub(M), f = this.curve._mulC(e2.redISub(y)).redMul(x), p = this.curve._mulC(y).redMul(r2.redISub(o)), m = y.redMul(x);
    return this.curve.point(f, p, m);
  };
  at.prototype.dbl = function() {
    return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
  };
  at.prototype._extAdd = function(e2) {
    var r2 = this.y.redSub(this.x).redMul(e2.y.redSub(e2.x)), o = this.y.redAdd(this.x).redMul(e2.y.redAdd(e2.x)), f = this.t.redMul(this.curve.dd).redMul(e2.t), p = this.z.redMul(e2.z.redAdd(e2.z)), m = o.redSub(r2), y = p.redSub(f), M = p.redAdd(f), x = o.redAdd(r2), S = m.redMul(y), E = M.redMul(x), B = m.redMul(x), q = y.redMul(M);
    return this.curve.point(S, E, q, B);
  };
  at.prototype._projAdd = function(e2) {
    var r2 = this.z.redMul(e2.z), o = r2.redSqr(), f = this.x.redMul(e2.x), p = this.y.redMul(e2.y), m = this.curve.d.redMul(f).redMul(p), y = o.redSub(m), M = o.redAdd(m), x = this.x.redAdd(this.y).redMul(e2.x.redAdd(e2.y)).redISub(f).redISub(p), S = r2.redMul(y).redMul(x), E, B;
    return this.curve.twisted ? (E = r2.redMul(M).redMul(p.redSub(this.curve._mulA(f))), B = y.redMul(M)) : (E = r2.redMul(M).redMul(p.redSub(f)), B = this.curve._mulC(y).redMul(M)), this.curve.point(S, E, B);
  };
  at.prototype.add = function(e2) {
    return this.isInfinity() ? e2 : e2.isInfinity() ? this : this.curve.extended ? this._extAdd(e2) : this._projAdd(e2);
  };
  at.prototype.mul = function(e2) {
    return this._hasDoubles(e2) ? this.curve._fixedNafMul(this, e2) : this.curve._wnafMul(this, e2);
  };
  at.prototype.mulAdd = function(e2, r2, o) {
    return this.curve._wnafMulAdd(1, [this, r2], [e2, o], 2, false);
  };
  at.prototype.jmulAdd = function(e2, r2, o) {
    return this.curve._wnafMulAdd(1, [this, r2], [e2, o], 2, true);
  };
  at.prototype.normalize = function() {
    if (this.zOne)
      return this;
    var e2 = this.z.redInvm();
    return this.x = this.x.redMul(e2), this.y = this.y.redMul(e2), this.t && (this.t = this.t.redMul(e2)), this.z = this.curve.one, this.zOne = true, this;
  };
  at.prototype.neg = function() {
    return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
  };
  at.prototype.getX = function() {
    return this.normalize(), this.x.fromRed();
  };
  at.prototype.getY = function() {
    return this.normalize(), this.y.fromRed();
  };
  at.prototype.eq = function(e2) {
    return this === e2 || this.getX().cmp(e2.getX()) === 0 && this.getY().cmp(e2.getY()) === 0;
  };
  at.prototype.eqXToP = function(e2) {
    var r2 = e2.toRed(this.curve.red).redMul(this.z);
    if (this.x.cmp(r2) === 0)
      return true;
    for (var o = e2.clone(), f = this.curve.redN.redMul(this.z);; ) {
      if (o.iadd(this.curve.n), o.cmp(this.curve.p) >= 0)
        return false;
      if (r2.redIAdd(f), this.x.cmp(r2) === 0)
        return true;
    }
  };
  at.prototype.toP = at.prototype.normalize;
  at.prototype.mixedAdd = at.prototype.add;
});
var Pl = T((x2) => {
  var Xs = x2;
  Xs.base = Oa();
  Xs.short = b2();
  Xs.mont = y2();
  Xs.edwards = _2();
});
var Cr = T((it) => {
  var SA = ar(), EA = Ie();
  it.inherits = EA;
  function AA(t3, e2) {
    return (t3.charCodeAt(e2) & 64512) !== 55296 || e2 < 0 || e2 + 1 >= t3.length ? false : (t3.charCodeAt(e2 + 1) & 64512) === 56320;
  }
  function RA(t3, e2) {
    if (Array.isArray(t3))
      return t3.slice();
    if (!t3)
      return [];
    var r2 = [];
    if (typeof t3 == "string")
      if (e2) {
        if (e2 === "hex")
          for (t3 = t3.replace(/[^a-z0-9]+/ig, ""), t3.length % 2 !== 0 && (t3 = "0" + t3), f = 0;f < t3.length; f += 2)
            r2.push(parseInt(t3[f] + t3[f + 1], 16));
      } else
        for (var o = 0, f = 0;f < t3.length; f++) {
          var p = t3.charCodeAt(f);
          p < 128 ? r2[o++] = p : p < 2048 ? (r2[o++] = p >> 6 | 192, r2[o++] = p & 63 | 128) : AA(t3, f) ? (p = 65536 + ((p & 1023) << 10) + (t3.charCodeAt(++f) & 1023), r2[o++] = p >> 18 | 240, r2[o++] = p >> 12 & 63 | 128, r2[o++] = p >> 6 & 63 | 128, r2[o++] = p & 63 | 128) : (r2[o++] = p >> 12 | 224, r2[o++] = p >> 6 & 63 | 128, r2[o++] = p & 63 | 128);
        }
    else
      for (f = 0;f < t3.length; f++)
        r2[f] = t3[f] | 0;
    return r2;
  }
  it.toArray = RA;
  function BA(t3) {
    for (var e2 = "", r2 = 0;r2 < t3.length; r2++)
      e2 += E2(t3[r2].toString(16));
    return e2;
  }
  it.toHex = BA;
  function S2(t3) {
    var e2 = t3 >>> 24 | t3 >>> 8 & 65280 | t3 << 8 & 16711680 | (t3 & 255) << 24;
    return e2 >>> 0;
  }
  it.htonl = S2;
  function qA(t3, e2) {
    for (var r2 = "", o = 0;o < t3.length; o++) {
      var f = t3[o];
      e2 === "little" && (f = S2(f)), r2 += A2(f.toString(16));
    }
    return r2;
  }
  it.toHex32 = qA;
  function E2(t3) {
    return t3.length === 1 ? "0" + t3 : t3;
  }
  it.zero2 = E2;
  function A2(t3) {
    return t3.length === 7 ? "0" + t3 : t3.length === 6 ? "00" + t3 : t3.length === 5 ? "000" + t3 : t3.length === 4 ? "0000" + t3 : t3.length === 3 ? "00000" + t3 : t3.length === 2 ? "000000" + t3 : t3.length === 1 ? "0000000" + t3 : t3;
  }
  it.zero8 = A2;
  function IA(t3, e2, r2, o) {
    var f = r2 - e2;
    SA(f % 4 === 0);
    for (var p = new Array(f / 4), m = 0, y = e2;m < p.length; m++, y += 4) {
      var M;
      o === "big" ? M = t3[y] << 24 | t3[y + 1] << 16 | t3[y + 2] << 8 | t3[y + 3] : M = t3[y + 3] << 24 | t3[y + 2] << 16 | t3[y + 1] << 8 | t3[y], p[m] = M >>> 0;
    }
    return p;
  }
  it.join32 = IA;
  function TA(t3, e2) {
    for (var r2 = new Array(t3.length * 4), o = 0, f = 0;o < t3.length; o++, f += 4) {
      var p = t3[o];
      e2 === "big" ? (r2[f] = p >>> 24, r2[f + 1] = p >>> 16 & 255, r2[f + 2] = p >>> 8 & 255, r2[f + 3] = p & 255) : (r2[f + 3] = p >>> 24, r2[f + 2] = p >>> 16 & 255, r2[f + 1] = p >>> 8 & 255, r2[f] = p & 255);
    }
    return r2;
  }
  it.split32 = TA;
  function kA(t3, e2) {
    return t3 >>> e2 | t3 << 32 - e2;
  }
  it.rotr32 = kA;
  function LA(t3, e2) {
    return t3 << e2 | t3 >>> 32 - e2;
  }
  it.rotl32 = LA;
  function NA(t3, e2) {
    return t3 + e2 >>> 0;
  }
  it.sum32 = NA;
  function DA(t3, e2, r2) {
    return t3 + e2 + r2 >>> 0;
  }
  it.sum32_3 = DA;
  function PA(t3, e2, r2, o) {
    return t3 + e2 + r2 + o >>> 0;
  }
  it.sum32_4 = PA;
  function CA(t3, e2, r2, o, f) {
    return t3 + e2 + r2 + o + f >>> 0;
  }
  it.sum32_5 = CA;
  function OA(t3, e2, r2, o) {
    var f = t3[e2], p = t3[e2 + 1], m = o + p >>> 0, y = (m < o ? 1 : 0) + r2 + f;
    t3[e2] = y >>> 0, t3[e2 + 1] = m;
  }
  it.sum64 = OA;
  function FA(t3, e2, r2, o) {
    var f = e2 + o >>> 0, p = (f < e2 ? 1 : 0) + t3 + r2;
    return p >>> 0;
  }
  it.sum64_hi = FA;
  function UA(t3, e2, r2, o) {
    var f = e2 + o;
    return f >>> 0;
  }
  it.sum64_lo = UA;
  function zA(t3, e2, r2, o, f, p, m, y) {
    var M = 0, x = e2;
    x = x + o >>> 0, M += x < e2 ? 1 : 0, x = x + p >>> 0, M += x < p ? 1 : 0, x = x + y >>> 0, M += x < y ? 1 : 0;
    var S = t3 + r2 + f + m + M;
    return S >>> 0;
  }
  it.sum64_4_hi = zA;
  function HA(t3, e2, r2, o, f, p, m, y) {
    var M = e2 + o + p + y;
    return M >>> 0;
  }
  it.sum64_4_lo = HA;
  function WA(t3, e2, r2, o, f, p, m, y, M, x) {
    var S = 0, E = e2;
    E = E + o >>> 0, S += E < e2 ? 1 : 0, E = E + p >>> 0, S += E < p ? 1 : 0, E = E + y >>> 0, S += E < y ? 1 : 0, E = E + x >>> 0, S += E < x ? 1 : 0;
    var B = t3 + r2 + f + m + M + S;
    return B >>> 0;
  }
  it.sum64_5_hi = WA;
  function KA(t3, e2, r2, o, f, p, m, y, M, x) {
    var S = e2 + o + p + y + x;
    return S >>> 0;
  }
  it.sum64_5_lo = KA;
  function jA(t3, e2, r2) {
    var o = e2 << 32 - r2 | t3 >>> r2;
    return o >>> 0;
  }
  it.rotr64_hi = jA;
  function ZA(t3, e2, r2) {
    var o = t3 << 32 - r2 | e2 >>> r2;
    return o >>> 0;
  }
  it.rotr64_lo = ZA;
  function VA(t3, e2, r2) {
    return t3 >>> r2;
  }
  it.shr64_hi = VA;
  function $A(t3, e2, r2) {
    var o = t3 << 32 - r2 | e2 >>> r2;
    return o >>> 0;
  }
  it.shr64_lo = $A;
});
var Tf = T((B2) => {
  var R2 = Cr(), GA = ar();
  function Js() {
    this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
  }
  B2.BlockHash = Js;
  Js.prototype.update = function(e2, r2) {
    if (e2 = R2.toArray(e2, r2), this.pending ? this.pending = this.pending.concat(e2) : this.pending = e2, this.pendingTotal += e2.length, this.pending.length >= this._delta8) {
      e2 = this.pending;
      var o = e2.length % this._delta8;
      this.pending = e2.slice(e2.length - o, e2.length), this.pending.length === 0 && (this.pending = null), e2 = R2.join32(e2, 0, e2.length - o, this.endian);
      for (var f = 0;f < e2.length; f += this._delta32)
        this._update(e2, f, f + this._delta32);
    }
    return this;
  };
  Js.prototype.digest = function(e2) {
    return this.update(this._pad()), GA(this.pending === null), this._digest(e2);
  };
  Js.prototype._pad = function() {
    var e2 = this.pendingTotal, r2 = this._delta8, o = r2 - (e2 + this.padLength) % r2, f = new Array(o + this.padLength);
    f[0] = 128;
    for (var p = 1;p < o; p++)
      f[p] = 0;
    if (e2 <<= 3, this.endian === "big") {
      for (var m = 8;m < this.padLength; m++)
        f[p++] = 0;
      f[p++] = 0, f[p++] = 0, f[p++] = 0, f[p++] = 0, f[p++] = e2 >>> 24 & 255, f[p++] = e2 >>> 16 & 255, f[p++] = e2 >>> 8 & 255, f[p++] = e2 & 255;
    } else
      for (f[p++] = e2 & 255, f[p++] = e2 >>> 8 & 255, f[p++] = e2 >>> 16 & 255, f[p++] = e2 >>> 24 & 255, f[p++] = 0, f[p++] = 0, f[p++] = 0, f[p++] = 0, m = 8;m < this.padLength; m++)
        f[p++] = 0;
    return f;
  };
});
var Cl = T((Ri) => {
  var YA = Cr(), ni = YA.rotr32;
  function XA(t3, e2, r2, o) {
    if (t3 === 0)
      return q2(e2, r2, o);
    if (t3 === 1 || t3 === 3)
      return T2(e2, r2, o);
    if (t3 === 2)
      return I2(e2, r2, o);
  }
  Ri.ft_1 = XA;
  function q2(t3, e2, r2) {
    return t3 & e2 ^ ~t3 & r2;
  }
  Ri.ch32 = q2;
  function I2(t3, e2, r2) {
    return t3 & e2 ^ t3 & r2 ^ e2 & r2;
  }
  Ri.maj32 = I2;
  function T2(t3, e2, r2) {
    return t3 ^ e2 ^ r2;
  }
  Ri.p32 = T2;
  function JA(t3) {
    return ni(t3, 2) ^ ni(t3, 13) ^ ni(t3, 22);
  }
  Ri.s0_256 = JA;
  function QA(t3) {
    return ni(t3, 6) ^ ni(t3, 11) ^ ni(t3, 25);
  }
  Ri.s1_256 = QA;
  function eR(t3) {
    return ni(t3, 7) ^ ni(t3, 18) ^ t3 >>> 3;
  }
  Ri.g0_256 = eR;
  function tR(t3) {
    return ni(t3, 17) ^ ni(t3, 19) ^ t3 >>> 10;
  }
  Ri.g1_256 = tR;
});
var N2 = T((Tk, L2) => {
  var kf = Cr(), rR = Tf(), iR = Cl(), Ol = kf.rotl32, Fa = kf.sum32, nR = kf.sum32_5, fR = iR.ft_1, k2 = rR.BlockHash, aR = [1518500249, 1859775393, 2400959708, 3395469782];
  function fi() {
    if (!(this instanceof fi))
      return new fi;
    k2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
  }
  kf.inherits(fi, k2);
  L2.exports = fi;
  fi.blockSize = 512;
  fi.outSize = 160;
  fi.hmacStrength = 80;
  fi.padLength = 64;
  fi.prototype._update = function(e2, r2) {
    for (var o = this.W, f = 0;f < 16; f++)
      o[f] = e2[r2 + f];
    for (;f < o.length; f++)
      o[f] = Ol(o[f - 3] ^ o[f - 8] ^ o[f - 14] ^ o[f - 16], 1);
    var p = this.h[0], m = this.h[1], y = this.h[2], M = this.h[3], x = this.h[4];
    for (f = 0;f < o.length; f++) {
      var S = ~~(f / 20), E = nR(Ol(p, 5), fR(S, m, y, M), x, o[f], aR[S]);
      x = M, M = y, y = Ol(m, 30), m = p, p = E;
    }
    this.h[0] = Fa(this.h[0], p), this.h[1] = Fa(this.h[1], m), this.h[2] = Fa(this.h[2], y), this.h[3] = Fa(this.h[3], M), this.h[4] = Fa(this.h[4], x);
  };
  fi.prototype._digest = function(e2) {
    return e2 === "hex" ? kf.toHex32(this.h, "big") : kf.split32(this.h, "big");
  };
});
var Fl = T((kk, P2) => {
  var Lf = Cr(), oR = Tf(), Nf = Cl(), sR = ar(), Or2 = Lf.sum32, hR = Lf.sum32_4, uR = Lf.sum32_5, lR = Nf.ch32, dR = Nf.maj32, cR = Nf.s0_256, pR = Nf.s1_256, vR = Nf.g0_256, bR = Nf.g1_256, D2 = oR.BlockHash, mR = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
  function ai() {
    if (!(this instanceof ai))
      return new ai;
    D2.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = mR, this.W = new Array(64);
  }
  Lf.inherits(ai, D2);
  P2.exports = ai;
  ai.blockSize = 512;
  ai.outSize = 256;
  ai.hmacStrength = 192;
  ai.padLength = 64;
  ai.prototype._update = function(e2, r2) {
    for (var o = this.W, f = 0;f < 16; f++)
      o[f] = e2[r2 + f];
    for (;f < o.length; f++)
      o[f] = hR(bR(o[f - 2]), o[f - 7], vR(o[f - 15]), o[f - 16]);
    var p = this.h[0], m = this.h[1], y = this.h[2], M = this.h[3], x = this.h[4], S = this.h[5], E = this.h[6], B = this.h[7];
    for (sR(this.k.length === o.length), f = 0;f < o.length; f++) {
      var q = uR(B, pR(x), lR(x, S, E), this.k[f], o[f]), L = Or2(cR(p), dR(p, m, y));
      B = E, E = S, S = x, x = Or2(M, q), M = y, y = m, m = p, p = Or2(q, L);
    }
    this.h[0] = Or2(this.h[0], p), this.h[1] = Or2(this.h[1], m), this.h[2] = Or2(this.h[2], y), this.h[3] = Or2(this.h[3], M), this.h[4] = Or2(this.h[4], x), this.h[5] = Or2(this.h[5], S), this.h[6] = Or2(this.h[6], E), this.h[7] = Or2(this.h[7], B);
  };
  ai.prototype._digest = function(e2) {
    return e2 === "hex" ? Lf.toHex32(this.h, "big") : Lf.split32(this.h, "big");
  };
});
var F2 = T((Lk, O2) => {
  var Ul = Cr(), C2 = Fl();
  function Bi() {
    if (!(this instanceof Bi))
      return new Bi;
    C2.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
  }
  Ul.inherits(Bi, C2);
  O2.exports = Bi;
  Bi.blockSize = 512;
  Bi.outSize = 224;
  Bi.hmacStrength = 192;
  Bi.padLength = 64;
  Bi.prototype._digest = function(e2) {
    return e2 === "hex" ? Ul.toHex32(this.h.slice(0, 7), "big") : Ul.split32(this.h.slice(0, 7), "big");
  };
});
var Wl = T((Nk, W2) => {
  var ir = Cr(), gR = Tf(), yR = ar(), oi = ir.rotr64_hi, si = ir.rotr64_lo, U2 = ir.shr64_hi, z2 = ir.shr64_lo, Ji = ir.sum64, zl = ir.sum64_hi, Hl = ir.sum64_lo, wR = ir.sum64_4_hi, MR = ir.sum64_4_lo, _R = ir.sum64_5_hi, xR = ir.sum64_5_lo, H2 = gR.BlockHash, SR = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
  function Fr() {
    if (!(this instanceof Fr))
      return new Fr;
    H2.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = SR, this.W = new Array(160);
  }
  ir.inherits(Fr, H2);
  W2.exports = Fr;
  Fr.blockSize = 1024;
  Fr.outSize = 512;
  Fr.hmacStrength = 192;
  Fr.padLength = 128;
  Fr.prototype._prepareBlock = function(e2, r2) {
    for (var o = this.W, f = 0;f < 32; f++)
      o[f] = e2[r2 + f];
    for (;f < o.length; f += 2) {
      var p = DR(o[f - 4], o[f - 3]), m = PR(o[f - 4], o[f - 3]), y = o[f - 14], M = o[f - 13], x = LR(o[f - 30], o[f - 29]), S = NR(o[f - 30], o[f - 29]), E = o[f - 32], B = o[f - 31];
      o[f] = wR(p, m, y, M, x, S, E, B), o[f + 1] = MR(p, m, y, M, x, S, E, B);
    }
  };
  Fr.prototype._update = function(e2, r2) {
    this._prepareBlock(e2, r2);
    var o = this.W, f = this.h[0], p = this.h[1], m = this.h[2], y = this.h[3], M = this.h[4], x = this.h[5], S = this.h[6], E = this.h[7], B = this.h[8], q = this.h[9], L = this.h[10], ge = this.h[11], _e = this.h[12], N = this.h[13], we = this.h[14], ye = this.h[15];
    yR(this.k.length === o.length);
    for (var xe = 0;xe < o.length; xe += 2) {
      var Re = we, Ee = ye, Ae = TR(B, q), P = kR(B, q), Se = ER(B, q, L, ge, _e, N), v = AR(B, q, L, ge, _e, N), i = this.k[xe], a2 = this.k[xe + 1], h = o[xe], s = o[xe + 1], u = _R(Re, Ee, Ae, P, Se, v, i, a2, h, s), c = xR(Re, Ee, Ae, P, Se, v, i, a2, h, s);
      Re = qR(f, p), Ee = IR(f, p), Ae = RR(f, p, m, y, M, x), P = BR(f, p, m, y, M, x);
      var b = zl(Re, Ee, Ae, P), l = Hl(Re, Ee, Ae, P);
      we = _e, ye = N, _e = L, N = ge, L = B, ge = q, B = zl(S, E, u, c), q = Hl(E, E, u, c), S = M, E = x, M = m, x = y, m = f, y = p, f = zl(u, c, b, l), p = Hl(u, c, b, l);
    }
    Ji(this.h, 0, f, p), Ji(this.h, 2, m, y), Ji(this.h, 4, M, x), Ji(this.h, 6, S, E), Ji(this.h, 8, B, q), Ji(this.h, 10, L, ge), Ji(this.h, 12, _e, N), Ji(this.h, 14, we, ye);
  };
  Fr.prototype._digest = function(e2) {
    return e2 === "hex" ? ir.toHex32(this.h, "big") : ir.split32(this.h, "big");
  };
  function ER(t3, e2, r2, o, f) {
    var p = t3 & r2 ^ ~t3 & f;
    return p < 0 && (p += 4294967296), p;
  }
  function AR(t3, e2, r2, o, f, p) {
    var m = e2 & o ^ ~e2 & p;
    return m < 0 && (m += 4294967296), m;
  }
  function RR(t3, e2, r2, o, f) {
    var p = t3 & r2 ^ t3 & f ^ r2 & f;
    return p < 0 && (p += 4294967296), p;
  }
  function BR(t3, e2, r2, o, f, p) {
    var m = e2 & o ^ e2 & p ^ o & p;
    return m < 0 && (m += 4294967296), m;
  }
  function qR(t3, e2) {
    var r2 = oi(t3, e2, 28), o = oi(e2, t3, 2), f = oi(e2, t3, 7), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function IR(t3, e2) {
    var r2 = si(t3, e2, 28), o = si(e2, t3, 2), f = si(e2, t3, 7), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function TR(t3, e2) {
    var r2 = oi(t3, e2, 14), o = oi(t3, e2, 18), f = oi(e2, t3, 9), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function kR(t3, e2) {
    var r2 = si(t3, e2, 14), o = si(t3, e2, 18), f = si(e2, t3, 9), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function LR(t3, e2) {
    var r2 = oi(t3, e2, 1), o = oi(t3, e2, 8), f = U2(t3, e2, 7), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function NR(t3, e2) {
    var r2 = si(t3, e2, 1), o = si(t3, e2, 8), f = z2(t3, e2, 7), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function DR(t3, e2) {
    var r2 = oi(t3, e2, 19), o = oi(e2, t3, 29), f = U2(t3, e2, 6), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
  function PR(t3, e2) {
    var r2 = si(t3, e2, 19), o = si(e2, t3, 29), f = z2(t3, e2, 6), p = r2 ^ o ^ f;
    return p < 0 && (p += 4294967296), p;
  }
});
var Z2 = T((Dk, j2) => {
  var Kl = Cr(), K2 = Wl();
  function qi() {
    if (!(this instanceof qi))
      return new qi;
    K2.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
  }
  Kl.inherits(qi, K2);
  j2.exports = qi;
  qi.blockSize = 1024;
  qi.outSize = 384;
  qi.hmacStrength = 192;
  qi.padLength = 128;
  qi.prototype._digest = function(e2) {
    return e2 === "hex" ? Kl.toHex32(this.h.slice(0, 12), "big") : Kl.split32(this.h.slice(0, 12), "big");
  };
});
var V2 = T((Df) => {
  Df.sha1 = N2();
  Df.sha224 = F2();
  Df.sha256 = Fl();
  Df.sha384 = Z2();
  Df.sha512 = Wl();
});
var Q2 = T((J2) => {
  var On = Cr(), CR = Tf(), Qs = On.rotl32, $2 = On.sum32, Ua = On.sum32_3, G2 = On.sum32_4, X2 = CR.BlockHash;
  function hi() {
    if (!(this instanceof hi))
      return new hi;
    X2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
  }
  On.inherits(hi, X2);
  J2.ripemd160 = hi;
  hi.blockSize = 512;
  hi.outSize = 160;
  hi.hmacStrength = 192;
  hi.padLength = 64;
  hi.prototype._update = function(e2, r2) {
    for (var o = this.h[0], f = this.h[1], p = this.h[2], m = this.h[3], y = this.h[4], M = o, x = f, S = p, E = m, B = y, q = 0;q < 80; q++) {
      var L = $2(Qs(G2(o, Y2(q, f, p, m), e2[UR[q] + r2], OR(q)), HR[q]), y);
      o = y, y = m, m = Qs(p, 10), p = f, f = L, L = $2(Qs(G2(M, Y2(79 - q, x, S, E), e2[zR[q] + r2], FR(q)), WR[q]), B), M = B, B = E, E = Qs(S, 10), S = x, x = L;
    }
    L = Ua(this.h[1], p, E), this.h[1] = Ua(this.h[2], m, B), this.h[2] = Ua(this.h[3], y, M), this.h[3] = Ua(this.h[4], o, x), this.h[4] = Ua(this.h[0], f, S), this.h[0] = L;
  };
  hi.prototype._digest = function(e2) {
    return e2 === "hex" ? On.toHex32(this.h, "little") : On.split32(this.h, "little");
  };
  function Y2(t3, e2, r2, o) {
    return t3 <= 15 ? e2 ^ r2 ^ o : t3 <= 31 ? e2 & r2 | ~e2 & o : t3 <= 47 ? (e2 | ~r2) ^ o : t3 <= 63 ? e2 & o | r2 & ~o : e2 ^ (r2 | ~o);
  }
  function OR(t3) {
    return t3 <= 15 ? 0 : t3 <= 31 ? 1518500249 : t3 <= 47 ? 1859775393 : t3 <= 63 ? 2400959708 : 2840853838;
  }
  function FR(t3) {
    return t3 <= 15 ? 1352829926 : t3 <= 31 ? 1548603684 : t3 <= 47 ? 1836072691 : t3 <= 63 ? 2053994217 : 0;
  }
  var UR = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], zR = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], HR = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], WR = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
});
var ty = T((Ok, ey) => {
  var KR = Cr(), jR = ar();
  function Pf(t3, e2, r2) {
    if (!(this instanceof Pf))
      return new Pf(t3, e2, r2);
    this.Hash = t3, this.blockSize = t3.blockSize / 8, this.outSize = t3.outSize / 8, this.inner = null, this.outer = null, this._init(KR.toArray(e2, r2));
  }
  ey.exports = Pf;
  Pf.prototype._init = function(e2) {
    e2.length > this.blockSize && (e2 = new this.Hash().update(e2).digest()), jR(e2.length <= this.blockSize);
    for (var r2 = e2.length;r2 < this.blockSize; r2++)
      e2.push(0);
    for (r2 = 0;r2 < e2.length; r2++)
      e2[r2] ^= 54;
    for (this.inner = new this.Hash().update(e2), r2 = 0;r2 < e2.length; r2++)
      e2[r2] ^= 106;
    this.outer = new this.Hash().update(e2);
  };
  Pf.prototype.update = function(e2, r2) {
    return this.inner.update(e2, r2), this;
  };
  Pf.prototype.digest = function(e2) {
    return this.outer.update(this.inner.digest()), this.outer.digest(e2);
  };
});
var e0 = T((ry) => {
  var Kt = ry;
  Kt.utils = Cr();
  Kt.common = Tf();
  Kt.sha = V2();
  Kt.ripemd = Q2();
  Kt.hmac = ty();
  Kt.sha1 = Kt.sha.sha1;
  Kt.sha256 = Kt.sha.sha256;
  Kt.sha224 = Kt.sha.sha224;
  Kt.sha384 = Kt.sha.sha384;
  Kt.sha512 = Kt.sha.sha512;
  Kt.ripemd160 = Kt.ripemd.ripemd160;
});
var ny = T((Uk, iy) => {
  iy.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
});
var t0 = T((oy) => {
  var Zl = oy, Qi = e0(), jl = Pl(), ZR = or(), fy = ZR.assert;
  function ay(t3) {
    t3.type === "short" ? this.curve = new jl.short(t3) : t3.type === "edwards" ? this.curve = new jl.edwards(t3) : this.curve = new jl.mont(t3), this.g = this.curve.g, this.n = this.curve.n, this.hash = t3.hash, fy(this.g.validate(), "Invalid curve"), fy(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  Zl.PresetCurve = ay;
  function en(t3, e2) {
    Object.defineProperty(Zl, t3, { configurable: true, enumerable: true, get: function() {
      var r2 = new ay(e2);
      return Object.defineProperty(Zl, t3, { configurable: true, enumerable: true, value: r2 }), r2;
    } });
  }
  en("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: Qi.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] });
  en("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: Qi.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] });
  en("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: Qi.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] });
  en("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: Qi.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] });
  en("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: Qi.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] });
  en("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: Qi.sha256, gRed: false, g: ["9"] });
  en("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: Qi.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
  var Vl;
  try {
    Vl = ny();
  } catch {
    Vl = undefined;
  }
  en("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: Qi.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", Vl] });
});
var uy = T((Hk, hy) => {
  var VR = e0(), Fn = Nl(), sy = ar();
  function tn(t3) {
    if (!(this instanceof tn))
      return new tn(t3);
    this.hash = t3.hash, this.predResist = !!t3.predResist, this.outLen = this.hash.outSize, this.minEntropy = t3.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
    var e2 = Fn.toArray(t3.entropy, t3.entropyEnc || "hex"), r2 = Fn.toArray(t3.nonce, t3.nonceEnc || "hex"), o = Fn.toArray(t3.pers, t3.persEnc || "hex");
    sy(e2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e2, r2, o);
  }
  hy.exports = tn;
  tn.prototype._init = function(e2, r2, o) {
    var f = e2.concat(r2).concat(o);
    this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
    for (var p = 0;p < this.V.length; p++)
      this.K[p] = 0, this.V[p] = 1;
    this._update(f), this._reseed = 1, this.reseedInterval = 281474976710656;
  };
  tn.prototype._hmac = function() {
    return new VR.hmac(this.hash, this.K);
  };
  tn.prototype._update = function(e2) {
    var r2 = this._hmac().update(this.V).update([0]);
    e2 && (r2 = r2.update(e2)), this.K = r2.digest(), this.V = this._hmac().update(this.V).digest(), e2 && (this.K = this._hmac().update(this.V).update([1]).update(e2).digest(), this.V = this._hmac().update(this.V).digest());
  };
  tn.prototype.reseed = function(e2, r2, o, f) {
    typeof r2 != "string" && (f = o, o = r2, r2 = null), e2 = Fn.toArray(e2, r2), o = Fn.toArray(o, f), sy(e2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e2.concat(o || [])), this._reseed = 1;
  };
  tn.prototype.generate = function(e2, r2, o, f) {
    if (this._reseed > this.reseedInterval)
      throw new Error("Reseed is required");
    typeof r2 != "string" && (f = o, o = r2, r2 = null), o && (o = Fn.toArray(o, f || "hex"), this._update(o));
    for (var p = [];p.length < e2; )
      this.V = this._hmac().update(this.V).digest(), p = p.concat(this.V);
    var m = p.slice(0, e2);
    return this._update(o), this._reseed++, Fn.encode(m, r2);
  };
});
var dy = T((Wk, ly) => {
  var $R = ri(), GR = or(), $l = GR.assert;
  function Gt(t3, e2) {
    this.ec = t3, this.priv = null, this.pub = null, e2.priv && this._importPrivate(e2.priv, e2.privEnc), e2.pub && this._importPublic(e2.pub, e2.pubEnc);
  }
  ly.exports = Gt;
  Gt.fromPublic = function(e2, r2, o) {
    return r2 instanceof Gt ? r2 : new Gt(e2, { pub: r2, pubEnc: o });
  };
  Gt.fromPrivate = function(e2, r2, o) {
    return r2 instanceof Gt ? r2 : new Gt(e2, { priv: r2, privEnc: o });
  };
  Gt.prototype.validate = function() {
    var e2 = this.getPublic();
    return e2.isInfinity() ? { result: false, reason: "Invalid public key" } : e2.validate() ? e2.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
  };
  Gt.prototype.getPublic = function(e2, r2) {
    return typeof e2 == "string" && (r2 = e2, e2 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r2 ? this.pub.encode(r2, e2) : this.pub;
  };
  Gt.prototype.getPrivate = function(e2) {
    return e2 === "hex" ? this.priv.toString(16, 2) : this.priv;
  };
  Gt.prototype._importPrivate = function(e2, r2) {
    this.priv = new $R(e2, r2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
  };
  Gt.prototype._importPublic = function(e2, r2) {
    if (e2.x || e2.y) {
      this.ec.curve.type === "mont" ? $l(e2.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && $l(e2.x && e2.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e2.x, e2.y);
      return;
    }
    this.pub = this.ec.curve.decodePoint(e2, r2);
  };
  Gt.prototype.derive = function(e2) {
    return e2.validate() || $l(e2.validate(), "public point not validated"), e2.mul(this.priv).getX();
  };
  Gt.prototype.sign = function(e2, r2, o) {
    return this.ec.sign(e2, this, r2, o);
  };
  Gt.prototype.verify = function(e2, r2) {
    return this.ec.verify(e2, r2, this);
  };
  Gt.prototype.inspect = function() {
    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
  };
});
var vy = T((Kk, py) => {
  var r0 = ri(), Xl = or(), YR = Xl.assert;
  function i0(t3, e2) {
    if (t3 instanceof i0)
      return t3;
    this._importDER(t3, e2) || (YR(t3.r && t3.s, "Signature without r or s"), this.r = new r0(t3.r, 16), this.s = new r0(t3.s, 16), t3.recoveryParam === undefined ? this.recoveryParam = null : this.recoveryParam = t3.recoveryParam);
  }
  py.exports = i0;
  function XR() {
    this.place = 0;
  }
  function Gl(t3, e2) {
    var r2 = t3[e2.place++];
    if (!(r2 & 128))
      return r2;
    var o = r2 & 15;
    if (o === 0 || o > 4)
      return false;
    for (var f = 0, p = 0, m = e2.place;p < o; p++, m++)
      f <<= 8, f |= t3[m], f >>>= 0;
    return f <= 127 ? false : (e2.place = m, f);
  }
  function cy(t3) {
    for (var e2 = 0, r2 = t3.length - 1;!t3[e2] && !(t3[e2 + 1] & 128) && e2 < r2; )
      e2++;
    return e2 === 0 ? t3 : t3.slice(e2);
  }
  i0.prototype._importDER = function(e2, r2) {
    e2 = Xl.toArray(e2, r2);
    var o = new XR;
    if (e2[o.place++] !== 48)
      return false;
    var f = Gl(e2, o);
    if (f === false || f + o.place !== e2.length || e2[o.place++] !== 2)
      return false;
    var p = Gl(e2, o);
    if (p === false)
      return false;
    var m = e2.slice(o.place, p + o.place);
    if (o.place += p, e2[o.place++] !== 2)
      return false;
    var y = Gl(e2, o);
    if (y === false || e2.length !== y + o.place)
      return false;
    var M = e2.slice(o.place, y + o.place);
    if (m[0] === 0)
      if (m[1] & 128)
        m = m.slice(1);
      else
        return false;
    if (M[0] === 0)
      if (M[1] & 128)
        M = M.slice(1);
      else
        return false;
    return this.r = new r0(m), this.s = new r0(M), this.recoveryParam = null, true;
  };
  function Yl(t3, e2) {
    if (e2 < 128) {
      t3.push(e2);
      return;
    }
    var r2 = 1 + (Math.log(e2) / Math.LN2 >>> 3);
    for (t3.push(r2 | 128);--r2; )
      t3.push(e2 >>> (r2 << 3) & 255);
    t3.push(e2);
  }
  i0.prototype.toDER = function(e2) {
    var r2 = this.r.toArray(), o = this.s.toArray();
    for (r2[0] & 128 && (r2 = [0].concat(r2)), o[0] & 128 && (o = [0].concat(o)), r2 = cy(r2), o = cy(o);!o[0] && !(o[1] & 128); )
      o = o.slice(1);
    var f = [2];
    Yl(f, r2.length), f = f.concat(r2), f.push(2), Yl(f, o.length);
    var p = f.concat(o), m = [48];
    return Yl(m, p.length), m = m.concat(p), Xl.encode(m, e2);
  };
});
var yy = T((jk, gy) => {
  var Un = ri(), by = uy(), JR = or(), Jl = t0(), QR = As(), my = JR.assert, Ql = dy(), n0 = vy();
  function Sr(t3) {
    if (!(this instanceof Sr))
      return new Sr(t3);
    typeof t3 == "string" && (my(Object.prototype.hasOwnProperty.call(Jl, t3), "Unknown curve " + t3), t3 = Jl[t3]), t3 instanceof Jl.PresetCurve && (t3 = { curve: t3 }), this.curve = t3.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t3.curve.g, this.g.precompute(t3.curve.n.bitLength() + 1), this.hash = t3.hash || t3.curve.hash;
  }
  gy.exports = Sr;
  Sr.prototype.keyPair = function(e2) {
    return new Ql(this, e2);
  };
  Sr.prototype.keyFromPrivate = function(e2, r2) {
    return Ql.fromPrivate(this, e2, r2);
  };
  Sr.prototype.keyFromPublic = function(e2, r2) {
    return Ql.fromPublic(this, e2, r2);
  };
  Sr.prototype.genKeyPair = function(e2) {
    e2 || (e2 = {});
    for (var r2 = new by({ hash: this.hash, pers: e2.pers, persEnc: e2.persEnc || "utf8", entropy: e2.entropy || QR(this.hash.hmacStrength), entropyEnc: e2.entropy && e2.entropyEnc || "utf8", nonce: this.n.toArray() }), o = this.n.byteLength(), f = this.n.sub(new Un(2));; ) {
      var p = new Un(r2.generate(o));
      if (!(p.cmp(f) > 0))
        return p.iaddn(1), this.keyFromPrivate(p);
    }
  };
  Sr.prototype._truncateToN = function(e2, r2) {
    var o = e2.byteLength() * 8 - this.n.bitLength();
    return o > 0 && (e2 = e2.ushrn(o)), !r2 && e2.cmp(this.n) >= 0 ? e2.sub(this.n) : e2;
  };
  Sr.prototype.sign = function(e2, r2, o, f) {
    typeof o == "object" && (f = o, o = null), f || (f = {}), r2 = this.keyFromPrivate(r2, o), e2 = this._truncateToN(new Un(e2, 16));
    for (var p = this.n.byteLength(), m = r2.getPrivate().toArray("be", p), y = e2.toArray("be", p), M = new by({ hash: this.hash, entropy: m, nonce: y, pers: f.pers, persEnc: f.persEnc || "utf8" }), x = this.n.sub(new Un(1)), S = 0;; S++) {
      var E = f.k ? f.k(S) : new Un(M.generate(this.n.byteLength()));
      if (E = this._truncateToN(E, true), !(E.cmpn(1) <= 0 || E.cmp(x) >= 0)) {
        var B = this.g.mul(E);
        if (!B.isInfinity()) {
          var q = B.getX(), L = q.umod(this.n);
          if (L.cmpn(0) !== 0) {
            var ge = E.invm(this.n).mul(L.mul(r2.getPrivate()).iadd(e2));
            if (ge = ge.umod(this.n), ge.cmpn(0) !== 0) {
              var _e = (B.getY().isOdd() ? 1 : 0) | (q.cmp(L) !== 0 ? 2 : 0);
              return f.canonical && ge.cmp(this.nh) > 0 && (ge = this.n.sub(ge), _e ^= 1), new n0({ r: L, s: ge, recoveryParam: _e });
            }
          }
        }
      }
    }
  };
  Sr.prototype.verify = function(e2, r2, o, f) {
    e2 = this._truncateToN(new Un(e2, 16)), o = this.keyFromPublic(o, f), r2 = new n0(r2, "hex");
    var { r: p, s: m } = r2;
    if (p.cmpn(1) < 0 || p.cmp(this.n) >= 0 || m.cmpn(1) < 0 || m.cmp(this.n) >= 0)
      return false;
    var y = m.invm(this.n), M = y.mul(e2).umod(this.n), x = y.mul(p).umod(this.n), S;
    return this.curve._maxwellTrick ? (S = this.g.jmulAdd(M, o.getPublic(), x), S.isInfinity() ? false : S.eqXToP(p)) : (S = this.g.mulAdd(M, o.getPublic(), x), S.isInfinity() ? false : S.getX().umod(this.n).cmp(p) === 0);
  };
  Sr.prototype.recoverPubKey = function(t3, e2, r2, o) {
    my((3 & r2) === r2, "The recovery param is more than two bits"), e2 = new n0(e2, o);
    var f = this.n, p = new Un(t3), m = e2.r, y = e2.s, M = r2 & 1, x = r2 >> 1;
    if (m.cmp(this.curve.p.umod(this.curve.n)) >= 0 && x)
      throw new Error("Unable to find sencond key candinate");
    x ? m = this.curve.pointFromX(m.add(this.curve.n), M) : m = this.curve.pointFromX(m, M);
    var S = e2.r.invm(f), E = f.sub(p).mul(S).umod(f), B = y.mul(S).umod(f);
    return this.g.mulAdd(E, m, B);
  };
  Sr.prototype.getKeyRecoveryParam = function(t3, e2, r2, o) {
    if (e2 = new n0(e2, o), e2.recoveryParam !== null)
      return e2.recoveryParam;
    for (var f = 0;f < 4; f++) {
      var p;
      try {
        p = this.recoverPubKey(t3, e2, f);
      } catch {
        continue;
      }
      if (p.eq(r2))
        return f;
    }
    throw new Error("Unable to find valid recovery factor");
  };
});
var xy = T((Zk, _y) => {
  var za = or(), My = za.assert, wy = za.parseBytes, Cf = za.cachedProperty;
  function Ft(t3, e2) {
    this.eddsa = t3, this._secret = wy(e2.secret), t3.isPoint(e2.pub) ? this._pub = e2.pub : this._pubBytes = wy(e2.pub);
  }
  Ft.fromPublic = function(e2, r2) {
    return r2 instanceof Ft ? r2 : new Ft(e2, { pub: r2 });
  };
  Ft.fromSecret = function(e2, r2) {
    return r2 instanceof Ft ? r2 : new Ft(e2, { secret: r2 });
  };
  Ft.prototype.secret = function() {
    return this._secret;
  };
  Cf(Ft, "pubBytes", function() {
    return this.eddsa.encodePoint(this.pub());
  });
  Cf(Ft, "pub", function() {
    return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
  });
  Cf(Ft, "privBytes", function() {
    var e2 = this.eddsa, r2 = this.hash(), o = e2.encodingLength - 1, f = r2.slice(0, e2.encodingLength);
    return f[0] &= 248, f[o] &= 127, f[o] |= 64, f;
  });
  Cf(Ft, "priv", function() {
    return this.eddsa.decodeInt(this.privBytes());
  });
  Cf(Ft, "hash", function() {
    return this.eddsa.hash().update(this.secret()).digest();
  });
  Cf(Ft, "messagePrefix", function() {
    return this.hash().slice(this.eddsa.encodingLength);
  });
  Ft.prototype.sign = function(e2) {
    return My(this._secret, "KeyPair can only verify"), this.eddsa.sign(e2, this);
  };
  Ft.prototype.verify = function(e2, r2) {
    return this.eddsa.verify(e2, r2, this);
  };
  Ft.prototype.getSecret = function(e2) {
    return My(this._secret, "KeyPair is public only"), za.encode(this.secret(), e2);
  };
  Ft.prototype.getPublic = function(e2) {
    return za.encode(this.pubBytes(), e2);
  };
  _y.exports = Ft;
});
var Ey = T((Vk, Sy) => {
  var eB = ri(), f0 = or(), tB = f0.assert, a0 = f0.cachedProperty, rB = f0.parseBytes;
  function zn(t3, e2) {
    this.eddsa = t3, typeof e2 != "object" && (e2 = rB(e2)), Array.isArray(e2) && (e2 = { R: e2.slice(0, t3.encodingLength), S: e2.slice(t3.encodingLength) }), tB(e2.R && e2.S, "Signature without R or S"), t3.isPoint(e2.R) && (this._R = e2.R), e2.S instanceof eB && (this._S = e2.S), this._Rencoded = Array.isArray(e2.R) ? e2.R : e2.Rencoded, this._Sencoded = Array.isArray(e2.S) ? e2.S : e2.Sencoded;
  }
  a0(zn, "S", function() {
    return this.eddsa.decodeInt(this.Sencoded());
  });
  a0(zn, "R", function() {
    return this.eddsa.decodePoint(this.Rencoded());
  });
  a0(zn, "Rencoded", function() {
    return this.eddsa.encodePoint(this.R());
  });
  a0(zn, "Sencoded", function() {
    return this.eddsa.encodeInt(this.S());
  });
  zn.prototype.toBytes = function() {
    return this.Rencoded().concat(this.Sencoded());
  };
  zn.prototype.toHex = function() {
    return f0.encode(this.toBytes(), "hex").toUpperCase();
  };
  Sy.exports = zn;
});
var Iy = T(($k, qy) => {
  var iB = e0(), nB = t0(), Of = or(), fB = Of.assert, Ry = Of.parseBytes, By = xy(), Ay = Ey();
  function nr(t3) {
    if (fB(t3 === "ed25519", "only tested with ed25519 so far"), !(this instanceof nr))
      return new nr(t3);
    t3 = nB[t3].curve, this.curve = t3, this.g = t3.g, this.g.precompute(t3.n.bitLength() + 1), this.pointClass = t3.point().constructor, this.encodingLength = Math.ceil(t3.n.bitLength() / 8), this.hash = iB.sha512;
  }
  qy.exports = nr;
  nr.prototype.sign = function(e2, r2) {
    e2 = Ry(e2);
    var o = this.keyFromSecret(r2), f = this.hashInt(o.messagePrefix(), e2), p = this.g.mul(f), m = this.encodePoint(p), y = this.hashInt(m, o.pubBytes(), e2).mul(o.priv()), M = f.add(y).umod(this.curve.n);
    return this.makeSignature({ R: p, S: M, Rencoded: m });
  };
  nr.prototype.verify = function(e2, r2, o) {
    e2 = Ry(e2), r2 = this.makeSignature(r2);
    var f = this.keyFromPublic(o), p = this.hashInt(r2.Rencoded(), f.pubBytes(), e2), m = this.g.mul(r2.S()), y = r2.R().add(f.pub().mul(p));
    return y.eq(m);
  };
  nr.prototype.hashInt = function() {
    for (var e2 = this.hash(), r2 = 0;r2 < arguments.length; r2++)
      e2.update(arguments[r2]);
    return Of.intFromLE(e2.digest()).umod(this.curve.n);
  };
  nr.prototype.keyFromPublic = function(e2) {
    return By.fromPublic(this, e2);
  };
  nr.prototype.keyFromSecret = function(e2) {
    return By.fromSecret(this, e2);
  };
  nr.prototype.makeSignature = function(e2) {
    return e2 instanceof Ay ? e2 : new Ay(this, e2);
  };
  nr.prototype.encodePoint = function(e2) {
    var r2 = e2.getY().toArray("le", this.encodingLength);
    return r2[this.encodingLength - 1] |= e2.getX().isOdd() ? 128 : 0, r2;
  };
  nr.prototype.decodePoint = function(e2) {
    e2 = Of.parseBytes(e2);
    var r2 = e2.length - 1, o = e2.slice(0, r2).concat(e2[r2] & -129), f = (e2[r2] & 128) !== 0, p = Of.intFromLE(o);
    return this.curve.pointFromY(p, f);
  };
  nr.prototype.encodeInt = function(e2) {
    return e2.toArray("le", this.encodingLength);
  };
  nr.prototype.decodeInt = function(e2) {
    return Of.intFromLE(e2);
  };
  nr.prototype.isPoint = function(e2) {
    return e2 instanceof this.pointClass;
  };
});
var o0 = T((Ty) => {
  var Hn = Ty;
  Hn.version = s2().version;
  Hn.utils = or();
  Hn.rand = As();
  Hn.curve = Pl();
  Hn.curves = t0();
  Hn.ec = yy();
  Hn.eddsa = Iy();
});
var td = T((ky, ed) => {
  (function(t3, e2) {
    function r2(v, i) {
      if (!v)
        throw new Error(i || "Assertion failed");
    }
    function o(v, i) {
      v.super_ = i;
      var a2 = function() {
      };
      a2.prototype = i.prototype, v.prototype = new a2, v.prototype.constructor = v;
    }
    function f(v, i, a2) {
      if (f.isBN(v))
        return v;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i === "le" || i === "be") && (a2 = i, i = 10), this._init(v || 0, i || 10, a2 || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(i) {
      return i instanceof f ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f.wordSize && Array.isArray(i.words);
    }, f.max = function(i, a2) {
      return i.cmp(a2) > 0 ? i : a2;
    }, f.min = function(i, a2) {
      return i.cmp(a2) < 0 ? i : a2;
    }, f.prototype._init = function(i, a2, h) {
      if (typeof i == "number")
        return this._initNumber(i, a2, h);
      if (typeof i == "object")
        return this._initArray(i, a2, h);
      a2 === "hex" && (a2 = 16), r2(a2 === (a2 | 0) && a2 >= 2 && a2 <= 36), i = i.toString().replace(/\s+/g, "");
      var s = 0;
      i[0] === "-" && (s++, this.negative = 1), s < i.length && (a2 === 16 ? this._parseHex(i, s, h) : (this._parseBase(i, a2, s), h === "le" && this._initArray(this.toArray(), a2, h)));
    }, f.prototype._initNumber = function(i, a2, h) {
      i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r2(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h === "le" && this._initArray(this.toArray(), a2, h);
    }, f.prototype._initArray = function(i, a2, h) {
      if (r2(typeof i.length == "number"), i.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u, c, b = 0;
      if (h === "be")
        for (s = i.length - 1, u = 0;s >= 0; s -= 3)
          c = i[s] | i[s - 1] << 8 | i[s - 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      else if (h === "le")
        for (s = 0, u = 0;s < i.length; s += 3)
          c = i[s] | i[s + 1] << 8 | i[s + 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      return this.strip();
    };
    function m(v, i) {
      var a2 = v.charCodeAt(i);
      return a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : a2 - 48 & 15;
    }
    function y(v, i, a2) {
      var h = m(v, a2);
      return a2 - 1 >= i && (h |= m(v, a2 - 1) << 4), h;
    }
    f.prototype._parseHex = function(i, a2, h) {
      this.length = Math.ceil((i.length - a2) / 6), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u = 0, c = 0, b;
      if (h === "be")
        for (s = i.length - 1;s >= a2; s -= 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      else {
        var l = i.length - a2;
        for (s = l % 2 === 0 ? a2 + 1 : a2;s < i.length; s += 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      }
      this.strip();
    };
    function M(v, i, a2, h) {
      for (var s = 0, u = Math.min(v.length, a2), c = i;c < u; c++) {
        var b = v.charCodeAt(c) - 48;
        s *= h, b >= 49 ? s += b - 49 + 10 : b >= 17 ? s += b - 17 + 10 : s += b;
      }
      return s;
    }
    f.prototype._parseBase = function(i, a2, h) {
      this.words = [0], this.length = 1;
      for (var s = 0, u = 1;u <= 67108863; u *= a2)
        s++;
      s--, u = u / a2 | 0;
      for (var c = i.length - h, b = c % s, l = Math.min(c, c - b) + h, n = 0, d = h;d < l; d += s)
        n = M(i, d, d + s, a2), this.imuln(u), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      if (b !== 0) {
        var w = 1;
        for (n = M(i, d, i.length, a2), d = 0;d < b; d++)
          w *= a2;
        this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      }
      this.strip();
    }, f.prototype.copy = function(i) {
      i.words = new Array(this.length);
      for (var a2 = 0;a2 < this.length; a2++)
        i.words[a2] = this.words[a2];
      i.length = this.length, i.negative = this.negative, i.red = this.red;
    }, f.prototype.clone = function() {
      var i = new f(null);
      return this.copy(i), i;
    }, f.prototype._expand = function(i) {
      for (;this.length < i; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype.strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, f.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(i, a2) {
      i = i || 10, a2 = a2 | 0 || 1;
      var h;
      if (i === 16 || i === "hex") {
        h = "";
        for (var s = 0, u = 0, c = 0;c < this.length; c++) {
          var b = this.words[c], l = ((b << s | u) & 16777215).toString(16);
          u = b >>> 24 - s & 16777215, u !== 0 || c !== this.length - 1 ? h = x[6 - l.length] + l + h : h = l + h, s += 2, s >= 26 && (s -= 26, c--);
        }
        for (u !== 0 && (h = u.toString(16) + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      if (i === (i | 0) && i >= 2 && i <= 36) {
        var n = S[i], d = E[i];
        h = "";
        var w = this.clone();
        for (w.negative = 0;!w.isZero(); ) {
          var g = w.modn(d).toString(i);
          w = w.idivn(d), w.isZero() ? h = g + h : h = x[n - g.length] + g + h;
        }
        for (this.isZero() && (h = "0" + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var i = this.words[0];
      return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
    }, f.prototype.toJSON = function() {
      return this.toString(16);
    }, f.prototype.toBuffer = function(i, a2) {
      return r2(typeof p < "u"), this.toArrayLike(p, i, a2);
    }, f.prototype.toArray = function(i, a2) {
      return this.toArrayLike(Array, i, a2);
    }, f.prototype.toArrayLike = function(i, a2, h) {
      var s = this.byteLength(), u = h || Math.max(1, s);
      r2(s <= u, "byte array longer than desired length"), r2(u > 0, "Requested array length <= 0"), this.strip();
      var c = a2 === "le", b = new i(u), l, n, d = this.clone();
      if (c) {
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[n] = l;
        for (;n < u; n++)
          b[n] = 0;
      } else {
        for (n = 0;n < u - s; n++)
          b[n] = 0;
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[u - n - 1] = l;
      }
      return b;
    }, Math.clz32 ? f.prototype._countBits = function(i) {
      return 32 - Math.clz32(i);
    } : f.prototype._countBits = function(i) {
      var a2 = i, h = 0;
      return a2 >= 4096 && (h += 13, a2 >>>= 13), a2 >= 64 && (h += 7, a2 >>>= 7), a2 >= 8 && (h += 4, a2 >>>= 4), a2 >= 2 && (h += 2, a2 >>>= 2), h + a2;
    }, f.prototype._zeroBits = function(i) {
      if (i === 0)
        return 26;
      var a2 = i, h = 0;
      return (a2 & 8191) === 0 && (h += 13, a2 >>>= 13), (a2 & 127) === 0 && (h += 7, a2 >>>= 7), (a2 & 15) === 0 && (h += 4, a2 >>>= 4), (a2 & 3) === 0 && (h += 2, a2 >>>= 2), (a2 & 1) === 0 && h++, h;
    }, f.prototype.bitLength = function() {
      var i = this.words[this.length - 1], a2 = this._countBits(i);
      return (this.length - 1) * 26 + a2;
    };
    function B(v) {
      for (var i = new Array(v.bitLength()), a2 = 0;a2 < i.length; a2++) {
        var h = a2 / 26 | 0, s = a2 % 26;
        i[a2] = (v.words[h] & 1 << s) >>> s;
      }
      return i;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var i = 0, a2 = 0;a2 < this.length; a2++) {
        var h = this._zeroBits(this.words[a2]);
        if (i += h, h !== 26)
          break;
      }
      return i;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(i) {
      return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(i) {
      return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(i) {
      for (;this.length < i.length; )
        this.words[this.length++] = 0;
      for (var a2 = 0;a2 < i.length; a2++)
        this.words[a2] = this.words[a2] | i.words[a2];
      return this.strip();
    }, f.prototype.ior = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuor(i);
    }, f.prototype.or = function(i) {
      return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
    }, f.prototype.uor = function(i) {
      return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
    }, f.prototype.iuand = function(i) {
      var a2;
      this.length > i.length ? a2 = i : a2 = this;
      for (var h = 0;h < a2.length; h++)
        this.words[h] = this.words[h] & i.words[h];
      return this.length = a2.length, this.strip();
    }, f.prototype.iand = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuand(i);
    }, f.prototype.and = function(i) {
      return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
    }, f.prototype.uand = function(i) {
      return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
    }, f.prototype.iuxor = function(i) {
      var a2, h;
      this.length > i.length ? (a2 = this, h = i) : (a2 = i, h = this);
      for (var s = 0;s < h.length; s++)
        this.words[s] = a2.words[s] ^ h.words[s];
      if (this !== a2)
        for (;s < a2.length; s++)
          this.words[s] = a2.words[s];
      return this.length = a2.length, this.strip();
    }, f.prototype.ixor = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuxor(i);
    }, f.prototype.xor = function(i) {
      return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
    }, f.prototype.uxor = function(i) {
      return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
    }, f.prototype.inotn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = Math.ceil(i / 26) | 0, h = i % 26;
      this._expand(a2), h > 0 && a2--;
      for (var s = 0;s < a2; s++)
        this.words[s] = ~this.words[s] & 67108863;
      return h > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - h), this.strip();
    }, f.prototype.notn = function(i) {
      return this.clone().inotn(i);
    }, f.prototype.setn = function(i, a2) {
      r2(typeof i == "number" && i >= 0);
      var h = i / 26 | 0, s = i % 26;
      return this._expand(h + 1), a2 ? this.words[h] = this.words[h] | 1 << s : this.words[h] = this.words[h] & ~(1 << s), this.strip();
    }, f.prototype.iadd = function(i) {
      var a2;
      if (this.negative !== 0 && i.negative === 0)
        return this.negative = 0, a2 = this.isub(i), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && i.negative !== 0)
        return i.negative = 0, a2 = this.isub(i), i.negative = 1, a2._normSign();
      var h, s;
      this.length > i.length ? (h = this, s = i) : (h = i, s = this);
      for (var u = 0, c = 0;c < s.length; c++)
        a2 = (h.words[c] | 0) + (s.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      for (;u !== 0 && c < h.length; c++)
        a2 = (h.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      if (this.length = h.length, u !== 0)
        this.words[this.length] = u, this.length++;
      else if (h !== this)
        for (;c < h.length; c++)
          this.words[c] = h.words[c];
      return this;
    }, f.prototype.add = function(i) {
      var a2;
      return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a2 = this.sub(i), i.negative ^= 1, a2) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a2 = i.sub(this), this.negative = 1, a2) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
    }, f.prototype.isub = function(i) {
      if (i.negative !== 0) {
        i.negative = 0;
        var a2 = this.iadd(i);
        return i.negative = 1, a2._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
      var h = this.cmp(i);
      if (h === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var s, u;
      h > 0 ? (s = this, u = i) : (s = i, u = this);
      for (var c = 0, b = 0;b < u.length; b++)
        a2 = (s.words[b] | 0) - (u.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      for (;c !== 0 && b < s.length; b++)
        a2 = (s.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      if (c === 0 && b < s.length && s !== this)
        for (;b < s.length; b++)
          this.words[b] = s.words[b];
      return this.length = Math.max(this.length, b), s !== this && (this.negative = 1), this.strip();
    }, f.prototype.sub = function(i) {
      return this.clone().isub(i);
    };
    function q(v, i, a2) {
      a2.negative = i.negative ^ v.negative;
      var h = v.length + i.length | 0;
      a2.length = h, h = h - 1 | 0;
      var s = v.words[0] | 0, u = i.words[0] | 0, c = s * u, b = c & 67108863, l = c / 67108864 | 0;
      a2.words[0] = b;
      for (var n = 1;n < h; n++) {
        for (var d = l >>> 26, w = l & 67108863, g = Math.min(n, i.length - 1), _ = Math.max(0, n - v.length + 1);_ <= g; _++) {
          var A = n - _ | 0;
          s = v.words[A] | 0, u = i.words[_] | 0, c = s * u + w, d += c / 67108864 | 0, w = c & 67108863;
        }
        a2.words[n] = w | 0, l = d | 0;
      }
      return l !== 0 ? a2.words[n] = l | 0 : a2.length--, a2.strip();
    }
    var L = function(i, a2, h) {
      var s = i.words, u = a2.words, c = h.words, b = 0, l, n, d, w = s[0] | 0, g = w & 8191, _ = w >>> 13, A = s[1] | 0, R = A & 8191, I = A >>> 13, Me = s[2] | 0, k = Me & 8191, D = Me >>> 13, nt = s[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s[8] | 0, V = yt & 8191, $ = yt >>> 13, wt = s[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u[2] | 0, te = xt & 8191, re = xt >>> 13, St = u[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u[9] | 0, ve = It & 8191, be = It >>> 13;
      h.negative = i.negative ^ a2.negative, h.length = 19, l = Math.imul(g, X), n = Math.imul(g, J), n = n + Math.imul(_, X) | 0, d = Math.imul(_, J);
      var ft = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n = Math.imul(R, J), n = n + Math.imul(I, X) | 0, d = Math.imul(I, J), l = l + Math.imul(g, Q) | 0, n = n + Math.imul(g, ee) | 0, n = n + Math.imul(_, Q) | 0, d = d + Math.imul(_, ee) | 0;
      var Be = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k, X), n = Math.imul(k, J), n = n + Math.imul(D, X) | 0, d = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n = n + Math.imul(R, ee) | 0, n = n + Math.imul(I, Q) | 0, d = d + Math.imul(I, ee) | 0, l = l + Math.imul(g, te) | 0, n = n + Math.imul(g, re) | 0, n = n + Math.imul(_, te) | 0, d = d + Math.imul(_, re) | 0;
      var qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n = Math.imul(C, J), n = n + Math.imul(O, X) | 0, d = Math.imul(O, J), l = l + Math.imul(k, Q) | 0, n = n + Math.imul(k, ee) | 0, n = n + Math.imul(D, Q) | 0, d = d + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n = n + Math.imul(R, re) | 0, n = n + Math.imul(I, te) | 0, d = d + Math.imul(I, re) | 0, l = l + Math.imul(g, ie) | 0, n = n + Math.imul(g, ne) | 0, n = n + Math.imul(_, ie) | 0, d = d + Math.imul(_, ne) | 0;
      var ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n = Math.imul(F, J), n = n + Math.imul(U, X) | 0, d = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O, Q) | 0, d = d + Math.imul(O, ee) | 0, l = l + Math.imul(k, te) | 0, n = n + Math.imul(k, re) | 0, n = n + Math.imul(D, te) | 0, d = d + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n = n + Math.imul(R, ne) | 0, n = n + Math.imul(I, ie) | 0, d = d + Math.imul(I, ne) | 0, l = l + Math.imul(g, fe) | 0, n = n + Math.imul(g, ae) | 0, n = n + Math.imul(_, fe) | 0, d = d + Math.imul(_, ae) | 0;
      var He = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n = Math.imul(z, J), n = n + Math.imul(H, X) | 0, d = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U, Q) | 0, d = d + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O, te) | 0, d = d + Math.imul(O, re) | 0, l = l + Math.imul(k, ie) | 0, n = n + Math.imul(k, ne) | 0, n = n + Math.imul(D, ie) | 0, d = d + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n = n + Math.imul(R, ae) | 0, n = n + Math.imul(I, fe) | 0, d = d + Math.imul(I, ae) | 0, l = l + Math.imul(g, oe) | 0, n = n + Math.imul(g, se) | 0, n = n + Math.imul(_, oe) | 0, d = d + Math.imul(_, se) | 0;
      var We = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n = Math.imul(W, J), n = n + Math.imul(K, X) | 0, d = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H, Q) | 0, d = d + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U, te) | 0, d = d + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n = n + Math.imul(C, ne) | 0, n = n + Math.imul(O, ie) | 0, d = d + Math.imul(O, ne) | 0, l = l + Math.imul(k, fe) | 0, n = n + Math.imul(k, ae) | 0, n = n + Math.imul(D, fe) | 0, d = d + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n = n + Math.imul(R, se) | 0, n = n + Math.imul(I, oe) | 0, d = d + Math.imul(I, se) | 0, l = l + Math.imul(g, he) | 0, n = n + Math.imul(g, ue) | 0, n = n + Math.imul(_, he) | 0, d = d + Math.imul(_, ue) | 0;
      var Ke = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n = Math.imul(j, J), n = n + Math.imul(Z, X) | 0, d = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K, Q) | 0, d = d + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H, te) | 0, d = d + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n = n + Math.imul(F, ne) | 0, n = n + Math.imul(U, ie) | 0, d = d + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O, fe) | 0, d = d + Math.imul(O, ae) | 0, l = l + Math.imul(k, oe) | 0, n = n + Math.imul(k, se) | 0, n = n + Math.imul(D, oe) | 0, d = d + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n = n + Math.imul(R, ue) | 0, n = n + Math.imul(I, he) | 0, d = d + Math.imul(I, ue) | 0, l = l + Math.imul(g, le) | 0, n = n + Math.imul(g, de) | 0, n = n + Math.imul(_, le) | 0, d = d + Math.imul(_, de) | 0;
      var je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n = Math.imul(V, J), n = n + Math.imul($, X) | 0, d = Math.imul($, J), l = l + Math.imul(j, Q) | 0, n = n + Math.imul(j, ee) | 0, n = n + Math.imul(Z, Q) | 0, d = d + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K, te) | 0, d = d + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n = n + Math.imul(z, ne) | 0, n = n + Math.imul(H, ie) | 0, d = d + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U, fe) | 0, d = d + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O, oe) | 0, d = d + Math.imul(O, se) | 0, l = l + Math.imul(k, he) | 0, n = n + Math.imul(k, ue) | 0, n = n + Math.imul(D, he) | 0, d = d + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n = n + Math.imul(R, de) | 0, n = n + Math.imul(I, le) | 0, d = d + Math.imul(I, de) | 0, l = l + Math.imul(g, ce) | 0, n = n + Math.imul(g, pe) | 0, n = n + Math.imul(_, ce) | 0, d = d + Math.imul(_, pe) | 0;
      var Ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n = Math.imul(G, J), n = n + Math.imul(Y, X) | 0, d = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n = n + Math.imul(V, ee) | 0, n = n + Math.imul($, Q) | 0, d = d + Math.imul($, ee) | 0, l = l + Math.imul(j, te) | 0, n = n + Math.imul(j, re) | 0, n = n + Math.imul(Z, te) | 0, d = d + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n = n + Math.imul(W, ne) | 0, n = n + Math.imul(K, ie) | 0, d = d + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H, fe) | 0, d = d + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U, oe) | 0, d = d + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O, he) | 0, d = d + Math.imul(O, ue) | 0, l = l + Math.imul(k, le) | 0, n = n + Math.imul(k, de) | 0, n = n + Math.imul(D, le) | 0, d = d + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n = n + Math.imul(R, pe) | 0, n = n + Math.imul(I, ce) | 0, d = d + Math.imul(I, pe) | 0, l = l + Math.imul(g, ve) | 0, n = n + Math.imul(g, be) | 0, n = n + Math.imul(_, ve) | 0, d = d + Math.imul(_, be) | 0;
      var Ve = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n = Math.imul(G, ee), n = n + Math.imul(Y, Q) | 0, d = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n = n + Math.imul(V, re) | 0, n = n + Math.imul($, te) | 0, d = d + Math.imul($, re) | 0, l = l + Math.imul(j, ie) | 0, n = n + Math.imul(j, ne) | 0, n = n + Math.imul(Z, ie) | 0, d = d + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K, fe) | 0, d = d + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H, oe) | 0, d = d + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U, he) | 0, d = d + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O, le) | 0, d = d + Math.imul(O, de) | 0, l = l + Math.imul(k, ce) | 0, n = n + Math.imul(k, pe) | 0, n = n + Math.imul(D, ce) | 0, d = d + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n = n + Math.imul(R, be) | 0, n = n + Math.imul(I, ve) | 0, d = d + Math.imul(I, be) | 0;
      var $e = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n = Math.imul(G, re), n = n + Math.imul(Y, te) | 0, d = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n = n + Math.imul(V, ne) | 0, n = n + Math.imul($, ie) | 0, d = d + Math.imul($, ne) | 0, l = l + Math.imul(j, fe) | 0, n = n + Math.imul(j, ae) | 0, n = n + Math.imul(Z, fe) | 0, d = d + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K, oe) | 0, d = d + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H, he) | 0, d = d + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U, le) | 0, d = d + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O, ce) | 0, d = d + Math.imul(O, pe) | 0, l = l + Math.imul(k, ve) | 0, n = n + Math.imul(k, be) | 0, n = n + Math.imul(D, ve) | 0, d = d + Math.imul(D, be) | 0;
      var Ge = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n = Math.imul(G, ne), n = n + Math.imul(Y, ie) | 0, d = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n = n + Math.imul(V, ae) | 0, n = n + Math.imul($, fe) | 0, d = d + Math.imul($, ae) | 0, l = l + Math.imul(j, oe) | 0, n = n + Math.imul(j, se) | 0, n = n + Math.imul(Z, oe) | 0, d = d + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K, he) | 0, d = d + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H, le) | 0, d = d + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U, ce) | 0, d = d + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n = n + Math.imul(C, be) | 0, n = n + Math.imul(O, ve) | 0, d = d + Math.imul(O, be) | 0;
      var Ye = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n = Math.imul(G, ae), n = n + Math.imul(Y, fe) | 0, d = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n = n + Math.imul(V, se) | 0, n = n + Math.imul($, oe) | 0, d = d + Math.imul($, se) | 0, l = l + Math.imul(j, he) | 0, n = n + Math.imul(j, ue) | 0, n = n + Math.imul(Z, he) | 0, d = d + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K, le) | 0, d = d + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H, ce) | 0, d = d + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n = n + Math.imul(F, be) | 0, n = n + Math.imul(U, ve) | 0, d = d + Math.imul(U, be) | 0;
      var Xe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n = Math.imul(G, se), n = n + Math.imul(Y, oe) | 0, d = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n = n + Math.imul(V, ue) | 0, n = n + Math.imul($, he) | 0, d = d + Math.imul($, ue) | 0, l = l + Math.imul(j, le) | 0, n = n + Math.imul(j, de) | 0, n = n + Math.imul(Z, le) | 0, d = d + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K, ce) | 0, d = d + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n = n + Math.imul(z, be) | 0, n = n + Math.imul(H, ve) | 0, d = d + Math.imul(H, be) | 0;
      var Je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n = Math.imul(G, ue), n = n + Math.imul(Y, he) | 0, d = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n = n + Math.imul(V, de) | 0, n = n + Math.imul($, le) | 0, d = d + Math.imul($, de) | 0, l = l + Math.imul(j, ce) | 0, n = n + Math.imul(j, pe) | 0, n = n + Math.imul(Z, ce) | 0, d = d + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n = n + Math.imul(W, be) | 0, n = n + Math.imul(K, ve) | 0, d = d + Math.imul(K, be) | 0;
      var Qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n = Math.imul(G, de), n = n + Math.imul(Y, le) | 0, d = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n = n + Math.imul(V, pe) | 0, n = n + Math.imul($, ce) | 0, d = d + Math.imul($, pe) | 0, l = l + Math.imul(j, ve) | 0, n = n + Math.imul(j, be) | 0, n = n + Math.imul(Z, ve) | 0, d = d + Math.imul(Z, be) | 0;
      var et = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n = Math.imul(G, pe), n = n + Math.imul(Y, ce) | 0, d = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n = n + Math.imul(V, be) | 0, n = n + Math.imul($, ve) | 0, d = d + Math.imul($, be) | 0;
      var tt = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n = Math.imul(G, be), n = n + Math.imul(Y, ve) | 0, d = Math.imul(Y, be);
      var rt = (b + l | 0) + ((n & 8191) << 13) | 0;
      return b = (d + (n >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b !== 0 && (c[19] = b, h.length++), h;
    };
    Math.imul || (L = q);
    function ge(v, i, a2) {
      a2.negative = i.negative ^ v.negative, a2.length = v.length + i.length;
      for (var h = 0, s = 0, u = 0;u < a2.length - 1; u++) {
        var c = s;
        s = 0;
        for (var b = h & 67108863, l = Math.min(u, i.length - 1), n = Math.max(0, u - v.length + 1);n <= l; n++) {
          var d = u - n, w = v.words[d] | 0, g = i.words[n] | 0, _ = w * g, A = _ & 67108863;
          c = c + (_ / 67108864 | 0) | 0, A = A + b | 0, b = A & 67108863, c = c + (A >>> 26) | 0, s += c >>> 26, c &= 67108863;
        }
        a2.words[u] = b, h = c, c = s;
      }
      return h !== 0 ? a2.words[u] = h : a2.length--, a2.strip();
    }
    function _e(v, i, a2) {
      var h = new N;
      return h.mulp(v, i, a2);
    }
    f.prototype.mulTo = function(i, a2) {
      var h, s = this.length + i.length;
      return this.length === 10 && i.length === 10 ? h = L(this, i, a2) : s < 63 ? h = q(this, i, a2) : s < 1024 ? h = ge(this, i, a2) : h = _e(this, i, a2), h;
    };
    function N(v, i) {
      this.x = v, this.y = i;
    }
    N.prototype.makeRBT = function(i) {
      for (var a2 = new Array(i), h = f.prototype._countBits(i) - 1, s = 0;s < i; s++)
        a2[s] = this.revBin(s, h, i);
      return a2;
    }, N.prototype.revBin = function(i, a2, h) {
      if (i === 0 || i === h - 1)
        return i;
      for (var s = 0, u = 0;u < a2; u++)
        s |= (i & 1) << a2 - u - 1, i >>= 1;
      return s;
    }, N.prototype.permute = function(i, a2, h, s, u, c) {
      for (var b = 0;b < c; b++)
        s[b] = a2[i[b]], u[b] = h[i[b]];
    }, N.prototype.transform = function(i, a2, h, s, u, c) {
      this.permute(c, i, a2, h, s, u);
      for (var b = 1;b < u; b <<= 1)
        for (var l = b << 1, n = Math.cos(2 * Math.PI / l), d = Math.sin(2 * Math.PI / l), w = 0;w < u; w += l)
          for (var g = n, _ = d, A = 0;A < b; A++) {
            var R = h[w + A], I = s[w + A], Me = h[w + A + b], k = s[w + A + b], D = g * Me - _ * k;
            k = g * k + _ * Me, Me = D, h[w + A] = R + Me, s[w + A] = I + k, h[w + A + b] = R - Me, s[w + A + b] = I - k, A !== l && (D = n * g - d * _, _ = n * _ + d * g, g = D);
          }
    }, N.prototype.guessLen13b = function(i, a2) {
      var h = Math.max(a2, i) | 1, s = h & 1, u = 0;
      for (h = h / 2 | 0;h; h = h >>> 1)
        u++;
      return 1 << u + 1 + s;
    }, N.prototype.conjugate = function(i, a2, h) {
      if (!(h <= 1))
        for (var s = 0;s < h / 2; s++) {
          var u = i[s];
          i[s] = i[h - s - 1], i[h - s - 1] = u, u = a2[s], a2[s] = -a2[h - s - 1], a2[h - s - 1] = -u;
        }
    }, N.prototype.normalize13b = function(i, a2) {
      for (var h = 0, s = 0;s < a2 / 2; s++) {
        var u = Math.round(i[2 * s + 1] / a2) * 8192 + Math.round(i[2 * s] / a2) + h;
        i[s] = u & 67108863, u < 67108864 ? h = 0 : h = u / 67108864 | 0;
      }
      return i;
    }, N.prototype.convert13b = function(i, a2, h, s) {
      for (var u = 0, c = 0;c < a2; c++)
        u = u + (i[c] | 0), h[2 * c] = u & 8191, u = u >>> 13, h[2 * c + 1] = u & 8191, u = u >>> 13;
      for (c = 2 * a2;c < s; ++c)
        h[c] = 0;
      r2(u === 0), r2((u & -8192) === 0);
    }, N.prototype.stub = function(i) {
      for (var a2 = new Array(i), h = 0;h < i; h++)
        a2[h] = 0;
      return a2;
    }, N.prototype.mulp = function(i, a2, h) {
      var s = 2 * this.guessLen13b(i.length, a2.length), u = this.makeRBT(s), c = this.stub(s), b = new Array(s), l = new Array(s), n = new Array(s), d = new Array(s), w = new Array(s), g = new Array(s), _ = h.words;
      _.length = s, this.convert13b(i.words, i.length, b, s), this.convert13b(a2.words, a2.length, d, s), this.transform(b, c, l, n, s, u), this.transform(d, c, w, g, s, u);
      for (var A = 0;A < s; A++) {
        var R = l[A] * w[A] - n[A] * g[A];
        n[A] = l[A] * g[A] + n[A] * w[A], l[A] = R;
      }
      return this.conjugate(l, n, s), this.transform(l, n, _, c, s, u), this.conjugate(_, c, s), this.normalize13b(_, s), h.negative = i.negative ^ a2.negative, h.length = i.length + a2.length, h.strip();
    }, f.prototype.mul = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), this.mulTo(i, a2);
    }, f.prototype.mulf = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), _e(this, i, a2);
    }, f.prototype.imul = function(i) {
      return this.clone().mulTo(i, this);
    }, f.prototype.imuln = function(i) {
      r2(typeof i == "number"), r2(i < 67108864);
      for (var a2 = 0, h = 0;h < this.length; h++) {
        var s = (this.words[h] | 0) * i, u = (s & 67108863) + (a2 & 67108863);
        a2 >>= 26, a2 += s / 67108864 | 0, a2 += u >>> 26, this.words[h] = u & 67108863;
      }
      return a2 !== 0 && (this.words[h] = a2, this.length++), this;
    }, f.prototype.muln = function(i) {
      return this.clone().imuln(i);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(i) {
      var a2 = B(i);
      if (a2.length === 0)
        return new f(1);
      for (var h = this, s = 0;s < a2.length && a2[s] === 0; s++, h = h.sqr())
        ;
      if (++s < a2.length)
        for (var u = h.sqr();s < a2.length; s++, u = u.sqr())
          a2[s] !== 0 && (h = h.mul(u));
      return h;
    }, f.prototype.iushln = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 67108863 >>> 26 - a2 << 26 - a2, u;
      if (a2 !== 0) {
        var c = 0;
        for (u = 0;u < this.length; u++) {
          var b = this.words[u] & s, l = (this.words[u] | 0) - b << a2;
          this.words[u] = l | c, c = b >>> 26 - a2;
        }
        c && (this.words[u] = c, this.length++);
      }
      if (h !== 0) {
        for (u = this.length - 1;u >= 0; u--)
          this.words[u + h] = this.words[u];
        for (u = 0;u < h; u++)
          this.words[u] = 0;
        this.length += h;
      }
      return this.strip();
    }, f.prototype.ishln = function(i) {
      return r2(this.negative === 0), this.iushln(i);
    }, f.prototype.iushrn = function(i, a2, h) {
      r2(typeof i == "number" && i >= 0);
      var s;
      a2 ? s = (a2 - a2 % 26) / 26 : s = 0;
      var u = i % 26, c = Math.min((i - u) / 26, this.length), b = 67108863 ^ 67108863 >>> u << u, l = h;
      if (s -= c, s = Math.max(0, s), l) {
        for (var n = 0;n < c; n++)
          l.words[n] = this.words[n];
        l.length = c;
      }
      if (c !== 0)
        if (this.length > c)
          for (this.length -= c, n = 0;n < this.length; n++)
            this.words[n] = this.words[n + c];
        else
          this.words[0] = 0, this.length = 1;
      var d = 0;
      for (n = this.length - 1;n >= 0 && (d !== 0 || n >= s); n--) {
        var w = this.words[n] | 0;
        this.words[n] = d << 26 - u | w >>> u, d = w & b;
      }
      return l && d !== 0 && (l.words[l.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, f.prototype.ishrn = function(i, a2, h) {
      return r2(this.negative === 0), this.iushrn(i, a2, h);
    }, f.prototype.shln = function(i) {
      return this.clone().ishln(i);
    }, f.prototype.ushln = function(i) {
      return this.clone().iushln(i);
    }, f.prototype.shrn = function(i) {
      return this.clone().ishrn(i);
    }, f.prototype.ushrn = function(i) {
      return this.clone().iushrn(i);
    }, f.prototype.testn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return false;
      var u = this.words[h];
      return !!(u & s);
    }, f.prototype.imaskn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h)
        return this;
      if (a2 !== 0 && h++, this.length = Math.min(h, this.length), a2 !== 0) {
        var s = 67108863 ^ 67108863 >>> a2 << a2;
        this.words[this.length - 1] &= s;
      }
      return this.strip();
    }, f.prototype.maskn = function(i) {
      return this.clone().imaskn(i);
    }, f.prototype.iaddn = function(i) {
      return r2(typeof i == "number"), r2(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
    }, f.prototype._iaddn = function(i) {
      this.words[0] += i;
      for (var a2 = 0;a2 < this.length && this.words[a2] >= 67108864; a2++)
        this.words[a2] -= 67108864, a2 === this.length - 1 ? this.words[a2 + 1] = 1 : this.words[a2 + 1]++;
      return this.length = Math.max(this.length, a2 + 1), this;
    }, f.prototype.isubn = function(i) {
      if (r2(typeof i == "number"), r2(i < 67108864), i < 0)
        return this.iaddn(-i);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(i), this.negative = 1, this;
      if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var a2 = 0;a2 < this.length && this.words[a2] < 0; a2++)
          this.words[a2] += 67108864, this.words[a2 + 1] -= 1;
      return this.strip();
    }, f.prototype.addn = function(i) {
      return this.clone().iaddn(i);
    }, f.prototype.subn = function(i) {
      return this.clone().isubn(i);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(i, a2, h) {
      var s = i.length + h, u;
      this._expand(s);
      var c, b = 0;
      for (u = 0;u < i.length; u++) {
        c = (this.words[u + h] | 0) + b;
        var l = (i.words[u] | 0) * a2;
        c -= l & 67108863, b = (c >> 26) - (l / 67108864 | 0), this.words[u + h] = c & 67108863;
      }
      for (;u < this.length - h; u++)
        c = (this.words[u + h] | 0) + b, b = c >> 26, this.words[u + h] = c & 67108863;
      if (b === 0)
        return this.strip();
      for (r2(b === -1), b = 0, u = 0;u < this.length; u++)
        c = -(this.words[u] | 0) + b, b = c >> 26, this.words[u] = c & 67108863;
      return this.negative = 1, this.strip();
    }, f.prototype._wordDiv = function(i, a2) {
      var h = this.length - i.length, s = this.clone(), u = i, c = u.words[u.length - 1] | 0, b = this._countBits(c);
      h = 26 - b, h !== 0 && (u = u.ushln(h), s.iushln(h), c = u.words[u.length - 1] | 0);
      var l = s.length - u.length, n;
      if (a2 !== "mod") {
        n = new f(null), n.length = l + 1, n.words = new Array(n.length);
        for (var d = 0;d < n.length; d++)
          n.words[d] = 0;
      }
      var w = s.clone()._ishlnsubmul(u, 1, l);
      w.negative === 0 && (s = w, n && (n.words[l] = 1));
      for (var g = l - 1;g >= 0; g--) {
        var _ = (s.words[u.length + g] | 0) * 67108864 + (s.words[u.length + g - 1] | 0);
        for (_ = Math.min(_ / c | 0, 67108863), s._ishlnsubmul(u, _, g);s.negative !== 0; )
          _--, s.negative = 0, s._ishlnsubmul(u, 1, g), s.isZero() || (s.negative ^= 1);
        n && (n.words[g] = _);
      }
      return n && n.strip(), s.strip(), a2 !== "div" && h !== 0 && s.iushrn(h), { div: n || null, mod: s };
    }, f.prototype.divmod = function(i, a2, h) {
      if (r2(!i.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var s, u, c;
      return this.negative !== 0 && i.negative === 0 ? (c = this.neg().divmod(i, a2), a2 !== "mod" && (s = c.div.neg()), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.iadd(i)), { div: s, mod: u }) : this.negative === 0 && i.negative !== 0 ? (c = this.divmod(i.neg(), a2), a2 !== "mod" && (s = c.div.neg()), { div: s, mod: c.mod }) : (this.negative & i.negative) !== 0 ? (c = this.neg().divmod(i.neg(), a2), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.isub(i)), { div: c.div, mod: u }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f(0), mod: this } : i.length === 1 ? a2 === "div" ? { div: this.divn(i.words[0]), mod: null } : a2 === "mod" ? { div: null, mod: new f(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f(this.modn(i.words[0])) } : this._wordDiv(i, a2);
    }, f.prototype.div = function(i) {
      return this.divmod(i, "div", false).div;
    }, f.prototype.mod = function(i) {
      return this.divmod(i, "mod", false).mod;
    }, f.prototype.umod = function(i) {
      return this.divmod(i, "mod", true).mod;
    }, f.prototype.divRound = function(i) {
      var a2 = this.divmod(i);
      if (a2.mod.isZero())
        return a2.div;
      var h = a2.div.negative !== 0 ? a2.mod.isub(i) : a2.mod, s = i.ushrn(1), u = i.andln(1), c = h.cmp(s);
      return c < 0 || u === 1 && c === 0 ? a2.div : a2.div.negative !== 0 ? a2.div.isubn(1) : a2.div.iaddn(1);
    }, f.prototype.modn = function(i) {
      r2(i <= 67108863);
      for (var a2 = (1 << 26) % i, h = 0, s = this.length - 1;s >= 0; s--)
        h = (a2 * h + (this.words[s] | 0)) % i;
      return h;
    }, f.prototype.idivn = function(i) {
      r2(i <= 67108863);
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = (this.words[h] | 0) + a2 * 67108864;
        this.words[h] = s / i | 0, a2 = s % i;
      }
      return this.strip();
    }, f.prototype.divn = function(i) {
      return this.clone().idivn(i);
    }, f.prototype.egcd = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = new f(0), b = new f(1), l = 0;a2.isEven() && h.isEven(); )
        a2.iushrn(1), h.iushrn(1), ++l;
      for (var n = h.clone(), d = a2.clone();!a2.isZero(); ) {
        for (var w = 0, g = 1;(a2.words[0] & g) === 0 && w < 26; ++w, g <<= 1)
          ;
        if (w > 0)
          for (a2.iushrn(w);w-- > 0; )
            (s.isOdd() || u.isOdd()) && (s.iadd(n), u.isub(d)), s.iushrn(1), u.iushrn(1);
        for (var _ = 0, A = 1;(h.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
          ;
        if (_ > 0)
          for (h.iushrn(_);_-- > 0; )
            (c.isOdd() || b.isOdd()) && (c.iadd(n), b.isub(d)), c.iushrn(1), b.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(c), u.isub(b)) : (h.isub(a2), c.isub(s), b.isub(u));
      }
      return { a: c, b, gcd: h.iushln(l) };
    }, f.prototype._invmp = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = h.clone();a2.cmpn(1) > 0 && h.cmpn(1) > 0; ) {
        for (var b = 0, l = 1;(a2.words[0] & l) === 0 && b < 26; ++b, l <<= 1)
          ;
        if (b > 0)
          for (a2.iushrn(b);b-- > 0; )
            s.isOdd() && s.iadd(c), s.iushrn(1);
        for (var n = 0, d = 1;(h.words[0] & d) === 0 && n < 26; ++n, d <<= 1)
          ;
        if (n > 0)
          for (h.iushrn(n);n-- > 0; )
            u.isOdd() && u.iadd(c), u.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(u)) : (h.isub(a2), u.isub(s));
      }
      var w;
      return a2.cmpn(1) === 0 ? w = s : w = u, w.cmpn(0) < 0 && w.iadd(i), w;
    }, f.prototype.gcd = function(i) {
      if (this.isZero())
        return i.abs();
      if (i.isZero())
        return this.abs();
      var a2 = this.clone(), h = i.clone();
      a2.negative = 0, h.negative = 0;
      for (var s = 0;a2.isEven() && h.isEven(); s++)
        a2.iushrn(1), h.iushrn(1);
      do {
        for (;a2.isEven(); )
          a2.iushrn(1);
        for (;h.isEven(); )
          h.iushrn(1);
        var u = a2.cmp(h);
        if (u < 0) {
          var c = a2;
          a2 = h, h = c;
        } else if (u === 0 || h.cmpn(1) === 0)
          break;
        a2.isub(h);
      } while (true);
      return h.iushln(s);
    }, f.prototype.invm = function(i) {
      return this.egcd(i).a.umod(i);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(i) {
      return this.words[0] & i;
    }, f.prototype.bincn = function(i) {
      r2(typeof i == "number");
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return this._expand(h + 1), this.words[h] |= s, this;
      for (var u = s, c = h;u !== 0 && c < this.length; c++) {
        var b = this.words[c] | 0;
        b += u, u = b >>> 26, b &= 67108863, this.words[c] = b;
      }
      return u !== 0 && (this.words[c] = u, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(i) {
      var a2 = i < 0;
      if (this.negative !== 0 && !a2)
        return -1;
      if (this.negative === 0 && a2)
        return 1;
      this.strip();
      var h;
      if (this.length > 1)
        h = 1;
      else {
        a2 && (i = -i), r2(i <= 67108863, "Number is too big");
        var s = this.words[0] | 0;
        h = s === i ? 0 : s < i ? -1 : 1;
      }
      return this.negative !== 0 ? -h | 0 : h;
    }, f.prototype.cmp = function(i) {
      if (this.negative !== 0 && i.negative === 0)
        return -1;
      if (this.negative === 0 && i.negative !== 0)
        return 1;
      var a2 = this.ucmp(i);
      return this.negative !== 0 ? -a2 | 0 : a2;
    }, f.prototype.ucmp = function(i) {
      if (this.length > i.length)
        return 1;
      if (this.length < i.length)
        return -1;
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = this.words[h] | 0, u = i.words[h] | 0;
        if (s !== u) {
          s < u ? a2 = -1 : s > u && (a2 = 1);
          break;
        }
      }
      return a2;
    }, f.prototype.gtn = function(i) {
      return this.cmpn(i) === 1;
    }, f.prototype.gt = function(i) {
      return this.cmp(i) === 1;
    }, f.prototype.gten = function(i) {
      return this.cmpn(i) >= 0;
    }, f.prototype.gte = function(i) {
      return this.cmp(i) >= 0;
    }, f.prototype.ltn = function(i) {
      return this.cmpn(i) === -1;
    }, f.prototype.lt = function(i) {
      return this.cmp(i) === -1;
    }, f.prototype.lten = function(i) {
      return this.cmpn(i) <= 0;
    }, f.prototype.lte = function(i) {
      return this.cmp(i) <= 0;
    }, f.prototype.eqn = function(i) {
      return this.cmpn(i) === 0;
    }, f.prototype.eq = function(i) {
      return this.cmp(i) === 0;
    }, f.red = function(i) {
      return new P(i);
    }, f.prototype.toRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(i) {
      return this.red = i, this;
    }, f.prototype.forceRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(i);
    }, f.prototype.redAdd = function(i) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
    }, f.prototype.redIAdd = function(i) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
    }, f.prototype.redSub = function(i) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
    }, f.prototype.redISub = function(i) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
    }, f.prototype.redShl = function(i) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
    }, f.prototype.redMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
    }, f.prototype.redIMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(i) {
      return r2(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
    };
    var we = { k256: null, p224: null, p192: null, p25519: null };
    function ye(v, i) {
      this.name = v, this.p = new f(i, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    ye.prototype._tmp = function() {
      var i = new f(null);
      return i.words = new Array(Math.ceil(this.n / 13)), i;
    }, ye.prototype.ireduce = function(i) {
      var a2 = i, h;
      do
        this.split(a2, this.tmp), a2 = this.imulK(a2), a2 = a2.iadd(this.tmp), h = a2.bitLength();
      while (h > this.n);
      var s = h < this.n ? -1 : a2.ucmp(this.p);
      return s === 0 ? (a2.words[0] = 0, a2.length = 1) : s > 0 ? a2.isub(this.p) : a2.strip !== undefined ? a2.strip() : a2._strip(), a2;
    }, ye.prototype.split = function(i, a2) {
      i.iushrn(this.n, 0, a2);
    }, ye.prototype.imulK = function(i) {
      return i.imul(this.k);
    };
    function xe() {
      ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(xe, ye), xe.prototype.split = function(i, a2) {
      for (var h = 4194303, s = Math.min(i.length, 9), u = 0;u < s; u++)
        a2.words[u] = i.words[u];
      if (a2.length = s, i.length <= 9) {
        i.words[0] = 0, i.length = 1;
        return;
      }
      var c = i.words[9];
      for (a2.words[a2.length++] = c & h, u = 10;u < i.length; u++) {
        var b = i.words[u] | 0;
        i.words[u - 10] = (b & h) << 4 | c >>> 22, c = b;
      }
      c >>>= 22, i.words[u - 10] = c, c === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
    }, xe.prototype.imulK = function(i) {
      i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = i.words[h] | 0;
        a2 += s * 977, i.words[h] = a2 & 67108863, a2 = s * 64 + (a2 / 67108864 | 0);
      }
      return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
    };
    function Re() {
      ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(Re, ye);
    function Ee() {
      ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Ee, ye);
    function Ae() {
      ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(Ae, ye), Ae.prototype.imulK = function(i) {
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = (i.words[h] | 0) * 19 + a2, u = s & 67108863;
        s >>>= 26, i.words[h] = u, a2 = s;
      }
      return a2 !== 0 && (i.words[i.length++] = a2), i;
    }, f._prime = function(i) {
      if (we[i])
        return we[i];
      var a2;
      if (i === "k256")
        a2 = new xe;
      else if (i === "p224")
        a2 = new Re;
      else if (i === "p192")
        a2 = new Ee;
      else if (i === "p25519")
        a2 = new Ae;
      else
        throw new Error("Unknown prime " + i);
      return we[i] = a2, a2;
    };
    function P(v) {
      if (typeof v == "string") {
        var i = f._prime(v);
        this.m = i.p, this.prime = i;
      } else
        r2(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
    }
    P.prototype._verify1 = function(i) {
      r2(i.negative === 0, "red works only with positives"), r2(i.red, "red works only with red numbers");
    }, P.prototype._verify2 = function(i, a2) {
      r2((i.negative | a2.negative) === 0, "red works only with positives"), r2(i.red && i.red === a2.red, "red works only with red numbers");
    }, P.prototype.imod = function(i) {
      return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
    }, P.prototype.neg = function(i) {
      return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
    }, P.prototype.add = function(i, a2) {
      this._verify2(i, a2);
      var h = i.add(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h._forceRed(this);
    }, P.prototype.iadd = function(i, a2) {
      this._verify2(i, a2);
      var h = i.iadd(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h;
    }, P.prototype.sub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.sub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h._forceRed(this);
    }, P.prototype.isub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.isub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h;
    }, P.prototype.shl = function(i, a2) {
      return this._verify1(i), this.imod(i.ushln(a2));
    }, P.prototype.imul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.imul(a2));
    }, P.prototype.mul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.mul(a2));
    }, P.prototype.isqr = function(i) {
      return this.imul(i, i.clone());
    }, P.prototype.sqr = function(i) {
      return this.mul(i, i);
    }, P.prototype.sqrt = function(i) {
      if (i.isZero())
        return i.clone();
      var a2 = this.m.andln(3);
      if (r2(a2 % 2 === 1), a2 === 3) {
        var h = this.m.add(new f(1)).iushrn(2);
        return this.pow(i, h);
      }
      for (var s = this.m.subn(1), u = 0;!s.isZero() && s.andln(1) === 0; )
        u++, s.iushrn(1);
      r2(!s.isZero());
      var c = new f(1).toRed(this), b = c.redNeg(), l = this.m.subn(1).iushrn(1), n = this.m.bitLength();
      for (n = new f(2 * n * n).toRed(this);this.pow(n, l).cmp(b) !== 0; )
        n.redIAdd(b);
      for (var d = this.pow(n, s), w = this.pow(i, s.addn(1).iushrn(1)), g = this.pow(i, s), _ = u;g.cmp(c) !== 0; ) {
        for (var A = g, R = 0;A.cmp(c) !== 0; R++)
          A = A.redSqr();
        r2(R < _);
        var I = this.pow(d, new f(1).iushln(_ - R - 1));
        w = w.redMul(I), d = I.redSqr(), g = g.redMul(d), _ = R;
      }
      return w;
    }, P.prototype.invm = function(i) {
      var a2 = i._invmp(this.m);
      return a2.negative !== 0 ? (a2.negative = 0, this.imod(a2).redNeg()) : this.imod(a2);
    }, P.prototype.pow = function(i, a2) {
      if (a2.isZero())
        return new f(1).toRed(this);
      if (a2.cmpn(1) === 0)
        return i.clone();
      var h = 4, s = new Array(1 << h);
      s[0] = new f(1).toRed(this), s[1] = i;
      for (var u = 2;u < s.length; u++)
        s[u] = this.mul(s[u - 1], i);
      var c = s[0], b = 0, l = 0, n = a2.bitLength() % 26;
      for (n === 0 && (n = 26), u = a2.length - 1;u >= 0; u--) {
        for (var d = a2.words[u], w = n - 1;w >= 0; w--) {
          var g = d >> w & 1;
          if (c !== s[0] && (c = this.sqr(c)), g === 0 && b === 0) {
            l = 0;
            continue;
          }
          b <<= 1, b |= g, l++, !(l !== h && (u !== 0 || w !== 0)) && (c = this.mul(c, s[b]), l = 0, b = 0);
        }
        n = 26;
      }
      return c;
    }, P.prototype.convertTo = function(i) {
      var a2 = i.umod(this.m);
      return a2 === i ? a2.clone() : a2;
    }, P.prototype.convertFrom = function(i) {
      var a2 = i.clone();
      return a2.red = null, a2;
    }, f.mont = function(i) {
      return new Se(i);
    };
    function Se(v) {
      P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(Se, P), Se.prototype.convertTo = function(i) {
      return this.imod(i.ushln(this.shift));
    }, Se.prototype.convertFrom = function(i) {
      var a2 = this.imod(i.mul(this.rinv));
      return a2.red = null, a2;
    }, Se.prototype.imul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return i.words[0] = 0, i.length = 1, i;
      var h = i.imul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.mul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return new f(0)._forceRed(this);
      var h = i.mul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.invm = function(i) {
      var a2 = this.imod(i._invmp(this.m).mul(this.r2));
      return a2._forceRed(this);
    };
  })(typeof ed > "u" || ed, ky);
});
var h0 = T((Yk, Ly) => {
  var s0 = Ut(), Ff = s0.Buffer, Er = {}, Ar;
  for (Ar in s0)
    !s0.hasOwnProperty(Ar) || Ar === "SlowBuffer" || Ar === "Buffer" || (Er[Ar] = s0[Ar]);
  var Uf = Er.Buffer = {};
  for (Ar in Ff)
    !Ff.hasOwnProperty(Ar) || Ar === "allocUnsafe" || Ar === "allocUnsafeSlow" || (Uf[Ar] = Ff[Ar]);
  Er.Buffer.prototype = Ff.prototype;
  (!Uf.from || Uf.from === Uint8Array.from) && (Uf.from = function(t3, e2, r2) {
    if (typeof t3 == "number")
      throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof t3);
    if (t3 && typeof t3.length > "u")
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t3);
    return Ff(t3, e2, r2);
  });
  Uf.alloc || (Uf.alloc = function(t3, e2, r2) {
    if (typeof t3 != "number")
      throw new TypeError('The "size" argument must be of type number. Received type ' + typeof t3);
    if (t3 < 0 || t3 >= 2 * (1 << 30))
      throw new RangeError('The value "' + t3 + '" is invalid for option "size"');
    var o = Ff(t3);
    return !e2 || e2.length === 0 ? o.fill(0) : typeof r2 == "string" ? o.fill(e2, r2) : o.fill(e2), o;
  });
  if (!Er.kStringMaxLength)
    try {
      Er.kStringMaxLength = process.binding("buffer").kStringMaxLength;
    } catch {
    }
  Er.constants || (Er.constants = { MAX_LENGTH: Er.kMaxLength }, Er.kStringMaxLength && (Er.constants.MAX_STRING_LENGTH = Er.kStringMaxLength));
  Ly.exports = Er;
});
var u0 = T((Ny) => {
  var aB = Ie();
  function Rr(t3) {
    this._reporterState = { obj: null, path: [], options: t3 || {}, errors: [] };
  }
  Ny.Reporter = Rr;
  Rr.prototype.isError = function(e2) {
    return e2 instanceof zf;
  };
  Rr.prototype.save = function() {
    let e2 = this._reporterState;
    return { obj: e2.obj, pathLen: e2.path.length };
  };
  Rr.prototype.restore = function(e2) {
    let r2 = this._reporterState;
    r2.obj = e2.obj, r2.path = r2.path.slice(0, e2.pathLen);
  };
  Rr.prototype.enterKey = function(e2) {
    return this._reporterState.path.push(e2);
  };
  Rr.prototype.exitKey = function(e2) {
    let r2 = this._reporterState;
    r2.path = r2.path.slice(0, e2 - 1);
  };
  Rr.prototype.leaveKey = function(e2, r2, o) {
    let f = this._reporterState;
    this.exitKey(e2), f.obj !== null && (f.obj[r2] = o);
  };
  Rr.prototype.path = function() {
    return this._reporterState.path.join("/");
  };
  Rr.prototype.enterObject = function() {
    let e2 = this._reporterState, r2 = e2.obj;
    return e2.obj = {}, r2;
  };
  Rr.prototype.leaveObject = function(e2) {
    let r2 = this._reporterState, o = r2.obj;
    return r2.obj = e2, o;
  };
  Rr.prototype.error = function(e2) {
    let r2, o = this._reporterState, f = e2 instanceof zf;
    if (f ? r2 = e2 : r2 = new zf(o.path.map(function(p) {
      return "[" + JSON.stringify(p) + "]";
    }).join(""), e2.message || e2, e2.stack), !o.options.partial)
      throw r2;
    return f || o.errors.push(r2), r2;
  };
  Rr.prototype.wrapResult = function(e2) {
    let r2 = this._reporterState;
    return r2.options.partial ? { result: this.isError(e2) ? null : e2, errors: r2.errors } : e2;
  };
  function zf(t3, e2) {
    this.path = t3, this.rethrow(e2);
  }
  aB(zf, Error);
  zf.prototype.rethrow = function(e2) {
    if (this.message = e2 + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, zf), !this.stack)
      try {
        throw new Error(this.message);
      } catch (r2) {
        this.stack = r2.stack;
      }
    return this;
  };
});
var Kf = T((rd) => {
  var oB = Ie(), l0 = u0().Reporter, Hf = h0().Buffer;
  function Br(t3, e2) {
    if (l0.call(this, e2), !Hf.isBuffer(t3)) {
      this.error("Input not Buffer");
      return;
    }
    this.base = t3, this.offset = 0, this.length = t3.length;
  }
  oB(Br, l0);
  rd.DecoderBuffer = Br;
  Br.isDecoderBuffer = function(e2) {
    return e2 instanceof Br ? true : typeof e2 == "object" && Hf.isBuffer(e2.base) && e2.constructor.name === "DecoderBuffer" && typeof e2.offset == "number" && typeof e2.length == "number" && typeof e2.save == "function" && typeof e2.restore == "function" && typeof e2.isEmpty == "function" && typeof e2.readUInt8 == "function" && typeof e2.skip == "function" && typeof e2.raw == "function";
  };
  Br.prototype.save = function() {
    return { offset: this.offset, reporter: l0.prototype.save.call(this) };
  };
  Br.prototype.restore = function(e2) {
    let r2 = new Br(this.base);
    return r2.offset = e2.offset, r2.length = this.offset, this.offset = e2.offset, l0.prototype.restore.call(this, e2.reporter), r2;
  };
  Br.prototype.isEmpty = function() {
    return this.offset === this.length;
  };
  Br.prototype.readUInt8 = function(e2) {
    return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(e2 || "DecoderBuffer overrun");
  };
  Br.prototype.skip = function(e2, r2) {
    if (!(this.offset + e2 <= this.length))
      return this.error(r2 || "DecoderBuffer overrun");
    let o = new Br(this.base);
    return o._reporterState = this._reporterState, o.offset = this.offset, o.length = this.offset + e2, this.offset += e2, o;
  };
  Br.prototype.raw = function(e2) {
    return this.base.slice(e2 ? e2.offset : this.offset, this.length);
  };
  function Wf(t3, e2) {
    if (Array.isArray(t3))
      this.length = 0, this.value = t3.map(function(r2) {
        return Wf.isEncoderBuffer(r2) || (r2 = new Wf(r2, e2)), this.length += r2.length, r2;
      }, this);
    else if (typeof t3 == "number") {
      if (!(0 <= t3 && t3 <= 255))
        return e2.error("non-byte EncoderBuffer value");
      this.value = t3, this.length = 1;
    } else if (typeof t3 == "string")
      this.value = t3, this.length = Hf.byteLength(t3);
    else if (Hf.isBuffer(t3))
      this.value = t3, this.length = t3.length;
    else
      return e2.error("Unsupported type: " + typeof t3);
  }
  rd.EncoderBuffer = Wf;
  Wf.isEncoderBuffer = function(e2) {
    return e2 instanceof Wf ? true : typeof e2 == "object" && e2.constructor.name === "EncoderBuffer" && typeof e2.length == "number" && typeof e2.join == "function";
  };
  Wf.prototype.join = function(e2, r2) {
    return e2 || (e2 = Hf.alloc(this.length)), r2 || (r2 = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(o) {
      o.join(e2, r2), r2 += o.length;
    }) : (typeof this.value == "number" ? e2[r2] = this.value : typeof this.value == "string" ? e2.write(this.value, r2) : Hf.isBuffer(this.value) && this.value.copy(e2, r2), r2 += this.length)), e2;
  };
});
var d0 = T((Qk, Py) => {
  var sB = u0().Reporter, hB = Kf().EncoderBuffer, uB = Kf().DecoderBuffer, Qt = ar(), Dy = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], lB = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(Dy), dB = ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"];
  function Ue(t3, e2, r2) {
    let o = {};
    this._baseState = o, o.name = r2, o.enc = t3, o.parent = e2 || null, o.children = null, o.tag = null, o.args = null, o.reverseArgs = null, o.choice = null, o.optional = false, o.any = false, o.obj = false, o.use = null, o.useDecoder = null, o.key = null, o.default = null, o.explicit = null, o.implicit = null, o.contains = null, o.parent || (o.children = [], this._wrap());
  }
  Py.exports = Ue;
  var cB = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
  Ue.prototype.clone = function() {
    let e2 = this._baseState, r2 = {};
    cB.forEach(function(f) {
      r2[f] = e2[f];
    });
    let o = new this.constructor(r2.parent);
    return o._baseState = r2, o;
  };
  Ue.prototype._wrap = function() {
    let e2 = this._baseState;
    lB.forEach(function(r2) {
      this[r2] = function() {
        let f = new this.constructor(this);
        return e2.children.push(f), f[r2].apply(f, arguments);
      };
    }, this);
  };
  Ue.prototype._init = function(e2) {
    let r2 = this._baseState;
    Qt(r2.parent === null), e2.call(this), r2.children = r2.children.filter(function(o) {
      return o._baseState.parent === this;
    }, this), Qt.equal(r2.children.length, 1, "Root node can have only one child");
  };
  Ue.prototype._useArgs = function(e2) {
    let r2 = this._baseState, o = e2.filter(function(f) {
      return f instanceof this.constructor;
    }, this);
    e2 = e2.filter(function(f) {
      return !(f instanceof this.constructor);
    }, this), o.length !== 0 && (Qt(r2.children === null), r2.children = o, o.forEach(function(f) {
      f._baseState.parent = this;
    }, this)), e2.length !== 0 && (Qt(r2.args === null), r2.args = e2, r2.reverseArgs = e2.map(function(f) {
      if (typeof f != "object" || f.constructor !== Object)
        return f;
      let p = {};
      return Object.keys(f).forEach(function(m) {
        m == (m | 0) && (m |= 0);
        let y = f[m];
        p[y] = m;
      }), p;
    }));
  };
  dB.forEach(function(t3) {
    Ue.prototype[t3] = function() {
      let r2 = this._baseState;
      throw new Error(t3 + " not implemented for encoding: " + r2.enc);
    };
  });
  Dy.forEach(function(t3) {
    Ue.prototype[t3] = function() {
      let r2 = this._baseState, o = Array.prototype.slice.call(arguments);
      return Qt(r2.tag === null), r2.tag = t3, this._useArgs(o), this;
    };
  });
  Ue.prototype.use = function(e2) {
    Qt(e2);
    let r2 = this._baseState;
    return Qt(r2.use === null), r2.use = e2, this;
  };
  Ue.prototype.optional = function() {
    let e2 = this._baseState;
    return e2.optional = true, this;
  };
  Ue.prototype.def = function(e2) {
    let r2 = this._baseState;
    return Qt(r2.default === null), r2.default = e2, r2.optional = true, this;
  };
  Ue.prototype.explicit = function(e2) {
    let r2 = this._baseState;
    return Qt(r2.explicit === null && r2.implicit === null), r2.explicit = e2, this;
  };
  Ue.prototype.implicit = function(e2) {
    let r2 = this._baseState;
    return Qt(r2.explicit === null && r2.implicit === null), r2.implicit = e2, this;
  };
  Ue.prototype.obj = function() {
    let e2 = this._baseState, r2 = Array.prototype.slice.call(arguments);
    return e2.obj = true, r2.length !== 0 && this._useArgs(r2), this;
  };
  Ue.prototype.key = function(e2) {
    let r2 = this._baseState;
    return Qt(r2.key === null), r2.key = e2, this;
  };
  Ue.prototype.any = function() {
    let e2 = this._baseState;
    return e2.any = true, this;
  };
  Ue.prototype.choice = function(e2) {
    let r2 = this._baseState;
    return Qt(r2.choice === null), r2.choice = e2, this._useArgs(Object.keys(e2).map(function(o) {
      return e2[o];
    })), this;
  };
  Ue.prototype.contains = function(e2) {
    let r2 = this._baseState;
    return Qt(r2.use === null), r2.contains = e2, this;
  };
  Ue.prototype._decode = function(e2, r2) {
    let o = this._baseState;
    if (o.parent === null)
      return e2.wrapResult(o.children[0]._decode(e2, r2));
    let f = o.default, p = true, m = null;
    if (o.key !== null && (m = e2.enterKey(o.key)), o.optional) {
      let M = null;
      if (o.explicit !== null ? M = o.explicit : o.implicit !== null ? M = o.implicit : o.tag !== null && (M = o.tag), M === null && !o.any) {
        let x = e2.save();
        try {
          o.choice === null ? this._decodeGeneric(o.tag, e2, r2) : this._decodeChoice(e2, r2), p = true;
        } catch {
          p = false;
        }
        e2.restore(x);
      } else if (p = this._peekTag(e2, M, o.any), e2.isError(p))
        return p;
    }
    let y;
    if (o.obj && p && (y = e2.enterObject()), p) {
      if (o.explicit !== null) {
        let x = this._decodeTag(e2, o.explicit);
        if (e2.isError(x))
          return x;
        e2 = x;
      }
      let M = e2.offset;
      if (o.use === null && o.choice === null) {
        let x;
        o.any && (x = e2.save());
        let S = this._decodeTag(e2, o.implicit !== null ? o.implicit : o.tag, o.any);
        if (e2.isError(S))
          return S;
        o.any ? f = e2.raw(x) : e2 = S;
      }
      if (r2 && r2.track && o.tag !== null && r2.track(e2.path(), M, e2.length, "tagged"), r2 && r2.track && o.tag !== null && r2.track(e2.path(), e2.offset, e2.length, "content"), o.any || (o.choice === null ? f = this._decodeGeneric(o.tag, e2, r2) : f = this._decodeChoice(e2, r2)), e2.isError(f))
        return f;
      if (!o.any && o.choice === null && o.children !== null && o.children.forEach(function(S) {
        S._decode(e2, r2);
      }), o.contains && (o.tag === "octstr" || o.tag === "bitstr")) {
        let x = new uB(f);
        f = this._getUse(o.contains, e2._reporterState.obj)._decode(x, r2);
      }
    }
    return o.obj && p && (f = e2.leaveObject(y)), o.key !== null && (f !== null || p === true) ? e2.leaveKey(m, o.key, f) : m !== null && e2.exitKey(m), f;
  };
  Ue.prototype._decodeGeneric = function(e2, r2, o) {
    let f = this._baseState;
    return e2 === "seq" || e2 === "set" ? null : e2 === "seqof" || e2 === "setof" ? this._decodeList(r2, e2, f.args[0], o) : /str$/.test(e2) ? this._decodeStr(r2, e2, o) : e2 === "objid" && f.args ? this._decodeObjid(r2, f.args[0], f.args[1], o) : e2 === "objid" ? this._decodeObjid(r2, null, null, o) : e2 === "gentime" || e2 === "utctime" ? this._decodeTime(r2, e2, o) : e2 === "null_" ? this._decodeNull(r2, o) : e2 === "bool" ? this._decodeBool(r2, o) : e2 === "objDesc" ? this._decodeStr(r2, e2, o) : e2 === "int" || e2 === "enum" ? this._decodeInt(r2, f.args && f.args[0], o) : f.use !== null ? this._getUse(f.use, r2._reporterState.obj)._decode(r2, o) : r2.error("unknown tag: " + e2);
  };
  Ue.prototype._getUse = function(e2, r2) {
    let o = this._baseState;
    return o.useDecoder = this._use(e2, r2), Qt(o.useDecoder._baseState.parent === null), o.useDecoder = o.useDecoder._baseState.children[0], o.implicit !== o.useDecoder._baseState.implicit && (o.useDecoder = o.useDecoder.clone(), o.useDecoder._baseState.implicit = o.implicit), o.useDecoder;
  };
  Ue.prototype._decodeChoice = function(e2, r2) {
    let o = this._baseState, f = null, p = false;
    return Object.keys(o.choice).some(function(m) {
      let y = e2.save(), M = o.choice[m];
      try {
        let x = M._decode(e2, r2);
        if (e2.isError(x))
          return false;
        f = { type: m, value: x }, p = true;
      } catch {
        return e2.restore(y), false;
      }
      return true;
    }, this), p ? f : e2.error("Choice not matched");
  };
  Ue.prototype._createEncoderBuffer = function(e2) {
    return new hB(e2, this.reporter);
  };
  Ue.prototype._encode = function(e2, r2, o) {
    let f = this._baseState;
    if (f.default !== null && f.default === e2)
      return;
    let p = this._encodeValue(e2, r2, o);
    if (p !== undefined && !this._skipDefault(p, r2, o))
      return p;
  };
  Ue.prototype._encodeValue = function(e2, r2, o) {
    let f = this._baseState;
    if (f.parent === null)
      return f.children[0]._encode(e2, r2 || new sB);
    let p = null;
    if (this.reporter = r2, f.optional && e2 === undefined)
      if (f.default !== null)
        e2 = f.default;
      else
        return;
    let m = null, y = false;
    if (f.any)
      p = this._createEncoderBuffer(e2);
    else if (f.choice)
      p = this._encodeChoice(e2, r2);
    else if (f.contains)
      m = this._getUse(f.contains, o)._encode(e2, r2), y = true;
    else if (f.children)
      m = f.children.map(function(M) {
        if (M._baseState.tag === "null_")
          return M._encode(null, r2, e2);
        if (M._baseState.key === null)
          return r2.error("Child should have a key");
        let x = r2.enterKey(M._baseState.key);
        if (typeof e2 != "object")
          return r2.error("Child expected, but input is not object");
        let S = M._encode(e2[M._baseState.key], r2, e2);
        return r2.leaveKey(x), S;
      }, this).filter(function(M) {
        return M;
      }), m = this._createEncoderBuffer(m);
    else if (f.tag === "seqof" || f.tag === "setof") {
      if (!(f.args && f.args.length === 1))
        return r2.error("Too many args for : " + f.tag);
      if (!Array.isArray(e2))
        return r2.error("seqof/setof, but data is not Array");
      let M = this.clone();
      M._baseState.implicit = null, m = this._createEncoderBuffer(e2.map(function(x) {
        let S = this._baseState;
        return this._getUse(S.args[0], e2)._encode(x, r2);
      }, M));
    } else
      f.use !== null ? p = this._getUse(f.use, o)._encode(e2, r2) : (m = this._encodePrimitive(f.tag, e2), y = true);
    if (!f.any && f.choice === null) {
      let M = f.implicit !== null ? f.implicit : f.tag, x = f.implicit === null ? "universal" : "context";
      M === null ? f.use === null && r2.error("Tag could be omitted only for .use()") : f.use === null && (p = this._encodeComposite(M, y, x, m));
    }
    return f.explicit !== null && (p = this._encodeComposite(f.explicit, false, "context", p)), p;
  };
  Ue.prototype._encodeChoice = function(e2, r2) {
    let o = this._baseState, f = o.choice[e2.type];
    return f || Qt(false, e2.type + " not found in " + JSON.stringify(Object.keys(o.choice))), f._encode(e2.value, r2);
  };
  Ue.prototype._encodePrimitive = function(e2, r2) {
    let o = this._baseState;
    if (/str$/.test(e2))
      return this._encodeStr(r2, e2);
    if (e2 === "objid" && o.args)
      return this._encodeObjid(r2, o.reverseArgs[0], o.args[1]);
    if (e2 === "objid")
      return this._encodeObjid(r2, null, null);
    if (e2 === "gentime" || e2 === "utctime")
      return this._encodeTime(r2, e2);
    if (e2 === "null_")
      return this._encodeNull();
    if (e2 === "int" || e2 === "enum")
      return this._encodeInt(r2, o.args && o.reverseArgs[0]);
    if (e2 === "bool")
      return this._encodeBool(r2);
    if (e2 === "objDesc")
      return this._encodeStr(r2, e2);
    throw new Error("Unsupported tag: " + e2);
  };
  Ue.prototype._isNumstr = function(e2) {
    return /^[0-9 ]*$/.test(e2);
  };
  Ue.prototype._isPrintstr = function(e2) {
    return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(e2);
  };
});
var c0 = T((Wn) => {
  function Cy(t3) {
    let e2 = {};
    return Object.keys(t3).forEach(function(r2) {
      (r2 | 0) == r2 && (r2 = r2 | 0);
      let o = t3[r2];
      e2[o] = r2;
    }), e2;
  }
  Wn.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" };
  Wn.tagClassByName = Cy(Wn.tagClass);
  Wn.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" };
  Wn.tagByName = Cy(Wn.tag);
});
var nd = T((tL, Uy) => {
  var pB = Ie(), Ii = h0().Buffer, Oy = d0(), id = c0();
  function Fy(t3) {
    this.enc = "der", this.name = t3.name, this.entity = t3, this.tree = new Ur, this.tree._init(t3.body);
  }
  Uy.exports = Fy;
  Fy.prototype.encode = function(e2, r2) {
    return this.tree._encode(e2, r2).join();
  };
  function Ur(t3) {
    Oy.call(this, "der", t3);
  }
  pB(Ur, Oy);
  Ur.prototype._encodeComposite = function(e2, r2, o, f) {
    let p = vB(e2, r2, o, this.reporter);
    if (f.length < 128) {
      let M = Ii.alloc(2);
      return M[0] = p, M[1] = f.length, this._createEncoderBuffer([M, f]);
    }
    let m = 1;
    for (let M = f.length;M >= 256; M >>= 8)
      m++;
    let y = Ii.alloc(1 + 1 + m);
    y[0] = p, y[1] = 128 | m;
    for (let M = 1 + m, x = f.length;x > 0; M--, x >>= 8)
      y[M] = x & 255;
    return this._createEncoderBuffer([y, f]);
  };
  Ur.prototype._encodeStr = function(e2, r2) {
    if (r2 === "bitstr")
      return this._createEncoderBuffer([e2.unused | 0, e2.data]);
    if (r2 === "bmpstr") {
      let o = Ii.alloc(e2.length * 2);
      for (let f = 0;f < e2.length; f++)
        o.writeUInt16BE(e2.charCodeAt(f), f * 2);
      return this._createEncoderBuffer(o);
    } else
      return r2 === "numstr" ? this._isNumstr(e2) ? this._createEncoderBuffer(e2) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : r2 === "printstr" ? this._isPrintstr(e2) ? this._createEncoderBuffer(e2) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(r2) ? this._createEncoderBuffer(e2) : r2 === "objDesc" ? this._createEncoderBuffer(e2) : this.reporter.error("Encoding of string type: " + r2 + " unsupported");
  };
  Ur.prototype._encodeObjid = function(e2, r2, o) {
    if (typeof e2 == "string") {
      if (!r2)
        return this.reporter.error("string objid given, but no values map found");
      if (!r2.hasOwnProperty(e2))
        return this.reporter.error("objid not found in values map");
      e2 = r2[e2].split(/[\s.]+/g);
      for (let y = 0;y < e2.length; y++)
        e2[y] |= 0;
    } else if (Array.isArray(e2)) {
      e2 = e2.slice();
      for (let y = 0;y < e2.length; y++)
        e2[y] |= 0;
    }
    if (!Array.isArray(e2))
      return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e2));
    if (!o) {
      if (e2[1] >= 40)
        return this.reporter.error("Second objid identifier OOB");
      e2.splice(0, 2, e2[0] * 40 + e2[1]);
    }
    let f = 0;
    for (let y = 0;y < e2.length; y++) {
      let M = e2[y];
      for (f++;M >= 128; M >>= 7)
        f++;
    }
    let p = Ii.alloc(f), m = p.length - 1;
    for (let y = e2.length - 1;y >= 0; y--) {
      let M = e2[y];
      for (p[m--] = M & 127;(M >>= 7) > 0; )
        p[m--] = 128 | M & 127;
    }
    return this._createEncoderBuffer(p);
  };
  function qr(t3) {
    return t3 < 10 ? "0" + t3 : t3;
  }
  Ur.prototype._encodeTime = function(e2, r2) {
    let o, f = new Date(e2);
    return r2 === "gentime" ? o = [qr(f.getUTCFullYear()), qr(f.getUTCMonth() + 1), qr(f.getUTCDate()), qr(f.getUTCHours()), qr(f.getUTCMinutes()), qr(f.getUTCSeconds()), "Z"].join("") : r2 === "utctime" ? o = [qr(f.getUTCFullYear() % 100), qr(f.getUTCMonth() + 1), qr(f.getUTCDate()), qr(f.getUTCHours()), qr(f.getUTCMinutes()), qr(f.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + r2 + " time is not supported yet"), this._encodeStr(o, "octstr");
  };
  Ur.prototype._encodeNull = function() {
    return this._createEncoderBuffer("");
  };
  Ur.prototype._encodeInt = function(e2, r2) {
    if (typeof e2 == "string") {
      if (!r2)
        return this.reporter.error("String int or enum given, but no values map");
      if (!r2.hasOwnProperty(e2))
        return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e2));
      e2 = r2[e2];
    }
    if (typeof e2 != "number" && !Ii.isBuffer(e2)) {
      let p = e2.toArray();
      !e2.sign && p[0] & 128 && p.unshift(0), e2 = Ii.from(p);
    }
    if (Ii.isBuffer(e2)) {
      let p = e2.length;
      e2.length === 0 && p++;
      let m = Ii.alloc(p);
      return e2.copy(m), e2.length === 0 && (m[0] = 0), this._createEncoderBuffer(m);
    }
    if (e2 < 128)
      return this._createEncoderBuffer(e2);
    if (e2 < 256)
      return this._createEncoderBuffer([0, e2]);
    let o = 1;
    for (let p = e2;p >= 256; p >>= 8)
      o++;
    let f = new Array(o);
    for (let p = f.length - 1;p >= 0; p--)
      f[p] = e2 & 255, e2 >>= 8;
    return f[0] & 128 && f.unshift(0), this._createEncoderBuffer(Ii.from(f));
  };
  Ur.prototype._encodeBool = function(e2) {
    return this._createEncoderBuffer(e2 ? 255 : 0);
  };
  Ur.prototype._use = function(e2, r2) {
    return typeof e2 == "function" && (e2 = e2(r2)), e2._getEncoder("der").tree;
  };
  Ur.prototype._skipDefault = function(e2, r2, o) {
    let f = this._baseState, p;
    if (f.default === null)
      return false;
    let m = e2.join();
    if (f.defaultBuffer === undefined && (f.defaultBuffer = this._encodeValue(f.default, r2, o).join()), m.length !== f.defaultBuffer.length)
      return false;
    for (p = 0;p < m.length; p++)
      if (m[p] !== f.defaultBuffer[p])
        return false;
    return true;
  };
  function vB(t3, e2, r2, o) {
    let f;
    if (t3 === "seqof" ? t3 = "seq" : t3 === "setof" && (t3 = "set"), id.tagByName.hasOwnProperty(t3))
      f = id.tagByName[t3];
    else if (typeof t3 == "number" && (t3 | 0) === t3)
      f = t3;
    else
      return o.error("Unknown tag: " + t3);
    return f >= 31 ? o.error("Multi-octet tag encoding unsupported") : (e2 || (f |= 32), f |= id.tagClassByName[r2 || "universal"] << 6, f);
  }
});
var Hy = T((rL, zy) => {
  var bB = Ie(), fd = nd();
  function ad(t3) {
    fd.call(this, t3), this.enc = "pem";
  }
  bB(ad, fd);
  zy.exports = ad;
  ad.prototype.encode = function(e2, r2) {
    let f = fd.prototype.encode.call(this, e2).toString("base64"), p = ["-----BEGIN " + r2.label + "-----"];
    for (let m = 0;m < f.length; m += 64)
      p.push(f.slice(m, m + 64));
    return p.push("-----END " + r2.label + "-----"), p.join(`
`);
  };
});
var od = T((Ky) => {
  var Wy = Ky;
  Wy.der = nd();
  Wy.pem = Hy();
});
var hd = T((nL, Yy) => {
  var mB = Ie(), gB = td(), jy = Kf().DecoderBuffer, Vy = d0(), Zy = c0();
  function $y(t3) {
    this.enc = "der", this.name = t3.name, this.entity = t3, this.tree = new sr, this.tree._init(t3.body);
  }
  Yy.exports = $y;
  $y.prototype.decode = function(e2, r2) {
    return jy.isDecoderBuffer(e2) || (e2 = new jy(e2, r2)), this.tree._decode(e2, r2);
  };
  function sr(t3) {
    Vy.call(this, "der", t3);
  }
  mB(sr, Vy);
  sr.prototype._peekTag = function(e2, r2, o) {
    if (e2.isEmpty())
      return false;
    let f = e2.save(), p = sd(e2, 'Failed to peek tag: "' + r2 + '"');
    return e2.isError(p) ? p : (e2.restore(f), p.tag === r2 || p.tagStr === r2 || p.tagStr + "of" === r2 || o);
  };
  sr.prototype._decodeTag = function(e2, r2, o) {
    let f = sd(e2, 'Failed to decode tag of "' + r2 + '"');
    if (e2.isError(f))
      return f;
    let p = Gy(e2, f.primitive, 'Failed to get length of "' + r2 + '"');
    if (e2.isError(p))
      return p;
    if (!o && f.tag !== r2 && f.tagStr !== r2 && f.tagStr + "of" !== r2)
      return e2.error('Failed to match tag: "' + r2 + '"');
    if (f.primitive || p !== null)
      return e2.skip(p, 'Failed to match body of: "' + r2 + '"');
    let m = e2.save(), y = this._skipUntilEnd(e2, 'Failed to skip indefinite length body: "' + this.tag + '"');
    return e2.isError(y) ? y : (p = e2.offset - m.offset, e2.restore(m), e2.skip(p, 'Failed to match body of: "' + r2 + '"'));
  };
  sr.prototype._skipUntilEnd = function(e2, r2) {
    for (;; ) {
      let o = sd(e2, r2);
      if (e2.isError(o))
        return o;
      let f = Gy(e2, o.primitive, r2);
      if (e2.isError(f))
        return f;
      let p;
      if (o.primitive || f !== null ? p = e2.skip(f) : p = this._skipUntilEnd(e2, r2), e2.isError(p))
        return p;
      if (o.tagStr === "end")
        break;
    }
  };
  sr.prototype._decodeList = function(e2, r2, o, f) {
    let p = [];
    for (;!e2.isEmpty(); ) {
      let m = this._peekTag(e2, "end");
      if (e2.isError(m))
        return m;
      let y = o.decode(e2, "der", f);
      if (e2.isError(y) && m)
        break;
      p.push(y);
    }
    return p;
  };
  sr.prototype._decodeStr = function(e2, r2) {
    if (r2 === "bitstr") {
      let o = e2.readUInt8();
      return e2.isError(o) ? o : { unused: o, data: e2.raw() };
    } else if (r2 === "bmpstr") {
      let o = e2.raw();
      if (o.length % 2 === 1)
        return e2.error("Decoding of string type: bmpstr length mismatch");
      let f = "";
      for (let p = 0;p < o.length / 2; p++)
        f += String.fromCharCode(o.readUInt16BE(p * 2));
      return f;
    } else if (r2 === "numstr") {
      let o = e2.raw().toString("ascii");
      return this._isNumstr(o) ? o : e2.error("Decoding of string type: numstr unsupported characters");
    } else {
      if (r2 === "octstr")
        return e2.raw();
      if (r2 === "objDesc")
        return e2.raw();
      if (r2 === "printstr") {
        let o = e2.raw().toString("ascii");
        return this._isPrintstr(o) ? o : e2.error("Decoding of string type: printstr unsupported characters");
      } else
        return /str$/.test(r2) ? e2.raw().toString() : e2.error("Decoding of string type: " + r2 + " unsupported");
    }
  };
  sr.prototype._decodeObjid = function(e2, r2, o) {
    let f, p = [], m = 0, y = 0;
    for (;!e2.isEmpty(); )
      y = e2.readUInt8(), m <<= 7, m |= y & 127, (y & 128) === 0 && (p.push(m), m = 0);
    y & 128 && p.push(m);
    let M = p[0] / 40 | 0, x = p[0] % 40;
    if (o ? f = p : f = [M, x].concat(p.slice(1)), r2) {
      let S = r2[f.join(" ")];
      S === undefined && (S = r2[f.join(".")]), S !== undefined && (f = S);
    }
    return f;
  };
  sr.prototype._decodeTime = function(e2, r2) {
    let o = e2.raw().toString(), f, p, m, y, M, x;
    if (r2 === "gentime")
      f = o.slice(0, 4) | 0, p = o.slice(4, 6) | 0, m = o.slice(6, 8) | 0, y = o.slice(8, 10) | 0, M = o.slice(10, 12) | 0, x = o.slice(12, 14) | 0;
    else if (r2 === "utctime")
      f = o.slice(0, 2) | 0, p = o.slice(2, 4) | 0, m = o.slice(4, 6) | 0, y = o.slice(6, 8) | 0, M = o.slice(8, 10) | 0, x = o.slice(10, 12) | 0, f < 70 ? f = 2000 + f : f = 1900 + f;
    else
      return e2.error("Decoding " + r2 + " time is not supported yet");
    return Date.UTC(f, p - 1, m, y, M, x, 0);
  };
  sr.prototype._decodeNull = function() {
    return null;
  };
  sr.prototype._decodeBool = function(e2) {
    let r2 = e2.readUInt8();
    return e2.isError(r2) ? r2 : r2 !== 0;
  };
  sr.prototype._decodeInt = function(e2, r2) {
    let o = e2.raw(), f = new gB(o);
    return r2 && (f = r2[f.toString(10)] || f), f;
  };
  sr.prototype._use = function(e2, r2) {
    return typeof e2 == "function" && (e2 = e2(r2)), e2._getDecoder("der").tree;
  };
  function sd(t3, e2) {
    let r2 = t3.readUInt8(e2);
    if (t3.isError(r2))
      return r2;
    let o = Zy.tagClass[r2 >> 6], f = (r2 & 32) === 0;
    if ((r2 & 31) === 31) {
      let m = r2;
      for (r2 = 0;(m & 128) === 128; ) {
        if (m = t3.readUInt8(e2), t3.isError(m))
          return m;
        r2 <<= 7, r2 |= m & 127;
      }
    } else
      r2 &= 31;
    let p = Zy.tag[r2];
    return { cls: o, primitive: f, tag: r2, tagStr: p };
  }
  function Gy(t3, e2, r2) {
    let o = t3.readUInt8(r2);
    if (t3.isError(o))
      return o;
    if (!e2 && o === 128)
      return null;
    if ((o & 128) === 0)
      return o;
    let f = o & 127;
    if (f > 4)
      return t3.error("length octect is too long");
    o = 0;
    for (let p = 0;p < f; p++) {
      o <<= 8;
      let m = t3.readUInt8(r2);
      if (t3.isError(m))
        return m;
      o |= m;
    }
    return o;
  }
});
var Jy = T((fL, Xy) => {
  var yB = Ie(), wB = h0().Buffer, ud = hd();
  function ld(t3) {
    ud.call(this, t3), this.enc = "pem";
  }
  yB(ld, ud);
  Xy.exports = ld;
  ld.prototype.decode = function(e2, r2) {
    let o = e2.toString().split(/[\r\n]+/g), f = r2.label.toUpperCase(), p = /^-----(BEGIN|END) ([^-]+)-----$/, m = -1, y = -1;
    for (let S = 0;S < o.length; S++) {
      let E = o[S].match(p);
      if (E !== null && E[2] === f)
        if (m === -1) {
          if (E[1] !== "BEGIN")
            break;
          m = S;
        } else {
          if (E[1] !== "END")
            break;
          y = S;
          break;
        }
    }
    if (m === -1 || y === -1)
      throw new Error("PEM section not found for: " + f);
    let M = o.slice(m + 1, y).join("");
    M.replace(/[^a-z0-9+/=]+/gi, "");
    let x = wB.from(M, "base64");
    return ud.prototype.decode.call(this, x, r2);
  };
});
var dd = T((e3) => {
  var Qy = e3;
  Qy.der = hd();
  Qy.pem = Jy();
});
var r3 = T((t3) => {
  var MB = od(), _B = dd(), xB = Ie(), SB = t3;
  SB.define = function(e2, r2) {
    return new jf(e2, r2);
  };
  function jf(t4, e2) {
    this.name = t4, this.body = e2, this.decoders = {}, this.encoders = {};
  }
  jf.prototype._createNamed = function(e2) {
    let r2 = this.name;
    function o(f) {
      this._initNamed(f, r2);
    }
    return xB(o, e2), o.prototype._initNamed = function(p, m) {
      e2.call(this, p, m);
    }, new o(this);
  };
  jf.prototype._getDecoder = function(e2) {
    return e2 = e2 || "der", this.decoders.hasOwnProperty(e2) || (this.decoders[e2] = this._createNamed(_B[e2])), this.decoders[e2];
  };
  jf.prototype.decode = function(e2, r2, o) {
    return this._getDecoder(r2).decode(e2, o);
  };
  jf.prototype._getEncoder = function(e2) {
    return e2 = e2 || "der", this.encoders.hasOwnProperty(e2) || (this.encoders[e2] = this._createNamed(MB[e2])), this.encoders[e2];
  };
  jf.prototype.encode = function(e2, r2, o) {
    return this._getEncoder(r2).encode(e2, o);
  };
});
var n3 = T((i3) => {
  var p0 = i3;
  p0.Reporter = u0().Reporter;
  p0.DecoderBuffer = Kf().DecoderBuffer;
  p0.EncoderBuffer = Kf().EncoderBuffer;
  p0.Node = d0();
});
var o3 = T((a3) => {
  var f3 = a3;
  f3._reverse = function(e2) {
    let r2 = {};
    return Object.keys(e2).forEach(function(o) {
      (o | 0) == o && (o = o | 0);
      let f = e2[o];
      r2[f] = o;
    }), r2;
  };
  f3.der = c0();
});
var cd = T((s3) => {
  var Zf = s3;
  Zf.bignum = td();
  Zf.define = r3().define;
  Zf.base = n3();
  Zf.constants = o3();
  Zf.decoders = dd();
  Zf.encoders = od();
});
var d3 = T((lL, l3) => {
  var zr = cd(), h3 = zr.define("Time", function() {
    this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
  }), EB = zr.define("AttributeTypeValue", function() {
    this.seq().obj(this.key("type").objid(), this.key("value").any());
  }), pd = zr.define("AlgorithmIdentifier", function() {
    this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
  }), AB = zr.define("SubjectPublicKeyInfo", function() {
    this.seq().obj(this.key("algorithm").use(pd), this.key("subjectPublicKey").bitstr());
  }), RB = zr.define("RelativeDistinguishedName", function() {
    this.setof(EB);
  }), BB = zr.define("RDNSequence", function() {
    this.seqof(RB);
  }), u3 = zr.define("Name", function() {
    this.choice({ rdnSequence: this.use(BB) });
  }), qB = zr.define("Validity", function() {
    this.seq().obj(this.key("notBefore").use(h3), this.key("notAfter").use(h3));
  }), IB = zr.define("Extension", function() {
    this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
  }), TB = zr.define("TBSCertificate", function() {
    this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(pd), this.key("issuer").use(u3), this.key("validity").use(qB), this.key("subject").use(u3), this.key("subjectPublicKeyInfo").use(AB), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(IB).optional());
  }), kB = zr.define("X509Certificate", function() {
    this.seq().obj(this.key("tbsCertificate").use(TB), this.key("signatureAlgorithm").use(pd), this.key("signatureValue").bitstr());
  });
  l3.exports = kB;
});
var p3 = T((Wr) => {
  var Hr = cd();
  Wr.certificate = d3();
  var LB = Hr.define("RSAPrivateKey", function() {
    this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
  });
  Wr.RSAPrivateKey = LB;
  var NB = Hr.define("RSAPublicKey", function() {
    this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
  });
  Wr.RSAPublicKey = NB;
  var DB = Hr.define("SubjectPublicKeyInfo", function() {
    this.seq().obj(this.key("algorithm").use(c3), this.key("subjectPublicKey").bitstr());
  });
  Wr.PublicKey = DB;
  var c3 = Hr.define("AlgorithmIdentifier", function() {
    this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
  }), PB = Hr.define("PrivateKeyInfo", function() {
    this.seq().obj(this.key("version").int(), this.key("algorithm").use(c3), this.key("subjectPrivateKey").octstr());
  });
  Wr.PrivateKey = PB;
  var CB = Hr.define("EncryptedPrivateKeyInfo", function() {
    this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
  });
  Wr.EncryptedPrivateKey = CB;
  var OB = Hr.define("DSAPrivateKey", function() {
    this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
  });
  Wr.DSAPrivateKey = OB;
  Wr.DSAparam = Hr.define("DSAparam", function() {
    this.int();
  });
  var FB = Hr.define("ECPrivateKey", function() {
    this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(UB), this.key("publicKey").optional().explicit(1).bitstr());
  });
  Wr.ECPrivateKey = FB;
  var UB = Hr.define("ECParameters", function() {
    this.choice({ namedCurve: this.objid() });
  });
  Wr.signature = Hr.define("signature", function() {
    this.seq().obj(this.key("r").int(), this.key("s").int());
  });
});
var v3 = T((cL, zB) => {
  zB.exports = { "2.16.840.1.101.3.4.1.1": "aes-128-ecb", "2.16.840.1.101.3.4.1.2": "aes-128-cbc", "2.16.840.1.101.3.4.1.3": "aes-128-ofb", "2.16.840.1.101.3.4.1.4": "aes-128-cfb", "2.16.840.1.101.3.4.1.21": "aes-192-ecb", "2.16.840.1.101.3.4.1.22": "aes-192-cbc", "2.16.840.1.101.3.4.1.23": "aes-192-ofb", "2.16.840.1.101.3.4.1.24": "aes-192-cfb", "2.16.840.1.101.3.4.1.41": "aes-256-ecb", "2.16.840.1.101.3.4.1.42": "aes-256-cbc", "2.16.840.1.101.3.4.1.43": "aes-256-ofb", "2.16.840.1.101.3.4.1.44": "aes-256-cfb" };
});
var m3 = T((pL, b3) => {
  var HB = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, WB = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, KB = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, jB = Ba(), ZB = Es(), v0 = Te().Buffer;
  b3.exports = function(t3, e2) {
    var r2 = t3.toString(), o = r2.match(HB), f;
    if (o) {
      var m = "aes" + o[1], y = v0.from(o[2], "hex"), M = v0.from(o[3].replace(/[\r\n]/g, ""), "base64"), x = jB(e2, y.slice(0, 8), parseInt(o[1], 10)).key, S = [], E = ZB.createDecipheriv(m, x, y);
      S.push(E.update(M)), S.push(E.final()), f = v0.concat(S);
    } else {
      var p = r2.match(KB);
      f = v0.from(p[2].replace(/[\r\n]/g, ""), "base64");
    }
    var B = r2.match(WB)[1];
    return { tag: B, data: f };
  };
});
var Ha = T((vL, y3) => {
  var fr = p3(), VB = v3(), $B = m3(), GB = Es(), YB = Iu(), vd = Te().Buffer;
  y3.exports = g3;
  function g3(t3) {
    var e2;
    typeof t3 == "object" && !vd.isBuffer(t3) && (e2 = t3.passphrase, t3 = t3.key), typeof t3 == "string" && (t3 = vd.from(t3));
    var r2 = $B(t3, e2), o = r2.tag, f = r2.data, p, m;
    switch (o) {
      case "CERTIFICATE":
        m = fr.certificate.decode(f, "der").tbsCertificate.subjectPublicKeyInfo;
      case "PUBLIC KEY":
        switch (m || (m = fr.PublicKey.decode(f, "der")), p = m.algorithm.algorithm.join("."), p) {
          case "1.2.840.113549.1.1.1":
            return fr.RSAPublicKey.decode(m.subjectPublicKey.data, "der");
          case "1.2.840.10045.2.1":
            return m.subjectPrivateKey = m.subjectPublicKey, { type: "ec", data: m };
          case "1.2.840.10040.4.1":
            return m.algorithm.params.pub_key = fr.DSAparam.decode(m.subjectPublicKey.data, "der"), { type: "dsa", data: m.algorithm.params };
          default:
            throw new Error("unknown key id " + p);
        }
      case "ENCRYPTED PRIVATE KEY":
        f = fr.EncryptedPrivateKey.decode(f, "der"), f = XB(f, e2);
      case "PRIVATE KEY":
        switch (m = fr.PrivateKey.decode(f, "der"), p = m.algorithm.algorithm.join("."), p) {
          case "1.2.840.113549.1.1.1":
            return fr.RSAPrivateKey.decode(m.subjectPrivateKey, "der");
          case "1.2.840.10045.2.1":
            return { curve: m.algorithm.curve, privateKey: fr.ECPrivateKey.decode(m.subjectPrivateKey, "der").privateKey };
          case "1.2.840.10040.4.1":
            return m.algorithm.params.priv_key = fr.DSAparam.decode(m.subjectPrivateKey, "der"), { type: "dsa", params: m.algorithm.params };
          default:
            throw new Error("unknown key id " + p);
        }
      case "RSA PUBLIC KEY":
        return fr.RSAPublicKey.decode(f, "der");
      case "RSA PRIVATE KEY":
        return fr.RSAPrivateKey.decode(f, "der");
      case "DSA PRIVATE KEY":
        return { type: "dsa", params: fr.DSAPrivateKey.decode(f, "der") };
      case "EC PRIVATE KEY":
        return f = fr.ECPrivateKey.decode(f, "der"), { curve: f.parameters.value, privateKey: f.privateKey };
      default:
        throw new Error("unknown key type " + o);
    }
  }
  g3.signature = fr.signature;
  function XB(t3, e2) {
    var r2 = t3.algorithm.decrypt.kde.kdeparams.salt, o = parseInt(t3.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), f = VB[t3.algorithm.decrypt.cipher.algo.join(".")], p = t3.algorithm.decrypt.cipher.iv, m = t3.subjectPrivateKey, y = parseInt(f.split("-")[1], 10) / 8, M = YB.pbkdf2Sync(e2, r2, o, y, "sha1"), x = GB.createDecipheriv(f, M, p), S = [];
    return S.push(x.update(m)), S.push(x.final()), vd.concat(S);
  }
});
var bd = T((bL, JB) => {
  JB.exports = { "1.3.132.0.10": "secp256k1", "1.3.132.0.33": "p224", "1.2.840.10045.3.1.1": "p192", "1.2.840.10045.3.1.7": "p256", "1.3.132.0.34": "p384", "1.3.132.0.35": "p521" };
});
var _3 = T((mL, m0) => {
  var Yt = Te().Buffer, Kn = wu(), QB = Ks(), eq = o0().ec, b0 = Ws(), tq = Ha(), rq = bd();
  function iq(t3, e2, r2, o, f) {
    var p = tq(e2);
    if (p.curve) {
      if (o !== "ecdsa" && o !== "ecdsa/rsa")
        throw new Error("wrong private key type");
      return nq(t3, p);
    } else if (p.type === "dsa") {
      if (o !== "dsa")
        throw new Error("wrong private key type");
      return fq(t3, p, r2);
    } else if (o !== "rsa" && o !== "ecdsa/rsa")
      throw new Error("wrong private key type");
    t3 = Yt.concat([f, t3]);
    for (var m = p.modulus.byteLength(), y = [0, 1];t3.length + y.length + 1 < m; )
      y.push(255);
    y.push(0);
    for (var M = -1;++M < t3.length; )
      y.push(t3[M]);
    var x = QB(y, p);
    return x;
  }
  function nq(t3, e2) {
    var r2 = rq[e2.curve.join(".")];
    if (!r2)
      throw new Error("unknown curve " + e2.curve.join("."));
    var o = new eq(r2), f = o.keyFromPrivate(e2.privateKey), p = f.sign(t3);
    return Yt.from(p.toDER());
  }
  function fq(t3, e2, r2) {
    for (var o = e2.params.priv_key, f = e2.params.p, p = e2.params.q, m = e2.params.g, y = new b0(0), M, x = md(t3, p).mod(p), S = false, E = w3(o, p, t3, r2);S === false; )
      M = M3(p, E, r2), y = sq(m, M, f, p), S = M.invm(p).imul(x.add(o.mul(y))).mod(p), S.cmpn(0) === 0 && (S = false, y = new b0(0));
    return aq(y, S);
  }
  function aq(t3, e2) {
    t3 = t3.toArray(), e2 = e2.toArray(), t3[0] & 128 && (t3 = [0].concat(t3)), e2[0] & 128 && (e2 = [0].concat(e2));
    var r2 = t3.length + e2.length + 4, o = [48, r2, 2, t3.length];
    return o = o.concat(t3, [2, e2.length], e2), Yt.from(o);
  }
  function w3(t3, e2, r2, o) {
    if (t3 = Yt.from(t3.toArray()), t3.length < e2.byteLength()) {
      var f = Yt.alloc(e2.byteLength() - t3.length);
      t3 = Yt.concat([f, t3]);
    }
    var p = r2.length, m = oq(r2, e2), y = Yt.alloc(p);
    y.fill(1);
    var M = Yt.alloc(p);
    return M = Kn(o, M).update(y).update(Yt.from([0])).update(t3).update(m).digest(), y = Kn(o, M).update(y).digest(), M = Kn(o, M).update(y).update(Yt.from([1])).update(t3).update(m).digest(), y = Kn(o, M).update(y).digest(), { k: M, v: y };
  }
  function md(t3, e2) {
    var r2 = new b0(t3), o = (t3.length << 3) - e2.bitLength();
    return o > 0 && r2.ishrn(o), r2;
  }
  function oq(t3, e2) {
    t3 = md(t3, e2), t3 = t3.mod(e2);
    var r2 = Yt.from(t3.toArray());
    if (r2.length < e2.byteLength()) {
      var o = Yt.alloc(e2.byteLength() - r2.length);
      r2 = Yt.concat([o, r2]);
    }
    return r2;
  }
  function M3(t3, e2, r2) {
    var o, f;
    do {
      for (o = Yt.alloc(0);o.length * 8 < t3.bitLength(); )
        e2.v = Kn(r2, e2.k).update(e2.v).digest(), o = Yt.concat([o, e2.v]);
      f = md(o, t3), e2.k = Kn(r2, e2.k).update(e2.v).update(Yt.from([0])).digest(), e2.v = Kn(r2, e2.k).update(e2.v).digest();
    } while (f.cmp(t3) !== -1);
    return f;
  }
  function sq(t3, e2, r2, o) {
    return t3.toRed(b0.mont(r2)).redPow(e2).fromRed().mod(o);
  }
  m0.exports = iq;
  m0.exports.getKey = w3;
  m0.exports.makeKey = M3;
});
var A3 = T((gL, E3) => {
  var gd = Te().Buffer, Wa = Ws(), hq = o0().ec, S3 = Ha(), uq = bd();
  function lq(t3, e2, r2, o, f) {
    var p = S3(r2);
    if (p.type === "ec") {
      if (o !== "ecdsa" && o !== "ecdsa/rsa")
        throw new Error("wrong public key type");
      return dq(t3, e2, p);
    } else if (p.type === "dsa") {
      if (o !== "dsa")
        throw new Error("wrong public key type");
      return cq(t3, e2, p);
    } else if (o !== "rsa" && o !== "ecdsa/rsa")
      throw new Error("wrong public key type");
    e2 = gd.concat([f, e2]);
    for (var m = p.modulus.byteLength(), y = [1], M = 0;e2.length + y.length + 2 < m; )
      y.push(255), M++;
    y.push(0);
    for (var x = -1;++x < e2.length; )
      y.push(e2[x]);
    y = gd.from(y);
    var S = Wa.mont(p.modulus);
    t3 = new Wa(t3).toRed(S), t3 = t3.redPow(new Wa(p.publicExponent)), t3 = gd.from(t3.fromRed().toArray());
    var E = M < 8 ? 1 : 0;
    for (m = Math.min(t3.length, y.length), t3.length !== y.length && (E = 1), x = -1;++x < m; )
      E |= t3[x] ^ y[x];
    return E === 0;
  }
  function dq(t3, e2, r2) {
    var o = uq[r2.data.algorithm.curve.join(".")];
    if (!o)
      throw new Error("unknown curve " + r2.data.algorithm.curve.join("."));
    var f = new hq(o), p = r2.data.subjectPrivateKey.data;
    return f.verify(e2, t3, p);
  }
  function cq(t3, e2, r2) {
    var o = r2.data.p, f = r2.data.q, p = r2.data.g, m = r2.data.pub_key, y = S3.signature.decode(t3, "der"), M = y.s, x = y.r;
    x3(M, f), x3(x, f);
    var S = Wa.mont(o), E = M.invm(f), B = p.toRed(S).redPow(new Wa(e2).mul(E).mod(f)).fromRed().mul(m.toRed(S).redPow(x.mul(E).mod(f)).fromRed()).mod(o).mod(f);
    return B.cmp(x) === 0;
  }
  function x3(t3, e2) {
    if (t3.cmpn(0) <= 0)
      throw new Error("invalid sig");
    if (t3.cmp(e2) >= e2)
      throw new Error("invalid sig");
  }
  E3.exports = lq;
});
var k3 = T((yL, T3) => {
  var g0 = Te().Buffer, q3 = bf(), y0 = i2(), I3 = Ie(), pq = _3(), vq = A3(), jn = Mu();
  Object.keys(jn).forEach(function(t3) {
    jn[t3].id = g0.from(jn[t3].id, "hex"), jn[t3.toLowerCase()] = jn[t3];
  });
  function Ka(t3) {
    y0.Writable.call(this);
    var e2 = jn[t3];
    if (!e2)
      throw new Error("Unknown message digest");
    this._hashType = e2.hash, this._hash = q3(e2.hash), this._tag = e2.id, this._signType = e2.sign;
  }
  I3(Ka, y0.Writable);
  Ka.prototype._write = function(e2, r2, o) {
    this._hash.update(e2), o();
  };
  Ka.prototype.update = function(e2, r2) {
    return typeof e2 == "string" && (e2 = g0.from(e2, r2)), this._hash.update(e2), this;
  };
  Ka.prototype.sign = function(e2, r2) {
    this.end();
    var o = this._hash.digest(), f = pq(o, e2, this._hashType, this._signType, this._tag);
    return r2 ? f.toString(r2) : f;
  };
  function ja(t3) {
    y0.Writable.call(this);
    var e2 = jn[t3];
    if (!e2)
      throw new Error("Unknown message digest");
    this._hash = q3(e2.hash), this._tag = e2.id, this._signType = e2.sign;
  }
  I3(ja, y0.Writable);
  ja.prototype._write = function(e2, r2, o) {
    this._hash.update(e2), o();
  };
  ja.prototype.update = function(e2, r2) {
    return typeof e2 == "string" && (e2 = g0.from(e2, r2)), this._hash.update(e2), this;
  };
  ja.prototype.verify = function(e2, r2, o) {
    typeof r2 == "string" && (r2 = g0.from(r2, o)), this.end();
    var f = this._hash.digest();
    return vq(r2, f, e2, this._signType, this._tag);
  };
  function R3(t3) {
    return new Ka(t3);
  }
  function B3(t3) {
    return new ja(t3);
  }
  T3.exports = { Sign: R3, Verify: B3, createSign: R3, createVerify: B3 };
});
var N3 = T((L3, yd) => {
  (function(t3, e2) {
    function r2(v, i) {
      if (!v)
        throw new Error(i || "Assertion failed");
    }
    function o(v, i) {
      v.super_ = i;
      var a2 = function() {
      };
      a2.prototype = i.prototype, v.prototype = new a2, v.prototype.constructor = v;
    }
    function f(v, i, a2) {
      if (f.isBN(v))
        return v;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i === "le" || i === "be") && (a2 = i, i = 10), this._init(v || 0, i || 10, a2 || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(i) {
      return i instanceof f ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f.wordSize && Array.isArray(i.words);
    }, f.max = function(i, a2) {
      return i.cmp(a2) > 0 ? i : a2;
    }, f.min = function(i, a2) {
      return i.cmp(a2) < 0 ? i : a2;
    }, f.prototype._init = function(i, a2, h) {
      if (typeof i == "number")
        return this._initNumber(i, a2, h);
      if (typeof i == "object")
        return this._initArray(i, a2, h);
      a2 === "hex" && (a2 = 16), r2(a2 === (a2 | 0) && a2 >= 2 && a2 <= 36), i = i.toString().replace(/\s+/g, "");
      var s = 0;
      i[0] === "-" && (s++, this.negative = 1), s < i.length && (a2 === 16 ? this._parseHex(i, s, h) : (this._parseBase(i, a2, s), h === "le" && this._initArray(this.toArray(), a2, h)));
    }, f.prototype._initNumber = function(i, a2, h) {
      i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r2(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h === "le" && this._initArray(this.toArray(), a2, h);
    }, f.prototype._initArray = function(i, a2, h) {
      if (r2(typeof i.length == "number"), i.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u, c, b = 0;
      if (h === "be")
        for (s = i.length - 1, u = 0;s >= 0; s -= 3)
          c = i[s] | i[s - 1] << 8 | i[s - 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      else if (h === "le")
        for (s = 0, u = 0;s < i.length; s += 3)
          c = i[s] | i[s + 1] << 8 | i[s + 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      return this.strip();
    };
    function m(v, i) {
      var a2 = v.charCodeAt(i);
      return a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : a2 - 48 & 15;
    }
    function y(v, i, a2) {
      var h = m(v, a2);
      return a2 - 1 >= i && (h |= m(v, a2 - 1) << 4), h;
    }
    f.prototype._parseHex = function(i, a2, h) {
      this.length = Math.ceil((i.length - a2) / 6), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u = 0, c = 0, b;
      if (h === "be")
        for (s = i.length - 1;s >= a2; s -= 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      else {
        var l = i.length - a2;
        for (s = l % 2 === 0 ? a2 + 1 : a2;s < i.length; s += 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      }
      this.strip();
    };
    function M(v, i, a2, h) {
      for (var s = 0, u = Math.min(v.length, a2), c = i;c < u; c++) {
        var b = v.charCodeAt(c) - 48;
        s *= h, b >= 49 ? s += b - 49 + 10 : b >= 17 ? s += b - 17 + 10 : s += b;
      }
      return s;
    }
    f.prototype._parseBase = function(i, a2, h) {
      this.words = [0], this.length = 1;
      for (var s = 0, u = 1;u <= 67108863; u *= a2)
        s++;
      s--, u = u / a2 | 0;
      for (var c = i.length - h, b = c % s, l = Math.min(c, c - b) + h, n = 0, d = h;d < l; d += s)
        n = M(i, d, d + s, a2), this.imuln(u), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      if (b !== 0) {
        var w = 1;
        for (n = M(i, d, i.length, a2), d = 0;d < b; d++)
          w *= a2;
        this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      }
      this.strip();
    }, f.prototype.copy = function(i) {
      i.words = new Array(this.length);
      for (var a2 = 0;a2 < this.length; a2++)
        i.words[a2] = this.words[a2];
      i.length = this.length, i.negative = this.negative, i.red = this.red;
    }, f.prototype.clone = function() {
      var i = new f(null);
      return this.copy(i), i;
    }, f.prototype._expand = function(i) {
      for (;this.length < i; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype.strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, f.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(i, a2) {
      i = i || 10, a2 = a2 | 0 || 1;
      var h;
      if (i === 16 || i === "hex") {
        h = "";
        for (var s = 0, u = 0, c = 0;c < this.length; c++) {
          var b = this.words[c], l = ((b << s | u) & 16777215).toString(16);
          u = b >>> 24 - s & 16777215, u !== 0 || c !== this.length - 1 ? h = x[6 - l.length] + l + h : h = l + h, s += 2, s >= 26 && (s -= 26, c--);
        }
        for (u !== 0 && (h = u.toString(16) + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      if (i === (i | 0) && i >= 2 && i <= 36) {
        var n = S[i], d = E[i];
        h = "";
        var w = this.clone();
        for (w.negative = 0;!w.isZero(); ) {
          var g = w.modn(d).toString(i);
          w = w.idivn(d), w.isZero() ? h = g + h : h = x[n - g.length] + g + h;
        }
        for (this.isZero() && (h = "0" + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var i = this.words[0];
      return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
    }, f.prototype.toJSON = function() {
      return this.toString(16);
    }, f.prototype.toBuffer = function(i, a2) {
      return r2(typeof p < "u"), this.toArrayLike(p, i, a2);
    }, f.prototype.toArray = function(i, a2) {
      return this.toArrayLike(Array, i, a2);
    }, f.prototype.toArrayLike = function(i, a2, h) {
      var s = this.byteLength(), u = h || Math.max(1, s);
      r2(s <= u, "byte array longer than desired length"), r2(u > 0, "Requested array length <= 0"), this.strip();
      var c = a2 === "le", b = new i(u), l, n, d = this.clone();
      if (c) {
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[n] = l;
        for (;n < u; n++)
          b[n] = 0;
      } else {
        for (n = 0;n < u - s; n++)
          b[n] = 0;
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[u - n - 1] = l;
      }
      return b;
    }, Math.clz32 ? f.prototype._countBits = function(i) {
      return 32 - Math.clz32(i);
    } : f.prototype._countBits = function(i) {
      var a2 = i, h = 0;
      return a2 >= 4096 && (h += 13, a2 >>>= 13), a2 >= 64 && (h += 7, a2 >>>= 7), a2 >= 8 && (h += 4, a2 >>>= 4), a2 >= 2 && (h += 2, a2 >>>= 2), h + a2;
    }, f.prototype._zeroBits = function(i) {
      if (i === 0)
        return 26;
      var a2 = i, h = 0;
      return (a2 & 8191) === 0 && (h += 13, a2 >>>= 13), (a2 & 127) === 0 && (h += 7, a2 >>>= 7), (a2 & 15) === 0 && (h += 4, a2 >>>= 4), (a2 & 3) === 0 && (h += 2, a2 >>>= 2), (a2 & 1) === 0 && h++, h;
    }, f.prototype.bitLength = function() {
      var i = this.words[this.length - 1], a2 = this._countBits(i);
      return (this.length - 1) * 26 + a2;
    };
    function B(v) {
      for (var i = new Array(v.bitLength()), a2 = 0;a2 < i.length; a2++) {
        var h = a2 / 26 | 0, s = a2 % 26;
        i[a2] = (v.words[h] & 1 << s) >>> s;
      }
      return i;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var i = 0, a2 = 0;a2 < this.length; a2++) {
        var h = this._zeroBits(this.words[a2]);
        if (i += h, h !== 26)
          break;
      }
      return i;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(i) {
      return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(i) {
      return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(i) {
      for (;this.length < i.length; )
        this.words[this.length++] = 0;
      for (var a2 = 0;a2 < i.length; a2++)
        this.words[a2] = this.words[a2] | i.words[a2];
      return this.strip();
    }, f.prototype.ior = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuor(i);
    }, f.prototype.or = function(i) {
      return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
    }, f.prototype.uor = function(i) {
      return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
    }, f.prototype.iuand = function(i) {
      var a2;
      this.length > i.length ? a2 = i : a2 = this;
      for (var h = 0;h < a2.length; h++)
        this.words[h] = this.words[h] & i.words[h];
      return this.length = a2.length, this.strip();
    }, f.prototype.iand = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuand(i);
    }, f.prototype.and = function(i) {
      return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
    }, f.prototype.uand = function(i) {
      return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
    }, f.prototype.iuxor = function(i) {
      var a2, h;
      this.length > i.length ? (a2 = this, h = i) : (a2 = i, h = this);
      for (var s = 0;s < h.length; s++)
        this.words[s] = a2.words[s] ^ h.words[s];
      if (this !== a2)
        for (;s < a2.length; s++)
          this.words[s] = a2.words[s];
      return this.length = a2.length, this.strip();
    }, f.prototype.ixor = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuxor(i);
    }, f.prototype.xor = function(i) {
      return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
    }, f.prototype.uxor = function(i) {
      return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
    }, f.prototype.inotn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = Math.ceil(i / 26) | 0, h = i % 26;
      this._expand(a2), h > 0 && a2--;
      for (var s = 0;s < a2; s++)
        this.words[s] = ~this.words[s] & 67108863;
      return h > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - h), this.strip();
    }, f.prototype.notn = function(i) {
      return this.clone().inotn(i);
    }, f.prototype.setn = function(i, a2) {
      r2(typeof i == "number" && i >= 0);
      var h = i / 26 | 0, s = i % 26;
      return this._expand(h + 1), a2 ? this.words[h] = this.words[h] | 1 << s : this.words[h] = this.words[h] & ~(1 << s), this.strip();
    }, f.prototype.iadd = function(i) {
      var a2;
      if (this.negative !== 0 && i.negative === 0)
        return this.negative = 0, a2 = this.isub(i), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && i.negative !== 0)
        return i.negative = 0, a2 = this.isub(i), i.negative = 1, a2._normSign();
      var h, s;
      this.length > i.length ? (h = this, s = i) : (h = i, s = this);
      for (var u = 0, c = 0;c < s.length; c++)
        a2 = (h.words[c] | 0) + (s.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      for (;u !== 0 && c < h.length; c++)
        a2 = (h.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      if (this.length = h.length, u !== 0)
        this.words[this.length] = u, this.length++;
      else if (h !== this)
        for (;c < h.length; c++)
          this.words[c] = h.words[c];
      return this;
    }, f.prototype.add = function(i) {
      var a2;
      return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a2 = this.sub(i), i.negative ^= 1, a2) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a2 = i.sub(this), this.negative = 1, a2) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
    }, f.prototype.isub = function(i) {
      if (i.negative !== 0) {
        i.negative = 0;
        var a2 = this.iadd(i);
        return i.negative = 1, a2._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
      var h = this.cmp(i);
      if (h === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var s, u;
      h > 0 ? (s = this, u = i) : (s = i, u = this);
      for (var c = 0, b = 0;b < u.length; b++)
        a2 = (s.words[b] | 0) - (u.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      for (;c !== 0 && b < s.length; b++)
        a2 = (s.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      if (c === 0 && b < s.length && s !== this)
        for (;b < s.length; b++)
          this.words[b] = s.words[b];
      return this.length = Math.max(this.length, b), s !== this && (this.negative = 1), this.strip();
    }, f.prototype.sub = function(i) {
      return this.clone().isub(i);
    };
    function q(v, i, a2) {
      a2.negative = i.negative ^ v.negative;
      var h = v.length + i.length | 0;
      a2.length = h, h = h - 1 | 0;
      var s = v.words[0] | 0, u = i.words[0] | 0, c = s * u, b = c & 67108863, l = c / 67108864 | 0;
      a2.words[0] = b;
      for (var n = 1;n < h; n++) {
        for (var d = l >>> 26, w = l & 67108863, g = Math.min(n, i.length - 1), _ = Math.max(0, n - v.length + 1);_ <= g; _++) {
          var A = n - _ | 0;
          s = v.words[A] | 0, u = i.words[_] | 0, c = s * u + w, d += c / 67108864 | 0, w = c & 67108863;
        }
        a2.words[n] = w | 0, l = d | 0;
      }
      return l !== 0 ? a2.words[n] = l | 0 : a2.length--, a2.strip();
    }
    var L = function(i, a2, h) {
      var s = i.words, u = a2.words, c = h.words, b = 0, l, n, d, w = s[0] | 0, g = w & 8191, _ = w >>> 13, A = s[1] | 0, R = A & 8191, I = A >>> 13, Me = s[2] | 0, k = Me & 8191, D = Me >>> 13, nt = s[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s[8] | 0, V = yt & 8191, $ = yt >>> 13, wt = s[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u[2] | 0, te = xt & 8191, re = xt >>> 13, St = u[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u[9] | 0, ve = It & 8191, be = It >>> 13;
      h.negative = i.negative ^ a2.negative, h.length = 19, l = Math.imul(g, X), n = Math.imul(g, J), n = n + Math.imul(_, X) | 0, d = Math.imul(_, J);
      var ft = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n = Math.imul(R, J), n = n + Math.imul(I, X) | 0, d = Math.imul(I, J), l = l + Math.imul(g, Q) | 0, n = n + Math.imul(g, ee) | 0, n = n + Math.imul(_, Q) | 0, d = d + Math.imul(_, ee) | 0;
      var Be = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k, X), n = Math.imul(k, J), n = n + Math.imul(D, X) | 0, d = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n = n + Math.imul(R, ee) | 0, n = n + Math.imul(I, Q) | 0, d = d + Math.imul(I, ee) | 0, l = l + Math.imul(g, te) | 0, n = n + Math.imul(g, re) | 0, n = n + Math.imul(_, te) | 0, d = d + Math.imul(_, re) | 0;
      var qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n = Math.imul(C, J), n = n + Math.imul(O, X) | 0, d = Math.imul(O, J), l = l + Math.imul(k, Q) | 0, n = n + Math.imul(k, ee) | 0, n = n + Math.imul(D, Q) | 0, d = d + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n = n + Math.imul(R, re) | 0, n = n + Math.imul(I, te) | 0, d = d + Math.imul(I, re) | 0, l = l + Math.imul(g, ie) | 0, n = n + Math.imul(g, ne) | 0, n = n + Math.imul(_, ie) | 0, d = d + Math.imul(_, ne) | 0;
      var ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n = Math.imul(F, J), n = n + Math.imul(U, X) | 0, d = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O, Q) | 0, d = d + Math.imul(O, ee) | 0, l = l + Math.imul(k, te) | 0, n = n + Math.imul(k, re) | 0, n = n + Math.imul(D, te) | 0, d = d + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n = n + Math.imul(R, ne) | 0, n = n + Math.imul(I, ie) | 0, d = d + Math.imul(I, ne) | 0, l = l + Math.imul(g, fe) | 0, n = n + Math.imul(g, ae) | 0, n = n + Math.imul(_, fe) | 0, d = d + Math.imul(_, ae) | 0;
      var He = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n = Math.imul(z, J), n = n + Math.imul(H, X) | 0, d = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U, Q) | 0, d = d + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O, te) | 0, d = d + Math.imul(O, re) | 0, l = l + Math.imul(k, ie) | 0, n = n + Math.imul(k, ne) | 0, n = n + Math.imul(D, ie) | 0, d = d + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n = n + Math.imul(R, ae) | 0, n = n + Math.imul(I, fe) | 0, d = d + Math.imul(I, ae) | 0, l = l + Math.imul(g, oe) | 0, n = n + Math.imul(g, se) | 0, n = n + Math.imul(_, oe) | 0, d = d + Math.imul(_, se) | 0;
      var We = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n = Math.imul(W, J), n = n + Math.imul(K, X) | 0, d = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H, Q) | 0, d = d + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U, te) | 0, d = d + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n = n + Math.imul(C, ne) | 0, n = n + Math.imul(O, ie) | 0, d = d + Math.imul(O, ne) | 0, l = l + Math.imul(k, fe) | 0, n = n + Math.imul(k, ae) | 0, n = n + Math.imul(D, fe) | 0, d = d + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n = n + Math.imul(R, se) | 0, n = n + Math.imul(I, oe) | 0, d = d + Math.imul(I, se) | 0, l = l + Math.imul(g, he) | 0, n = n + Math.imul(g, ue) | 0, n = n + Math.imul(_, he) | 0, d = d + Math.imul(_, ue) | 0;
      var Ke = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n = Math.imul(j, J), n = n + Math.imul(Z, X) | 0, d = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K, Q) | 0, d = d + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H, te) | 0, d = d + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n = n + Math.imul(F, ne) | 0, n = n + Math.imul(U, ie) | 0, d = d + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O, fe) | 0, d = d + Math.imul(O, ae) | 0, l = l + Math.imul(k, oe) | 0, n = n + Math.imul(k, se) | 0, n = n + Math.imul(D, oe) | 0, d = d + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n = n + Math.imul(R, ue) | 0, n = n + Math.imul(I, he) | 0, d = d + Math.imul(I, ue) | 0, l = l + Math.imul(g, le) | 0, n = n + Math.imul(g, de) | 0, n = n + Math.imul(_, le) | 0, d = d + Math.imul(_, de) | 0;
      var je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n = Math.imul(V, J), n = n + Math.imul($, X) | 0, d = Math.imul($, J), l = l + Math.imul(j, Q) | 0, n = n + Math.imul(j, ee) | 0, n = n + Math.imul(Z, Q) | 0, d = d + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K, te) | 0, d = d + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n = n + Math.imul(z, ne) | 0, n = n + Math.imul(H, ie) | 0, d = d + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U, fe) | 0, d = d + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O, oe) | 0, d = d + Math.imul(O, se) | 0, l = l + Math.imul(k, he) | 0, n = n + Math.imul(k, ue) | 0, n = n + Math.imul(D, he) | 0, d = d + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n = n + Math.imul(R, de) | 0, n = n + Math.imul(I, le) | 0, d = d + Math.imul(I, de) | 0, l = l + Math.imul(g, ce) | 0, n = n + Math.imul(g, pe) | 0, n = n + Math.imul(_, ce) | 0, d = d + Math.imul(_, pe) | 0;
      var Ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n = Math.imul(G, J), n = n + Math.imul(Y, X) | 0, d = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n = n + Math.imul(V, ee) | 0, n = n + Math.imul($, Q) | 0, d = d + Math.imul($, ee) | 0, l = l + Math.imul(j, te) | 0, n = n + Math.imul(j, re) | 0, n = n + Math.imul(Z, te) | 0, d = d + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n = n + Math.imul(W, ne) | 0, n = n + Math.imul(K, ie) | 0, d = d + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H, fe) | 0, d = d + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U, oe) | 0, d = d + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O, he) | 0, d = d + Math.imul(O, ue) | 0, l = l + Math.imul(k, le) | 0, n = n + Math.imul(k, de) | 0, n = n + Math.imul(D, le) | 0, d = d + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n = n + Math.imul(R, pe) | 0, n = n + Math.imul(I, ce) | 0, d = d + Math.imul(I, pe) | 0, l = l + Math.imul(g, ve) | 0, n = n + Math.imul(g, be) | 0, n = n + Math.imul(_, ve) | 0, d = d + Math.imul(_, be) | 0;
      var Ve = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n = Math.imul(G, ee), n = n + Math.imul(Y, Q) | 0, d = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n = n + Math.imul(V, re) | 0, n = n + Math.imul($, te) | 0, d = d + Math.imul($, re) | 0, l = l + Math.imul(j, ie) | 0, n = n + Math.imul(j, ne) | 0, n = n + Math.imul(Z, ie) | 0, d = d + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K, fe) | 0, d = d + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H, oe) | 0, d = d + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U, he) | 0, d = d + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O, le) | 0, d = d + Math.imul(O, de) | 0, l = l + Math.imul(k, ce) | 0, n = n + Math.imul(k, pe) | 0, n = n + Math.imul(D, ce) | 0, d = d + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n = n + Math.imul(R, be) | 0, n = n + Math.imul(I, ve) | 0, d = d + Math.imul(I, be) | 0;
      var $e = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n = Math.imul(G, re), n = n + Math.imul(Y, te) | 0, d = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n = n + Math.imul(V, ne) | 0, n = n + Math.imul($, ie) | 0, d = d + Math.imul($, ne) | 0, l = l + Math.imul(j, fe) | 0, n = n + Math.imul(j, ae) | 0, n = n + Math.imul(Z, fe) | 0, d = d + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K, oe) | 0, d = d + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H, he) | 0, d = d + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U, le) | 0, d = d + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O, ce) | 0, d = d + Math.imul(O, pe) | 0, l = l + Math.imul(k, ve) | 0, n = n + Math.imul(k, be) | 0, n = n + Math.imul(D, ve) | 0, d = d + Math.imul(D, be) | 0;
      var Ge = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n = Math.imul(G, ne), n = n + Math.imul(Y, ie) | 0, d = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n = n + Math.imul(V, ae) | 0, n = n + Math.imul($, fe) | 0, d = d + Math.imul($, ae) | 0, l = l + Math.imul(j, oe) | 0, n = n + Math.imul(j, se) | 0, n = n + Math.imul(Z, oe) | 0, d = d + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K, he) | 0, d = d + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H, le) | 0, d = d + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U, ce) | 0, d = d + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n = n + Math.imul(C, be) | 0, n = n + Math.imul(O, ve) | 0, d = d + Math.imul(O, be) | 0;
      var Ye = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n = Math.imul(G, ae), n = n + Math.imul(Y, fe) | 0, d = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n = n + Math.imul(V, se) | 0, n = n + Math.imul($, oe) | 0, d = d + Math.imul($, se) | 0, l = l + Math.imul(j, he) | 0, n = n + Math.imul(j, ue) | 0, n = n + Math.imul(Z, he) | 0, d = d + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K, le) | 0, d = d + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H, ce) | 0, d = d + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n = n + Math.imul(F, be) | 0, n = n + Math.imul(U, ve) | 0, d = d + Math.imul(U, be) | 0;
      var Xe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n = Math.imul(G, se), n = n + Math.imul(Y, oe) | 0, d = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n = n + Math.imul(V, ue) | 0, n = n + Math.imul($, he) | 0, d = d + Math.imul($, ue) | 0, l = l + Math.imul(j, le) | 0, n = n + Math.imul(j, de) | 0, n = n + Math.imul(Z, le) | 0, d = d + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K, ce) | 0, d = d + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n = n + Math.imul(z, be) | 0, n = n + Math.imul(H, ve) | 0, d = d + Math.imul(H, be) | 0;
      var Je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n = Math.imul(G, ue), n = n + Math.imul(Y, he) | 0, d = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n = n + Math.imul(V, de) | 0, n = n + Math.imul($, le) | 0, d = d + Math.imul($, de) | 0, l = l + Math.imul(j, ce) | 0, n = n + Math.imul(j, pe) | 0, n = n + Math.imul(Z, ce) | 0, d = d + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n = n + Math.imul(W, be) | 0, n = n + Math.imul(K, ve) | 0, d = d + Math.imul(K, be) | 0;
      var Qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n = Math.imul(G, de), n = n + Math.imul(Y, le) | 0, d = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n = n + Math.imul(V, pe) | 0, n = n + Math.imul($, ce) | 0, d = d + Math.imul($, pe) | 0, l = l + Math.imul(j, ve) | 0, n = n + Math.imul(j, be) | 0, n = n + Math.imul(Z, ve) | 0, d = d + Math.imul(Z, be) | 0;
      var et = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n = Math.imul(G, pe), n = n + Math.imul(Y, ce) | 0, d = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n = n + Math.imul(V, be) | 0, n = n + Math.imul($, ve) | 0, d = d + Math.imul($, be) | 0;
      var tt = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n = Math.imul(G, be), n = n + Math.imul(Y, ve) | 0, d = Math.imul(Y, be);
      var rt = (b + l | 0) + ((n & 8191) << 13) | 0;
      return b = (d + (n >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b !== 0 && (c[19] = b, h.length++), h;
    };
    Math.imul || (L = q);
    function ge(v, i, a2) {
      a2.negative = i.negative ^ v.negative, a2.length = v.length + i.length;
      for (var h = 0, s = 0, u = 0;u < a2.length - 1; u++) {
        var c = s;
        s = 0;
        for (var b = h & 67108863, l = Math.min(u, i.length - 1), n = Math.max(0, u - v.length + 1);n <= l; n++) {
          var d = u - n, w = v.words[d] | 0, g = i.words[n] | 0, _ = w * g, A = _ & 67108863;
          c = c + (_ / 67108864 | 0) | 0, A = A + b | 0, b = A & 67108863, c = c + (A >>> 26) | 0, s += c >>> 26, c &= 67108863;
        }
        a2.words[u] = b, h = c, c = s;
      }
      return h !== 0 ? a2.words[u] = h : a2.length--, a2.strip();
    }
    function _e(v, i, a2) {
      var h = new N;
      return h.mulp(v, i, a2);
    }
    f.prototype.mulTo = function(i, a2) {
      var h, s = this.length + i.length;
      return this.length === 10 && i.length === 10 ? h = L(this, i, a2) : s < 63 ? h = q(this, i, a2) : s < 1024 ? h = ge(this, i, a2) : h = _e(this, i, a2), h;
    };
    function N(v, i) {
      this.x = v, this.y = i;
    }
    N.prototype.makeRBT = function(i) {
      for (var a2 = new Array(i), h = f.prototype._countBits(i) - 1, s = 0;s < i; s++)
        a2[s] = this.revBin(s, h, i);
      return a2;
    }, N.prototype.revBin = function(i, a2, h) {
      if (i === 0 || i === h - 1)
        return i;
      for (var s = 0, u = 0;u < a2; u++)
        s |= (i & 1) << a2 - u - 1, i >>= 1;
      return s;
    }, N.prototype.permute = function(i, a2, h, s, u, c) {
      for (var b = 0;b < c; b++)
        s[b] = a2[i[b]], u[b] = h[i[b]];
    }, N.prototype.transform = function(i, a2, h, s, u, c) {
      this.permute(c, i, a2, h, s, u);
      for (var b = 1;b < u; b <<= 1)
        for (var l = b << 1, n = Math.cos(2 * Math.PI / l), d = Math.sin(2 * Math.PI / l), w = 0;w < u; w += l)
          for (var g = n, _ = d, A = 0;A < b; A++) {
            var R = h[w + A], I = s[w + A], Me = h[w + A + b], k = s[w + A + b], D = g * Me - _ * k;
            k = g * k + _ * Me, Me = D, h[w + A] = R + Me, s[w + A] = I + k, h[w + A + b] = R - Me, s[w + A + b] = I - k, A !== l && (D = n * g - d * _, _ = n * _ + d * g, g = D);
          }
    }, N.prototype.guessLen13b = function(i, a2) {
      var h = Math.max(a2, i) | 1, s = h & 1, u = 0;
      for (h = h / 2 | 0;h; h = h >>> 1)
        u++;
      return 1 << u + 1 + s;
    }, N.prototype.conjugate = function(i, a2, h) {
      if (!(h <= 1))
        for (var s = 0;s < h / 2; s++) {
          var u = i[s];
          i[s] = i[h - s - 1], i[h - s - 1] = u, u = a2[s], a2[s] = -a2[h - s - 1], a2[h - s - 1] = -u;
        }
    }, N.prototype.normalize13b = function(i, a2) {
      for (var h = 0, s = 0;s < a2 / 2; s++) {
        var u = Math.round(i[2 * s + 1] / a2) * 8192 + Math.round(i[2 * s] / a2) + h;
        i[s] = u & 67108863, u < 67108864 ? h = 0 : h = u / 67108864 | 0;
      }
      return i;
    }, N.prototype.convert13b = function(i, a2, h, s) {
      for (var u = 0, c = 0;c < a2; c++)
        u = u + (i[c] | 0), h[2 * c] = u & 8191, u = u >>> 13, h[2 * c + 1] = u & 8191, u = u >>> 13;
      for (c = 2 * a2;c < s; ++c)
        h[c] = 0;
      r2(u === 0), r2((u & -8192) === 0);
    }, N.prototype.stub = function(i) {
      for (var a2 = new Array(i), h = 0;h < i; h++)
        a2[h] = 0;
      return a2;
    }, N.prototype.mulp = function(i, a2, h) {
      var s = 2 * this.guessLen13b(i.length, a2.length), u = this.makeRBT(s), c = this.stub(s), b = new Array(s), l = new Array(s), n = new Array(s), d = new Array(s), w = new Array(s), g = new Array(s), _ = h.words;
      _.length = s, this.convert13b(i.words, i.length, b, s), this.convert13b(a2.words, a2.length, d, s), this.transform(b, c, l, n, s, u), this.transform(d, c, w, g, s, u);
      for (var A = 0;A < s; A++) {
        var R = l[A] * w[A] - n[A] * g[A];
        n[A] = l[A] * g[A] + n[A] * w[A], l[A] = R;
      }
      return this.conjugate(l, n, s), this.transform(l, n, _, c, s, u), this.conjugate(_, c, s), this.normalize13b(_, s), h.negative = i.negative ^ a2.negative, h.length = i.length + a2.length, h.strip();
    }, f.prototype.mul = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), this.mulTo(i, a2);
    }, f.prototype.mulf = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), _e(this, i, a2);
    }, f.prototype.imul = function(i) {
      return this.clone().mulTo(i, this);
    }, f.prototype.imuln = function(i) {
      r2(typeof i == "number"), r2(i < 67108864);
      for (var a2 = 0, h = 0;h < this.length; h++) {
        var s = (this.words[h] | 0) * i, u = (s & 67108863) + (a2 & 67108863);
        a2 >>= 26, a2 += s / 67108864 | 0, a2 += u >>> 26, this.words[h] = u & 67108863;
      }
      return a2 !== 0 && (this.words[h] = a2, this.length++), this;
    }, f.prototype.muln = function(i) {
      return this.clone().imuln(i);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(i) {
      var a2 = B(i);
      if (a2.length === 0)
        return new f(1);
      for (var h = this, s = 0;s < a2.length && a2[s] === 0; s++, h = h.sqr())
        ;
      if (++s < a2.length)
        for (var u = h.sqr();s < a2.length; s++, u = u.sqr())
          a2[s] !== 0 && (h = h.mul(u));
      return h;
    }, f.prototype.iushln = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 67108863 >>> 26 - a2 << 26 - a2, u;
      if (a2 !== 0) {
        var c = 0;
        for (u = 0;u < this.length; u++) {
          var b = this.words[u] & s, l = (this.words[u] | 0) - b << a2;
          this.words[u] = l | c, c = b >>> 26 - a2;
        }
        c && (this.words[u] = c, this.length++);
      }
      if (h !== 0) {
        for (u = this.length - 1;u >= 0; u--)
          this.words[u + h] = this.words[u];
        for (u = 0;u < h; u++)
          this.words[u] = 0;
        this.length += h;
      }
      return this.strip();
    }, f.prototype.ishln = function(i) {
      return r2(this.negative === 0), this.iushln(i);
    }, f.prototype.iushrn = function(i, a2, h) {
      r2(typeof i == "number" && i >= 0);
      var s;
      a2 ? s = (a2 - a2 % 26) / 26 : s = 0;
      var u = i % 26, c = Math.min((i - u) / 26, this.length), b = 67108863 ^ 67108863 >>> u << u, l = h;
      if (s -= c, s = Math.max(0, s), l) {
        for (var n = 0;n < c; n++)
          l.words[n] = this.words[n];
        l.length = c;
      }
      if (c !== 0)
        if (this.length > c)
          for (this.length -= c, n = 0;n < this.length; n++)
            this.words[n] = this.words[n + c];
        else
          this.words[0] = 0, this.length = 1;
      var d = 0;
      for (n = this.length - 1;n >= 0 && (d !== 0 || n >= s); n--) {
        var w = this.words[n] | 0;
        this.words[n] = d << 26 - u | w >>> u, d = w & b;
      }
      return l && d !== 0 && (l.words[l.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, f.prototype.ishrn = function(i, a2, h) {
      return r2(this.negative === 0), this.iushrn(i, a2, h);
    }, f.prototype.shln = function(i) {
      return this.clone().ishln(i);
    }, f.prototype.ushln = function(i) {
      return this.clone().iushln(i);
    }, f.prototype.shrn = function(i) {
      return this.clone().ishrn(i);
    }, f.prototype.ushrn = function(i) {
      return this.clone().iushrn(i);
    }, f.prototype.testn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return false;
      var u = this.words[h];
      return !!(u & s);
    }, f.prototype.imaskn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h)
        return this;
      if (a2 !== 0 && h++, this.length = Math.min(h, this.length), a2 !== 0) {
        var s = 67108863 ^ 67108863 >>> a2 << a2;
        this.words[this.length - 1] &= s;
      }
      return this.strip();
    }, f.prototype.maskn = function(i) {
      return this.clone().imaskn(i);
    }, f.prototype.iaddn = function(i) {
      return r2(typeof i == "number"), r2(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
    }, f.prototype._iaddn = function(i) {
      this.words[0] += i;
      for (var a2 = 0;a2 < this.length && this.words[a2] >= 67108864; a2++)
        this.words[a2] -= 67108864, a2 === this.length - 1 ? this.words[a2 + 1] = 1 : this.words[a2 + 1]++;
      return this.length = Math.max(this.length, a2 + 1), this;
    }, f.prototype.isubn = function(i) {
      if (r2(typeof i == "number"), r2(i < 67108864), i < 0)
        return this.iaddn(-i);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(i), this.negative = 1, this;
      if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var a2 = 0;a2 < this.length && this.words[a2] < 0; a2++)
          this.words[a2] += 67108864, this.words[a2 + 1] -= 1;
      return this.strip();
    }, f.prototype.addn = function(i) {
      return this.clone().iaddn(i);
    }, f.prototype.subn = function(i) {
      return this.clone().isubn(i);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(i, a2, h) {
      var s = i.length + h, u;
      this._expand(s);
      var c, b = 0;
      for (u = 0;u < i.length; u++) {
        c = (this.words[u + h] | 0) + b;
        var l = (i.words[u] | 0) * a2;
        c -= l & 67108863, b = (c >> 26) - (l / 67108864 | 0), this.words[u + h] = c & 67108863;
      }
      for (;u < this.length - h; u++)
        c = (this.words[u + h] | 0) + b, b = c >> 26, this.words[u + h] = c & 67108863;
      if (b === 0)
        return this.strip();
      for (r2(b === -1), b = 0, u = 0;u < this.length; u++)
        c = -(this.words[u] | 0) + b, b = c >> 26, this.words[u] = c & 67108863;
      return this.negative = 1, this.strip();
    }, f.prototype._wordDiv = function(i, a2) {
      var h = this.length - i.length, s = this.clone(), u = i, c = u.words[u.length - 1] | 0, b = this._countBits(c);
      h = 26 - b, h !== 0 && (u = u.ushln(h), s.iushln(h), c = u.words[u.length - 1] | 0);
      var l = s.length - u.length, n;
      if (a2 !== "mod") {
        n = new f(null), n.length = l + 1, n.words = new Array(n.length);
        for (var d = 0;d < n.length; d++)
          n.words[d] = 0;
      }
      var w = s.clone()._ishlnsubmul(u, 1, l);
      w.negative === 0 && (s = w, n && (n.words[l] = 1));
      for (var g = l - 1;g >= 0; g--) {
        var _ = (s.words[u.length + g] | 0) * 67108864 + (s.words[u.length + g - 1] | 0);
        for (_ = Math.min(_ / c | 0, 67108863), s._ishlnsubmul(u, _, g);s.negative !== 0; )
          _--, s.negative = 0, s._ishlnsubmul(u, 1, g), s.isZero() || (s.negative ^= 1);
        n && (n.words[g] = _);
      }
      return n && n.strip(), s.strip(), a2 !== "div" && h !== 0 && s.iushrn(h), { div: n || null, mod: s };
    }, f.prototype.divmod = function(i, a2, h) {
      if (r2(!i.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var s, u, c;
      return this.negative !== 0 && i.negative === 0 ? (c = this.neg().divmod(i, a2), a2 !== "mod" && (s = c.div.neg()), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.iadd(i)), { div: s, mod: u }) : this.negative === 0 && i.negative !== 0 ? (c = this.divmod(i.neg(), a2), a2 !== "mod" && (s = c.div.neg()), { div: s, mod: c.mod }) : (this.negative & i.negative) !== 0 ? (c = this.neg().divmod(i.neg(), a2), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.isub(i)), { div: c.div, mod: u }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f(0), mod: this } : i.length === 1 ? a2 === "div" ? { div: this.divn(i.words[0]), mod: null } : a2 === "mod" ? { div: null, mod: new f(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f(this.modn(i.words[0])) } : this._wordDiv(i, a2);
    }, f.prototype.div = function(i) {
      return this.divmod(i, "div", false).div;
    }, f.prototype.mod = function(i) {
      return this.divmod(i, "mod", false).mod;
    }, f.prototype.umod = function(i) {
      return this.divmod(i, "mod", true).mod;
    }, f.prototype.divRound = function(i) {
      var a2 = this.divmod(i);
      if (a2.mod.isZero())
        return a2.div;
      var h = a2.div.negative !== 0 ? a2.mod.isub(i) : a2.mod, s = i.ushrn(1), u = i.andln(1), c = h.cmp(s);
      return c < 0 || u === 1 && c === 0 ? a2.div : a2.div.negative !== 0 ? a2.div.isubn(1) : a2.div.iaddn(1);
    }, f.prototype.modn = function(i) {
      r2(i <= 67108863);
      for (var a2 = (1 << 26) % i, h = 0, s = this.length - 1;s >= 0; s--)
        h = (a2 * h + (this.words[s] | 0)) % i;
      return h;
    }, f.prototype.idivn = function(i) {
      r2(i <= 67108863);
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = (this.words[h] | 0) + a2 * 67108864;
        this.words[h] = s / i | 0, a2 = s % i;
      }
      return this.strip();
    }, f.prototype.divn = function(i) {
      return this.clone().idivn(i);
    }, f.prototype.egcd = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = new f(0), b = new f(1), l = 0;a2.isEven() && h.isEven(); )
        a2.iushrn(1), h.iushrn(1), ++l;
      for (var n = h.clone(), d = a2.clone();!a2.isZero(); ) {
        for (var w = 0, g = 1;(a2.words[0] & g) === 0 && w < 26; ++w, g <<= 1)
          ;
        if (w > 0)
          for (a2.iushrn(w);w-- > 0; )
            (s.isOdd() || u.isOdd()) && (s.iadd(n), u.isub(d)), s.iushrn(1), u.iushrn(1);
        for (var _ = 0, A = 1;(h.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
          ;
        if (_ > 0)
          for (h.iushrn(_);_-- > 0; )
            (c.isOdd() || b.isOdd()) && (c.iadd(n), b.isub(d)), c.iushrn(1), b.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(c), u.isub(b)) : (h.isub(a2), c.isub(s), b.isub(u));
      }
      return { a: c, b, gcd: h.iushln(l) };
    }, f.prototype._invmp = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = h.clone();a2.cmpn(1) > 0 && h.cmpn(1) > 0; ) {
        for (var b = 0, l = 1;(a2.words[0] & l) === 0 && b < 26; ++b, l <<= 1)
          ;
        if (b > 0)
          for (a2.iushrn(b);b-- > 0; )
            s.isOdd() && s.iadd(c), s.iushrn(1);
        for (var n = 0, d = 1;(h.words[0] & d) === 0 && n < 26; ++n, d <<= 1)
          ;
        if (n > 0)
          for (h.iushrn(n);n-- > 0; )
            u.isOdd() && u.iadd(c), u.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(u)) : (h.isub(a2), u.isub(s));
      }
      var w;
      return a2.cmpn(1) === 0 ? w = s : w = u, w.cmpn(0) < 0 && w.iadd(i), w;
    }, f.prototype.gcd = function(i) {
      if (this.isZero())
        return i.abs();
      if (i.isZero())
        return this.abs();
      var a2 = this.clone(), h = i.clone();
      a2.negative = 0, h.negative = 0;
      for (var s = 0;a2.isEven() && h.isEven(); s++)
        a2.iushrn(1), h.iushrn(1);
      do {
        for (;a2.isEven(); )
          a2.iushrn(1);
        for (;h.isEven(); )
          h.iushrn(1);
        var u = a2.cmp(h);
        if (u < 0) {
          var c = a2;
          a2 = h, h = c;
        } else if (u === 0 || h.cmpn(1) === 0)
          break;
        a2.isub(h);
      } while (true);
      return h.iushln(s);
    }, f.prototype.invm = function(i) {
      return this.egcd(i).a.umod(i);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(i) {
      return this.words[0] & i;
    }, f.prototype.bincn = function(i) {
      r2(typeof i == "number");
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return this._expand(h + 1), this.words[h] |= s, this;
      for (var u = s, c = h;u !== 0 && c < this.length; c++) {
        var b = this.words[c] | 0;
        b += u, u = b >>> 26, b &= 67108863, this.words[c] = b;
      }
      return u !== 0 && (this.words[c] = u, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(i) {
      var a2 = i < 0;
      if (this.negative !== 0 && !a2)
        return -1;
      if (this.negative === 0 && a2)
        return 1;
      this.strip();
      var h;
      if (this.length > 1)
        h = 1;
      else {
        a2 && (i = -i), r2(i <= 67108863, "Number is too big");
        var s = this.words[0] | 0;
        h = s === i ? 0 : s < i ? -1 : 1;
      }
      return this.negative !== 0 ? -h | 0 : h;
    }, f.prototype.cmp = function(i) {
      if (this.negative !== 0 && i.negative === 0)
        return -1;
      if (this.negative === 0 && i.negative !== 0)
        return 1;
      var a2 = this.ucmp(i);
      return this.negative !== 0 ? -a2 | 0 : a2;
    }, f.prototype.ucmp = function(i) {
      if (this.length > i.length)
        return 1;
      if (this.length < i.length)
        return -1;
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = this.words[h] | 0, u = i.words[h] | 0;
        if (s !== u) {
          s < u ? a2 = -1 : s > u && (a2 = 1);
          break;
        }
      }
      return a2;
    }, f.prototype.gtn = function(i) {
      return this.cmpn(i) === 1;
    }, f.prototype.gt = function(i) {
      return this.cmp(i) === 1;
    }, f.prototype.gten = function(i) {
      return this.cmpn(i) >= 0;
    }, f.prototype.gte = function(i) {
      return this.cmp(i) >= 0;
    }, f.prototype.ltn = function(i) {
      return this.cmpn(i) === -1;
    }, f.prototype.lt = function(i) {
      return this.cmp(i) === -1;
    }, f.prototype.lten = function(i) {
      return this.cmpn(i) <= 0;
    }, f.prototype.lte = function(i) {
      return this.cmp(i) <= 0;
    }, f.prototype.eqn = function(i) {
      return this.cmpn(i) === 0;
    }, f.prototype.eq = function(i) {
      return this.cmp(i) === 0;
    }, f.red = function(i) {
      return new P(i);
    }, f.prototype.toRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(i) {
      return this.red = i, this;
    }, f.prototype.forceRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(i);
    }, f.prototype.redAdd = function(i) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
    }, f.prototype.redIAdd = function(i) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
    }, f.prototype.redSub = function(i) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
    }, f.prototype.redISub = function(i) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
    }, f.prototype.redShl = function(i) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
    }, f.prototype.redMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
    }, f.prototype.redIMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(i) {
      return r2(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
    };
    var we = { k256: null, p224: null, p192: null, p25519: null };
    function ye(v, i) {
      this.name = v, this.p = new f(i, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    ye.prototype._tmp = function() {
      var i = new f(null);
      return i.words = new Array(Math.ceil(this.n / 13)), i;
    }, ye.prototype.ireduce = function(i) {
      var a2 = i, h;
      do
        this.split(a2, this.tmp), a2 = this.imulK(a2), a2 = a2.iadd(this.tmp), h = a2.bitLength();
      while (h > this.n);
      var s = h < this.n ? -1 : a2.ucmp(this.p);
      return s === 0 ? (a2.words[0] = 0, a2.length = 1) : s > 0 ? a2.isub(this.p) : a2.strip !== undefined ? a2.strip() : a2._strip(), a2;
    }, ye.prototype.split = function(i, a2) {
      i.iushrn(this.n, 0, a2);
    }, ye.prototype.imulK = function(i) {
      return i.imul(this.k);
    };
    function xe() {
      ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(xe, ye), xe.prototype.split = function(i, a2) {
      for (var h = 4194303, s = Math.min(i.length, 9), u = 0;u < s; u++)
        a2.words[u] = i.words[u];
      if (a2.length = s, i.length <= 9) {
        i.words[0] = 0, i.length = 1;
        return;
      }
      var c = i.words[9];
      for (a2.words[a2.length++] = c & h, u = 10;u < i.length; u++) {
        var b = i.words[u] | 0;
        i.words[u - 10] = (b & h) << 4 | c >>> 22, c = b;
      }
      c >>>= 22, i.words[u - 10] = c, c === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
    }, xe.prototype.imulK = function(i) {
      i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = i.words[h] | 0;
        a2 += s * 977, i.words[h] = a2 & 67108863, a2 = s * 64 + (a2 / 67108864 | 0);
      }
      return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
    };
    function Re() {
      ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(Re, ye);
    function Ee() {
      ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Ee, ye);
    function Ae() {
      ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(Ae, ye), Ae.prototype.imulK = function(i) {
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = (i.words[h] | 0) * 19 + a2, u = s & 67108863;
        s >>>= 26, i.words[h] = u, a2 = s;
      }
      return a2 !== 0 && (i.words[i.length++] = a2), i;
    }, f._prime = function(i) {
      if (we[i])
        return we[i];
      var a2;
      if (i === "k256")
        a2 = new xe;
      else if (i === "p224")
        a2 = new Re;
      else if (i === "p192")
        a2 = new Ee;
      else if (i === "p25519")
        a2 = new Ae;
      else
        throw new Error("Unknown prime " + i);
      return we[i] = a2, a2;
    };
    function P(v) {
      if (typeof v == "string") {
        var i = f._prime(v);
        this.m = i.p, this.prime = i;
      } else
        r2(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
    }
    P.prototype._verify1 = function(i) {
      r2(i.negative === 0, "red works only with positives"), r2(i.red, "red works only with red numbers");
    }, P.prototype._verify2 = function(i, a2) {
      r2((i.negative | a2.negative) === 0, "red works only with positives"), r2(i.red && i.red === a2.red, "red works only with red numbers");
    }, P.prototype.imod = function(i) {
      return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
    }, P.prototype.neg = function(i) {
      return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
    }, P.prototype.add = function(i, a2) {
      this._verify2(i, a2);
      var h = i.add(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h._forceRed(this);
    }, P.prototype.iadd = function(i, a2) {
      this._verify2(i, a2);
      var h = i.iadd(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h;
    }, P.prototype.sub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.sub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h._forceRed(this);
    }, P.prototype.isub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.isub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h;
    }, P.prototype.shl = function(i, a2) {
      return this._verify1(i), this.imod(i.ushln(a2));
    }, P.prototype.imul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.imul(a2));
    }, P.prototype.mul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.mul(a2));
    }, P.prototype.isqr = function(i) {
      return this.imul(i, i.clone());
    }, P.prototype.sqr = function(i) {
      return this.mul(i, i);
    }, P.prototype.sqrt = function(i) {
      if (i.isZero())
        return i.clone();
      var a2 = this.m.andln(3);
      if (r2(a2 % 2 === 1), a2 === 3) {
        var h = this.m.add(new f(1)).iushrn(2);
        return this.pow(i, h);
      }
      for (var s = this.m.subn(1), u = 0;!s.isZero() && s.andln(1) === 0; )
        u++, s.iushrn(1);
      r2(!s.isZero());
      var c = new f(1).toRed(this), b = c.redNeg(), l = this.m.subn(1).iushrn(1), n = this.m.bitLength();
      for (n = new f(2 * n * n).toRed(this);this.pow(n, l).cmp(b) !== 0; )
        n.redIAdd(b);
      for (var d = this.pow(n, s), w = this.pow(i, s.addn(1).iushrn(1)), g = this.pow(i, s), _ = u;g.cmp(c) !== 0; ) {
        for (var A = g, R = 0;A.cmp(c) !== 0; R++)
          A = A.redSqr();
        r2(R < _);
        var I = this.pow(d, new f(1).iushln(_ - R - 1));
        w = w.redMul(I), d = I.redSqr(), g = g.redMul(d), _ = R;
      }
      return w;
    }, P.prototype.invm = function(i) {
      var a2 = i._invmp(this.m);
      return a2.negative !== 0 ? (a2.negative = 0, this.imod(a2).redNeg()) : this.imod(a2);
    }, P.prototype.pow = function(i, a2) {
      if (a2.isZero())
        return new f(1).toRed(this);
      if (a2.cmpn(1) === 0)
        return i.clone();
      var h = 4, s = new Array(1 << h);
      s[0] = new f(1).toRed(this), s[1] = i;
      for (var u = 2;u < s.length; u++)
        s[u] = this.mul(s[u - 1], i);
      var c = s[0], b = 0, l = 0, n = a2.bitLength() % 26;
      for (n === 0 && (n = 26), u = a2.length - 1;u >= 0; u--) {
        for (var d = a2.words[u], w = n - 1;w >= 0; w--) {
          var g = d >> w & 1;
          if (c !== s[0] && (c = this.sqr(c)), g === 0 && b === 0) {
            l = 0;
            continue;
          }
          b <<= 1, b |= g, l++, !(l !== h && (u !== 0 || w !== 0)) && (c = this.mul(c, s[b]), l = 0, b = 0);
        }
        n = 26;
      }
      return c;
    }, P.prototype.convertTo = function(i) {
      var a2 = i.umod(this.m);
      return a2 === i ? a2.clone() : a2;
    }, P.prototype.convertFrom = function(i) {
      var a2 = i.clone();
      return a2.red = null, a2;
    }, f.mont = function(i) {
      return new Se(i);
    };
    function Se(v) {
      P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(Se, P), Se.prototype.convertTo = function(i) {
      return this.imod(i.ushln(this.shift));
    }, Se.prototype.convertFrom = function(i) {
      var a2 = this.imod(i.mul(this.rinv));
      return a2.red = null, a2;
    }, Se.prototype.imul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return i.words[0] = 0, i.length = 1, i;
      var h = i.imul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.mul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return new f(0)._forceRed(this);
      var h = i.mul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.invm = function(i) {
      var a2 = this.imod(i._invmp(this.m).mul(this.r2));
      return a2._forceRed(this);
    };
  })(typeof yd > "u" || yd, L3);
});
var P3 = T((wL, D3) => {
  var bq = o0(), mq = N3();
  D3.exports = function(e2) {
    return new Zn(e2);
  };
  var hr = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 }, secp384r1: { name: "p384", byteLength: 48 }, secp521r1: { name: "p521", byteLength: 66 } };
  hr.p224 = hr.secp224r1;
  hr.p256 = hr.secp256r1 = hr.prime256v1;
  hr.p192 = hr.secp192r1 = hr.prime192v1;
  hr.p384 = hr.secp384r1;
  hr.p521 = hr.secp521r1;
  function Zn(t3) {
    this.curveType = hr[t3], this.curveType || (this.curveType = { name: t3 }), this.curve = new bq.ec(this.curveType.name), this.keys = undefined;
  }
  Zn.prototype.generateKeys = function(t3, e2) {
    return this.keys = this.curve.genKeyPair(), this.getPublicKey(t3, e2);
  };
  Zn.prototype.computeSecret = function(t3, e2, r2) {
    e2 = e2 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2));
    var o = this.curve.keyFromPublic(t3).getPublic(), f = o.mul(this.keys.getPrivate()).getX();
    return wd(f, r2, this.curveType.byteLength);
  };
  Zn.prototype.getPublicKey = function(t3, e2) {
    var r2 = this.keys.getPublic(e2 === "compressed", true);
    return e2 === "hybrid" && (r2[r2.length - 1] % 2 ? r2[0] = 7 : r2[0] = 6), wd(r2, t3);
  };
  Zn.prototype.getPrivateKey = function(t3) {
    return wd(this.keys.getPrivate(), t3);
  };
  Zn.prototype.setPublicKey = function(t3, e2) {
    return e2 = e2 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2)), this.keys._importPublic(t3), this;
  };
  Zn.prototype.setPrivateKey = function(t3, e2) {
    e2 = e2 || "utf8", Buffer.isBuffer(t3) || (t3 = new Buffer(t3, e2));
    var r2 = new mq(t3);
    return r2 = r2.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(r2), this;
  };
  function wd(t3, e2, r2) {
    Array.isArray(t3) || (t3 = t3.toArray());
    var o = new Buffer(t3);
    if (r2 && o.length < r2) {
      var f = new Buffer(r2 - o.length);
      f.fill(0), o = Buffer.concat([f, o]);
    }
    return e2 ? o.toString(e2) : o;
  }
});
var _d = T((ML, C3) => {
  var gq = bf(), Md = Te().Buffer;
  C3.exports = function(t3, e2) {
    for (var r2 = Md.alloc(0), o = 0, f;r2.length < e2; )
      f = yq(o++), r2 = Md.concat([r2, gq("sha1").update(t3).update(f).digest()]);
    return r2.slice(0, e2);
  };
  function yq(t3) {
    var e2 = Md.allocUnsafe(4);
    return e2.writeUInt32BE(t3, 0), e2;
  }
});
var xd = T((_L, O3) => {
  O3.exports = function(e2, r2) {
    for (var o = e2.length, f = -1;++f < o; )
      e2[f] ^= r2[f];
    return e2;
  };
});
var w0 = T((F3, Sd) => {
  (function(t3, e2) {
    function r2(v, i) {
      if (!v)
        throw new Error(i || "Assertion failed");
    }
    function o(v, i) {
      v.super_ = i;
      var a2 = function() {
      };
      a2.prototype = i.prototype, v.prototype = new a2, v.prototype.constructor = v;
    }
    function f(v, i, a2) {
      if (f.isBN(v))
        return v;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i === "le" || i === "be") && (a2 = i, i = 10), this._init(v || 0, i || 10, a2 || "be"));
    }
    typeof t3 == "object" ? t3.exports = f : e2.BN = f, f.BN = f, f.wordSize = 26;
    var p;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? p = window.Buffer : p = ji().Buffer;
    } catch {
    }
    f.isBN = function(i) {
      return i instanceof f ? true : i !== null && typeof i == "object" && i.constructor.wordSize === f.wordSize && Array.isArray(i.words);
    }, f.max = function(i, a2) {
      return i.cmp(a2) > 0 ? i : a2;
    }, f.min = function(i, a2) {
      return i.cmp(a2) < 0 ? i : a2;
    }, f.prototype._init = function(i, a2, h) {
      if (typeof i == "number")
        return this._initNumber(i, a2, h);
      if (typeof i == "object")
        return this._initArray(i, a2, h);
      a2 === "hex" && (a2 = 16), r2(a2 === (a2 | 0) && a2 >= 2 && a2 <= 36), i = i.toString().replace(/\s+/g, "");
      var s = 0;
      i[0] === "-" && (s++, this.negative = 1), s < i.length && (a2 === 16 ? this._parseHex(i, s, h) : (this._parseBase(i, a2, s), h === "le" && this._initArray(this.toArray(), a2, h)));
    }, f.prototype._initNumber = function(i, a2, h) {
      i < 0 && (this.negative = 1, i = -i), i < 67108864 ? (this.words = [i & 67108863], this.length = 1) : i < 4503599627370496 ? (this.words = [i & 67108863, i / 67108864 & 67108863], this.length = 2) : (r2(i < 9007199254740992), this.words = [i & 67108863, i / 67108864 & 67108863, 1], this.length = 3), h === "le" && this._initArray(this.toArray(), a2, h);
    }, f.prototype._initArray = function(i, a2, h) {
      if (r2(typeof i.length == "number"), i.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(i.length / 3), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u, c, b = 0;
      if (h === "be")
        for (s = i.length - 1, u = 0;s >= 0; s -= 3)
          c = i[s] | i[s - 1] << 8 | i[s - 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      else if (h === "le")
        for (s = 0, u = 0;s < i.length; s += 3)
          c = i[s] | i[s + 1] << 8 | i[s + 2] << 16, this.words[u] |= c << b & 67108863, this.words[u + 1] = c >>> 26 - b & 67108863, b += 24, b >= 26 && (b -= 26, u++);
      return this.strip();
    };
    function m(v, i) {
      var a2 = v.charCodeAt(i);
      return a2 >= 65 && a2 <= 70 ? a2 - 55 : a2 >= 97 && a2 <= 102 ? a2 - 87 : a2 - 48 & 15;
    }
    function y(v, i, a2) {
      var h = m(v, a2);
      return a2 - 1 >= i && (h |= m(v, a2 - 1) << 4), h;
    }
    f.prototype._parseHex = function(i, a2, h) {
      this.length = Math.ceil((i.length - a2) / 6), this.words = new Array(this.length);
      for (var s = 0;s < this.length; s++)
        this.words[s] = 0;
      var u = 0, c = 0, b;
      if (h === "be")
        for (s = i.length - 1;s >= a2; s -= 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      else {
        var l = i.length - a2;
        for (s = l % 2 === 0 ? a2 + 1 : a2;s < i.length; s += 2)
          b = y(i, a2, s) << u, this.words[c] |= b & 67108863, u >= 18 ? (u -= 18, c += 1, this.words[c] |= b >>> 26) : u += 8;
      }
      this.strip();
    };
    function M(v, i, a2, h) {
      for (var s = 0, u = Math.min(v.length, a2), c = i;c < u; c++) {
        var b = v.charCodeAt(c) - 48;
        s *= h, b >= 49 ? s += b - 49 + 10 : b >= 17 ? s += b - 17 + 10 : s += b;
      }
      return s;
    }
    f.prototype._parseBase = function(i, a2, h) {
      this.words = [0], this.length = 1;
      for (var s = 0, u = 1;u <= 67108863; u *= a2)
        s++;
      s--, u = u / a2 | 0;
      for (var c = i.length - h, b = c % s, l = Math.min(c, c - b) + h, n = 0, d = h;d < l; d += s)
        n = M(i, d, d + s, a2), this.imuln(u), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      if (b !== 0) {
        var w = 1;
        for (n = M(i, d, i.length, a2), d = 0;d < b; d++)
          w *= a2;
        this.imuln(w), this.words[0] + n < 67108864 ? this.words[0] += n : this._iaddn(n);
      }
      this.strip();
    }, f.prototype.copy = function(i) {
      i.words = new Array(this.length);
      for (var a2 = 0;a2 < this.length; a2++)
        i.words[a2] = this.words[a2];
      i.length = this.length, i.negative = this.negative, i.red = this.red;
    }, f.prototype.clone = function() {
      var i = new f(null);
      return this.copy(i), i;
    }, f.prototype._expand = function(i) {
      for (;this.length < i; )
        this.words[this.length++] = 0;
      return this;
    }, f.prototype.strip = function() {
      for (;this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, f.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, f.prototype.inspect = function() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    };
    var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
    f.prototype.toString = function(i, a2) {
      i = i || 10, a2 = a2 | 0 || 1;
      var h;
      if (i === 16 || i === "hex") {
        h = "";
        for (var s = 0, u = 0, c = 0;c < this.length; c++) {
          var b = this.words[c], l = ((b << s | u) & 16777215).toString(16);
          u = b >>> 24 - s & 16777215, u !== 0 || c !== this.length - 1 ? h = x[6 - l.length] + l + h : h = l + h, s += 2, s >= 26 && (s -= 26, c--);
        }
        for (u !== 0 && (h = u.toString(16) + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      if (i === (i | 0) && i >= 2 && i <= 36) {
        var n = S[i], d = E[i];
        h = "";
        var w = this.clone();
        for (w.negative = 0;!w.isZero(); ) {
          var g = w.modn(d).toString(i);
          w = w.idivn(d), w.isZero() ? h = g + h : h = x[n - g.length] + g + h;
        }
        for (this.isZero() && (h = "0" + h);h.length % a2 !== 0; )
          h = "0" + h;
        return this.negative !== 0 && (h = "-" + h), h;
      }
      r2(false, "Base should be between 2 and 36");
    }, f.prototype.toNumber = function() {
      var i = this.words[0];
      return this.length === 2 ? i += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r2(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i : i;
    }, f.prototype.toJSON = function() {
      return this.toString(16);
    }, f.prototype.toBuffer = function(i, a2) {
      return r2(typeof p < "u"), this.toArrayLike(p, i, a2);
    }, f.prototype.toArray = function(i, a2) {
      return this.toArrayLike(Array, i, a2);
    }, f.prototype.toArrayLike = function(i, a2, h) {
      var s = this.byteLength(), u = h || Math.max(1, s);
      r2(s <= u, "byte array longer than desired length"), r2(u > 0, "Requested array length <= 0"), this.strip();
      var c = a2 === "le", b = new i(u), l, n, d = this.clone();
      if (c) {
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[n] = l;
        for (;n < u; n++)
          b[n] = 0;
      } else {
        for (n = 0;n < u - s; n++)
          b[n] = 0;
        for (n = 0;!d.isZero(); n++)
          l = d.andln(255), d.iushrn(8), b[u - n - 1] = l;
      }
      return b;
    }, Math.clz32 ? f.prototype._countBits = function(i) {
      return 32 - Math.clz32(i);
    } : f.prototype._countBits = function(i) {
      var a2 = i, h = 0;
      return a2 >= 4096 && (h += 13, a2 >>>= 13), a2 >= 64 && (h += 7, a2 >>>= 7), a2 >= 8 && (h += 4, a2 >>>= 4), a2 >= 2 && (h += 2, a2 >>>= 2), h + a2;
    }, f.prototype._zeroBits = function(i) {
      if (i === 0)
        return 26;
      var a2 = i, h = 0;
      return (a2 & 8191) === 0 && (h += 13, a2 >>>= 13), (a2 & 127) === 0 && (h += 7, a2 >>>= 7), (a2 & 15) === 0 && (h += 4, a2 >>>= 4), (a2 & 3) === 0 && (h += 2, a2 >>>= 2), (a2 & 1) === 0 && h++, h;
    }, f.prototype.bitLength = function() {
      var i = this.words[this.length - 1], a2 = this._countBits(i);
      return (this.length - 1) * 26 + a2;
    };
    function B(v) {
      for (var i = new Array(v.bitLength()), a2 = 0;a2 < i.length; a2++) {
        var h = a2 / 26 | 0, s = a2 % 26;
        i[a2] = (v.words[h] & 1 << s) >>> s;
      }
      return i;
    }
    f.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var i = 0, a2 = 0;a2 < this.length; a2++) {
        var h = this._zeroBits(this.words[a2]);
        if (i += h, h !== 26)
          break;
      }
      return i;
    }, f.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, f.prototype.toTwos = function(i) {
      return this.negative !== 0 ? this.abs().inotn(i).iaddn(1) : this.clone();
    }, f.prototype.fromTwos = function(i) {
      return this.testn(i - 1) ? this.notn(i).iaddn(1).ineg() : this.clone();
    }, f.prototype.isNeg = function() {
      return this.negative !== 0;
    }, f.prototype.neg = function() {
      return this.clone().ineg();
    }, f.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, f.prototype.iuor = function(i) {
      for (;this.length < i.length; )
        this.words[this.length++] = 0;
      for (var a2 = 0;a2 < i.length; a2++)
        this.words[a2] = this.words[a2] | i.words[a2];
      return this.strip();
    }, f.prototype.ior = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuor(i);
    }, f.prototype.or = function(i) {
      return this.length > i.length ? this.clone().ior(i) : i.clone().ior(this);
    }, f.prototype.uor = function(i) {
      return this.length > i.length ? this.clone().iuor(i) : i.clone().iuor(this);
    }, f.prototype.iuand = function(i) {
      var a2;
      this.length > i.length ? a2 = i : a2 = this;
      for (var h = 0;h < a2.length; h++)
        this.words[h] = this.words[h] & i.words[h];
      return this.length = a2.length, this.strip();
    }, f.prototype.iand = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuand(i);
    }, f.prototype.and = function(i) {
      return this.length > i.length ? this.clone().iand(i) : i.clone().iand(this);
    }, f.prototype.uand = function(i) {
      return this.length > i.length ? this.clone().iuand(i) : i.clone().iuand(this);
    }, f.prototype.iuxor = function(i) {
      var a2, h;
      this.length > i.length ? (a2 = this, h = i) : (a2 = i, h = this);
      for (var s = 0;s < h.length; s++)
        this.words[s] = a2.words[s] ^ h.words[s];
      if (this !== a2)
        for (;s < a2.length; s++)
          this.words[s] = a2.words[s];
      return this.length = a2.length, this.strip();
    }, f.prototype.ixor = function(i) {
      return r2((this.negative | i.negative) === 0), this.iuxor(i);
    }, f.prototype.xor = function(i) {
      return this.length > i.length ? this.clone().ixor(i) : i.clone().ixor(this);
    }, f.prototype.uxor = function(i) {
      return this.length > i.length ? this.clone().iuxor(i) : i.clone().iuxor(this);
    }, f.prototype.inotn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = Math.ceil(i / 26) | 0, h = i % 26;
      this._expand(a2), h > 0 && a2--;
      for (var s = 0;s < a2; s++)
        this.words[s] = ~this.words[s] & 67108863;
      return h > 0 && (this.words[s] = ~this.words[s] & 67108863 >> 26 - h), this.strip();
    }, f.prototype.notn = function(i) {
      return this.clone().inotn(i);
    }, f.prototype.setn = function(i, a2) {
      r2(typeof i == "number" && i >= 0);
      var h = i / 26 | 0, s = i % 26;
      return this._expand(h + 1), a2 ? this.words[h] = this.words[h] | 1 << s : this.words[h] = this.words[h] & ~(1 << s), this.strip();
    }, f.prototype.iadd = function(i) {
      var a2;
      if (this.negative !== 0 && i.negative === 0)
        return this.negative = 0, a2 = this.isub(i), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && i.negative !== 0)
        return i.negative = 0, a2 = this.isub(i), i.negative = 1, a2._normSign();
      var h, s;
      this.length > i.length ? (h = this, s = i) : (h = i, s = this);
      for (var u = 0, c = 0;c < s.length; c++)
        a2 = (h.words[c] | 0) + (s.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      for (;u !== 0 && c < h.length; c++)
        a2 = (h.words[c] | 0) + u, this.words[c] = a2 & 67108863, u = a2 >>> 26;
      if (this.length = h.length, u !== 0)
        this.words[this.length] = u, this.length++;
      else if (h !== this)
        for (;c < h.length; c++)
          this.words[c] = h.words[c];
      return this;
    }, f.prototype.add = function(i) {
      var a2;
      return i.negative !== 0 && this.negative === 0 ? (i.negative = 0, a2 = this.sub(i), i.negative ^= 1, a2) : i.negative === 0 && this.negative !== 0 ? (this.negative = 0, a2 = i.sub(this), this.negative = 1, a2) : this.length > i.length ? this.clone().iadd(i) : i.clone().iadd(this);
    }, f.prototype.isub = function(i) {
      if (i.negative !== 0) {
        i.negative = 0;
        var a2 = this.iadd(i);
        return i.negative = 1, a2._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(i), this.negative = 1, this._normSign();
      var h = this.cmp(i);
      if (h === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var s, u;
      h > 0 ? (s = this, u = i) : (s = i, u = this);
      for (var c = 0, b = 0;b < u.length; b++)
        a2 = (s.words[b] | 0) - (u.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      for (;c !== 0 && b < s.length; b++)
        a2 = (s.words[b] | 0) + c, c = a2 >> 26, this.words[b] = a2 & 67108863;
      if (c === 0 && b < s.length && s !== this)
        for (;b < s.length; b++)
          this.words[b] = s.words[b];
      return this.length = Math.max(this.length, b), s !== this && (this.negative = 1), this.strip();
    }, f.prototype.sub = function(i) {
      return this.clone().isub(i);
    };
    function q(v, i, a2) {
      a2.negative = i.negative ^ v.negative;
      var h = v.length + i.length | 0;
      a2.length = h, h = h - 1 | 0;
      var s = v.words[0] | 0, u = i.words[0] | 0, c = s * u, b = c & 67108863, l = c / 67108864 | 0;
      a2.words[0] = b;
      for (var n = 1;n < h; n++) {
        for (var d = l >>> 26, w = l & 67108863, g = Math.min(n, i.length - 1), _ = Math.max(0, n - v.length + 1);_ <= g; _++) {
          var A = n - _ | 0;
          s = v.words[A] | 0, u = i.words[_] | 0, c = s * u + w, d += c / 67108864 | 0, w = c & 67108863;
        }
        a2.words[n] = w | 0, l = d | 0;
      }
      return l !== 0 ? a2.words[n] = l | 0 : a2.length--, a2.strip();
    }
    var L = function(i, a2, h) {
      var s = i.words, u = a2.words, c = h.words, b = 0, l, n, d, w = s[0] | 0, g = w & 8191, _ = w >>> 13, A = s[1] | 0, R = A & 8191, I = A >>> 13, Me = s[2] | 0, k = Me & 8191, D = Me >>> 13, nt = s[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s[8] | 0, V = yt & 8191, $ = yt >>> 13, wt = s[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u[2] | 0, te = xt & 8191, re = xt >>> 13, St = u[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u[9] | 0, ve = It & 8191, be = It >>> 13;
      h.negative = i.negative ^ a2.negative, h.length = 19, l = Math.imul(g, X), n = Math.imul(g, J), n = n + Math.imul(_, X) | 0, d = Math.imul(_, J);
      var ft = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n = Math.imul(R, J), n = n + Math.imul(I, X) | 0, d = Math.imul(I, J), l = l + Math.imul(g, Q) | 0, n = n + Math.imul(g, ee) | 0, n = n + Math.imul(_, Q) | 0, d = d + Math.imul(_, ee) | 0;
      var Be = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k, X), n = Math.imul(k, J), n = n + Math.imul(D, X) | 0, d = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n = n + Math.imul(R, ee) | 0, n = n + Math.imul(I, Q) | 0, d = d + Math.imul(I, ee) | 0, l = l + Math.imul(g, te) | 0, n = n + Math.imul(g, re) | 0, n = n + Math.imul(_, te) | 0, d = d + Math.imul(_, re) | 0;
      var qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n = Math.imul(C, J), n = n + Math.imul(O, X) | 0, d = Math.imul(O, J), l = l + Math.imul(k, Q) | 0, n = n + Math.imul(k, ee) | 0, n = n + Math.imul(D, Q) | 0, d = d + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n = n + Math.imul(R, re) | 0, n = n + Math.imul(I, te) | 0, d = d + Math.imul(I, re) | 0, l = l + Math.imul(g, ie) | 0, n = n + Math.imul(g, ne) | 0, n = n + Math.imul(_, ie) | 0, d = d + Math.imul(_, ne) | 0;
      var ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n = Math.imul(F, J), n = n + Math.imul(U, X) | 0, d = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n = n + Math.imul(C, ee) | 0, n = n + Math.imul(O, Q) | 0, d = d + Math.imul(O, ee) | 0, l = l + Math.imul(k, te) | 0, n = n + Math.imul(k, re) | 0, n = n + Math.imul(D, te) | 0, d = d + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n = n + Math.imul(R, ne) | 0, n = n + Math.imul(I, ie) | 0, d = d + Math.imul(I, ne) | 0, l = l + Math.imul(g, fe) | 0, n = n + Math.imul(g, ae) | 0, n = n + Math.imul(_, fe) | 0, d = d + Math.imul(_, ae) | 0;
      var He = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n = Math.imul(z, J), n = n + Math.imul(H, X) | 0, d = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n = n + Math.imul(F, ee) | 0, n = n + Math.imul(U, Q) | 0, d = d + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n = n + Math.imul(C, re) | 0, n = n + Math.imul(O, te) | 0, d = d + Math.imul(O, re) | 0, l = l + Math.imul(k, ie) | 0, n = n + Math.imul(k, ne) | 0, n = n + Math.imul(D, ie) | 0, d = d + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n = n + Math.imul(R, ae) | 0, n = n + Math.imul(I, fe) | 0, d = d + Math.imul(I, ae) | 0, l = l + Math.imul(g, oe) | 0, n = n + Math.imul(g, se) | 0, n = n + Math.imul(_, oe) | 0, d = d + Math.imul(_, se) | 0;
      var We = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n = Math.imul(W, J), n = n + Math.imul(K, X) | 0, d = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n = n + Math.imul(z, ee) | 0, n = n + Math.imul(H, Q) | 0, d = d + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n = n + Math.imul(F, re) | 0, n = n + Math.imul(U, te) | 0, d = d + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n = n + Math.imul(C, ne) | 0, n = n + Math.imul(O, ie) | 0, d = d + Math.imul(O, ne) | 0, l = l + Math.imul(k, fe) | 0, n = n + Math.imul(k, ae) | 0, n = n + Math.imul(D, fe) | 0, d = d + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n = n + Math.imul(R, se) | 0, n = n + Math.imul(I, oe) | 0, d = d + Math.imul(I, se) | 0, l = l + Math.imul(g, he) | 0, n = n + Math.imul(g, ue) | 0, n = n + Math.imul(_, he) | 0, d = d + Math.imul(_, ue) | 0;
      var Ke = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n = Math.imul(j, J), n = n + Math.imul(Z, X) | 0, d = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n = n + Math.imul(W, ee) | 0, n = n + Math.imul(K, Q) | 0, d = d + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n = n + Math.imul(z, re) | 0, n = n + Math.imul(H, te) | 0, d = d + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n = n + Math.imul(F, ne) | 0, n = n + Math.imul(U, ie) | 0, d = d + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n = n + Math.imul(C, ae) | 0, n = n + Math.imul(O, fe) | 0, d = d + Math.imul(O, ae) | 0, l = l + Math.imul(k, oe) | 0, n = n + Math.imul(k, se) | 0, n = n + Math.imul(D, oe) | 0, d = d + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n = n + Math.imul(R, ue) | 0, n = n + Math.imul(I, he) | 0, d = d + Math.imul(I, ue) | 0, l = l + Math.imul(g, le) | 0, n = n + Math.imul(g, de) | 0, n = n + Math.imul(_, le) | 0, d = d + Math.imul(_, de) | 0;
      var je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n = Math.imul(V, J), n = n + Math.imul($, X) | 0, d = Math.imul($, J), l = l + Math.imul(j, Q) | 0, n = n + Math.imul(j, ee) | 0, n = n + Math.imul(Z, Q) | 0, d = d + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n = n + Math.imul(W, re) | 0, n = n + Math.imul(K, te) | 0, d = d + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n = n + Math.imul(z, ne) | 0, n = n + Math.imul(H, ie) | 0, d = d + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n = n + Math.imul(F, ae) | 0, n = n + Math.imul(U, fe) | 0, d = d + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n = n + Math.imul(C, se) | 0, n = n + Math.imul(O, oe) | 0, d = d + Math.imul(O, se) | 0, l = l + Math.imul(k, he) | 0, n = n + Math.imul(k, ue) | 0, n = n + Math.imul(D, he) | 0, d = d + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n = n + Math.imul(R, de) | 0, n = n + Math.imul(I, le) | 0, d = d + Math.imul(I, de) | 0, l = l + Math.imul(g, ce) | 0, n = n + Math.imul(g, pe) | 0, n = n + Math.imul(_, ce) | 0, d = d + Math.imul(_, pe) | 0;
      var Ze = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n = Math.imul(G, J), n = n + Math.imul(Y, X) | 0, d = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n = n + Math.imul(V, ee) | 0, n = n + Math.imul($, Q) | 0, d = d + Math.imul($, ee) | 0, l = l + Math.imul(j, te) | 0, n = n + Math.imul(j, re) | 0, n = n + Math.imul(Z, te) | 0, d = d + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n = n + Math.imul(W, ne) | 0, n = n + Math.imul(K, ie) | 0, d = d + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n = n + Math.imul(z, ae) | 0, n = n + Math.imul(H, fe) | 0, d = d + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n = n + Math.imul(F, se) | 0, n = n + Math.imul(U, oe) | 0, d = d + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n = n + Math.imul(C, ue) | 0, n = n + Math.imul(O, he) | 0, d = d + Math.imul(O, ue) | 0, l = l + Math.imul(k, le) | 0, n = n + Math.imul(k, de) | 0, n = n + Math.imul(D, le) | 0, d = d + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n = n + Math.imul(R, pe) | 0, n = n + Math.imul(I, ce) | 0, d = d + Math.imul(I, pe) | 0, l = l + Math.imul(g, ve) | 0, n = n + Math.imul(g, be) | 0, n = n + Math.imul(_, ve) | 0, d = d + Math.imul(_, be) | 0;
      var Ve = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n = Math.imul(G, ee), n = n + Math.imul(Y, Q) | 0, d = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n = n + Math.imul(V, re) | 0, n = n + Math.imul($, te) | 0, d = d + Math.imul($, re) | 0, l = l + Math.imul(j, ie) | 0, n = n + Math.imul(j, ne) | 0, n = n + Math.imul(Z, ie) | 0, d = d + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n = n + Math.imul(W, ae) | 0, n = n + Math.imul(K, fe) | 0, d = d + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n = n + Math.imul(z, se) | 0, n = n + Math.imul(H, oe) | 0, d = d + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n = n + Math.imul(F, ue) | 0, n = n + Math.imul(U, he) | 0, d = d + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n = n + Math.imul(C, de) | 0, n = n + Math.imul(O, le) | 0, d = d + Math.imul(O, de) | 0, l = l + Math.imul(k, ce) | 0, n = n + Math.imul(k, pe) | 0, n = n + Math.imul(D, ce) | 0, d = d + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n = n + Math.imul(R, be) | 0, n = n + Math.imul(I, ve) | 0, d = d + Math.imul(I, be) | 0;
      var $e = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n = Math.imul(G, re), n = n + Math.imul(Y, te) | 0, d = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n = n + Math.imul(V, ne) | 0, n = n + Math.imul($, ie) | 0, d = d + Math.imul($, ne) | 0, l = l + Math.imul(j, fe) | 0, n = n + Math.imul(j, ae) | 0, n = n + Math.imul(Z, fe) | 0, d = d + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n = n + Math.imul(W, se) | 0, n = n + Math.imul(K, oe) | 0, d = d + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n = n + Math.imul(z, ue) | 0, n = n + Math.imul(H, he) | 0, d = d + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n = n + Math.imul(F, de) | 0, n = n + Math.imul(U, le) | 0, d = d + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n = n + Math.imul(C, pe) | 0, n = n + Math.imul(O, ce) | 0, d = d + Math.imul(O, pe) | 0, l = l + Math.imul(k, ve) | 0, n = n + Math.imul(k, be) | 0, n = n + Math.imul(D, ve) | 0, d = d + Math.imul(D, be) | 0;
      var Ge = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n = Math.imul(G, ne), n = n + Math.imul(Y, ie) | 0, d = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n = n + Math.imul(V, ae) | 0, n = n + Math.imul($, fe) | 0, d = d + Math.imul($, ae) | 0, l = l + Math.imul(j, oe) | 0, n = n + Math.imul(j, se) | 0, n = n + Math.imul(Z, oe) | 0, d = d + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n = n + Math.imul(W, ue) | 0, n = n + Math.imul(K, he) | 0, d = d + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n = n + Math.imul(z, de) | 0, n = n + Math.imul(H, le) | 0, d = d + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n = n + Math.imul(F, pe) | 0, n = n + Math.imul(U, ce) | 0, d = d + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n = n + Math.imul(C, be) | 0, n = n + Math.imul(O, ve) | 0, d = d + Math.imul(O, be) | 0;
      var Ye = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n = Math.imul(G, ae), n = n + Math.imul(Y, fe) | 0, d = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n = n + Math.imul(V, se) | 0, n = n + Math.imul($, oe) | 0, d = d + Math.imul($, se) | 0, l = l + Math.imul(j, he) | 0, n = n + Math.imul(j, ue) | 0, n = n + Math.imul(Z, he) | 0, d = d + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n = n + Math.imul(W, de) | 0, n = n + Math.imul(K, le) | 0, d = d + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n = n + Math.imul(z, pe) | 0, n = n + Math.imul(H, ce) | 0, d = d + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n = n + Math.imul(F, be) | 0, n = n + Math.imul(U, ve) | 0, d = d + Math.imul(U, be) | 0;
      var Xe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n = Math.imul(G, se), n = n + Math.imul(Y, oe) | 0, d = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n = n + Math.imul(V, ue) | 0, n = n + Math.imul($, he) | 0, d = d + Math.imul($, ue) | 0, l = l + Math.imul(j, le) | 0, n = n + Math.imul(j, de) | 0, n = n + Math.imul(Z, le) | 0, d = d + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n = n + Math.imul(W, pe) | 0, n = n + Math.imul(K, ce) | 0, d = d + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n = n + Math.imul(z, be) | 0, n = n + Math.imul(H, ve) | 0, d = d + Math.imul(H, be) | 0;
      var Je = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n = Math.imul(G, ue), n = n + Math.imul(Y, he) | 0, d = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n = n + Math.imul(V, de) | 0, n = n + Math.imul($, le) | 0, d = d + Math.imul($, de) | 0, l = l + Math.imul(j, ce) | 0, n = n + Math.imul(j, pe) | 0, n = n + Math.imul(Z, ce) | 0, d = d + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n = n + Math.imul(W, be) | 0, n = n + Math.imul(K, ve) | 0, d = d + Math.imul(K, be) | 0;
      var Qe = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n = Math.imul(G, de), n = n + Math.imul(Y, le) | 0, d = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n = n + Math.imul(V, pe) | 0, n = n + Math.imul($, ce) | 0, d = d + Math.imul($, pe) | 0, l = l + Math.imul(j, ve) | 0, n = n + Math.imul(j, be) | 0, n = n + Math.imul(Z, ve) | 0, d = d + Math.imul(Z, be) | 0;
      var et = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n = Math.imul(G, pe), n = n + Math.imul(Y, ce) | 0, d = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n = n + Math.imul(V, be) | 0, n = n + Math.imul($, ve) | 0, d = d + Math.imul($, be) | 0;
      var tt = (b + l | 0) + ((n & 8191) << 13) | 0;
      b = (d + (n >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n = Math.imul(G, be), n = n + Math.imul(Y, ve) | 0, d = Math.imul(Y, be);
      var rt = (b + l | 0) + ((n & 8191) << 13) | 0;
      return b = (d + (n >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b !== 0 && (c[19] = b, h.length++), h;
    };
    Math.imul || (L = q);
    function ge(v, i, a2) {
      a2.negative = i.negative ^ v.negative, a2.length = v.length + i.length;
      for (var h = 0, s = 0, u = 0;u < a2.length - 1; u++) {
        var c = s;
        s = 0;
        for (var b = h & 67108863, l = Math.min(u, i.length - 1), n = Math.max(0, u - v.length + 1);n <= l; n++) {
          var d = u - n, w = v.words[d] | 0, g = i.words[n] | 0, _ = w * g, A = _ & 67108863;
          c = c + (_ / 67108864 | 0) | 0, A = A + b | 0, b = A & 67108863, c = c + (A >>> 26) | 0, s += c >>> 26, c &= 67108863;
        }
        a2.words[u] = b, h = c, c = s;
      }
      return h !== 0 ? a2.words[u] = h : a2.length--, a2.strip();
    }
    function _e(v, i, a2) {
      var h = new N;
      return h.mulp(v, i, a2);
    }
    f.prototype.mulTo = function(i, a2) {
      var h, s = this.length + i.length;
      return this.length === 10 && i.length === 10 ? h = L(this, i, a2) : s < 63 ? h = q(this, i, a2) : s < 1024 ? h = ge(this, i, a2) : h = _e(this, i, a2), h;
    };
    function N(v, i) {
      this.x = v, this.y = i;
    }
    N.prototype.makeRBT = function(i) {
      for (var a2 = new Array(i), h = f.prototype._countBits(i) - 1, s = 0;s < i; s++)
        a2[s] = this.revBin(s, h, i);
      return a2;
    }, N.prototype.revBin = function(i, a2, h) {
      if (i === 0 || i === h - 1)
        return i;
      for (var s = 0, u = 0;u < a2; u++)
        s |= (i & 1) << a2 - u - 1, i >>= 1;
      return s;
    }, N.prototype.permute = function(i, a2, h, s, u, c) {
      for (var b = 0;b < c; b++)
        s[b] = a2[i[b]], u[b] = h[i[b]];
    }, N.prototype.transform = function(i, a2, h, s, u, c) {
      this.permute(c, i, a2, h, s, u);
      for (var b = 1;b < u; b <<= 1)
        for (var l = b << 1, n = Math.cos(2 * Math.PI / l), d = Math.sin(2 * Math.PI / l), w = 0;w < u; w += l)
          for (var g = n, _ = d, A = 0;A < b; A++) {
            var R = h[w + A], I = s[w + A], Me = h[w + A + b], k = s[w + A + b], D = g * Me - _ * k;
            k = g * k + _ * Me, Me = D, h[w + A] = R + Me, s[w + A] = I + k, h[w + A + b] = R - Me, s[w + A + b] = I - k, A !== l && (D = n * g - d * _, _ = n * _ + d * g, g = D);
          }
    }, N.prototype.guessLen13b = function(i, a2) {
      var h = Math.max(a2, i) | 1, s = h & 1, u = 0;
      for (h = h / 2 | 0;h; h = h >>> 1)
        u++;
      return 1 << u + 1 + s;
    }, N.prototype.conjugate = function(i, a2, h) {
      if (!(h <= 1))
        for (var s = 0;s < h / 2; s++) {
          var u = i[s];
          i[s] = i[h - s - 1], i[h - s - 1] = u, u = a2[s], a2[s] = -a2[h - s - 1], a2[h - s - 1] = -u;
        }
    }, N.prototype.normalize13b = function(i, a2) {
      for (var h = 0, s = 0;s < a2 / 2; s++) {
        var u = Math.round(i[2 * s + 1] / a2) * 8192 + Math.round(i[2 * s] / a2) + h;
        i[s] = u & 67108863, u < 67108864 ? h = 0 : h = u / 67108864 | 0;
      }
      return i;
    }, N.prototype.convert13b = function(i, a2, h, s) {
      for (var u = 0, c = 0;c < a2; c++)
        u = u + (i[c] | 0), h[2 * c] = u & 8191, u = u >>> 13, h[2 * c + 1] = u & 8191, u = u >>> 13;
      for (c = 2 * a2;c < s; ++c)
        h[c] = 0;
      r2(u === 0), r2((u & -8192) === 0);
    }, N.prototype.stub = function(i) {
      for (var a2 = new Array(i), h = 0;h < i; h++)
        a2[h] = 0;
      return a2;
    }, N.prototype.mulp = function(i, a2, h) {
      var s = 2 * this.guessLen13b(i.length, a2.length), u = this.makeRBT(s), c = this.stub(s), b = new Array(s), l = new Array(s), n = new Array(s), d = new Array(s), w = new Array(s), g = new Array(s), _ = h.words;
      _.length = s, this.convert13b(i.words, i.length, b, s), this.convert13b(a2.words, a2.length, d, s), this.transform(b, c, l, n, s, u), this.transform(d, c, w, g, s, u);
      for (var A = 0;A < s; A++) {
        var R = l[A] * w[A] - n[A] * g[A];
        n[A] = l[A] * g[A] + n[A] * w[A], l[A] = R;
      }
      return this.conjugate(l, n, s), this.transform(l, n, _, c, s, u), this.conjugate(_, c, s), this.normalize13b(_, s), h.negative = i.negative ^ a2.negative, h.length = i.length + a2.length, h.strip();
    }, f.prototype.mul = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), this.mulTo(i, a2);
    }, f.prototype.mulf = function(i) {
      var a2 = new f(null);
      return a2.words = new Array(this.length + i.length), _e(this, i, a2);
    }, f.prototype.imul = function(i) {
      return this.clone().mulTo(i, this);
    }, f.prototype.imuln = function(i) {
      r2(typeof i == "number"), r2(i < 67108864);
      for (var a2 = 0, h = 0;h < this.length; h++) {
        var s = (this.words[h] | 0) * i, u = (s & 67108863) + (a2 & 67108863);
        a2 >>= 26, a2 += s / 67108864 | 0, a2 += u >>> 26, this.words[h] = u & 67108863;
      }
      return a2 !== 0 && (this.words[h] = a2, this.length++), this;
    }, f.prototype.muln = function(i) {
      return this.clone().imuln(i);
    }, f.prototype.sqr = function() {
      return this.mul(this);
    }, f.prototype.isqr = function() {
      return this.imul(this.clone());
    }, f.prototype.pow = function(i) {
      var a2 = B(i);
      if (a2.length === 0)
        return new f(1);
      for (var h = this, s = 0;s < a2.length && a2[s] === 0; s++, h = h.sqr())
        ;
      if (++s < a2.length)
        for (var u = h.sqr();s < a2.length; s++, u = u.sqr())
          a2[s] !== 0 && (h = h.mul(u));
      return h;
    }, f.prototype.iushln = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 67108863 >>> 26 - a2 << 26 - a2, u;
      if (a2 !== 0) {
        var c = 0;
        for (u = 0;u < this.length; u++) {
          var b = this.words[u] & s, l = (this.words[u] | 0) - b << a2;
          this.words[u] = l | c, c = b >>> 26 - a2;
        }
        c && (this.words[u] = c, this.length++);
      }
      if (h !== 0) {
        for (u = this.length - 1;u >= 0; u--)
          this.words[u + h] = this.words[u];
        for (u = 0;u < h; u++)
          this.words[u] = 0;
        this.length += h;
      }
      return this.strip();
    }, f.prototype.ishln = function(i) {
      return r2(this.negative === 0), this.iushln(i);
    }, f.prototype.iushrn = function(i, a2, h) {
      r2(typeof i == "number" && i >= 0);
      var s;
      a2 ? s = (a2 - a2 % 26) / 26 : s = 0;
      var u = i % 26, c = Math.min((i - u) / 26, this.length), b = 67108863 ^ 67108863 >>> u << u, l = h;
      if (s -= c, s = Math.max(0, s), l) {
        for (var n = 0;n < c; n++)
          l.words[n] = this.words[n];
        l.length = c;
      }
      if (c !== 0)
        if (this.length > c)
          for (this.length -= c, n = 0;n < this.length; n++)
            this.words[n] = this.words[n + c];
        else
          this.words[0] = 0, this.length = 1;
      var d = 0;
      for (n = this.length - 1;n >= 0 && (d !== 0 || n >= s); n--) {
        var w = this.words[n] | 0;
        this.words[n] = d << 26 - u | w >>> u, d = w & b;
      }
      return l && d !== 0 && (l.words[l.length++] = d), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
    }, f.prototype.ishrn = function(i, a2, h) {
      return r2(this.negative === 0), this.iushrn(i, a2, h);
    }, f.prototype.shln = function(i) {
      return this.clone().ishln(i);
    }, f.prototype.ushln = function(i) {
      return this.clone().iushln(i);
    }, f.prototype.shrn = function(i) {
      return this.clone().ishrn(i);
    }, f.prototype.ushrn = function(i) {
      return this.clone().iushrn(i);
    }, f.prototype.testn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return false;
      var u = this.words[h];
      return !!(u & s);
    }, f.prototype.imaskn = function(i) {
      r2(typeof i == "number" && i >= 0);
      var a2 = i % 26, h = (i - a2) / 26;
      if (r2(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h)
        return this;
      if (a2 !== 0 && h++, this.length = Math.min(h, this.length), a2 !== 0) {
        var s = 67108863 ^ 67108863 >>> a2 << a2;
        this.words[this.length - 1] &= s;
      }
      return this.strip();
    }, f.prototype.maskn = function(i) {
      return this.clone().imaskn(i);
    }, f.prototype.iaddn = function(i) {
      return r2(typeof i == "number"), r2(i < 67108864), i < 0 ? this.isubn(-i) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i ? (this.words[0] = i - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i), this.negative = 1, this) : this._iaddn(i);
    }, f.prototype._iaddn = function(i) {
      this.words[0] += i;
      for (var a2 = 0;a2 < this.length && this.words[a2] >= 67108864; a2++)
        this.words[a2] -= 67108864, a2 === this.length - 1 ? this.words[a2 + 1] = 1 : this.words[a2 + 1]++;
      return this.length = Math.max(this.length, a2 + 1), this;
    }, f.prototype.isubn = function(i) {
      if (r2(typeof i == "number"), r2(i < 67108864), i < 0)
        return this.iaddn(-i);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(i), this.negative = 1, this;
      if (this.words[0] -= i, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var a2 = 0;a2 < this.length && this.words[a2] < 0; a2++)
          this.words[a2] += 67108864, this.words[a2 + 1] -= 1;
      return this.strip();
    }, f.prototype.addn = function(i) {
      return this.clone().iaddn(i);
    }, f.prototype.subn = function(i) {
      return this.clone().isubn(i);
    }, f.prototype.iabs = function() {
      return this.negative = 0, this;
    }, f.prototype.abs = function() {
      return this.clone().iabs();
    }, f.prototype._ishlnsubmul = function(i, a2, h) {
      var s = i.length + h, u;
      this._expand(s);
      var c, b = 0;
      for (u = 0;u < i.length; u++) {
        c = (this.words[u + h] | 0) + b;
        var l = (i.words[u] | 0) * a2;
        c -= l & 67108863, b = (c >> 26) - (l / 67108864 | 0), this.words[u + h] = c & 67108863;
      }
      for (;u < this.length - h; u++)
        c = (this.words[u + h] | 0) + b, b = c >> 26, this.words[u + h] = c & 67108863;
      if (b === 0)
        return this.strip();
      for (r2(b === -1), b = 0, u = 0;u < this.length; u++)
        c = -(this.words[u] | 0) + b, b = c >> 26, this.words[u] = c & 67108863;
      return this.negative = 1, this.strip();
    }, f.prototype._wordDiv = function(i, a2) {
      var h = this.length - i.length, s = this.clone(), u = i, c = u.words[u.length - 1] | 0, b = this._countBits(c);
      h = 26 - b, h !== 0 && (u = u.ushln(h), s.iushln(h), c = u.words[u.length - 1] | 0);
      var l = s.length - u.length, n;
      if (a2 !== "mod") {
        n = new f(null), n.length = l + 1, n.words = new Array(n.length);
        for (var d = 0;d < n.length; d++)
          n.words[d] = 0;
      }
      var w = s.clone()._ishlnsubmul(u, 1, l);
      w.negative === 0 && (s = w, n && (n.words[l] = 1));
      for (var g = l - 1;g >= 0; g--) {
        var _ = (s.words[u.length + g] | 0) * 67108864 + (s.words[u.length + g - 1] | 0);
        for (_ = Math.min(_ / c | 0, 67108863), s._ishlnsubmul(u, _, g);s.negative !== 0; )
          _--, s.negative = 0, s._ishlnsubmul(u, 1, g), s.isZero() || (s.negative ^= 1);
        n && (n.words[g] = _);
      }
      return n && n.strip(), s.strip(), a2 !== "div" && h !== 0 && s.iushrn(h), { div: n || null, mod: s };
    }, f.prototype.divmod = function(i, a2, h) {
      if (r2(!i.isZero()), this.isZero())
        return { div: new f(0), mod: new f(0) };
      var s, u, c;
      return this.negative !== 0 && i.negative === 0 ? (c = this.neg().divmod(i, a2), a2 !== "mod" && (s = c.div.neg()), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.iadd(i)), { div: s, mod: u }) : this.negative === 0 && i.negative !== 0 ? (c = this.divmod(i.neg(), a2), a2 !== "mod" && (s = c.div.neg()), { div: s, mod: c.mod }) : (this.negative & i.negative) !== 0 ? (c = this.neg().divmod(i.neg(), a2), a2 !== "div" && (u = c.mod.neg(), h && u.negative !== 0 && u.isub(i)), { div: c.div, mod: u }) : i.length > this.length || this.cmp(i) < 0 ? { div: new f(0), mod: this } : i.length === 1 ? a2 === "div" ? { div: this.divn(i.words[0]), mod: null } : a2 === "mod" ? { div: null, mod: new f(this.modn(i.words[0])) } : { div: this.divn(i.words[0]), mod: new f(this.modn(i.words[0])) } : this._wordDiv(i, a2);
    }, f.prototype.div = function(i) {
      return this.divmod(i, "div", false).div;
    }, f.prototype.mod = function(i) {
      return this.divmod(i, "mod", false).mod;
    }, f.prototype.umod = function(i) {
      return this.divmod(i, "mod", true).mod;
    }, f.prototype.divRound = function(i) {
      var a2 = this.divmod(i);
      if (a2.mod.isZero())
        return a2.div;
      var h = a2.div.negative !== 0 ? a2.mod.isub(i) : a2.mod, s = i.ushrn(1), u = i.andln(1), c = h.cmp(s);
      return c < 0 || u === 1 && c === 0 ? a2.div : a2.div.negative !== 0 ? a2.div.isubn(1) : a2.div.iaddn(1);
    }, f.prototype.modn = function(i) {
      r2(i <= 67108863);
      for (var a2 = (1 << 26) % i, h = 0, s = this.length - 1;s >= 0; s--)
        h = (a2 * h + (this.words[s] | 0)) % i;
      return h;
    }, f.prototype.idivn = function(i) {
      r2(i <= 67108863);
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = (this.words[h] | 0) + a2 * 67108864;
        this.words[h] = s / i | 0, a2 = s % i;
      }
      return this.strip();
    }, f.prototype.divn = function(i) {
      return this.clone().idivn(i);
    }, f.prototype.egcd = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = new f(0), b = new f(1), l = 0;a2.isEven() && h.isEven(); )
        a2.iushrn(1), h.iushrn(1), ++l;
      for (var n = h.clone(), d = a2.clone();!a2.isZero(); ) {
        for (var w = 0, g = 1;(a2.words[0] & g) === 0 && w < 26; ++w, g <<= 1)
          ;
        if (w > 0)
          for (a2.iushrn(w);w-- > 0; )
            (s.isOdd() || u.isOdd()) && (s.iadd(n), u.isub(d)), s.iushrn(1), u.iushrn(1);
        for (var _ = 0, A = 1;(h.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
          ;
        if (_ > 0)
          for (h.iushrn(_);_-- > 0; )
            (c.isOdd() || b.isOdd()) && (c.iadd(n), b.isub(d)), c.iushrn(1), b.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(c), u.isub(b)) : (h.isub(a2), c.isub(s), b.isub(u));
      }
      return { a: c, b, gcd: h.iushln(l) };
    }, f.prototype._invmp = function(i) {
      r2(i.negative === 0), r2(!i.isZero());
      var a2 = this, h = i.clone();
      a2.negative !== 0 ? a2 = a2.umod(i) : a2 = a2.clone();
      for (var s = new f(1), u = new f(0), c = h.clone();a2.cmpn(1) > 0 && h.cmpn(1) > 0; ) {
        for (var b = 0, l = 1;(a2.words[0] & l) === 0 && b < 26; ++b, l <<= 1)
          ;
        if (b > 0)
          for (a2.iushrn(b);b-- > 0; )
            s.isOdd() && s.iadd(c), s.iushrn(1);
        for (var n = 0, d = 1;(h.words[0] & d) === 0 && n < 26; ++n, d <<= 1)
          ;
        if (n > 0)
          for (h.iushrn(n);n-- > 0; )
            u.isOdd() && u.iadd(c), u.iushrn(1);
        a2.cmp(h) >= 0 ? (a2.isub(h), s.isub(u)) : (h.isub(a2), u.isub(s));
      }
      var w;
      return a2.cmpn(1) === 0 ? w = s : w = u, w.cmpn(0) < 0 && w.iadd(i), w;
    }, f.prototype.gcd = function(i) {
      if (this.isZero())
        return i.abs();
      if (i.isZero())
        return this.abs();
      var a2 = this.clone(), h = i.clone();
      a2.negative = 0, h.negative = 0;
      for (var s = 0;a2.isEven() && h.isEven(); s++)
        a2.iushrn(1), h.iushrn(1);
      do {
        for (;a2.isEven(); )
          a2.iushrn(1);
        for (;h.isEven(); )
          h.iushrn(1);
        var u = a2.cmp(h);
        if (u < 0) {
          var c = a2;
          a2 = h, h = c;
        } else if (u === 0 || h.cmpn(1) === 0)
          break;
        a2.isub(h);
      } while (true);
      return h.iushln(s);
    }, f.prototype.invm = function(i) {
      return this.egcd(i).a.umod(i);
    }, f.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, f.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, f.prototype.andln = function(i) {
      return this.words[0] & i;
    }, f.prototype.bincn = function(i) {
      r2(typeof i == "number");
      var a2 = i % 26, h = (i - a2) / 26, s = 1 << a2;
      if (this.length <= h)
        return this._expand(h + 1), this.words[h] |= s, this;
      for (var u = s, c = h;u !== 0 && c < this.length; c++) {
        var b = this.words[c] | 0;
        b += u, u = b >>> 26, b &= 67108863, this.words[c] = b;
      }
      return u !== 0 && (this.words[c] = u, this.length++), this;
    }, f.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, f.prototype.cmpn = function(i) {
      var a2 = i < 0;
      if (this.negative !== 0 && !a2)
        return -1;
      if (this.negative === 0 && a2)
        return 1;
      this.strip();
      var h;
      if (this.length > 1)
        h = 1;
      else {
        a2 && (i = -i), r2(i <= 67108863, "Number is too big");
        var s = this.words[0] | 0;
        h = s === i ? 0 : s < i ? -1 : 1;
      }
      return this.negative !== 0 ? -h | 0 : h;
    }, f.prototype.cmp = function(i) {
      if (this.negative !== 0 && i.negative === 0)
        return -1;
      if (this.negative === 0 && i.negative !== 0)
        return 1;
      var a2 = this.ucmp(i);
      return this.negative !== 0 ? -a2 | 0 : a2;
    }, f.prototype.ucmp = function(i) {
      if (this.length > i.length)
        return 1;
      if (this.length < i.length)
        return -1;
      for (var a2 = 0, h = this.length - 1;h >= 0; h--) {
        var s = this.words[h] | 0, u = i.words[h] | 0;
        if (s !== u) {
          s < u ? a2 = -1 : s > u && (a2 = 1);
          break;
        }
      }
      return a2;
    }, f.prototype.gtn = function(i) {
      return this.cmpn(i) === 1;
    }, f.prototype.gt = function(i) {
      return this.cmp(i) === 1;
    }, f.prototype.gten = function(i) {
      return this.cmpn(i) >= 0;
    }, f.prototype.gte = function(i) {
      return this.cmp(i) >= 0;
    }, f.prototype.ltn = function(i) {
      return this.cmpn(i) === -1;
    }, f.prototype.lt = function(i) {
      return this.cmp(i) === -1;
    }, f.prototype.lten = function(i) {
      return this.cmpn(i) <= 0;
    }, f.prototype.lte = function(i) {
      return this.cmp(i) <= 0;
    }, f.prototype.eqn = function(i) {
      return this.cmpn(i) === 0;
    }, f.prototype.eq = function(i) {
      return this.cmp(i) === 0;
    }, f.red = function(i) {
      return new P(i);
    }, f.prototype.toRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), r2(this.negative === 0, "red works only with positives"), i.convertTo(this)._forceRed(i);
    }, f.prototype.fromRed = function() {
      return r2(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, f.prototype._forceRed = function(i) {
      return this.red = i, this;
    }, f.prototype.forceRed = function(i) {
      return r2(!this.red, "Already a number in reduction context"), this._forceRed(i);
    }, f.prototype.redAdd = function(i) {
      return r2(this.red, "redAdd works only with red numbers"), this.red.add(this, i);
    }, f.prototype.redIAdd = function(i) {
      return r2(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i);
    }, f.prototype.redSub = function(i) {
      return r2(this.red, "redSub works only with red numbers"), this.red.sub(this, i);
    }, f.prototype.redISub = function(i) {
      return r2(this.red, "redISub works only with red numbers"), this.red.isub(this, i);
    }, f.prototype.redShl = function(i) {
      return r2(this.red, "redShl works only with red numbers"), this.red.shl(this, i);
    }, f.prototype.redMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.mul(this, i);
    }, f.prototype.redIMul = function(i) {
      return r2(this.red, "redMul works only with red numbers"), this.red._verify2(this, i), this.red.imul(this, i);
    }, f.prototype.redSqr = function() {
      return r2(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, f.prototype.redISqr = function() {
      return r2(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, f.prototype.redSqrt = function() {
      return r2(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, f.prototype.redInvm = function() {
      return r2(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, f.prototype.redNeg = function() {
      return r2(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, f.prototype.redPow = function(i) {
      return r2(this.red && !i.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i);
    };
    var we = { k256: null, p224: null, p192: null, p25519: null };
    function ye(v, i) {
      this.name = v, this.p = new f(i, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    ye.prototype._tmp = function() {
      var i = new f(null);
      return i.words = new Array(Math.ceil(this.n / 13)), i;
    }, ye.prototype.ireduce = function(i) {
      var a2 = i, h;
      do
        this.split(a2, this.tmp), a2 = this.imulK(a2), a2 = a2.iadd(this.tmp), h = a2.bitLength();
      while (h > this.n);
      var s = h < this.n ? -1 : a2.ucmp(this.p);
      return s === 0 ? (a2.words[0] = 0, a2.length = 1) : s > 0 ? a2.isub(this.p) : a2.strip !== undefined ? a2.strip() : a2._strip(), a2;
    }, ye.prototype.split = function(i, a2) {
      i.iushrn(this.n, 0, a2);
    }, ye.prototype.imulK = function(i) {
      return i.imul(this.k);
    };
    function xe() {
      ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
    }
    o(xe, ye), xe.prototype.split = function(i, a2) {
      for (var h = 4194303, s = Math.min(i.length, 9), u = 0;u < s; u++)
        a2.words[u] = i.words[u];
      if (a2.length = s, i.length <= 9) {
        i.words[0] = 0, i.length = 1;
        return;
      }
      var c = i.words[9];
      for (a2.words[a2.length++] = c & h, u = 10;u < i.length; u++) {
        var b = i.words[u] | 0;
        i.words[u - 10] = (b & h) << 4 | c >>> 22, c = b;
      }
      c >>>= 22, i.words[u - 10] = c, c === 0 && i.length > 10 ? i.length -= 10 : i.length -= 9;
    }, xe.prototype.imulK = function(i) {
      i.words[i.length] = 0, i.words[i.length + 1] = 0, i.length += 2;
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = i.words[h] | 0;
        a2 += s * 977, i.words[h] = a2 & 67108863, a2 = s * 64 + (a2 / 67108864 | 0);
      }
      return i.words[i.length - 1] === 0 && (i.length--, i.words[i.length - 1] === 0 && i.length--), i;
    };
    function Re() {
      ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
    }
    o(Re, ye);
    function Ee() {
      ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
    }
    o(Ee, ye);
    function Ae() {
      ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
    }
    o(Ae, ye), Ae.prototype.imulK = function(i) {
      for (var a2 = 0, h = 0;h < i.length; h++) {
        var s = (i.words[h] | 0) * 19 + a2, u = s & 67108863;
        s >>>= 26, i.words[h] = u, a2 = s;
      }
      return a2 !== 0 && (i.words[i.length++] = a2), i;
    }, f._prime = function(i) {
      if (we[i])
        return we[i];
      var a2;
      if (i === "k256")
        a2 = new xe;
      else if (i === "p224")
        a2 = new Re;
      else if (i === "p192")
        a2 = new Ee;
      else if (i === "p25519")
        a2 = new Ae;
      else
        throw new Error("Unknown prime " + i);
      return we[i] = a2, a2;
    };
    function P(v) {
      if (typeof v == "string") {
        var i = f._prime(v);
        this.m = i.p, this.prime = i;
      } else
        r2(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
    }
    P.prototype._verify1 = function(i) {
      r2(i.negative === 0, "red works only with positives"), r2(i.red, "red works only with red numbers");
    }, P.prototype._verify2 = function(i, a2) {
      r2((i.negative | a2.negative) === 0, "red works only with positives"), r2(i.red && i.red === a2.red, "red works only with red numbers");
    }, P.prototype.imod = function(i) {
      return this.prime ? this.prime.ireduce(i)._forceRed(this) : i.umod(this.m)._forceRed(this);
    }, P.prototype.neg = function(i) {
      return i.isZero() ? i.clone() : this.m.sub(i)._forceRed(this);
    }, P.prototype.add = function(i, a2) {
      this._verify2(i, a2);
      var h = i.add(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h._forceRed(this);
    }, P.prototype.iadd = function(i, a2) {
      this._verify2(i, a2);
      var h = i.iadd(a2);
      return h.cmp(this.m) >= 0 && h.isub(this.m), h;
    }, P.prototype.sub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.sub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h._forceRed(this);
    }, P.prototype.isub = function(i, a2) {
      this._verify2(i, a2);
      var h = i.isub(a2);
      return h.cmpn(0) < 0 && h.iadd(this.m), h;
    }, P.prototype.shl = function(i, a2) {
      return this._verify1(i), this.imod(i.ushln(a2));
    }, P.prototype.imul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.imul(a2));
    }, P.prototype.mul = function(i, a2) {
      return this._verify2(i, a2), this.imod(i.mul(a2));
    }, P.prototype.isqr = function(i) {
      return this.imul(i, i.clone());
    }, P.prototype.sqr = function(i) {
      return this.mul(i, i);
    }, P.prototype.sqrt = function(i) {
      if (i.isZero())
        return i.clone();
      var a2 = this.m.andln(3);
      if (r2(a2 % 2 === 1), a2 === 3) {
        var h = this.m.add(new f(1)).iushrn(2);
        return this.pow(i, h);
      }
      for (var s = this.m.subn(1), u = 0;!s.isZero() && s.andln(1) === 0; )
        u++, s.iushrn(1);
      r2(!s.isZero());
      var c = new f(1).toRed(this), b = c.redNeg(), l = this.m.subn(1).iushrn(1), n = this.m.bitLength();
      for (n = new f(2 * n * n).toRed(this);this.pow(n, l).cmp(b) !== 0; )
        n.redIAdd(b);
      for (var d = this.pow(n, s), w = this.pow(i, s.addn(1).iushrn(1)), g = this.pow(i, s), _ = u;g.cmp(c) !== 0; ) {
        for (var A = g, R = 0;A.cmp(c) !== 0; R++)
          A = A.redSqr();
        r2(R < _);
        var I = this.pow(d, new f(1).iushln(_ - R - 1));
        w = w.redMul(I), d = I.redSqr(), g = g.redMul(d), _ = R;
      }
      return w;
    }, P.prototype.invm = function(i) {
      var a2 = i._invmp(this.m);
      return a2.negative !== 0 ? (a2.negative = 0, this.imod(a2).redNeg()) : this.imod(a2);
    }, P.prototype.pow = function(i, a2) {
      if (a2.isZero())
        return new f(1).toRed(this);
      if (a2.cmpn(1) === 0)
        return i.clone();
      var h = 4, s = new Array(1 << h);
      s[0] = new f(1).toRed(this), s[1] = i;
      for (var u = 2;u < s.length; u++)
        s[u] = this.mul(s[u - 1], i);
      var c = s[0], b = 0, l = 0, n = a2.bitLength() % 26;
      for (n === 0 && (n = 26), u = a2.length - 1;u >= 0; u--) {
        for (var d = a2.words[u], w = n - 1;w >= 0; w--) {
          var g = d >> w & 1;
          if (c !== s[0] && (c = this.sqr(c)), g === 0 && b === 0) {
            l = 0;
            continue;
          }
          b <<= 1, b |= g, l++, !(l !== h && (u !== 0 || w !== 0)) && (c = this.mul(c, s[b]), l = 0, b = 0);
        }
        n = 26;
      }
      return c;
    }, P.prototype.convertTo = function(i) {
      var a2 = i.umod(this.m);
      return a2 === i ? a2.clone() : a2;
    }, P.prototype.convertFrom = function(i) {
      var a2 = i.clone();
      return a2.red = null, a2;
    }, f.mont = function(i) {
      return new Se(i);
    };
    function Se(v) {
      P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    o(Se, P), Se.prototype.convertTo = function(i) {
      return this.imod(i.ushln(this.shift));
    }, Se.prototype.convertFrom = function(i) {
      var a2 = this.imod(i.mul(this.rinv));
      return a2.red = null, a2;
    }, Se.prototype.imul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return i.words[0] = 0, i.length = 1, i;
      var h = i.imul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.mul = function(i, a2) {
      if (i.isZero() || a2.isZero())
        return new f(0)._forceRed(this);
      var h = i.mul(a2), s = h.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u = h.isub(s).iushrn(this.shift), c = u;
      return u.cmp(this.m) >= 0 ? c = u.isub(this.m) : u.cmpn(0) < 0 && (c = u.iadd(this.m)), c._forceRed(this);
    }, Se.prototype.invm = function(i) {
      var a2 = this.imod(i._invmp(this.m).mul(this.r2));
      return a2._forceRed(this);
    };
  })(typeof Sd > "u" || Sd, F3);
});
var Ed = T((xL, z3) => {
  var U3 = w0(), wq = Te().Buffer;
  function Mq(t3, e2) {
    return wq.from(t3.toRed(U3.mont(e2.modulus)).redPow(new U3(e2.publicExponent)).fromRed().toArray());
  }
  z3.exports = Mq;
});
var j3 = T((SL, K3) => {
  var _q = Ha(), Ad = on(), xq = bf(), H3 = _d(), W3 = xd(), Rd = w0(), Sq = Ed(), Eq = Ks(), Kr = Te().Buffer;
  K3.exports = function(e2, r2, o) {
    var f;
    e2.padding ? f = e2.padding : o ? f = 1 : f = 4;
    var p = _q(e2), m;
    if (f === 4)
      m = Aq(p, r2);
    else if (f === 1)
      m = Rq(p, r2, o);
    else if (f === 3) {
      if (m = new Rd(r2), m.cmp(p.modulus) >= 0)
        throw new Error("data too long for modulus");
    } else
      throw new Error("unknown padding");
    return o ? Eq(m, p) : Sq(m, p);
  };
  function Aq(t3, e2) {
    var r2 = t3.modulus.byteLength(), o = e2.length, f = xq("sha1").update(Kr.alloc(0)).digest(), p = f.length, m = 2 * p;
    if (o > r2 - m - 2)
      throw new Error("message too long");
    var y = Kr.alloc(r2 - o - m - 2), M = r2 - p - 1, x = Ad(p), S = W3(Kr.concat([f, y, Kr.alloc(1, 1), e2], M), H3(x, M)), E = W3(x, H3(S, p));
    return new Rd(Kr.concat([Kr.alloc(1), E, S], r2));
  }
  function Rq(t3, e2, r2) {
    var o = e2.length, f = t3.modulus.byteLength();
    if (o > f - 11)
      throw new Error("message too long");
    var p;
    return r2 ? p = Kr.alloc(f - o - 3, 255) : p = Bq(f - o - 3), new Rd(Kr.concat([Kr.from([0, r2 ? 1 : 2]), p, Kr.alloc(1), e2], f));
  }
  function Bq(t3) {
    for (var e2 = Kr.allocUnsafe(t3), r2 = 0, o = Ad(t3 * 2), f = 0, p;r2 < t3; )
      f === o.length && (o = Ad(t3 * 2), f = 0), p = o[f++], p && (e2[r2++] = p);
    return e2;
  }
});
var Y3 = T((EL, G3) => {
  var qq = Ha(), Z3 = _d(), V3 = xd(), $3 = w0(), Iq = Ks(), Tq = bf(), kq = Ed(), Za = Te().Buffer;
  G3.exports = function(e2, r2, o) {
    var f;
    e2.padding ? f = e2.padding : o ? f = 1 : f = 4;
    var p = qq(e2), m = p.modulus.byteLength();
    if (r2.length > m || new $3(r2).cmp(p.modulus) >= 0)
      throw new Error("decryption error");
    var y;
    o ? y = kq(new $3(r2), p) : y = Iq(r2, p);
    var M = Za.alloc(m - y.length);
    if (y = Za.concat([M, y], m), f === 4)
      return Lq(p, y);
    if (f === 1)
      return Nq(p, y, o);
    if (f === 3)
      return y;
    throw new Error("unknown padding");
  };
  function Lq(t3, e2) {
    var r2 = t3.modulus.byteLength(), o = Tq("sha1").update(Za.alloc(0)).digest(), f = o.length;
    if (e2[0] !== 0)
      throw new Error("decryption error");
    var p = e2.slice(1, f + 1), m = e2.slice(f + 1), y = V3(p, Z3(m, f)), M = V3(m, Z3(y, r2 - f - 1));
    if (Dq(o, M.slice(0, f)))
      throw new Error("decryption error");
    for (var x = f;M[x] === 0; )
      x++;
    if (M[x++] !== 1)
      throw new Error("decryption error");
    return M.slice(x);
  }
  function Nq(t3, e2, r2) {
    for (var o = e2.slice(0, 2), f = 2, p = 0;e2[f++] !== 0; )
      if (f >= e2.length) {
        p++;
        break;
      }
    var m = e2.slice(2, f - 1);
    if ((o.toString("hex") !== "0002" && !r2 || o.toString("hex") !== "0001" && r2) && p++, m.length < 8 && p++, p)
      throw new Error("decryption error");
    return e2.slice(f);
  }
  function Dq(t3, e2) {
    t3 = Za.from(t3), e2 = Za.from(e2);
    var r2 = 0, o = t3.length;
    t3.length !== e2.length && (r2++, o = Math.min(t3.length, e2.length));
    for (var f = -1;++f < o; )
      r2 += t3[f] ^ e2[f];
    return r2;
  }
});
var X3 = T((Vn) => {
  Vn.publicEncrypt = j3();
  Vn.privateDecrypt = Y3();
  Vn.privateEncrypt = function(e2, r2) {
    return Vn.publicEncrypt(e2, r2, true);
  };
  Vn.publicDecrypt = function(e2, r2) {
    return Vn.privateDecrypt(e2, r2, true);
  };
});
var ow = T((Va) => {
  function J3() {
    throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`);
  }
  var ew = Te(), Q3 = on(), tw = ew.Buffer, rw = ew.kMaxLength, Bd = global.crypto || global.msCrypto, iw = Math.pow(2, 32) - 1;
  function nw(t3, e2) {
    if (typeof t3 != "number" || t3 !== t3)
      throw new TypeError("offset must be a number");
    if (t3 > iw || t3 < 0)
      throw new TypeError("offset must be a uint32");
    if (t3 > rw || t3 > e2)
      throw new RangeError("offset out of range");
  }
  function fw(t3, e2, r2) {
    if (typeof t3 != "number" || t3 !== t3)
      throw new TypeError("size must be a number");
    if (t3 > iw || t3 < 0)
      throw new TypeError("size must be a uint32");
    if (t3 + e2 > r2 || t3 > rw)
      throw new RangeError("buffer too small");
  }
  Bd && Bd.getRandomValues ? (Va.randomFill = Pq, Va.randomFillSync = Cq) : (Va.randomFill = J3, Va.randomFillSync = J3);
  function Pq(t3, e2, r2, o) {
    if (!tw.isBuffer(t3) && !(t3 instanceof global.Uint8Array))
      throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
    if (typeof e2 == "function")
      o = e2, e2 = 0, r2 = t3.length;
    else if (typeof r2 == "function")
      o = r2, r2 = t3.length - e2;
    else if (typeof o != "function")
      throw new TypeError('"cb" argument must be a function');
    return nw(e2, t3.length), fw(r2, e2, t3.length), aw(t3, e2, r2, o);
  }
  function aw(t3, e2, r2, o) {
    if (true) {
      var f = t3.buffer, p = new Uint8Array(f, e2, r2);
      if (Bd.getRandomValues(p), o) {
        process.nextTick(function() {
          o(null, t3);
        });
        return;
      }
      return t3;
    }
    if (o) {
      Q3(r2, function(y, M) {
        if (y)
          return o(y);
        M.copy(t3, e2), o(null, t3);
      });
      return;
    }
    var m = Q3(r2);
    return m.copy(t3, e2), t3;
  }
  function Cq(t3, e2, r2) {
    if (typeof e2 > "u" && (e2 = 0), !tw.isBuffer(t3) && !(t3 instanceof global.Uint8Array))
      throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
    return nw(e2, t3.length), r2 === undefined && (r2 = t3.length - e2), fw(r2, e2, t3.length), aw(t3, e2, r2);
  }
});
var qd = T((ke) => {
  ke.randomBytes = ke.rng = ke.pseudoRandomBytes = ke.prng = on();
  ke.createHash = ke.Hash = bf();
  ke.createHmac = ke.Hmac = wu();
  var Oq = Eb(), Fq = Object.keys(Oq), Uq = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(Fq);
  ke.getHashes = function() {
    return Uq;
  };
  var sw = Iu();
  ke.pbkdf2 = sw.pbkdf2;
  ke.pbkdf2Sync = sw.pbkdf2Sync;
  var ui = Vm();
  ke.Cipher = ui.Cipher;
  ke.createCipher = ui.createCipher;
  ke.Cipheriv = ui.Cipheriv;
  ke.createCipheriv = ui.createCipheriv;
  ke.Decipher = ui.Decipher;
  ke.createDecipher = ui.createDecipher;
  ke.Decipheriv = ui.Decipheriv;
  ke.createDecipheriv = ui.createDecipheriv;
  ke.getCiphers = ui.getCiphers;
  ke.listCiphers = ui.listCiphers;
  var $a = hg();
  ke.DiffieHellmanGroup = $a.DiffieHellmanGroup;
  ke.createDiffieHellmanGroup = $a.createDiffieHellmanGroup;
  ke.getDiffieHellman = $a.getDiffieHellman;
  ke.createDiffieHellman = $a.createDiffieHellman;
  ke.DiffieHellman = $a.DiffieHellman;
  var M0 = k3();
  ke.createSign = M0.createSign;
  ke.Sign = M0.Sign;
  ke.createVerify = M0.createVerify;
  ke.Verify = M0.Verify;
  ke.createECDH = P3();
  var _0 = X3();
  ke.publicEncrypt = _0.publicEncrypt;
  ke.privateEncrypt = _0.privateEncrypt;
  ke.publicDecrypt = _0.publicDecrypt;
  ke.privateDecrypt = _0.privateDecrypt;
  var hw = ow();
  ke.randomFill = hw.randomFill;
  ke.randomFillSync = hw.randomFillSync;
  ke.createCredentials = function() {
    throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join(`
`));
  };
  ke.constants = { DH_CHECK_P_NOT_SAFE_PRIME: 2, DH_CHECK_P_NOT_PRIME: 1, DH_UNABLE_TO_CHECK_GENERATOR: 4, DH_NOT_SUITABLE_GENERATOR: 8, NPN_ENABLED: 1, ALPN_ENABLED: 1, RSA_PKCS1_PADDING: 1, RSA_SSLV23_PADDING: 2, RSA_NO_PADDING: 3, RSA_PKCS1_OAEP_PADDING: 4, RSA_X931_PADDING: 5, RSA_PKCS1_PSS_PADDING: 6, POINT_CONVERSION_COMPRESSED: 2, POINT_CONVERSION_UNCOMPRESSED: 4, POINT_CONVERSION_HYBRID: 6 };
});
var Xt = {};
Ja(Xt, { DEFAULT_ENCODING: () => Ga, default: () => Wq, getCurves: () => dw, getRandomValues: () => uw, randomUUID: () => lw, scrypt: () => Td, scryptSync: () => Id, timingSafeEqual: () => x0, webcrypto: () => cw });
ot(Xt, rn(qd()));
var zq = rn(qd());
var Ga = "buffer";
var uw = (t3) => crypto.getRandomValues(t3);
var lw = () => crypto.randomUUID();
var Hq = ["p192", "p224", "p256", "p384", "p521", "curve25519", "ed25519", "secp256k1", "secp224r1", "prime256v1", "prime192v1", "ed25519", "secp384r1", "secp521r1"];
var x0 = "timingSafeEqual" in crypto ? (t3, e2) => {
  let { byteLength: r2 } = t3, { byteLength: o } = e2;
  if (typeof r2 != "number" || typeof o != "number")
    throw new TypeError("Input must be an array buffer view");
  if (r2 !== o)
    throw new RangeError("Input buffers must have the same length");
  return crypto.timingSafeEqual(t3, e2);
} : undefined;
var Id = "scryptSync" in crypto ? (t3, e2, r2, o) => {
  let f = crypto.scryptSync(t3, e2, r2, o);
  return Ga !== "buffer" ? new Buffer(f).toString(Ga) : new Buffer(f);
} : undefined;
var Td = "scryptSync" in crypto ? function(t3, e2, r2, o, f) {
  if (typeof o == "function" && (f = o, o = undefined), typeof f != "function") {
    var p = new TypeError("callback must be a function");
    throw p.code = "ERR_INVALID_CALLBACK", p;
  }
  try {
    let m = crypto.scryptSync(t3, e2, r2, o);
    process.nextTick(f, null, Ga !== "buffer" ? new Buffer(m).toString(Ga) : new Buffer(m));
  } catch (m) {
    throw m;
  }
} : undefined;
x0 && (Object.defineProperty(x0, "name", { value: "::bunternal::" }), Object.defineProperty(Td, "name", { value: "::bunternal::" }), Object.defineProperty(Id, "name", { value: "::bunternal::" }));
var cw = crypto;
var Wq = { ...zq, getRandomValues: uw, randomUUID: lw, timingSafeEqual: x0, scryptSync: Id, scrypt: Td, webcrypto: cw, getCurves: dw };
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */

// src/controllers/UserController.ts
async function getAllDataUsers() {
  try {
    const users = await client_default.user.findMany({ orderBy: { id: "desc" } });
    return {
      success: true,
      message: "List Data Users!",
      data: users
    };
  } catch (e2) {
    return {
      success: false,
      message: "Failed to get List Data Users!",
      error: `${e2}`
    };
  }
}
async function getDataUserById(id) {
  try {
    const userId = parseInt(id);
    const user = await client_default.user.findUnique({
      where: { id: userId }
    });
    if (!user) {
      return {
        sucess: true,
        message: "Detail Data User Not Found!",
        data: null
      };
    }
    return {
      success: true,
      message: `Detail Data Post By ID : ${id}`,
      data: user
    };
  } catch (e2) {
    console.error(`Error finding post: ${e2}`);
  }
}
async function createUser(options) {
  try {
    const {
      name,
      email,
      password,
      role,
      master_data_submenu_id,
      scm_planner_submenu_id,
      wms_principle_submenu_id,
      tms_planner_submenu_id,
      dc_wms_submenu_id
    } = options;
    const existingUser = await client_default.user.findUnique({
      where: {
        email
      }
    });
    if (existingUser) {
      return {
        success: false,
        message: "Email already exists. Please use a different email."
      };
    }
    const sha1 = Wq.createHash("sha1");
    sha1.update(password);
    const encryptedPassword = sha1.digest("hex");
    const user = await client_default.user.create({
      data: {
        name,
        email,
        password: encryptedPassword,
        role,
        master_data_submenu_id,
        scm_planner_submenu_id,
        wms_principle_submenu_id,
        tms_planner_submenu_id,
        dc_wms_submenu_id
      }
    });
    return {
      success: true,
      message: "User Created Successfully!",
      data: user
    };
  } catch (e2) {
    return {
      success: false,
      message: "Failed to create user!",
      error: `${e2}`
    };
  }
}
async function checkUser(options) {
  try {
    const { email, password } = options;
    const sha1 = Wq.createHash("sha1");
    sha1.update(password);
    const encryptedPassword = sha1.digest("hex");
    const user = await client_default.user.findUnique({ where: { email } });
    if (user && user.password === encryptedPassword) {
      return {
        name: user.name,
        email: user.email,
        role: user.role,
        master_data_submenu_id: user.master_data_submenu_id,
        scm_planner_submenu_id: user.scm_planner_submenu_id,
        wms_principle_submenu_id: user.wms_principle_submenu_id,
        tms_planner_submenu_id: user.tms_planner_submenu_id,
        dc_wms_submenu_id: user.dc_wms_submenu_id
      };
    }
    return null;
  } catch (error23) {
    console.error("Error checking user:", error23);
    throw error23;
  }
}
async function updateData(id, options) {
  try {
    const userId = parseInt(id);
    const { name, email, password } = options;
    const sha1 = Wq.createHash("sha1");
    sha1.update(password);
    const encryptedPassword = sha1.digest("hex");
    const post = await client_default.user.update({
      where: { id: userId },
      data: {
        ...name ? { name } : {},
        ...email ? { email } : {},
        password: encryptedPassword
      }
    });
    return {
      success: true,
      message: "Updated Successfully!",
      data: post
    };
  } catch (e2) {
    return {
      success: false,
      message: "Updated Error!",
      error: `${e2}`
    };
  }
}
async function deletePost(id) {
  try {
    const userId = parseInt(id);
    await client_default.user.delete({
      where: { id: userId }
    });
    return {
      success: true,
      message: "Deleted Successfully!"
    };
  } catch (e2) {
    return {
      success: false,
      message: "Deleting Error!",
      error: `${e2}`
    };
  }
}
async function getUserAndMenusByEmail(email) {
  try {
    const user = await client_default.user.findUnique({
      where: { email }
    });
    if (!user) {
      return {
        success: false,
        message: "User not found!",
        data: null
      };
    }
    const submenuIds = [
      ...user.master_data_submenu_id.split(",").map(Number),
      ...user.scm_planner_submenu_id.split(",").map(Number),
      ...user.wms_principle_submenu_id.split(",").map(Number),
      ...user.tms_planner_submenu_id.split(",").map(Number),
      ...user.dc_wms_submenu_id.split(",").map(Number)
    ];
    const menus = await client_default.menu.findMany({
      where: {
        submenu_id: {
          in: submenuIds
        }
      }
    });
    return {
      success: true,
      message: `User and Menu details for email: ${email}`,
      data: {
        user,
        menus
      }
    };
  } catch (e2) {
    console.error(`Error fetching user and menus: ${e2}`);
    return {
      success: false,
      message: "An error occurred while fetching data.",
      data: null
    };
  }
}

// src/controllers/MenuController.ts
async function getMenu() {
  try {
    const menus = await client_default.menu.findMany({ orderBy: { id: "desc" } });
    return {
      success: true,
      message: "List Data menus!",
      data: menus
    };
  } catch (e2) {
    console.error(`Error getting menus: ${e2}`);
  }
}
async function insertMenu(options) {
  try {
    const { category_id, category_name, category_icon, submenu_id, submenu_path, submenu_name, submenu_component, layout } = options;
    const categoryId = +category_id;
    const subMenuId = +submenu_id;
    const menu = await client_default.menu.create({
      data: {
        category_id: categoryId,
        category_name,
        category_icon,
        submenu_id: subMenuId,
        submenu_path,
        submenu_name,
        submenu_component,
        layout
      }
    });
    return {
      success: true,
      message: "Menu Created Successfully!",
      data: menu
    };
  } catch (e2) {
    console.error(`Error creating menu: ${e2}`);
  }
}

// src/routes/index.ts
var app = new Elysia().use(cors()).use(jwt({
  name: "jwt",
  secret: Bun.env.JWT_SECRET
}));
app.get("/posts", () => getPosts());
app.get("/posts/:id", ({ params: { id } }) => getPostById(id));
app.post("/posts", ({ body }) => createPost(body), {
  body: t2.Object({
    title: t2.String({
      minLength: 3,
      maxLength: 100
    }),
    content: t2.String({
      minLength: 3,
      maxLength: 1000
    })
  })
});
app.get("/get-users", () => getAllDataUsers());
app.get("/get-users/:id", ({ params: { id } }) => getDataUserById(id));
app.post("/users", ({ body }) => {
  const masterMenuStr = body.master_data_submenu_id.join(",");
  const scmMenuStr = body.scm_planner_submenu_id.join(",");
  const wmsMenuStr = body.wms_principle_submenu_id.join(",");
  const tmsterMenuStr = body.tms_planner_submenu_id.join(",");
  const dcwmsMenuStr = body.dc_wms_submenu_id.join(",");
  return createUser({
    ...body,
    master_data_submenu_id: masterMenuStr,
    scm_planner_submenu_id: scmMenuStr,
    wms_principle_submenu_id: wmsMenuStr,
    tms_planner_submenu_id: tmsterMenuStr,
    dc_wms_submenu_id: dcwmsMenuStr
  });
}, {
  body: t2.Object({
    name: t2.String({
      minLength: 3,
      maxLength: 100
    }),
    email: t2.String({
      minLength: 3,
      maxLength: 1000
    }),
    password: t2.String({
      minLength: 5,
      maxLength: 1000
    }),
    role: t2.String({
      minLength: 3,
      maxLength: 15
    }),
    master_data_submenu_id: t2.Array(t2.String()),
    scm_planner_submenu_id: t2.Array(t2.String()),
    wms_principle_submenu_id: t2.Array(t2.String()),
    tms_planner_submenu_id: t2.Array(t2.String()),
    dc_wms_submenu_id: t2.Array(t2.String())
  })
});
app.post("/users/login", async ({ body, jwt: jwt3, cookie: { auth }, params }) => {
  const user = await checkUser(body);
  if (user) {
    auth.set({
      value: await jwt3.sign(user),
      httpOnly: true,
      maxAge: 7 * 86400
    });
    return {
      status: true,
      token: `${auth.value}`,
      message: "Authentication success",
      role: user.role,
      master_data_submenu_id: user.master_data_submenu_id,
      scm_planner_submenu_id: user.scm_planner_submenu_id,
      wms_principle_submenu_id: user.wms_principle_submenu_id,
      tms_planner_submenu_id: user.tms_planner_submenu_id,
      dc_wms_submenu_id: user.dc_wms_submenu_id
    };
  } else {
    return {
      status: false,
      token: false,
      message: "Authentication failed"
    };
  }
}, {
  body: t2.Object({
    email: t2.String({
      minLength: 3,
      maxLength: 1000
    }),
    password: t2.String({
      minLength: 3,
      maxLength: 1000
    })
  })
});
app.patch("/users/:id", ({ params: { id }, body }) => updateData(id, body), {
  body: t2.Object({
    name: t2.String({
      minLength: 3,
      maxLength: 100
    }),
    email: t2.String({
      minLength: 3,
      maxLength: 1000
    }),
    password: t2.String({
      minLength: 5,
      maxLength: 1000
    })
  })
});
app.delete("/users/:id", ({ params: { id } }) => deletePost(id));
app.post("/users/get-menu-details", async ({ body }) => {
  const { email } = body;
  if (!email) {
    return {
      status: false,
      message: "Email is required"
    };
  }
  const result = await getUserAndMenusByEmail(email);
  if (result.success) {
    return {
      status: true,
      message: result.message,
      data: result.data
    };
  } else {
    return {
      status: false,
      message: result.message,
      data: null
    };
  }
}, {
  body: t2.Object({
    email: t2.String({
      minLength: 3,
      maxLength: 1000
    })
  })
});
app.get("/menus", () => getMenu());
app.post("/menus", ({ body }) => insertMenu(body), {
  body: t2.Object({
    category_id: t2.String(),
    category_name: t2.String({
      minLength: 3,
      maxLength: 50
    }),
    category_icon: t2.String({
      minLength: 3,
      maxLength: 50
    }),
    submenu_id: t2.String(),
    submenu_path: t2.String({
      minLength: 3,
      maxLength: 100
    }),
    submenu_name: t2.String({
      minLength: 3,
      maxLength: 50
    }),
    submenu_component: t2.String({
      minLength: 3,
      maxLength: 50
    }),
    layout: t2.String({
      minLength: 3,
      maxLength: 50
    })
  })
});
var routes_default = app;

// src/index.ts
var app2 = new Elysia().use(cors({
  origin: "http://localhost:3000"
}));
app2.get("/", () => "Hello Elysia!");
app2.group("/api", (app3) => app3.use(routes_default));
var port = 3001;
app2.listen(port, () => {
  console.log(`\uD83E\uDD8A Elysia is running at http://localhost:${port}`);
});
